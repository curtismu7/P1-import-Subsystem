{"version":3,"file":"file-logger-hNRkJ05M.js","sources":["../../public/js/modules/file-logger.js"],"sourcesContent":["/**\n * FileLogger - Handles writing logs to a client.log file using the File System Access API\n */\nclass FileLogger {\n    /**\n     * Create a new FileLogger instance\n     * @param {string} filename - Name of the log file (default: 'client.log')\n     */\n    constructor(filename = 'client.log') {\n        this.filename = filename;\n        this.fileHandle = null;\n        this.writableStream = null;\n        this.initialized = false;\n        this.logQueue = [];\n        this.initializationPromise = null;\n    }\n    \n    /**\n     * Initialize the file logger\n     * @private\n     */\n    async _initialize() {\n        if (this.initialized) return true;\n        if (this.initializationPromise) {\n            return this.initializationPromise;\n        }\n        \n        this.initializationPromise = (async () => {\n            try {\n                // Check if we're in a secure context and the API is available\n                if (!window.isSecureContext || !window.showSaveFilePicker) {\n                    throw new Error('File System Access API not available in this context');\n                }\n                \n                // Only proceed if we're handling a user gesture\n                if (!window.__fileLoggerUserGesture) {\n                    // Set up event listeners\n                    window.addEventListener('online', () => this.handleOnline());\n                    window.addEventListener('offline', () => this.handleOffline());\n                    \n                    // Set up user gesture detection for file logger\n                    const handleUserGesture = () => {\n                        window.__fileLoggerUserGesture = true;\n                        window.removeEventListener('click', handleUserGesture);\n                        window.removeEventListener('keydown', handleUserGesture);\n                        \n                        // Try to initialize the file logger if it hasn't been initialized yet\n                        if (this.fileLogger && !this.fileLogger._initialized && this.fileLogger._logger === null) {\n                            this.fileLogger._ensureInitialized().catch(console.warn);\n                        }\n                    };\n                    \n                    window.addEventListener('click', handleUserGesture, { once: true, passive: true });\n                    window.addEventListener('keydown', handleUserGesture, { once: true, passive: true });\n                    throw new Error('Waiting for user gesture to initialize file logger');\n                }\n                \n                try {\n                    this.fileHandle = await window.showSaveFilePicker({\n                        suggestedName: this.filename,\n                        types: [{\n                            description: 'Log File',\n                            accept: { 'text/plain': ['.log'] },\n                        }],\n                        excludeAcceptAllOption: true\n                    });\n                    \n                    this.writableStream = await this.fileHandle.createWritable({ keepExistingData: true });\n                    this.initialized = true;\n                    await this._processQueue();\n                    return true;\n                } catch (error) {\n                    console.warn('File System Access API not available:', error);\n                    this.initialized = false;\n                    return false;\n                }\n            } catch (error) {\n                console.warn('File logger initialization deferred:', error.message);\n                this.initialized = false;\n                return false;\n            }\n        })();\n        \n        return this.initializationPromise;\n    }\n    \n    /**\n     * Process any queued log messages\n     * @private\n     */\n    async _processQueue() {\n        if (this.logQueue.length === 0) return;\n        \n        const queue = [...this.logQueue];\n        this.logQueue = [];\n        \n        for (const { level, message, timestamp } of queue) {\n            await this._writeLog(level, message, timestamp);\n        }\n    }\n    \n    /**\n     * Write a log message to the file\n     * @private\n     */\n    async _writeLog(level, message, timestamp) {\n        if (!this.initialized) {\n            await this._initialize();\n        }\n        \n        const logEntry = `[${timestamp}] [${level.toUpperCase()}] ${message}\\n`;\n        \n        if (this.writableStream) {\n            try {\n                await this.writableStream.write(logEntry);\n            } catch (error) {\n                console.error('Error writing to log file:', error);\n                this.initialized = false;\n                await this._initialize();\n                await this.writableStream.write(logEntry);\n            }\n        } else {\n            console[level](`[FileLogger] ${logEntry}`);\n        }\n    }\n    \n    /**\n     * Log a message\n     * @param {string} level - Log level (info, warn, error, debug)\n     * @param {string} message - The message to log\n     */\n    async log(level, message) {\n        const timestamp = new Date().toISOString();\n        \n        if (!this.initialized) {\n            this.logQueue.push({ level, message, timestamp });\n            await this._initialize();\n        } else {\n            await this._writeLog(level, message, timestamp);\n        }\n    }\n    \n    /**\n     * Log an info message\n     * @param {string} message - The message to log\n     */\n    info(message) {\n        return this.log('info', message);\n    }\n    \n    /**\n     * Log a warning message\n     * @param {string} message - The message to log\n     */\n    warn(message) {\n        return this.log('warn', message);\n    }\n    \n    /**\n     * Log an error message\n     * @param {string} message - The message to log\n     */\n    error(message) {\n        return this.log('error', message);\n    }\n    \n    /**\n     * Log a debug message\n     * @param {string} message - The message to log\n     */\n    debug(message) {\n        return this.log('debug', message);\n    }\n    \n    /**\n     * Close the log file\n     */\n    async close() {\n        if (this.writableStream) {\n            try {\n                await this.writableStream.close();\n            } catch (error) {\n                console.error('Error closing log file:', error);\n            } finally {\n                this.initialized = false;\n                this.writableStream = null;\n                this.fileHandle = null;\n            }\n        }\n    }\n}\n\nexport { FileLogger };\n"],"names":["FileLogger","filename","handleUserGesture","error","queue","level","message","timestamp","logEntry"],"mappings":"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"}