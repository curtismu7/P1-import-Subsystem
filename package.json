{
  "name": "pingone-import-cursor",
  "version": "8.0.0",
  "description": "A modern web application for importing users into PingOne using the PingOne Admin API.",
  "main": "server.js",
  "type": "module",
  "engines": {
    "node": ">=14.0.0"
  },
  "scripts": {
    "test": "NODE_OPTIONS='--experimental-vm-modules' node scripts/run-tests.js",
    "test:esm": "NODE_OPTIONS='--experimental-vm-modules' jest --config=jest.config.mjs test/esm-support.test.mjs test/esm-module-integration.test.mjs test/esm-project-integration.test.mjs test/esm-comprehensive.test.mjs",
    "test:unit": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/unit/**/*.test.js --config=jest.config.mjs",
    "test:integration": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/integration/**/*.test.js --config=jest.config.mjs",
    "test:e2e": "NODE_OPTIONS='--experimental-vm-modules' node scripts/run-tests.js e2e",
    "test:frontend": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/unit/ui-manager.test.js --config=jest.config.mjs",
    "test:bulletproof": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/unit/bulletproof-*.test.js test/integration/bulletproof-*.test.js test/bulletproof-*.test.mjs --config=jest.bulletproof.config.mjs",
    "test:bulletproof:unit": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/unit/bulletproof-*.test.js --config=jest.bulletproof.config.mjs",
    "test:bulletproof:integration": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/integration/bulletproof-*.test.js --config=jest.bulletproof.config.mjs",
    "test:bulletproof:watch": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/unit/bulletproof-*.test.js test/integration/bulletproof-*.test.js test/bulletproof-*.test.mjs --watch --config=jest.bulletproof.config.mjs",
    "lint": "eslint . --ext .js,.mjs --fix",
    "lint:check": "eslint . --ext .js,.mjs",
    "lint:test": "eslint test/ --ext .js,.mjs --fix",
    "format": "prettier --write '**/*.{js,mjs,json}'",
    "format:check": "prettier --check '**/*.{js,mjs,json}'",
    "test:bulletproof:runner": "node --experimental-modules --experimental-json-modules scripts/run-bulletproof-tests.js",
    "test:bulletproof:coverage": "node --experimental-modules --experimental-json-modules scripts/run-bulletproof-tests.js --coverage",
    "test:coverage": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest --coverage --config=jest.config.mjs",
    "test:watch": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest --watch --config=jest.config.mjs",
    "test:debug": "cross-env NODE_OPTIONS='--inspect-brk --experimental-vm-modules' NODE_ENV=test jest --runInBand --config=jest.config.mjs",
    "test:update": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest --updateSnapshot --config=jest.config.mjs",
    "test:ci": "NODE_OPTIONS='--experimental-vm-modules' node scripts/run-tests.js --ci",
    "test:setup": "node scripts/setup-test-env.js",
    "test:readable-log": "node --experimental-modules --experimental-json-modules scripts/test-readable-log.js",
    "test:ui:checklist": "node --experimental-modules --experimental-json-modules scripts/test-ui-functionality.js",
    "test:routes": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/integration/route-availability.test.js --config=jest.config.mjs",
    "test:routes:watch": "cross-env NODE_OPTIONS='--experimental-vm-modules' NODE_ENV=test jest test/integration/route-availability.test.js --watch --config=jest.config.mjs",
    "test:smoke": "node --experimental-modules --experimental-json-modules -e \"import('./server/swagger-smoke-tests.js').then(m => m.runSmokeTests().then(r => console.log(JSON.stringify(r, null, 2))))\"",
    "test:health": "node --experimental-modules --experimental-json-modules -e \"import('./server/route-health-checker.js').then(m => { const app = require('express')(); console.log(m.generateRouteHealthReport(app)); })\"",
    "monitor:memory": "node --experimental-modules --experimental-json-modules -e \"import('./server/memory-monitor.js').then(m => console.log(JSON.stringify(m.getMemoryStatusReport(), null, 2)))\"",
    "start": "node --experimental-modules --experimental-json-modules scripts/always-background.js",
    "start:foreground": "node --experimental-modules --experimental-json-modules server.js",
    "start:dev": "cross-env NODE_ENV=development node --experimental-modules --experimental-json-modules server.js",
    "start:background": "node --experimental-modules --experimental-json-modules scripts/start-background.js start",
    "start:daemon": "node --experimental-modules --experimental-json-modules scripts/daemon.js start",
    "stop:background": "node --experimental-modules --experimental-json-modules scripts/start-background.js stop",
    "stop:daemon": "node --experimental-modules --experimental-json-modules scripts/daemon.js stop",
    "restart:background": "node --experimental-modules --experimental-json-modules scripts/start-background.js restart",
    "restart:daemon": "node --experimental-modules --experimental-json-modules scripts/daemon.js restart",
    "status:background": "node --experimental-modules --experimental-json-modules scripts/start-background.js status",
    "status:daemon": "node --experimental-modules --experimental-json-modules scripts/daemon.js status",
    "dev": "nodemon --experimental-modules --experimental-json-modules server.js",
    "stop": "pkill -f 'node.*server.js' || true",
    "build": "echo 'No build step needed - using import maps'",
    "verify:modules": "node -e \"console.log('Import maps ready - no build needed')\"",
    "fix:population-dropdown": "node --experimental-modules --experimental-json-modules scripts/fix-population-dropdown.js",
    "fix:token-status": "node --experimental-modules --experimental-json-modules scripts/fix-token-status-widget.js",
    "fix:progress": "node --experimental-modules --experimental-json-modules scripts/fix-progress-subsystem.js",
    "ensure-logs": "node --experimental-modules --experimental-json-modules scripts/ensure-logs-directory.js",
    "setup": "cp .env.example .env",
    "update:check": "node scripts/package-updater.cjs",
    "update:auto": "node scripts/auto-update.cjs",
    "update:conflicts": "node scripts/conflict-checker.cjs",
    "update:safe": "npm run update:conflicts && npm run update:auto",
    "version:update": "node scripts/update-version.js",
    "version:update:centralized": "node scripts/update-centralized-version.js",
    "version:check": "node -e \"console.log('Current version:', require('./package.json').version)\"",
    "version:validate": "node scripts/validate-version-consistency.js",
    "restart": "npm run stop && sleep 2 && npm start",
    "restart:safe": "npm run stop && npm run check:port && npm run start:background",
    "restart:force": "node scripts/restart-server.js --no-kill",
    "restart:port": "node scripts/restart-server.js --port",
    "check:port": "node -e \"import('./server/port-checker.js').then(m => m.checkPortStatus(4000)).then(console.log)\"",
    "import-maps:analyze": "node scripts/import-maps-migration.js analyze",
    "import-maps:migrate": "node scripts/import-maps-migration.js convert",
    "import-maps:migration-status": "node scripts/import-maps-migration.js status",
    "import-maps:migration-test": "node scripts/import-maps-migration.js test",
    "module:convert": "node scripts/module-converter.js"
  },
  "keywords": [
    "pingone",
    "user-import",
    "identity",
    "authentication"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@babel/core": "^7.28.0",
    "@babel/runtime": "^7.28.2",
    "@socket.io/redis-adapter": "^8.2.1",
    "axios": "^1.11.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "connect-redis": "^7.1.0",
    "cors": "^2.8.5",
    "csv-parse": "^5.6.0",
    "dotenv": "^16.6.1",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.1",
    "express-session": "^1.18.1",
    "form-data": "^4.0.3",
    "helmet": "^7.1.0",
    "http-errors": "^2.0.0",
    "ioredis": "^5.3.2",
    "joi": "^17.12.0",
    "jslint": "^0.12.1",
    "jsonwebtoken": "^9.0.2",
    "lint": "^1.1.2",
    "mongoose": "^8.0.0",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^2.7.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "redis": "^4.6.10",
    "rotating-file-stream": "^3.2.6",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^4.7.1",
    "ws": "^8.18.3",
    "xss-clean": "^0.1.1",
    "yamljs": "^0.3.0"
  },
  "devDependencies": {
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-class-static-block": "^7.21.0",
    "@babel/plugin-proposal-decorators": "^7.28.0",
    "@babel/plugin-proposal-export-default-from": "^7.27.1",
    "@babel/plugin-proposal-export-namespace-from": "^7.18.9",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.20.7",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-numeric-separator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.21.0",
    "@babel/plugin-proposal-private-methods": "^7.18.6",
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-top-level-await": "^7.14.5",
    "@babel/plugin-transform-modules-commonjs": "^7.27.1",
    "@babel/plugin-transform-runtime": "^7.28.0",
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@babel/register": "^7.27.0",
    "@babel/runtime-corejs3": "^7.28.2",
    "@eslint/js": "^9.31.0",
    "@jest/globals": "^30.0.5",
    "@playwright/test": "^1.54.2",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "babel-jest": "^30.0.5",
    "babel-plugin-dynamic-import-node": "^2.3.3",
    "babel-plugin-istanbul": "^6.1.1",
    "chai": "^5.2.0",
    "chai-http": "^4.4.0",
    "cross-env": "^7.0.3",
    "cypress": "^14.5.3",
    "eslint": "^8.57.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.9.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-react": "^7.37.5",
    "faker": "^5.5.3",
    "globals": "^16.3.0",
    "husky": "^9.0.11",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jest-extended": "^4.0.2",
    "jest-junit": "^16.0.0",
    "jsdom": "^26.1.0",
    "lint-staged": "^15.2.0",
    "markdown-pdf": "^11.0.0",
    "mocha": "^11.7.1",
    "mongodb-memory-server": "^9.0.7",
    "morgan": "^1.10.0",
    "nodemon": "^3.1.10",
    "nyc": "^15.1.0",
    "playwright": "^1.54.2",
    "prettier": "^3.2.4",
    "sinon": "^17.0.1",
    "supertest": "^6.3.4",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "terser": "^5.43.1",
    "ts-jest": "^29.4.0",
    "typescript": "^5.8.3",
    "uglify-js": "^3.19.3",
    "watchify": "^4.0.0",
    "whatwg-url": "^14.2.0"
  },
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "testPathIgnorePatterns": [
    "/node_modules/",
    "/dist/"
  ],
  "moduleNameMapping": {
    "^(\\.{1,2}/.*)\\.js$": "$1"
  }
}
