name: Large File Guard

on:
  push:
  pull_request:

jobs:
  check-large-files:
    runs-on: ubuntu-latest
    env:
      MAX_SIZE_BYTES: ${{ 100 * 1024 * 1024 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine diff range
        id: diff
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "base=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
          else
            # push
            BEFORE="${{ github.event.before }}"
            if [ -z "$BEFORE" ] || [ "$BEFORE" = "0000000000000000000000000000000000000000" ]; then
              # Fallback to previous commit
              BEFORE=$(git rev-parse HEAD^ || echo "")
            fi
            echo "base=$BEFORE" >> $GITHUB_OUTPUT
            echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi
          echo "Using diff: $(cat $GITHUB_OUTPUT)"

      - name: Get changed files
        id: changed
        run: |
          BASE="${{ steps.diff.outputs.base }}"
          HEAD="${{ steps.diff.outputs.head }}"
          if [ -z "$BASE" ]; then
            echo "files=$(git ls-files -z)" >> $GITHUB_OUTPUT
          else
            echo "files=$(git diff --name-only -z "$BASE" "$HEAD")" >> $GITHUB_OUTPUT
          fi

      - name: Fail if any changed file > 100MB
        run: |
          MAX=$MAX_SIZE_BYTES
          echo "Max size: $MAX bytes"
          failed=0
          # Iterate NUL-delimited file list
          while IFS= read -r -d '' f; do
            [ -z "$f" ] && continue
            # Skip deleted files
            if ! git cat-file -e "${{ steps.diff.outputs.head }}:$f" 2>/dev/null; then
              continue
            fi
            size=$(git cat-file -s "${{ steps.diff.outputs.head }}:$f")
            if [ "$size" -gt "$MAX" ]; then
              mb=$(awk -v s=$size 'BEGIN { printf "%.2f", s/1048576 }')
              echo "::error file=$f::File exceeds 100MB (${mb} MB)"
              failed=1
            fi
          done <<< "$(echo "${{ steps.changed.outputs.files }}")"

          if [ "$failed" -ne 0 ]; then
            echo "One or more files exceed 100MB."
            exit 1
          fi
          echo "No large files detected."
