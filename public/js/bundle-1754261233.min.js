!function r(e,t,s){function o(i,a){if(!t[i]){if(!e[i]){var l="function"==typeof require&&require;if(!a&&l)return l(i,!0);if(n)return n(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var g=t[i]={exports:{}};e[i][0].call(g.exports,function(t){return o(e[i][1][t]||t)},g,g.exports,r,e,t,s)}return t[i].exports}for(var n="function"==typeof require&&require,i=0;i<s.length;i++)o(s[i]);return o}({1:[function(e,t,s){t.exports=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}},t.exports.__esModule=!0,t.exports.default=t.exports},{}],2:[function(e,t,s){function Emitter(e){if(e)return function mixin(e){for(var t in Emitter.prototype)e[t]=Emitter.prototype[t];return e}(e)}s.Emitter=Emitter,Emitter.prototype.on=Emitter.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},Emitter.prototype.once=function(e,t){function on(){this.off(e,on),t.apply(this,arguments)}return on.fn=t,this.on(e,on),this},Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var s,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<n.length;i++)if((s=n[i])===t||s.fn===t){n.splice(i,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},Emitter.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),s=this._callbacks["$"+e],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(s){n=0;for(var i=(s=s.slice(0)).length;n<i;++n)s[n].apply(this,t)}return this},Emitter.prototype.emitReserved=Emitter.prototype.emit,Emitter.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},Emitter.prototype.hasListeners=function(e){return!!this.listeners(e).length}},{}],3:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.hasCORS=void 0;let n=!1;try{n="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(e){}s.hasCORS=n},{}],4:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.encode=function encode(e){let t="";for(let s in e)e.hasOwnProperty(s)&&(t.length&&(t+="&"),t+=encodeURIComponent(s)+"="+encodeURIComponent(e[s]));return t},s.decode=function decode(e){let t={},s=e.split("&");for(let e=0,n=s.length;e<n;e++){let n=s[e].split("=");t[decodeURIComponent(n[0])]=decodeURIComponent(n[1])}return t}},{}],5:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.parse=function parse(e){if(e.length>8e3)throw"URI too long";const t=e,s=e.indexOf("["),a=e.indexOf("]");-1!=s&&-1!=a&&(e=e.substring(0,s)+e.substring(s,a).replace(/:/g,";")+e.substring(a,e.length));let l=n.exec(e||""),c={},g=14;for(;g--;)c[i[g]]=l[g]||"";-1!=s&&-1!=a&&(c.source=t,c.host=c.host.substring(1,c.host.length-1).replace(/;/g,":"),c.authority=c.authority.replace("[","").replace("]","").replace(/;/g,":"),c.ipv6uri=!0);return c.pathNames=function pathNames(e,t){const s=t.replace(/\/{2,9}/g,"/").split("/");"/"!=t.slice(0,1)&&0!==t.length||s.splice(0,1);"/"==t.slice(-1)&&s.splice(s.length-1,1);return s}(0,c.path),c.queryKey=function queryKey(e,t){const s={};return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,function(e,t,n){t&&(s[t]=n)}),s}(0,c.query),c};const n=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,i=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"]},{}],6:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.defaultBinaryType=s.globalThisShim=s.nextTick=void 0,s.createCookieJar=function createCookieJar(){},s.nextTick="function"==typeof Promise&&"function"==typeof Promise.resolve?e=>Promise.resolve().then(e):(e,t)=>t(e,0),s.globalThisShim="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")(),s.defaultBinaryType="arraybuffer"},{}],7:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.WebTransport=s.WebSocket=s.NodeWebSocket=s.XHR=s.NodeXHR=s.Fetch=s.nextTick=s.parse=s.installTimerFunctions=s.transports=s.TransportError=s.Transport=s.protocol=s.SocketWithUpgrade=s.SocketWithoutUpgrade=s.Socket=void 0;const n=e("./socket.js");Object.defineProperty(s,"Socket",{enumerable:!0,get:function(){return n.Socket}});var i=e("./socket.js");Object.defineProperty(s,"SocketWithoutUpgrade",{enumerable:!0,get:function(){return i.SocketWithoutUpgrade}}),Object.defineProperty(s,"SocketWithUpgrade",{enumerable:!0,get:function(){return i.SocketWithUpgrade}}),s.protocol=n.Socket.protocol;var a=e("./transport.js");Object.defineProperty(s,"Transport",{enumerable:!0,get:function(){return a.Transport}}),Object.defineProperty(s,"TransportError",{enumerable:!0,get:function(){return a.TransportError}});var l=e("./transports/index.js");Object.defineProperty(s,"transports",{enumerable:!0,get:function(){return l.transports}});var c=e("./util.js");Object.defineProperty(s,"installTimerFunctions",{enumerable:!0,get:function(){return c.installTimerFunctions}});var g=e("./contrib/parseuri.js");Object.defineProperty(s,"parse",{enumerable:!0,get:function(){return g.parse}});var u=e("./globals.node.js");Object.defineProperty(s,"nextTick",{enumerable:!0,get:function(){return u.nextTick}});var d=e("./transports/polling-fetch.js");Object.defineProperty(s,"Fetch",{enumerable:!0,get:function(){return d.Fetch}});var h=e("./transports/polling-xhr.node.js");Object.defineProperty(s,"NodeXHR",{enumerable:!0,get:function(){return h.XHR}});var p=e("./transports/polling-xhr.js");Object.defineProperty(s,"XHR",{enumerable:!0,get:function(){return p.XHR}});var m=e("./transports/websocket.node.js");Object.defineProperty(s,"NodeWebSocket",{enumerable:!0,get:function(){return m.WS}});var f=e("./transports/websocket.js");Object.defineProperty(s,"WebSocket",{enumerable:!0,get:function(){return f.WS}});var y=e("./transports/webtransport.js");Object.defineProperty(s,"WebTransport",{enumerable:!0,get:function(){return y.WT}})},{"./contrib/parseuri.js":5,"./globals.node.js":6,"./socket.js":8,"./transport.js":9,"./transports/index.js":10,"./transports/polling-fetch.js":11,"./transports/polling-xhr.js":12,"./transports/polling-xhr.node.js":12,"./transports/websocket.js":14,"./transports/websocket.node.js":14,"./transports/webtransport.js":15,"./util.js":16}],8:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Socket=s.SocketWithUpgrade=s.SocketWithoutUpgrade=void 0;const i=e("./transports/index.js"),a=e("./util.js"),l=e("./contrib/parseqs.js"),c=e("./contrib/parseuri.js"),g=e("@socket.io/component-emitter"),u=e("engine.io-parser"),d=e("./globals.node.js"),h=(0,n(e("debug")).default)("engine.io-client:socket"),p="function"==typeof addEventListener&&"function"==typeof removeEventListener,m=[];p&&addEventListener("offline",()=>{h("closing %d connection(s) because the network was lost",m.length),m.forEach(e=>e())},!1);class SocketWithoutUpgrade extends g.Emitter{constructor(e,t){if(super(),this.binaryType=d.defaultBinaryType,this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,e&&"object"==typeof e&&(t=e,e=null),e){const s=(0,c.parse)(e);t.hostname=s.host,t.secure="https"===s.protocol||"wss"===s.protocol,t.port=s.port,s.query&&(t.query=s.query)}else t.host&&(t.hostname=(0,c.parse)(t.host).host);(0,a.installTimerFunctions)(this,t),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},t.transports.forEach(e=>{const t=e.prototype.name;this.transports.push(t),this._transportsByName[t]=e}),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},t),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=(0,l.decode)(this.opts.query)),p&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(h("adding listener for the 'offline' event"),this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},m.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=(0,d.createCookieJar)()),this._open()}createTransport(e){h('creating transport "%s"',e);const t=Object.assign({},this.opts.query);t.EIO=u.protocol,t.transport=e,this.id&&(t.sid=this.id);const s=Object.assign({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return h("options: %j",s),new this._transportsByName[e](s)}_open(){if(0===this.transports.length)return void this.setTimeoutFn(()=>{this.emitReserved("error","No transports available")},0);const e=this.opts.rememberUpgrade&&SocketWithoutUpgrade.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket")?"websocket":this.transports[0];this.readyState="opening";const t=this.createTransport(e);t.open(),this.setTransport(t)}setTransport(e){h("setting transport %s",e.name),this.transport&&(h("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",e=>this._onClose("transport close",e))}onOpen(){h("socket open"),this.readyState="open",SocketWithoutUpgrade.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush()}_onPacket(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(h('socket receive: type "%s", data "%s"',e.type,e.data),this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const t=new Error("server error");t.code=e.data,this._onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}else h('packet received with socket readyState "%s"',this.readyState)}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this._pingInterval=e.pingInterval,this._pingTimeout=e.pingTimeout,this._maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const e=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+e,this._pingTimeoutTimer=this.setTimeoutFn(()=>{this._onClose("ping timeout")},e),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this._getWritablePackets();h("flushing %d packets in socket",e.length),this.transport.send(e),this._prevBufferLen=e.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let t=0;t<this.writeBuffer.length;t++){const s=this.writeBuffer[t].data;if(s&&(e+=(0,a.byteLength)(s)),t>0&&e>this._maxPayload)return h("only send %d out of %d packets",t,this.writeBuffer.length),this.writeBuffer.slice(0,t);e+=2}return h("payload size is %d (max: %d)",e,this._maxPayload),this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const e=Date.now()>this._pingTimeoutTime;return e&&(h("throttled timer detected, scheduling connection close"),this._pingTimeoutTime=0,(0,d.nextTick)(()=>{this._onClose("ping timeout")},this.setTimeoutFn)),e}write(e,t,s){return this._sendPacket("message",e,t,s),this}send(e,t,s){return this._sendPacket("message",e,t,s),this}_sendPacket(e,t,s,n){if("function"==typeof t&&(n=t,t=void 0),"function"==typeof s&&(n=s,s=null),"closing"===this.readyState||"closed"===this.readyState)return;(s=s||{}).compress=!1!==s.compress;const i={type:e,data:t,options:s};this.emitReserved("packetCreate",i),this.writeBuffer.push(i),n&&this.once("flush",n),this.flush()}close(){const close=()=>{this._onClose("forced close"),h("socket closing - telling transport to close"),this.transport.close()},cleanupAndClose=()=>{this.off("upgrade",cleanupAndClose),this.off("upgradeError",cleanupAndClose),close()},waitForUpgrade=()=>{this.once("upgrade",cleanupAndClose),this.once("upgradeError",cleanupAndClose)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",()=>{this.upgrading?waitForUpgrade():close()}):this.upgrading?waitForUpgrade():close()),this}_onError(e){if(h("socket error %j",e),SocketWithoutUpgrade.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&"opening"===this.readyState)return h("trying next transport"),this.transports.shift(),this._open();this.emitReserved("error",e),this._onClose("transport error",e)}_onClose(e,t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){if(h('socket close with reason: "%s"',e),this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),p&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const e=m.indexOf(this._offlineEventListener);-1!==e&&(h("removing listener for the 'offline' event"),m.splice(e,1))}this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this._prevBufferLen=0}}}s.SocketWithoutUpgrade=SocketWithoutUpgrade,SocketWithoutUpgrade.protocol=u.protocol;class SocketWithUpgrade extends SocketWithoutUpgrade{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),"open"===this.readyState&&this.opts.upgrade){h("starting upgrade probes");for(let e=0;e<this._upgrades.length;e++)this._probe(this._upgrades[e])}}_probe(e){h('probing transport "%s"',e);let t=this.createTransport(e),s=!1;SocketWithoutUpgrade.priorWebsocketSuccess=!1;const onTransportOpen=()=>{s||(h('probe transport "%s" opened',e),t.send([{type:"ping",data:"probe"}]),t.once("packet",n=>{if(!s)if("pong"===n.type&&"probe"===n.data){if(h('probe transport "%s" pong',e),this.upgrading=!0,this.emitReserved("upgrading",t),!t)return;SocketWithoutUpgrade.priorWebsocketSuccess="websocket"===t.name,h('pausing current transport "%s"',this.transport.name),this.transport.pause(()=>{s||"closed"!==this.readyState&&(h("changing transport and sending upgrade packet"),cleanup(),this.setTransport(t),t.send([{type:"upgrade"}]),this.emitReserved("upgrade",t),t=null,this.upgrading=!1,this.flush())})}else{h('probe transport "%s" failed',e);const s=new Error("probe error");s.transport=t.name,this.emitReserved("upgradeError",s)}}))};function freezeTransport(){s||(s=!0,cleanup(),t.close(),t=null)}const onerror=s=>{const n=new Error("probe error: "+s);n.transport=t.name,freezeTransport(),h('probe transport "%s" failed because of error: %s',e,s),this.emitReserved("upgradeError",n)};function onTransportClose(){onerror("transport closed")}function onclose(){onerror("socket closed")}function onupgrade(e){t&&e.name!==t.name&&(h('"%s" works - aborting "%s"',e.name,t.name),freezeTransport())}const cleanup=()=>{t.removeListener("open",onTransportOpen),t.removeListener("error",onerror),t.removeListener("close",onTransportClose),this.off("close",onclose),this.off("upgrading",onupgrade)};t.once("open",onTransportOpen),t.once("error",onerror),t.once("close",onTransportClose),this.once("close",onclose),this.once("upgrading",onupgrade),-1!==this._upgrades.indexOf("webtransport")&&"webtransport"!==e?this.setTimeoutFn(()=>{s||t.open()},200):t.open()}onHandshake(e){this._upgrades=this._filterUpgrades(e.upgrades),super.onHandshake(e)}_filterUpgrades(e){const t=[];for(let s=0;s<e.length;s++)~this.transports.indexOf(e[s])&&t.push(e[s]);return t}}s.SocketWithUpgrade=SocketWithUpgrade;s.Socket=class Socket extends SocketWithUpgrade{constructor(e,t={}){const s="object"==typeof e?e:t;(!s.transports||s.transports&&"string"==typeof s.transports[0])&&(s.transports=(s.transports||["polling","websocket","webtransport"]).map(e=>i.transports[e]).filter(e=>!!e)),super(e,s)}}},{"./contrib/parseqs.js":4,"./contrib/parseuri.js":5,"./globals.node.js":6,"./transports/index.js":10,"./util.js":16,"@socket.io/component-emitter":2,debug:17,"engine.io-parser":23}],9:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Transport=s.TransportError=void 0;const i=e("engine.io-parser"),a=e("@socket.io/component-emitter"),l=e("./util.js"),c=e("./contrib/parseqs.js"),g=(0,n(e("debug")).default)("engine.io-client:transport");class TransportError extends Error{constructor(e,t,s){super(e),this.description=t,this.context=s,this.type="TransportError"}}s.TransportError=TransportError;class Transport extends a.Emitter{constructor(e){super(),this.writable=!1,(0,l.installTimerFunctions)(this,e),this.opts=e,this.query=e.query,this.socket=e.socket,this.supportsBinary=!e.forceBase64}onError(e,t,s){return super.emitReserved("error",new TransportError(e,t,s)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(e){"open"===this.readyState?this.write(e):g("transport is not open, discarding packets")}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const t=(0,i.decodePacket)(e,this.socket.binaryType);this.onPacket(t)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,t={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}_hostname(){const e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(e){const t=(0,c.encode)(e);return t.length?"?"+t:""}}s.Transport=Transport},{"./contrib/parseqs.js":4,"./util.js":16,"@socket.io/component-emitter":2,debug:17,"engine.io-parser":23}],10:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.transports=void 0;const n=e("./polling-xhr.node.js"),i=e("./websocket.node.js"),a=e("./webtransport.js");s.transports={websocket:i.WS,webtransport:a.WT,polling:n.XHR}},{"./polling-xhr.node.js":12,"./websocket.node.js":14,"./webtransport.js":15}],11:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Fetch=void 0;const n=e("./polling.js");class Fetch extends n.Polling{doPoll(){this._fetch().then(e=>{if(!e.ok)return this.onError("fetch read error",e.status,e);e.text().then(e=>this.onData(e))}).catch(e=>{this.onError("fetch read error",e)})}doWrite(e,t){this._fetch(e).then(e=>{if(!e.ok)return this.onError("fetch write error",e.status,e);t()}).catch(e=>{this.onError("fetch write error",e)})}_fetch(e){var t;const s=void 0!==e,n=new Headers(this.opts.extraHeaders);return s&&n.set("content-type","text/plain;charset=UTF-8"),null===(t=this.socket._cookieJar)||void 0===t||t.appendCookies(n),fetch(this.uri(),{method:s?"POST":"GET",body:s?e:null,headers:n,credentials:this.opts.withCredentials?"include":"omit"}).then(e=>{var t;return null===(t=this.socket._cookieJar)||void 0===t||t.parseCookies(e.headers.getSetCookie()),e})}}s.Fetch=Fetch},{"./polling.js":13}],12:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.XHR=s.Request=s.BaseXHR=void 0;const i=e("./polling.js"),a=e("@socket.io/component-emitter"),l=e("../util.js"),c=e("../globals.node.js"),g=e("../contrib/has-cors.js"),u=(0,n(e("debug")).default)("engine.io-client:polling");function empty(){}class BaseXHR extends i.Polling{constructor(e){if(super(e),"undefined"!=typeof location){const t="https:"===location.protocol;let s=location.port;s||(s=t?"443":"80"),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||s!==e.port}}doWrite(e,t){const s=this.request({method:"POST",data:e});s.on("success",t),s.on("error",(e,t)=>{this.onError("xhr post error",e,t)})}doPoll(){u("xhr poll");const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",(e,t)=>{this.onError("xhr poll error",e,t)}),this.pollXhr=e}}s.BaseXHR=BaseXHR;class Request extends a.Emitter{constructor(e,t,s){super(),this.createRequest=e,(0,l.installTimerFunctions)(this,s),this._opts=s,this._method=s.method||"GET",this._uri=t,this._data=void 0!==s.data?s.data:null,this._create()}_create(){var e;const t=(0,l.pick)(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");t.xdomain=!!this._opts.xd;const s=this._xhr=this.createRequest(t);try{u("xhr open %s: %s",this._method,this._uri),s.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){s.setDisableHeaderCheck&&s.setDisableHeaderCheck(!0);for(let e in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(e)&&s.setRequestHeader(e,this._opts.extraHeaders[e])}}catch(e){}if("POST"===this._method)try{s.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{s.setRequestHeader("Accept","*/*")}catch(e){}null===(e=this._opts.cookieJar)||void 0===e||e.addCookies(s),"withCredentials"in s&&(s.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(s.timeout=this._opts.requestTimeout),s.onreadystatechange=()=>{var e;3===s.readyState&&(null===(e=this._opts.cookieJar)||void 0===e||e.parseCookies(s.getResponseHeader("set-cookie"))),4===s.readyState&&(200===s.status||1223===s.status?this._onLoad():this.setTimeoutFn(()=>{this._onError("number"==typeof s.status?s.status:0)},0))},u("xhr data %s",this._data),s.send(this._data)}catch(e){return void this.setTimeoutFn(()=>{this._onError(e)},0)}"undefined"!=typeof document&&(this._index=Request.requestsCount++,Request.requests[this._index]=this)}_onError(e){this.emitReserved("error",e,this._xhr),this._cleanup(!0)}_cleanup(e){if(void 0!==this._xhr&&null!==this._xhr){if(this._xhr.onreadystatechange=empty,e)try{this._xhr.abort()}catch(e){}"undefined"!=typeof document&&delete Request.requests[this._index],this._xhr=null}}_onLoad(){const e=this._xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}if(s.Request=Request,Request.requestsCount=0,Request.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",unloadHandler);else if("function"==typeof addEventListener){const e="onpagehide"in c.globalThisShim?"pagehide":"unload";addEventListener(e,unloadHandler,!1)}function unloadHandler(){for(let e in Request.requests)Request.requests.hasOwnProperty(e)&&Request.requests[e].abort()}const d=function(){const e=newRequest({xdomain:!1});return e&&null!==e.responseType}();function newRequest(e){const t=e.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!t||g.hasCORS))return new XMLHttpRequest}catch(e){}if(!t)try{return new(c.globalThisShim[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}s.XHR=class XHR extends BaseXHR{constructor(e){super(e);const t=e&&e.forceBase64;this.supportsBinary=d&&!t}request(e={}){return Object.assign(e,{xd:this.xd},this.opts),new Request(newRequest,this.uri(),e)}}},{"../contrib/has-cors.js":3,"../globals.node.js":6,"../util.js":16,"./polling.js":13,"@socket.io/component-emitter":2,debug:17}],13:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Polling=void 0;const i=e("../transport.js"),a=e("../util.js"),l=e("engine.io-parser"),c=(0,n(e("debug")).default)("engine.io-client:polling");class Polling extends i.Transport{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(e){this.readyState="pausing";const pause=()=>{c("paused"),this.readyState="paused",e()};if(this._polling||!this.writable){let e=0;this._polling&&(c("we are currently polling - waiting to pause"),e++,this.once("pollComplete",function(){c("pre-pause polling complete"),--e||pause()})),this.writable||(c("we are currently writing - waiting to pause"),e++,this.once("drain",function(){c("pre-pause writing complete"),--e||pause()}))}else pause()}_poll(){c("polling"),this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){c("polling got data %s",e);(0,l.decodePayload)(e,this.socket.binaryType).forEach(e=>{if("opening"===this.readyState&&"open"===e.type&&this.onOpen(),"close"===e.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(e)}),"closed"!==this.readyState&&(this._polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState?this._poll():c('ignoring poll - transport state "%s"',this.readyState))}doClose(){const close=()=>{c("writing close packet"),this.write([{type:"close"}])};"open"===this.readyState?(c("transport open - closing"),close()):(c("transport not open - deferring close"),this.once("open",close))}write(e){this.writable=!1,(0,l.encodePayload)(e,e=>{this.doWrite(e,()=>{this.writable=!0,this.emitReserved("drain")})})}uri(){const e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,a.randomString)()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}}s.Polling=Polling},{"../transport.js":9,"../util.js":16,debug:17,"engine.io-parser":23}],14:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.WS=s.BaseWS=void 0;const i=e("../transport.js"),a=e("../util.js"),l=e("engine.io-parser"),c=e("../globals.node.js"),g=(0,n(e("debug")).default)("engine.io-client:websocket"),u="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class BaseWS extends i.Transport{get name(){return"websocket"}doOpen(){const e=this.uri(),t=this.opts.protocols,s=u?{}:(0,a.pick)(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(s.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(e,t,s)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const s=e[t],n=t===e.length-1;(0,l.encodePacket)(s,this.supportsBinary,e=>{try{this.doWrite(s,e)}catch(e){g("websocket closed before onclose event")}n&&(0,c.nextTick)(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){void 0!==this.ws&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,a.randomString)()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}}s.BaseWS=BaseWS;const d=c.globalThisShim.WebSocket||c.globalThisShim.MozWebSocket;s.WS=class WS extends BaseWS{createSocket(e,t,s){return u?new d(e,t,s):t?new d(e,t):new d(e)}doWrite(e,t){this.ws.send(t)}}},{"../globals.node.js":6,"../transport.js":9,"../util.js":16,debug:17,"engine.io-parser":23}],15:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.WT=void 0;const i=e("../transport.js"),a=e("../globals.node.js"),l=e("engine.io-parser"),c=(0,n(e("debug")).default)("engine.io-client:webtransport");class WT extends i.Transport{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(e){return this.emitReserved("error",e)}this._transport.closed.then(()=>{c("transport closed gracefully"),this.onClose()}).catch(e=>{c("transport closed due to %s",e),this.onError("webtransport error",e)}),this._transport.ready.then(()=>{this._transport.createBidirectionalStream().then(e=>{const t=(0,l.createPacketDecoderStream)(Number.MAX_SAFE_INTEGER,this.socket.binaryType),s=e.readable.pipeThrough(t).getReader(),n=(0,l.createPacketEncoderStream)();n.readable.pipeTo(e.writable),this._writer=n.writable.getWriter();const read=()=>{s.read().then(({done:e,value:t})=>{e?c("session is closed"):(c("received chunk: %o",t),this.onPacket(t),read())}).catch(e=>{c("an error occurred while reading: %s",e)})};read();const i={type:"open"};this.query.sid&&(i.data=`{"sid":"${this.query.sid}"}`),this._writer.write(i).then(()=>this.onOpen())})})}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const s=e[t],n=t===e.length-1;this._writer.write(s).then(()=>{n&&(0,a.nextTick)(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){var e;null===(e=this._transport)||void 0===e||e.close()}}s.WT=WT},{"../globals.node.js":6,"../transport.js":9,debug:17,"engine.io-parser":23}],16:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.pick=function pick(e,...t){return t.reduce((t,s)=>(e.hasOwnProperty(s)&&(t[s]=e[s]),t),{})},s.installTimerFunctions=function installTimerFunctions(e,t){t.useNativeTimers?(e.setTimeoutFn=i.bind(n.globalThisShim),e.clearTimeoutFn=a.bind(n.globalThisShim)):(e.setTimeoutFn=n.globalThisShim.setTimeout.bind(n.globalThisShim),e.clearTimeoutFn=n.globalThisShim.clearTimeout.bind(n.globalThisShim))},s.byteLength=function byteLength(e){if("string"==typeof e)return function utf8Length(e){let t=0,s=0;for(let n=0,i=e.length;n<i;n++)t=e.charCodeAt(n),t<128?s+=1:t<2048?s+=2:t<55296||t>=57344?s+=3:(n++,s+=4);return s}(e);return Math.ceil((e.byteLength||e.size)*l)},s.randomString=function randomString(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)};const n=e("./globals.node.js");const i=n.globalThisShim.setTimeout,a=n.globalThisShim.clearTimeout;const l=1.33},{"./globals.node.js":6}],17:[function(e,t,s){(function(n){(function(){s.formatArgs=function formatArgs(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),!this.useColors)return;const s="color: "+this.color;e.splice(1,0,s,"color: inherit");let n=0,i=0;e[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(n++,"%c"===e&&(i=n))}),e.splice(i,0,s)},s.save=function save(e){try{e?s.storage.setItem("debug",e):s.storage.removeItem("debug")}catch(e){}},s.load=function load(){let e;try{e=s.storage.getItem("debug")}catch(e){}!e&&void 0!==n&&"env"in n&&(e=n.env.DEBUG);return e},s.useColors=function useColors(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},s.storage=function localstorage(){try{return localStorage}catch(e){}}(),s.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),s.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],s.log=console.debug||console.log||(()=>{}),t.exports=e("./common")(s);const{formatters:i}=t.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}).call(this)}).call(this,e("_process"))},{"./common":18,_process:25}],18:[function(e,t,s){t.exports=function setup(t){function createDebug(e){let t,s,n,i=null;function debug(...e){if(!debug.enabled)return;const s=debug,n=Number(new Date),i=n-(t||n);s.diff=i,s.prev=t,s.curr=n,t=n,e[0]=createDebug.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(t,n)=>{if("%%"===t)return"%";a++;const i=createDebug.formatters[n];if("function"==typeof i){const n=e[a];t=i.call(s,n),e.splice(a,1),a--}return t}),createDebug.formatArgs.call(s,e);(s.log||createDebug.log).apply(s,e)}return debug.namespace=e,debug.useColors=createDebug.useColors(),debug.color=createDebug.selectColor(e),debug.extend=extend,debug.destroy=createDebug.destroy,Object.defineProperty(debug,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==i?i:(s!==createDebug.namespaces&&(s=createDebug.namespaces,n=createDebug.enabled(e)),n),set:e=>{i=e}}),"function"==typeof createDebug.init&&createDebug.init(debug),debug}function extend(e,t){const s=createDebug(this.namespace+(void 0===t?":":t)+e);return s.log=this.log,s}function toNamespace(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return createDebug.debug=createDebug,createDebug.default=createDebug,createDebug.coerce=function coerce(e){if(e instanceof Error)return e.stack||e.message;return e},createDebug.disable=function disable(){const e=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map(e=>"-"+e)].join(",");return createDebug.enable(""),e},createDebug.enable=function enable(e){let t;createDebug.save(e),createDebug.namespaces=e,createDebug.names=[],createDebug.skips=[];const s=("string"==typeof e?e:"").split(/[\s,]+/),n=s.length;for(t=0;t<n;t++)s[t]&&("-"===(e=s[t].replace(/\*/g,".*?"))[0]?createDebug.skips.push(new RegExp("^"+e.slice(1)+"$")):createDebug.names.push(new RegExp("^"+e+"$")))},createDebug.enabled=function enabled(e){if("*"===e[e.length-1])return!0;let t,s;for(t=0,s=createDebug.skips.length;t<s;t++)if(createDebug.skips[t].test(e))return!1;for(t=0,s=createDebug.names.length;t<s;t++)if(createDebug.names[t].test(e))return!0;return!1},createDebug.humanize=e("ms"),createDebug.destroy=function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(t).forEach(e=>{createDebug[e]=t[e]}),createDebug.names=[],createDebug.skips=[],createDebug.formatters={},createDebug.selectColor=function selectColor(e){let t=0;for(let s=0;s<e.length;s++)t=(t<<5)-t+e.charCodeAt(s),t|=0;return createDebug.colors[Math.abs(t)%createDebug.colors.length]},createDebug.enable(createDebug.load()),createDebug}},{ms:24}],19:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ERROR_PACKET=s.PACKET_TYPES_REVERSE=s.PACKET_TYPES=void 0;const n=Object.create(null);s.PACKET_TYPES=n,n.open="0",n.close="1",n.ping="2",n.pong="3",n.message="4",n.upgrade="5",n.noop="6";const i=Object.create(null);s.PACKET_TYPES_REVERSE=i,Object.keys(n).forEach(e=>{i[n[e]]=e});s.ERROR_PACKET={type:"error",data:"parser error"}},{}],20:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.decode=s.encode=void 0;const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let e=0;e<64;e++)i[n.charCodeAt(e)]=e;s.encode=e=>{let t,s=new Uint8Array(e),i=s.length,a="";for(t=0;t<i;t+=3)a+=n[s[t]>>2],a+=n[(3&s[t])<<4|s[t+1]>>4],a+=n[(15&s[t+1])<<2|s[t+2]>>6],a+=n[63&s[t+2]];return i%3==2?a=a.substring(0,a.length-1)+"=":i%3==1&&(a=a.substring(0,a.length-2)+"=="),a};s.decode=e=>{let t,s,n,a,l,c=.75*e.length,g=e.length,u=0;"="===e[e.length-1]&&(c--,"="===e[e.length-2]&&c--);const d=new ArrayBuffer(c),h=new Uint8Array(d);for(t=0;t<g;t+=4)s=i[e.charCodeAt(t)],n=i[e.charCodeAt(t+1)],a=i[e.charCodeAt(t+2)],l=i[e.charCodeAt(t+3)],h[u++]=s<<2|n>>4,h[u++]=(15&n)<<4|a>>2,h[u++]=(3&a)<<6|63&l;return d}},{}],21:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.decodePacket=void 0;const n=e("./commons.js"),i=e("./contrib/base64-arraybuffer.js"),a="function"==typeof ArrayBuffer;s.decodePacket=(e,t)=>{if("string"!=typeof e)return{type:"message",data:mapBinary(e,t)};const s=e.charAt(0);if("b"===s)return{type:"message",data:decodeBase64Packet(e.substring(1),t)};return n.PACKET_TYPES_REVERSE[s]?e.length>1?{type:n.PACKET_TYPES_REVERSE[s],data:e.substring(1)}:{type:n.PACKET_TYPES_REVERSE[s]}:n.ERROR_PACKET};const decodeBase64Packet=(e,t)=>{if(a){const s=(0,i.decode)(e);return mapBinary(s,t)}return{base64:!0,data:e}},mapBinary=(e,t)=>"blob"===t?e instanceof Blob?e:new Blob([e]):e instanceof ArrayBuffer?e:e.buffer},{"./commons.js":19,"./contrib/base64-arraybuffer.js":20}],22:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.encodePacket=void 0,s.encodePacketToBinary=function encodePacketToBinary(e,t){if(i&&e.data instanceof Blob)return e.data.arrayBuffer().then(toArray).then(t);if(a&&(e.data instanceof ArrayBuffer||isView(e.data)))return t(toArray(e.data));encodePacket(e,!1,e=>{l||(l=new TextEncoder),t(l.encode(e))})};const n=e("./commons.js"),i="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),a="function"==typeof ArrayBuffer,isView=e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer instanceof ArrayBuffer,encodePacket=({type:e,data:t},s,l)=>i&&t instanceof Blob?s?l(t):encodeBlobAsBase64(t,l):a&&(t instanceof ArrayBuffer||isView(t))?s?l(t):encodeBlobAsBase64(new Blob([t]),l):l(n.PACKET_TYPES[e]+(t||""));s.encodePacket=encodePacket;const encodeBlobAsBase64=(e,t)=>{const s=new FileReader;return s.onload=function(){const e=s.result.split(",")[1];t("b"+(e||""))},s.readAsDataURL(e)};function toArray(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}let l},{"./commons.js":19}],23:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.decodePayload=s.decodePacket=s.encodePayload=s.encodePacket=s.protocol=void 0,s.createPacketEncoderStream=function createPacketEncoderStream(){return new TransformStream({transform(e,t){(0,n.encodePacketToBinary)(e,s=>{const n=s.length;let i;if(n<126)i=new Uint8Array(1),new DataView(i.buffer).setUint8(0,n);else if(n<65536){i=new Uint8Array(3);const e=new DataView(i.buffer);e.setUint8(0,126),e.setUint16(1,n)}else{i=new Uint8Array(9);const e=new DataView(i.buffer);e.setUint8(0,127),e.setBigUint64(1,BigInt(n))}e.data&&"string"!=typeof e.data&&(i[0]|=128),t.enqueue(i),t.enqueue(s)})}})},s.createPacketDecoderStream=function createPacketDecoderStream(e,t){c||(c=new TextDecoder);const s=[];let n=0,l=-1,g=!1;return new TransformStream({transform(u,d){for(s.push(u);;){if(0===n){if(totalLength(s)<1)break;const e=concatChunks(s,1);g=!(128&~e[0]),l=127&e[0],n=l<126?3:126===l?1:2}else if(1===n){if(totalLength(s)<2)break;const e=concatChunks(s,2);l=new DataView(e.buffer,e.byteOffset,e.length).getUint16(0),n=3}else if(2===n){if(totalLength(s)<8)break;const e=concatChunks(s,8),t=new DataView(e.buffer,e.byteOffset,e.length),i=t.getUint32(0);if(i>Math.pow(2,21)-1){d.enqueue(a.ERROR_PACKET);break}l=i*Math.pow(2,32)+t.getUint32(4),n=3}else{if(totalLength(s)<l)break;const e=concatChunks(s,l);d.enqueue((0,i.decodePacket)(g?e:c.decode(e),t)),n=0}if(0===l||l>e){d.enqueue(a.ERROR_PACKET);break}}}})};const n=e("./encodePacket.js");Object.defineProperty(s,"encodePacket",{enumerable:!0,get:function(){return n.encodePacket}});const i=e("./decodePacket.js");Object.defineProperty(s,"decodePacket",{enumerable:!0,get:function(){return i.decodePacket}});const a=e("./commons.js"),l=String.fromCharCode(30);s.encodePayload=(e,t)=>{const s=e.length,i=new Array(s);let a=0;e.forEach((e,c)=>{(0,n.encodePacket)(e,!1,e=>{i[c]=e,++a===s&&t(i.join(l))})})};let c;function totalLength(e){return e.reduce((e,t)=>e+t.length,0)}function concatChunks(e,t){if(e[0].length===t)return e.shift();const s=new Uint8Array(t);let n=0;for(let i=0;i<t;i++)s[i]=e[0][n++],n===e[0].length&&(e.shift(),n=0);return e.length&&n<e[0].length&&(e[0]=e[0].slice(n)),s}s.decodePayload=(e,t)=>{const s=e.split(l),n=[];for(let e=0;e<s.length;e++){const a=(0,i.decodePacket)(s[e],t);if(n.push(a),"error"===a.type)break}return n},s.protocol=4},{"./commons.js":19,"./decodePacket.js":21,"./encodePacket.js":22}],24:[function(e,t,s){var n=1e3,i=60*n,a=60*i,l=24*a,c=7*l,g=365.25*l;function plural(e,t,s,n){var i=t>=1.5*s;return Math.round(e/s)+" "+n+(i?"s":"")}t.exports=function(e,t){t=t||{};var s=typeof e;if("string"===s&&e.length>0)return function parse(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var s=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*g;case"weeks":case"week":case"w":return s*c;case"days":case"day":case"d":return s*l;case"hours":case"hour":case"hrs":case"hr":case"h":return s*a;case"minutes":case"minute":case"mins":case"min":case"m":return s*i;case"seconds":case"second":case"secs":case"sec":case"s":return s*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(e);if("number"===s&&isFinite(e))return t.long?function fmtLong(e){var t=Math.abs(e);if(t>=l)return plural(e,t,l,"day");if(t>=a)return plural(e,t,a,"hour");if(t>=i)return plural(e,t,i,"minute");if(t>=n)return plural(e,t,n,"second");return e+" ms"}(e):function fmtShort(e){var t=Math.abs(e);if(t>=l)return Math.round(e/l)+"d";if(t>=a)return Math.round(e/a)+"h";if(t>=i)return Math.round(e/i)+"m";if(t>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},{}],25:[function(e,t,s){var n,i,a=t.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(e){if(n===setTimeout)return setTimeout(e,0);if((n===defaultSetTimout||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){n=defaultSetTimout}try{i="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){i=defaultClearTimeout}}();var l,c=[],g=!1,u=-1;function cleanUpNextTick(){g&&l&&(g=!1,l.length?c=l.concat(c):u=-1,c.length&&drainQueue())}function drainQueue(){if(!g){var e=runTimeout(cleanUpNextTick);g=!0;for(var t=c.length;t;){for(l=c,c=[];++u<t;)l&&l[u].run();u=-1,t=c.length}l=null,g=!1,function runClearTimeout(e){if(i===clearTimeout)return clearTimeout(e);if((i===defaultClearTimeout||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{return i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)t[s-1]=arguments[s];c.push(new Item(e,t)),1!==c.length||g||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=noop,a.addListener=noop,a.once=noop,a.off=noop,a.removeListener=noop,a.removeAllListeners=noop,a.emit=noop,a.prependListener=noop,a.prependOnceListener=noop,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],26:[function(e,t,s){"use strict";function Backoff(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}Object.defineProperty(s,"__esModule",{value:!0}),s.Backoff=Backoff,Backoff.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),s=Math.floor(t*this.jitter*e);e=1&Math.floor(10*t)?e+s:e-s}return 0|Math.min(e,this.max)},Backoff.prototype.reset=function(){this.attempts=0},Backoff.prototype.setMin=function(e){this.ms=e},Backoff.prototype.setMax=function(e){this.max=e},Backoff.prototype.setJitter=function(e){this.jitter=e}},{}],27:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.WebTransport=s.WebSocket=s.NodeWebSocket=s.XHR=s.NodeXHR=s.Fetch=s.Socket=s.Manager=s.protocol=void 0,s.io=lookup,s.connect=lookup,s.default=lookup;const i=e("./url.js"),a=e("./manager.js");Object.defineProperty(s,"Manager",{enumerable:!0,get:function(){return a.Manager}});const l=e("./socket.js");Object.defineProperty(s,"Socket",{enumerable:!0,get:function(){return l.Socket}});const c=(0,n(e("debug")).default)("socket.io-client"),g={};function lookup(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};const s=(0,i.url)(e,t.path||"/socket.io"),n=s.source,l=s.id,u=s.path,d=g[l]&&u in g[l].nsps;let h;return t.forceNew||t["force new connection"]||!1===t.multiplex||d?(c("ignoring socket cache for %s",n),h=new a.Manager(n,t)):(g[l]||(c("new io instance for %s",n),g[l]=new a.Manager(n,t)),h=g[l]),s.query&&!t.query&&(t.query=s.queryKey),h.socket(s.path,t)}Object.assign(lookup,{Manager:a.Manager,Socket:l.Socket,io:lookup,connect:lookup});var u=e("socket.io-parser");Object.defineProperty(s,"protocol",{enumerable:!0,get:function(){return u.protocol}});var d=e("engine.io-client");Object.defineProperty(s,"Fetch",{enumerable:!0,get:function(){return d.Fetch}}),Object.defineProperty(s,"NodeXHR",{enumerable:!0,get:function(){return d.NodeXHR}}),Object.defineProperty(s,"XHR",{enumerable:!0,get:function(){return d.XHR}}),Object.defineProperty(s,"NodeWebSocket",{enumerable:!0,get:function(){return d.NodeWebSocket}}),Object.defineProperty(s,"WebSocket",{enumerable:!0,get:function(){return d.WebSocket}}),Object.defineProperty(s,"WebTransport",{enumerable:!0,get:function(){return d.WebTransport}}),t.exports=lookup},{"./manager.js":28,"./socket.js":30,"./url.js":31,debug:32,"engine.io-client":7,"socket.io-parser":35}],28:[function(e,t,s){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,s,n){void 0===n&&(n=s);var i=Object.getOwnPropertyDescriptor(t,s);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,n,i)}:function(e,t,s,n){void 0===n&&(n=s),e[n]=t[s]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&n(t,e,s);return i(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Manager=void 0;const c=e("engine.io-client"),g=e("./socket.js"),u=a(e("socket.io-parser")),d=e("./on.js"),h=e("./contrib/backo2.js"),p=e("@socket.io/component-emitter"),m=(0,l(e("debug")).default)("socket.io-client:manager");class Manager extends p.Emitter{constructor(e,t){var s;super(),this.nsps={},this.subs=[],e&&"object"==typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||"/socket.io",this.opts=t,(0,c.installTimerFunctions)(this,t),this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(s=t.randomizationFactor)&&void 0!==s?s:.5),this.backoff=new h.Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this._readyState="closed",this.uri=e;const n=t.parser||u;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this._autoConnect=!1!==t.autoConnect,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,e||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}randomizationFactor(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}reconnectionDelayMax(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(e){if(m("readyState %s",this._readyState),~this._readyState.indexOf("open"))return this;m("opening %s",this.uri),this.engine=new c.Socket(this.uri,this.opts);const t=this.engine,s=this;this._readyState="opening",this.skipReconnect=!1;const n=(0,d.on)(t,"open",function(){s.onopen(),e&&e()}),onError=t=>{m("error"),this.cleanup(),this._readyState="closed",this.emitReserved("error",t),e?e(t):this.maybeReconnectOnOpen()},i=(0,d.on)(t,"error",onError);if(!1!==this._timeout){const e=this._timeout;m("connect attempt will timeout after %d",e);const s=this.setTimeoutFn(()=>{m("connect attempt timed out after %d",e),n(),onError(new Error("timeout")),t.close()},e);this.opts.autoUnref&&s.unref(),this.subs.push(()=>{this.clearTimeoutFn(s)})}return this.subs.push(n),this.subs.push(i),this}connect(e){return this.open(e)}onopen(){m("open"),this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push((0,d.on)(e,"ping",this.onping.bind(this)),(0,d.on)(e,"data",this.ondata.bind(this)),(0,d.on)(e,"error",this.onerror.bind(this)),(0,d.on)(e,"close",this.onclose.bind(this)),(0,d.on)(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}ondecoded(e){(0,c.nextTick)(()=>{this.emitReserved("packet",e)},this.setTimeoutFn)}onerror(e){m("error",e),this.emitReserved("error",e)}socket(e,t){let s=this.nsps[e];return s?this._autoConnect&&!s.active&&s.connect():(s=new g.Socket(this,e,t),this.nsps[e]=s),s}_destroy(e){const t=Object.keys(this.nsps);for(const e of t){if(this.nsps[e].active)return void m("socket %s is still active, skipping close",e)}this._close()}_packet(e){m("writing packet %j",e);const t=this.encoder.encode(e);for(let s=0;s<t.length;s++)this.engine.write(t[s],e.options)}cleanup(){m("cleanup"),this.subs.forEach(e=>e()),this.subs.length=0,this.decoder.destroy()}_close(){m("disconnect"),this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(e,t){var s;m("closed due to %s",e),this.cleanup(),null===(s=this.engine)||void 0===s||s.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)m("reconnect failed"),this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const t=this.backoff.duration();m("will wait %dms before reconnect attempt",t),this._reconnecting=!0;const s=this.setTimeoutFn(()=>{e.skipReconnect||(m("attempting reconnect"),this.emitReserved("reconnect_attempt",e.backoff.attempts),e.skipReconnect||e.open(t=>{t?(m("reconnect attempt error"),e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",t)):(m("reconnect success"),e.onreconnect())}))},t);this.opts.autoUnref&&s.unref(),this.subs.push(()=>{this.clearTimeoutFn(s)})}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}s.Manager=Manager},{"./contrib/backo2.js":26,"./on.js":29,"./socket.js":30,"@socket.io/component-emitter":2,debug:32,"engine.io-client":7,"socket.io-parser":35}],29:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.on=function on(e,t,s){return e.on(t,s),function subDestroy(){e.off(t,s)}}},{}],30:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Socket=void 0;const i=e("socket.io-parser"),a=e("./on.js"),l=e("@socket.io/component-emitter"),c=(0,n(e("debug")).default)("socket.io-client:socket"),g=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class Socket extends l.Emitter{constructor(e,t,s){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=t,s&&s.auth&&(this.auth=s.auth),this._opts=Object.assign({},s),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[(0,a.on)(e,"open",this.onopen.bind(this)),(0,a.on)(e,"packet",this.onpacket.bind(this)),(0,a.on)(e,"error",this.onerror.bind(this)),(0,a.on)(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...t){var s,n,a;if(g.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(t.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(t),this;const l={type:i.PacketType.EVENT,data:t,options:{}};if(l.options.compress=!1!==this.flags.compress,"function"==typeof t[t.length-1]){const e=this.ids++;c("emitting packet with ack id %d",e);const s=t.pop();this._registerAckCallback(e,s),l.id=e}const u=null===(n=null===(s=this.io.engine)||void 0===s?void 0:s.transport)||void 0===n?void 0:n.writable,d=this.connected&&!(null===(a=this.io.engine)||void 0===a?void 0:a._hasPingExpired());return this.flags.volatile&&!u?c("discard packet as the transport is not currently writable"):d?(this.notifyOutgoingListeners(l),this.packet(l)):this.sendBuffer.push(l),this.flags={},this}_registerAckCallback(e,t){var s;const n=null!==(s=this.flags.timeout)&&void 0!==s?s:this._opts.ackTimeout;if(void 0===n)return void(this.acks[e]=t);const i=this.io.setTimeoutFn(()=>{delete this.acks[e];for(let t=0;t<this.sendBuffer.length;t++)this.sendBuffer[t].id===e&&(c("removing packet with ack id %d from the buffer",e),this.sendBuffer.splice(t,1));c("event with ack id %d has timed out after %d ms",e,n),t.call(this,new Error("operation has timed out"))},n),fn=(...e)=>{this.io.clearTimeoutFn(i),t.apply(this,e)};fn.withError=!0,this.acks[e]=fn}emitWithAck(e,...t){return new Promise((s,n)=>{const fn=(e,t)=>e?n(e):s(t);fn.withError=!0,t.push(fn),this.emit(e,...t)})}_addToQueue(e){let t;"function"==typeof e[e.length-1]&&(t=e.pop());const s={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push((e,...n)=>{if(s!==this._queue[0])return;return null!==e?s.tryCount>this._opts.retries&&(c("packet [%d] is discarded after %d tries",s.id,s.tryCount),this._queue.shift(),t&&t(e)):(c("packet [%d] was successfully sent",s.id),this._queue.shift(),t&&t(null,...n)),s.pending=!1,this._drainQueue()}),this._queue.push(s),this._drainQueue()}_drainQueue(e=!1){if(c("draining queue"),!this.connected||0===this._queue.length)return;const t=this._queue[0];!t.pending||e?(t.pending=!0,t.tryCount++,c("sending packet [%d] (try n°%d)",t.id,t.tryCount),this.flags=t.flags,this.emit.apply(this,t.args)):c("packet [%d] has already been sent and is waiting for an ack",t.id)}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){c("transport is open - connecting"),"function"==typeof this.auth?this.auth(e=>{this._sendConnectPacket(e)}):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:i.PacketType.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,t){c("close (%s)",e),this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach(e=>{if(!this.sendBuffer.some(t=>String(t.id)===e)){const t=this.acks[e];delete this.acks[e],t.withError&&t.call(this,new Error("socket has been disconnected"))}})}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case i.PacketType.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case i.PacketType.EVENT:case i.PacketType.BINARY_EVENT:this.onevent(e);break;case i.PacketType.ACK:case i.PacketType.BINARY_ACK:this.onack(e);break;case i.PacketType.DISCONNECT:this.ondisconnect();break;case i.PacketType.CONNECT_ERROR:this.destroy();const t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}onevent(e){const t=e.data||[];c("emitting event %j",t),null!=e.id&&(c("attaching ack callback to event"),t.push(this.ack(e.id))),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const t=this._anyListeners.slice();for(const s of t)s.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}ack(e){const t=this;let s=!1;return function(...n){s||(s=!0,c("sending ack %j",n),t.packet({type:i.PacketType.ACK,id:e,data:n}))}}onack(e){const t=this.acks[e.id];"function"==typeof t?(delete this.acks[e.id],c("calling ack %s with %j",e.id,e.data),t.withError&&e.data.unshift(null),t.apply(this,e.data)):c("bad ack %s",e.id)}onconnect(e,t){c("socket connected with id %s",e),this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach(e=>this.emitEvent(e)),this.receiveBuffer=[],this.sendBuffer.forEach(e=>{this.notifyOutgoingListeners(e),this.packet(e)}),this.sendBuffer=[]}ondisconnect(){c("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach(e=>e()),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&(c("performing disconnect (%s)",this.nsp),this.packet({type:i.PacketType.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const t=this._anyListeners;for(let s=0;s<t.length;s++)if(e===t[s])return t.splice(s,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const t=this._anyOutgoingListeners;for(let s=0;s<t.length;s++)if(e===t[s])return t.splice(s,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const t=this._anyOutgoingListeners.slice();for(const s of t)s.apply(this,e.data)}}}s.Socket=Socket},{"./on.js":29,"@socket.io/component-emitter":2,debug:32,"socket.io-parser":35}],31:[function(e,t,s){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.url=function url(e,t="",s){let n=e;s=s||"undefined"!=typeof location&&location,null==e&&(e=s.protocol+"//"+s.host);"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?s.protocol+e:s.host+e),/^(https?|wss?):\/\//.test(e)||(a("protocol-less url %s",e),e=void 0!==s?s.protocol+"//"+e:"https://"+e),a("parse %s",e),n=(0,i.parse)(e));n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443"));n.path=n.path||"/";const l=-1!==n.host.indexOf(":")?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+l+":"+n.port+t,n.href=n.protocol+"://"+l+(s&&s.port===n.port?"":":"+n.port),n};const i=e("engine.io-client"),a=(0,n(e("debug")).default)("socket.io-client:url")},{debug:32,"engine.io-client":7}],32:[function(e,t,s){arguments[4][17][0].apply(s,arguments)},{"./common":33,_process:25,dup:17}],33:[function(e,t,s){arguments[4][18][0].apply(s,arguments)},{dup:18,ms:24}],34:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.reconstructPacket=s.deconstructPacket=void 0;const n=e("./is-binary.js");function _deconstructPacket(e,t){if(!e)return e;if((0,n.isBinary)(e)){const s={_placeholder:!0,num:t.length};return t.push(e),s}if(Array.isArray(e)){const s=new Array(e.length);for(let n=0;n<e.length;n++)s[n]=_deconstructPacket(e[n],t);return s}if("object"==typeof e&&!(e instanceof Date)){const s={};for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(s[n]=_deconstructPacket(e[n],t));return s}return e}function _reconstructPacket(e,t){if(!e)return e;if(e&&!0===e._placeholder){if("number"==typeof e.num&&e.num>=0&&e.num<t.length)return t[e.num];throw new Error("illegal attachments")}if(Array.isArray(e))for(let s=0;s<e.length;s++)e[s]=_reconstructPacket(e[s],t);else if("object"==typeof e)for(const s in e)Object.prototype.hasOwnProperty.call(e,s)&&(e[s]=_reconstructPacket(e[s],t));return e}s.deconstructPacket=function deconstructPacket(e){const t=[],s=e.data,n=e;return n.data=_deconstructPacket(s,t),n.attachments=t.length,{packet:n,buffers:t}},s.reconstructPacket=function reconstructPacket(e,t){return e.data=_reconstructPacket(e.data,t),delete e.attachments,e}},{"./is-binary.js":36}],35:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Decoder=s.Encoder=s.PacketType=s.protocol=void 0;const n=e("@socket.io/component-emitter"),i=e("./binary.js"),a=e("./is-binary.js"),l=(0,e("debug").default)("socket.io-parser"),c=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];var g;s.protocol=5,function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(g=s.PacketType||(s.PacketType={}));function isObject(e){return"[object Object]"===Object.prototype.toString.call(e)}s.Encoder=class Encoder{constructor(e){this.replacer=e}encode(e){return l("encoding packet %j",e),e.type!==g.EVENT&&e.type!==g.ACK||!(0,a.hasBinary)(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===g.EVENT?g.BINARY_EVENT:g.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}encodeAsString(e){let t=""+e.type;return e.type!==g.BINARY_EVENT&&e.type!==g.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),l("encoded %j as %s",e,t),t}encodeAsBinary(e){const t=(0,i.deconstructPacket)(e),s=this.encodeAsString(t.packet),n=t.buffers;return n.unshift(s),n}};class Decoder extends n.Emitter{constructor(e){super(),this.reviver=e}add(e){let t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");t=this.decodeString(e);const s=t.type===g.BINARY_EVENT;s||t.type===g.BINARY_ACK?(t.type=s?g.EVENT:g.ACK,this.reconstructor=new BinaryReconstructor(t),0===t.attachments&&super.emitReserved("decoded",t)):super.emitReserved("decoded",t)}else{if(!(0,a.isBinary)(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");t=this.reconstructor.takeBinaryData(e),t&&(this.reconstructor=null,super.emitReserved("decoded",t))}}decodeString(e){let t=0;const s={type:Number(e.charAt(0))};if(void 0===g[s.type])throw new Error("unknown packet type "+s.type);if(s.type===g.BINARY_EVENT||s.type===g.BINARY_ACK){const n=t+1;for(;"-"!==e.charAt(++t)&&t!=e.length;);const i=e.substring(n,t);if(i!=Number(i)||"-"!==e.charAt(t))throw new Error("Illegal attachments");s.attachments=Number(i)}if("/"===e.charAt(t+1)){const n=t+1;for(;++t;){if(","===e.charAt(t))break;if(t===e.length)break}s.nsp=e.substring(n,t)}else s.nsp="/";const n=e.charAt(t+1);if(""!==n&&Number(n)==n){const n=t+1;for(;++t;){const s=e.charAt(t);if(null==s||Number(s)!=s){--t;break}if(t===e.length)break}s.id=Number(e.substring(n,t+1))}if(e.charAt(++t)){const n=this.tryParse(e.substr(t));if(!Decoder.isPayloadValid(s.type,n))throw new Error("invalid payload");s.data=n}return l("decoded %s as %j",e,s),s}tryParse(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}static isPayloadValid(e,t){switch(e){case g.CONNECT:return isObject(t);case g.DISCONNECT:return void 0===t;case g.CONNECT_ERROR:return"string"==typeof t||isObject(t);case g.EVENT:case g.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===c.indexOf(t[0]));case g.ACK:case g.BINARY_ACK:return Array.isArray(t)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}s.Decoder=Decoder;class BinaryReconstructor{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const e=(0,i.reconstructPacket)(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}},{"./binary.js":34,"./is-binary.js":36,"@socket.io/component-emitter":2,debug:37}],36:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.hasBinary=s.isBinary=void 0;const n="function"==typeof ArrayBuffer,i=Object.prototype.toString,a="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===i.call(Blob),l="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===i.call(File);function isBinary(e){return n&&(e instanceof ArrayBuffer||(e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer)(e))||a&&e instanceof Blob||l&&e instanceof File}s.isBinary=isBinary,s.hasBinary=function hasBinary(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e)){for(let t=0,s=e.length;t<s;t++)if(hasBinary(e[t]))return!0;return!1}if(isBinary(e))return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return hasBinary(e.toJSON(),!0);for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&hasBinary(e[t]))return!0;return!1}},{}],37:[function(e,t,s){arguments[4][17][0].apply(s,arguments)},{"./common":38,_process:25,dup:17}],38:[function(e,t,s){arguments[4][18][0].apply(s,arguments)},{dup:18,ms:24}],39:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.createCircularProgress=function createCircularProgress(){let{value:e=0,label:t="",state:s="",id:n=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const i=80,a=2*Math.PI*36,l=Math.max(0,Math.min(100,e)),c=a-l/100*a,g=n||`circular-progress-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,u=document.createElement("div");return u.className="circular-progress"+(s?" "+s:""),u.id=g,u.setAttribute("role","progressbar"),u.setAttribute("aria-valuenow",l),u.setAttribute("aria-valuemin",0),u.setAttribute("aria-valuemax",100),u.setAttribute("aria-label",t?`${t} ${l}%`:`${l}%`),u.setAttribute("data-percent",l),u.setAttribute("data-state",s),u.setAttribute("data-created",(new Date).toISOString()),u.innerHTML=`\n    <svg width="80" height="80" viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg">\n      \x3c!-- Background circle --\x3e\n      <circle \n        class="circular-bg" \n        cx="40" \n        cy="40" \n        r="36" \n        fill="none"\n        stroke="#e0e0e0"\n        stroke-width="8"\n      />\n      \x3c!-- Foreground progress circle --\x3e\n      <circle \n        class="circular-fg" \n        cx="40" \n        cy="40" \n        r="36" \n        fill="none"\n        stroke="var(--brand-color, #7c3aed)"\n        stroke-width="8"\n        stroke-linecap="round"\n        stroke-dasharray="${a}"\n        stroke-dashoffset="${c}"\n        transform="rotate(-90 40 40)"\n      />\n    </svg>\n    \x3c!-- Percentage label --\x3e\n    <span class="circular-label">${Math.round(l)}%</span>\n    ${t?`<span class="circular-status">${t}</span>`:""}\n  `,console.debug("Circular Progress Created:",{id:g,percent:l,state:s,size:i,stroke:8,radius:36,circumference:a,dashOffset:c,label:t}),u}},{}],40:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.cryptoUtils=s.CryptoUtils=void 0;class CryptoUtils{static async generateKey(e){const t=new TextEncoder,s=await window.crypto.subtle.importKey("raw",t.encode(e),"PBKDF2",!1,["deriveBits","deriveKey"]);return window.crypto.subtle.deriveKey({name:"PBKDF2",salt:(new TextEncoder).encode("PingOneImportSalt"),iterations:1e5,hash:"SHA-256"},s,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}static async encrypt(e,t){const s=(new TextEncoder).encode(e),n=window.crypto.getRandomValues(new Uint8Array(12)),i=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:n},t,s),a=new Uint8Array(n.length+i.byteLength);return a.set(n,0),a.set(new Uint8Array(i),n.length),btoa(String.fromCharCode(...a))}static async decrypt(e,t){try{const s=Uint8Array.from(atob(e),e=>e.charCodeAt(0)),n=s.slice(0,12),i=s.slice(12),a=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:n},t,i);return(new TextDecoder).decode(a)}catch(e){throw e}}}s.CryptoUtils=CryptoUtils;s.cryptoUtils=new CryptoUtils},{}],41:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ElementRegistry=void 0;const n={};function getElement(e,t){let s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e||"string"!=typeof e)return console.error(`[ElementRegistry] Invalid selector provided: ${e}`),null;if(e.includes("<")||e.includes(">")||e.includes('"')&&!e.includes("[")&&!e.includes("]")||e.includes("'")&&!e.includes("[")&&!e.includes("]"))return console.error(`[ElementRegistry] Potentially unsafe selector detected: ${e}`),null;if(n[e])return n[e];try{const i=document.querySelector(e);if(!i&&s)console.warn(`[ElementRegistry] Missing required element: ${t} (${e})`);else if(i){if(!document.contains(i))return console.warn(`[ElementRegistry] Element found but not in DOM: ${t} (${e})`),n[e]=null,null}else console.info(`[ElementRegistry] Optional element not found: ${t} (${e})`);return n[e]=i,i}catch(s){return console.error(`[ElementRegistry] Error finding element: ${t} (${e})`,s),n[e]=null,null}}const i=s.ElementRegistry={importButton:()=>getElement("#import-btn","Import Button"),fileInput:()=>getElement("#csv-file","File Input"),dashboardTab:()=>getElement("#dashboard-tab","Dashboard Tab"),dragDropArea:()=>getElement("#drag-drop-area","Drag-and-Drop Area",!1),notificationContainer:()=>getElement("#notification-area","Notification Container"),statusBar:()=>getElement("#global-status-bar","Global Status Bar"),progressContainer:()=>getElement("#import-progress-container","Import Progress Container",!1)||getElement("#delete-progress-container","Delete Progress Container",!1)||getElement("#modify-progress-container","Modify Progress Container",!1)||getElement("#export-progress-container","Export Progress Container",!1)||getElement("#progress-container","Progress Container",!1)||getElement(".progress-container","Progress Container (class)",!1),tokenStatus:()=>getElement("#token-status-indicator","Token Status"),connectionStatus:()=>getElement("#connection-status","Connection Status"),currentTokenStatus:()=>getElement("#current-token-status","Current Token Status"),homeTokenStatus:()=>getElement("#home-token-status","Home Token Status"),fileInfo:()=>getElement("#file-info","File Info"),previewContainer:()=>getElement("#dashboard-preview","Preview Container"),fileInputLabel:()=>getElement('label[for="csv-file"]',"File Input Label"),deleteFileInput:()=>getElement("#delete-csv-file","Delete File Input"),deleteFileInputLabel:()=>getElement('label[for="delete-csv-file"]',"Delete File Input Label"),modifyFileInput:()=>getElement("#modify-csv-file","Modify File Input"),modifyFileInputLabel:()=>getElement('label[for="modify-csv-file"]',"Modify File Input Label"),importPopulationSelect:()=>getElement("#import-population-select","Import Population Select"),deletePopulationSelect:()=>getElement("#delete-population-select","Delete Population Select"),modifyPopulationSelect:()=>getElement("#modify-population-select","Modify Population Select"),dashboardPopulationSelect:()=>getElement("#dashboard-population-select","Dashboard Population Select"),startImportBtn:()=>getElement("#start-import","Start Import Button"),startImportBtnBottom:()=>getElement("#bottom-start-import","Bottom Start Import Button"),settingsSaveStatus:()=>getElement("#settings-save-status","Settings Save Status"),importStatus:()=>getElement("#import-status","Import Status"),useDefaultPopulationCheckbox:()=>getElement("#use-default-population","Use Default Population Checkbox"),useCsvPopulationIdCheckbox:()=>getElement("#use-csv-population-id","Use CSV Population ID Checkbox"),getTokenBtn:()=>getElement("#get-token-quick","Get Token Button"),populationIdField:()=>getElement("#population-id","Population ID Field")};"undefined"!=typeof window&&(window.getElement=getElement,window.elementCache=n,window.ElementRegistry=i,console.log("✅ Element registry global exports initialized"))},{}],42:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ErrorTypes=s.ErrorSeverity=s.ErrorMetadata=s.ErrorMessages=s.ErrorCodes=void 0,s.createError=function createError(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=new Error(t||l[e]||"An unknown error occurred");n.type=e,n.code=s.code||a[e]||0,n.details=s,n.timestamp=(new Date).toISOString();const i=c[e];i&&(n.severity=i.severity,n.isRecoverable=i.isRecoverable,n.userMessage=i.userMessage);return n},s.getDefaultMessage=function getDefaultMessage(e){return l[e]||"An unknown error occurred"},s.getDefaultSeverity=function getDefaultSeverity(e){const t=c[e];return t?t.severity:i.ERROR},s.isErrorType=function isErrorType(e,t){return e&&e.type===t};const n=s.ErrorTypes=Object.freeze({VALIDATION:"VALIDATION",AUTHENTICATION:"AUTHENTICATION",AUTHORIZATION:"AUTHORIZATION",NETWORK:"NETWORK",TIMEOUT:"TIMEOUT",SERVER:"SERVER",SERVICE_UNAVAILABLE:"SERVICE_UNAVAILABLE",NOT_FOUND:"NOT_FOUND",CONFLICT:"CONFLICT",CONFIGURATION:"CONFIGURATION",INTEGRATION:"INTEGRATION",UNKNOWN:"UNKNOWN"}),i=s.ErrorSeverity=Object.freeze({FATAL:"FATAL",ERROR:"ERROR",WARNING:"WARNING",INFO:"INFO",DEBUG:"DEBUG"}),a=s.ErrorCodes=Object.freeze({INVALID_CREDENTIALS:1001,SESSION_EXPIRED:1002,INVALID_TOKEN:1003,INVALID_INPUT:2001,MISSING_REQUIRED_FIELD:2002,INVALID_FORMAT:2003,PERMISSION_DENIED:3001,INSUFFICIENT_PERMISSIONS:3002,NETWORK_ERROR:4001,REQUEST_TIMEOUT:4002,INTERNAL_SERVER_ERROR:5001,SERVICE_UNAVAILABLE:5002,DUPLICATE_ENTRY:6001,RESOURCE_NOT_FOUND:6002,EXTERNAL_SERVICE_ERROR:7001,API_RATE_LIMIT_EXCEEDED:7002}),l=s.ErrorMessages=Object.freeze({[n.VALIDATION]:"Validation failed",[n.AUTHENTICATION]:"Authentication required",[n.AUTHORIZATION]:"Permission denied",[n.NETWORK]:"Network error occurred",[n.TIMEOUT]:"Request timed out",[n.SERVER]:"Internal server error",[n.SERVICE_UNAVAILABLE]:"Service unavailable",[n.NOT_FOUND]:"Resource not found",[n.CONFLICT]:"Resource conflict",[n.CONFIGURATION]:"Configuration error",[n.INTEGRATION]:"Integration error",[n.UNKNOWN]:"An unexpected error occurred"}),c=s.ErrorMetadata=Object.freeze({[n.VALIDATION]:{severity:i.WARNING,isRecoverable:!0,userMessage:"Please check your input and try again."},[n.AUTHENTICATION]:{severity:i.ERROR,isRecoverable:!0,userMessage:"Your session has expired. Please log in again."},[n.AUTHORIZATION]:{severity:i.ERROR,isRecoverable:!1,userMessage:"You do not have permission to perform this action."},[n.NETWORK]:{severity:i.WARNING,isRecoverable:!0,userMessage:"Unable to connect to the server. Please check your internet connection."},[n.SERVER]:{severity:i.ERROR,isRecoverable:!1,userMessage:"An unexpected server error occurred. Please try again later."},[n.UNKNOWN]:{severity:i.ERROR,isRecoverable:!1,userMessage:"An unexpected error occurred. Please try again."}})},{}],43:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.eventBus=s.default=s.EventBus=void 0;class EventBus{constructor(){this.events={}}on(e,t){(this.events[e]=this.events[e]||[]).push(t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(e=>e!==t))}emit(e,t){(this.events[e]||[]).forEach(e=>e(t))}}s.EventBus=EventBus;const n=s.eventBus=new EventBus;s.default=n;"undefined"!=typeof window&&(window.EventBus=EventBus,window.eventBus=n)},{}],44:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.FileLogger=void 0;s.FileLogger=class FileLogger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"client.log";this.filename=e,this.fileHandle=null,this.writableStream=null,this.initialized=!1,this.logQueue=[],this.initializationPromise=null}async _initialize(){return!!this.initialized||(this.initializationPromise||(this.initializationPromise=(async()=>{try{if(!window.isSecureContext||!window.showSaveFilePicker)throw new Error("File System Access API not available in this context");if(!window.__fileLoggerUserGesture){window.addEventListener("online",()=>this.handleOnline()),window.addEventListener("offline",()=>this.handleOffline());const handleUserGesture=()=>{window.__fileLoggerUserGesture=!0,window.removeEventListener("click",handleUserGesture),window.removeEventListener("keydown",handleUserGesture),this.fileLogger&&!this.fileLogger._initialized&&null===this.fileLogger._logger&&this.fileLogger._ensureInitialized().catch(console.warn)};throw window.addEventListener("click",handleUserGesture,{once:!0,passive:!0}),window.addEventListener("keydown",handleUserGesture,{once:!0,passive:!0}),new Error("Waiting for user gesture to initialize file logger")}try{return this.fileHandle=await window.showSaveFilePicker({suggestedName:this.filename,types:[{description:"Log File",accept:{"text/plain":[".log"]}}],excludeAcceptAllOption:!0}),this.writableStream=await this.fileHandle.createWritable({keepExistingData:!0}),this.initialized=!0,await this._processQueue(),!0}catch(e){return console.warn("File System Access API not available:",e),this.initialized=!1,!1}}catch(e){return console.warn("File logger initialization deferred:",e.message),this.initialized=!1,!1}})()),this.initializationPromise)}async _processQueue(){if(0===this.logQueue.length)return;const e=[...this.logQueue];this.logQueue=[];for(const{level:t,message:s,timestamp:n}of e)await this._writeLog(t,s,n)}async _writeLog(e,t,s){this.initialized||await this._initialize();const n=`[${s}] [${e.toUpperCase()}] ${t}\n`;if(this.writableStream)try{await this.writableStream.write(n)}catch(e){console.error("Error writing to log file:",e),this.initialized=!1,await this._initialize(),await this.writableStream.write(n)}else console[e](`[FileLogger] ${n}`)}async log(e,t){const s=(new Date).toISOString();this.initialized?await this._writeLog(e,t,s):(this.logQueue.push({level:e,message:t,timestamp:s}),await this._initialize())}info(e){return this.log("info",e)}warn(e){return this.log("warn",e)}error(e){return this.log("error",e)}debug(e){return this.log("debug",e)}async close(){if(this.writableStream)try{await this.writableStream.close()}catch(e){console.error("Error closing log file:",e)}finally{this.initialized=!1,this.writableStream=null,this.fileHandle=null}}}},{}],45:[function(e,t,s){(function(t){(function(){"use strict";var n=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.Logger=void 0;var i=e("./winston-logger.js"),a=n(e("./message-formatter.js"));e("./ui-manager.js");function _interopRequireWildcard(e,t){if("function"==typeof WeakMap)var s=new WeakMap,n=new WeakMap;return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var i,a,l={__proto__:null,default:e};if(null===e||"object"!=typeof e&&"function"!=typeof e)return l;if(i=t?n:s){if(i.has(e))return i.get(e);i.set(e,l)}for(const t in e)"default"!==t&&{}.hasOwnProperty.call(e,t)&&((a=(i=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,t))&&(a.get||a.set)?i(l,t,a):l[t]=e[t]);return l})(e,t)}const l=window.app&&window.app.uiManager;s.Logger=class Logger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if("string"==typeof e)try{const t=document.getElementById(e)||document.querySelector(e);this.logElement=t,t||console.debug(`[LOGGER] DOM element not found for '${e}', using UI-less logging`)}catch(t){console.debug(`[LOGGER] Error finding DOM element for '${e}':`,t.message),this.logElement=null}else e&&e.nodeType===Node.ELEMENT_NODE?this.logElement=e:e&&"object"==typeof e&&void 0!==e.length?(this.logElement=e.length>0?e[0]:null,e.length>1&&console.debug("[LOGGER] Multiple elements found, using first element")):this.logElement=null;this.logs=[],this.validCount=0,this.errorCount=0,this.initialized=!1,this.serverLoggingEnabled=!0,this.isLoadingLogs=!1,this.offlineLogs=[],this.winstonLogger=(0,i.createWinstonLogger)({service:"pingone-import-frontend",environment:t.env.NODE_ENV||"development",enableServerLogging:!0,enableConsoleLogging:!0}),this.initialize()}initialize(){try{this.winstonLogger.info("Logger initialized successfully"),this.initialized=!0}catch(e){console.error("Failed to initialize logger:",e)}}disableServerLogging(){this.serverLoggingEnabled=!1,this.winstonLogger.setServerLogging(!1),this.winstonLogger.debug("Server logging disabled")}enableServerLogging(){this.serverLoggingEnabled=!0,this.winstonLogger.setServerLogging(!0),this.winstonLogger.debug("Server logging enabled")}setLoadingLogs(e){this.isLoadingLogs=e,this.winstonLogger.debug(`Loading logs flag set to: ${e}`)}_createSafeFileLogger(){return{_initialized:!1,_logger:null,_queue:[],_initializing:!1,async init(){if(!this._initialized&&!this._initializing){this._initializing=!0;try{const{FileLogger:t}=await Promise.resolve().then(()=>_interopRequireWildcard(e("./file-logger.js")));this._logger=new t("client.log"),this._initialized=!0,this._processQueue()}catch(e){console.warn("Failed to initialize file logger, falling back to console:",e.message),this._logger={log:(e,t,s)=>{console[e]||console.log(`[${e.toUpperCase()}] ${t}`,s)}},this._initialized=!0,this._processQueue()}finally{this._initializing=!1}}},_processQueue(){for(;this._queue.length>0;){const{level:e,message:t,data:s}=this._queue.shift();this._logger&&"function"==typeof this._logger.log&&this._logger.log(e,t,s)}},log(e,t,s){this._initialized&&this._logger?this._logger.log(e,t,s):(this._queue.push({level:e,message:t,data:s}),this._initializing||this.init())}}}_parseLogArgs(e){let t="Log message",s=null,n=null;return e.length>0&&("string"==typeof e[0]?(t=e[0],e.length>1&&"object"==typeof e[1]&&(s=e[1],e.length>2&&"object"==typeof e[2]&&(n=e[2]))):"object"==typeof e[0]&&(s=e[0],t="Log data",e.length>1&&"object"==typeof e[1]&&(n=e[1]))),[t,s,n]}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{if("string"==typeof e&&"string"==typeof t)this._logToWinston(e,t,s);else{const[t,s,n]=this._parseLogArgs(arguments);this._logToWinston(e||"info",t,{...s,...n})}this._updateLogUI({level:e,message:t,data:s,timestamp:new Date})}catch(e){console.error("Error in logger.log:",e)}}_logToWinston(e,t){const s={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},component:"frontend-logger",timestamp:(new Date).toISOString()};this.winstonLogger.log(e,t,s)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t),l&&l.showStatusBar(e,"error",{autoDismiss:!1}),this.errorCount++,this.updateSummary()}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}success(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,{...t,type:"success"}),this.validCount++,this.updateSummary()}errorWithStack(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.winstonLogger.errorWithStack(e,t,s),this.errorCount++,this.updateSummary()}_updateLogUI(e){if(this.logElement)try{const t=document.createElement("div");t.className=`log-entry ${e.level}`;const s=document.createElement("span");s.className="log-timestamp",s.textContent=new Date(e.timestamp).toLocaleTimeString(),t.appendChild(s);const n=document.createElement("span");n.className="log-level",n.textContent=e.level.toUpperCase(),t.appendChild(n);const i=document.createElement("span");i.className="log-message";let l=e.message;if(e.data&&e.data.type)switch(e.data.type){case"progress":l=a.default.formatProgressMessage(e.data.operation||"import",e.data.current||0,e.data.total||0,e.message,e.data.counts||{});break;case"error":l=a.default.formatErrorMessage(e.data.operation||"import",e.message,e.data);break;case"completion":l=a.default.formatCompletionMessage(e.data.operation||"import",e.data);break;default:l=e.message}if(i.textContent=l,t.appendChild(i),e.data&&Object.keys(e.data).length>0){const s=document.createElement("div");s.className="log-details";const n=document.createElement("h4");n.textContent="Details",s.appendChild(n);const i=document.createElement("pre");i.className="log-detail-json",i.textContent=JSON.stringify(e.data,null,2),s.appendChild(i),t.appendChild(s)}this.logElement.firstChild?this.logElement.insertBefore(t,this.logElement.firstChild):this.logElement.appendChild(t),this.logElement.scrollTop=0;const c=100;for(;this.logElement.children.length>c;)this.logElement.removeChild(this.logElement.lastChild)}catch(e){console.error("Error updating log UI:",e)}}async _sendToServer(e){if(this.serverLoggingEnabled&&!this.isLoadingLogs)try{await fetch("/api/logs/ui",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e.level,message:e.message,data:e.data})})}catch(t){this.winstonLogger.warn("Failed to send log to server",{error:t.message}),this.offlineLogs.push(e)}}renderLogs(){this.logElement&&(this.logElement.innerHTML="",this.logs.forEach(e=>this._updateLogUI(e)),this.logElement.scrollTop=this.logElement.scrollHeight)}clearLogs(){this.logs=[],this.logElement&&(this.logElement.innerHTML=""),this.winstonLogger.info("Logs cleared")}getLogs(){return[...this.logs]}updateSummary(){this.winstonLogger.debug("Summary updated",{validCount:this.validCount,errorCount:this.errorCount})}clearSummary(){this.validCount=0,this.errorCount=0,this.winstonLogger.debug("Summary cleared")}startTimer(e){this.timers||(this.timers=new Map),this.timers.set(e,Date.now()),this.debug(`Timer started: ${e}`)}endTimer(e){if(!this.timers||!this.timers.has(e))return this.warn(`Timer '${e}' not found`),0;const t=this.timers.get(e),s=Date.now()-t;return this.timers.delete(e),this.info(`Timer completed: ${e}`,{duration:`${s}ms`}),s}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};console.log("🔥 [LOGGER DEBUG] Creating child logger with options:",e);const t=Object.create(this);t.context={...this.context,...e};return["info","warn","error","debug"].forEach(e=>{const s=this[e].bind(this);t[e]=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i={...t.context,...n};return s(e,i)}}),console.log("🔥 [LOGGER DEBUG] Child logger created successfully"),t}}}).call(this)}).call(this,e("_process"))},{"./file-logger.js":44,"./message-formatter.js":46,"./ui-manager.js":50,"./winston-logger.js":52,"@babel/runtime/helpers/interopRequireDefault":1,_process:25}],46:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.MessageFormatter=void 0;var n=e("./winston-logger.js");class MessageFormatter{constructor(){this.logger=(0,n.createWinstonLogger)({service:"pingone-message-formatter",environment:t.env.NODE_ENV||"development"}),this.formattingOptions={showTimestamps:!0,showEventMarkers:!0,showSeparators:!0,maxMessageLength:200,separatorChar:"*",separatorLength:50},this.eventTypes={import:{start:"IMPORT STARTED",end:"IMPORT COMPLETED",error:"IMPORT ERROR",color:"#3498db"},export:{start:"EXPORT STARTED",end:"EXPORT COMPLETED",error:"EXPORT ERROR",color:"#27ae60"},modify:{start:"MODIFY STARTED",end:"MODIFY COMPLETED",error:"MODIFY ERROR",color:"#f39c12"},delete:{start:"DELETE STARTED",end:"DELETE COMPLETED",error:"DELETE ERROR",color:"#e74c3c"},validation:{start:"VALIDATION STARTED",end:"VALIDATION COMPLETED",error:"VALIDATION ERROR",color:"#9b59b6"},connection:{start:"CONNECTION ESTABLISHED",end:"CONNECTION CLOSED",error:"CONNECTION ERROR",color:"#1abc9c"}}}formatMessageBlock(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{const i=this.eventTypes[e]||this.eventTypes.import,a=this.formatTimestamp(new Date),l=this.createSeparator();let c="";if(this.formattingOptions.showSeparators&&(c+=l+"\n"),this.formattingOptions.showEventMarkers){c+=`${this.getEventMarker(i,t)}\n`}return this.formattingOptions.showTimestamps&&(c+=`[${a}] `),c+=s+"\n",n&&Object.keys(n).length>0&&(c+=this.formatDetails(n)),this.formattingOptions.showSeparators&&(c+=l+"\n"),this.logger.debug("Message block formatted",{eventType:e,eventStage:t,messageLength:s.length}),c}catch(e){return this.logger.error("Error formatting message block",{error:e.message}),s}}formatProgressMessage(e,t,s,n){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};try{const e=this.formatTimestamp(new Date),a=s>0?Math.round(t/s*100):0;let l="";return this.formattingOptions.showTimestamps&&(l+=`[${e}] `),l+=`PROGRESS: ${t}/${s} (${a}%)`,n&&(l+=` - ${n}`),i&&Object.keys(i).length>0&&(l+="\n"+this.formatProgressStats(i)),l}catch(e){return this.logger.error("Error formatting progress message",{error:e.message}),n||`Progress: ${t}/${s}`}}formatErrorMessage(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const n=this.eventTypes[e]||this.eventTypes.import,i=this.formatTimestamp(new Date),a=this.createSeparator();let l="";return this.formattingOptions.showSeparators&&(l+=a+"\n"),l+=`${n.error}\n`,this.formattingOptions.showTimestamps&&(l+=`[${i}] `),l+=`ERROR: ${t}\n`,s&&Object.keys(s).length>0&&(l+=this.formatErrorDetails(s)),this.formattingOptions.showSeparators&&(l+=a+"\n"),l}catch(e){return this.logger.error("Error formatting error message",{error:e.message}),`ERROR: ${t}`}}formatCompletionMessage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const s=this.eventTypes[e]||this.eventTypes.import,n=this.formatTimestamp(new Date),i=this.createSeparator();let a="";return this.formattingOptions.showSeparators&&(a+=i+"\n"),a+=`${s.end}\n`,this.formattingOptions.showTimestamps&&(a+=`[${n}] `),a+="Operation completed successfully\n",t&&Object.keys(t).length>0&&(a+=this.formatResults(t)),this.formattingOptions.showSeparators&&(a+=i+"\n"),a}catch(e){return this.logger.error("Error formatting completion message",{error:e.message}),"Operation completed successfully"}}formatSSEEvent(e){try{const{type:t,message:s,current:n,total:i,counts:a,error:l}=e,c=this.formatTimestamp(new Date);let g="";switch(this.formattingOptions.showTimestamps&&(g+=`[${c}] `),t){case"progress":g+=this.formatProgressMessage("import",n,i,s,a);break;case"completion":g+=this.formatCompletionMessage("import",e);break;case"error":g+=this.formatErrorMessage("import",s,e);break;default:g+=`SSE EVENT [${t.toUpperCase()}]: ${s||"No message"}`}return g}catch(t){return this.logger.error("Error formatting SSE event",{error:t.message}),e.message||"SSE event received"}}createSeparator(){const e=this.formattingOptions.separatorChar,t=this.formattingOptions.separatorLength;return e.repeat(t)}getEventMarker(e,t){switch(t){case"start":default:return e.start;case"end":return e.end;case"error":return e.error}}formatTimestamp(e){return e.toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"})}formatDetails(e){try{let t="";for(const[s,n]of Object.entries(e))null!=n&&(t+=`  ${s}: ${n}\n`);return t}catch(e){return this.logger.error("Error formatting details",{error:e.message}),""}}formatProgressStats(e){try{let t="  Statistics:\n";const s={processed:"Processed",success:"Success",failed:"Failed",skipped:"Skipped",duplicates:"Duplicates"};for(const[n,i]of Object.entries(e))null!=i&&s[n]&&(t+=`    ${s[n]}: ${i}\n`);return t}catch(e){return this.logger.error("Error formatting progress stats",{error:e.message}),""}}formatErrorDetails(e){try{let t="  Error Details:\n";for(const[s,n]of Object.entries(e))null!=n&&(t+=`    ${s}: ${n}\n`);return t}catch(e){return this.logger.error("Error formatting error details",{error:e.message}),""}}formatResults(e){try{let t="  Results:\n";const s={total:"Total Records",success:"Successful",failed:"Failed",skipped:"Skipped",duplicates:"Duplicates",duration:"Duration"};for(const[n,i]of Object.entries(e))if(null!=i&&s[n]){let e=i;"duration"===n&&"number"==typeof i&&(e=this.formatDuration(i)),t+=`    ${s[n]}: ${e}\n`}return t}catch(e){return this.logger.error("Error formatting results",{error:e.message}),""}}formatDuration(e){try{const t=Math.floor(e/1e3),s=Math.floor(t/60),n=Math.floor(s/60);return n>0?`${n}h ${s%60}m ${t%60}s`:s>0?`${s}m ${t%60}s`:`${t}s`}catch(t){return this.logger.error("Error formatting duration",{error:t.message}),`${e}ms`}}updateFormattingOptions(e){try{this.formattingOptions={...this.formattingOptions,...e},this.logger.debug("Formatting options updated",{options:e})}catch(e){this.logger.error("Error updating formatting options",{error:e.message})}}getFormattingOptions(){return{...this.formattingOptions}}}s.MessageFormatter=MessageFormatter;s.default=new MessageFormatter}).call(this)}).call(this,e("_process"))},{"./winston-logger.js":52,_process:25}],47:[function(e,t,s){(function(t){(function(){"use strict";var n=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.ProgressManager=void 0;var i=e("./winston-logger.js");e("./element-registry.js"),e("./session-manager.js"),n(e("./message-formatter.js"));const a="production"!==t.env.NODE_ENV;class ProgressManager{constructor(){this.logger=(0,i.createWinstonLogger)("pingone-progress"),this.isEnabled=!0,this.currentOperation=null,this.currentSessionId=null,this.isActive=!1,this.startTime=null,this.timingInterval=null,this.progressCallback=null,this.completeCallback=null,this.cancelCallback=null,this.duplicateHandlingMode="skip",this.socket=null,this.websocket=null,this.connectionType=null,this.connectionRetries=0,this.maxRetries=3,this.stats={processed:0,success:0,failed:0,skipped:0,total:0},this.logger.debug("ProgressManager initialized")}initialize(){try{this.setupElements(),this.setupEventListeners(),this.logger.info("Enhanced progress manager initialized successfully")}catch(e){this.logger.error("Failed to initialize progress manager",{error:e.message})}}setupElements(){try{this.progressContainer=document.getElementById("progress-container"),this.progressContainer||(this.logger.info("Main progress container not found - will use operation-specific containers"),this.isEnabled=!0),this.logger.info("Progress container found",{id:this.progressContainer.id,className:this.progressContainer.className,display:this.progressContainer.style.display,visibility:this.progressContainer.style.visibility,offsetParent:null!==this.progressContainer.offsetParent}),this.progressContainer.innerHTML='\n                <div class="progress-overlay">\n                    <div class="progress-modal">\n                        <div class="progress-header">\n                            <div class="operation-info">\n                                <h3 class="operation-title">\n                                    <i class="fas fa-cog fa-spin"></i>\n                                    <span class="title-text">Operation in Progress</span>\n                                </h3>\n                                <div class="operation-subtitle">Processing your request...</div>\n                            </div>\n                            <button class="cancel-operation" type="button" aria-label="Cancel operation">\n                                <i class="fas fa-times"></i>\n                                <span>Cancel</span>\n                            </button>\n                        </div>\n                        \n                        <div class="progress-content">\n                            <div class="progress-steps">\n                                <div class="step active" data-step="init">\n                                    <div class="step-icon">\n                                        <i class="fas fa-play"></i>\n                                    </div>\n                                    <div class="step-label">Initializing</div>\n                                </div>\n                                <div class="step" data-step="validate">\n                                    <div class="step-icon">\n                                        <i class="fas fa-check"></i>\n                                    </div>\n                                    <div class="step-label">Validating</div>\n                                </div>\n                                <div class="step" data-step="process">\n                                    <div class="step-icon">\n                                        <i class="fas fa-cogs"></i>\n                                    </div>\n                                    <div class="step-label">Processing</div>\n                                </div>\n                                <div class="step" data-step="complete">\n                                    <div class="step-icon">\n                                        <i class="fas fa-check-circle"></i>\n                                    </div>\n                                    <div class="step-label">Complete</div>\n                                </div>\n                            </div>\n                            \n                            <div class="progress-main">\n                                <div class="progress-bar-container">\n                                    <div class="progress-bar">\n                                        <div class="progress-bar-fill"></div>\n                                        <div class="progress-bar-glow"></div>\n                                    </div>\n                                    <div class="progress-percentage">0%</div>\n                                </div>\n                                \n                                <div class="progress-text">Preparing operation...</div>\n                                \n                                <div class="progress-stats">\n                                    <div class="stat-item">\n                                        <span class="stat-label">Processed:</span>\n                                        <span class="stat-value processed">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Success:</span>\n                                        <span class="stat-value success">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Failed:</span>\n                                        <span class="stat-value failed">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Skipped:</span>\n                                        <span class="stat-value skipped">0</span>\n                                    </div>\n                                </div>\n                                \n                                <div class="progress-timing">\n                                    <div class="time-elapsed">\n                                        <i class="fas fa-clock"></i>\n                                        <span>Time: <span class="elapsed-value">00:00</span></span>\n                                    </div>\n                                    <div class="time-remaining">\n                                        <i class="fas fa-hourglass-half"></i>\n                                        <span>ETA: <span class="eta-value">Calculating...</span></span>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div class="progress-details">\n                                <div class="details-header">\n                                    <h4><i class="fas fa-info-circle"></i> Operation Details</h4>\n                                </div>\n                                <div class="details-content">\n                                    <div class="detail-item">\n                                        <span class="detail-label">Operation Type:</span>\n                                        <span class="detail-value operation-type">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Session ID:</span>\n                                        <span class="detail-value session-id">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Population:</span>\n                                        <span class="detail-value population-info">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Connection:</span>\n                                        <span class="detail-value connection-type">-</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ',this.logger.debug("Progress elements setup completed")}catch(e){this.logger.error("Error setting up progress elements",{error:e.message}),this.isEnabled=!1}}setupEventListeners(){if(this.isEnabled)try{const e=this.progressContainer.querySelector(".cancel-operation");e&&e.addEventListener("click",()=>this.cancelOperation());const t=this.progressContainer.querySelector(".close-progress-btn");t&&t.addEventListener("click",()=>this.hideProgress()),this.logger.debug("Progress event listeners setup completed")}catch(e){this.logger.error("Error setting up progress event listeners",{error:e.message})}else this.logger.warn("Progress manager not enabled - skipping event listener setup")}startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.isEnabled?(this.currentOperation=e,this.isActive=!0,this.startTime=Date.now(),this.resetOperationStats(),this.selectProgressContainer(e),this.progressContainer||this.createFallbackProgressContainer(e),this.progressContainer?(this.initializeProgressContainer(),this.updateOperationTitle(e),this.updateOperationDetails(t),this.showProgress(),this.startTimingUpdates(),this.logger.info("Operation started",{operationType:e,options:t})):this.logger.error("No progress container available for operation",{operationType:e})):this.logger.warn("Progress manager not enabled - cannot start operation")}selectProgressContainer(e){if(this.progressContainer&&this.progressContainer.parentNode)return;const t={import:"progress-container",delete:"progress-container-delete",modify:"progress-container-modify",export:"progress-container-export"}[e]||"progress-container";this.progressContainer=document.getElementById(t),this.progressContainer||(this.progressContainer=document.getElementById("progress-container")),this.progressContainer?this.logger.info("Selected progress container",{id:this.progressContainer.id,operationType:e}):this.logger.warn("No progress container found for operation",{operationType:e})}createFallbackProgressContainer(e){try{const t=document.createElement("div");t.id="progress-container-fallback",t.className="progress-container visible",t.style.cssText="\n                display: block !important;\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0,0,0,0.7);\n                z-index: 10000;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            ",document.body.appendChild(t),this.progressContainer=t,this.logger.info("Created fallback progress container",{operationType:e})}catch(e){this.logger.error("Failed to create fallback progress container",{error:e.message})}}initializeProgressContainer(){this.progressContainer&&!this.progressContainer.querySelector(".progress-overlay")&&(this.setupElements(),this.setupEventListeners())}initializeRealTimeConnection(e){e?(this.currentSessionId=e,this.connectionRetries=0,this.trySocketIOConnection(e)):this.logger.warn("No session ID provided for real-time connection")}trySocketIOConnection(e){try{if("undefined"!=typeof io)this.logger.info("Using global Socket.IO client"),this.connectWithSocketIO(io,e);else{this.logger.info("Loading Socket.IO client dynamically");const t=document.createElement("script");t.src="/socket.io/socket.io.js",t.async=!0,t.onload=()=>{this.logger.info("Socket.IO client loaded successfully"),"undefined"!=typeof io?this.connectWithSocketIO(io,e):(this.logger.warn("Socket.IO loaded but io is undefined, trying WebSocket"),this.tryWebSocketConnection(e))},t.onerror=t=>{this.logger.warn("Failed to load Socket.IO client script",{error:t.message}),this.tryWebSocketConnection(e)},document.head.appendChild(t)}}catch(t){this.logger.warn("Socket.IO connection setup failed, trying WebSocket",{error:t.message}),this.tryWebSocketConnection(e)}}reconnectSocketIO(e){this.isReconnecting||(this.isReconnecting=!0,this.logger.info("Attempting to reconnect Socket.IO",{sessionId:e}),console.log("🔄 [PROGRESS] Attempting to reconnect Socket.IO"),this.socket&&(this.socket.close(),this.socket=null),setTimeout(()=>{this.trySocketIOConnection(e),this.isReconnecting=!1},1e3))}connectWithSocketIO(e,t){try{this.socket=e("/",{transports:["websocket","polling"],timeout:5e3,forceNew:!0}),this.socket.on("connect",()=>{this.connectionType="socketio",this.updateConnectionType("Socket.IO"),this.logger.info("Socket.IO connected",{sessionId:t,socketId:this.socket.id}),console.log(`🔌 [PROGRESS] Socket.IO connected (ID: ${this.socket.id})`),this.socket.emit("registerSession",t),this.socket.emit("join-session",{sessionId:t})}),this.socket.on("progress",e=>{console.log("🔄 [PROGRESS] Received progress event:",e),this.handleProgressEvent(e)}),this.socket.on("completion",e=>{console.log("✅ [PROGRESS] Received completion event:",e),this.handleCompletionEvent(e)}),this.socket.on("complete",e=>{console.log("✅ [PROGRESS] Received complete event:",e),this.handleCompletionEvent(e)}),this.socket.on("error",e=>{console.log("❌ [PROGRESS] Received error event:",e),this.handleErrorEvent(e)}),this.socket.on("disconnect",()=>{console.log("🔌 [PROGRESS] Socket.IO disconnected"),this.logger.warn("Socket.IO disconnected"),this.handleConnectionFailure()}),this.socket.on("connect_error",e=>{console.log("❌ [PROGRESS] Socket.IO connection error:",e.message),this.logger.warn("Socket.IO connection error",{error:e.message}),this.handleConnectionFailure()})}catch(e){this.logger.warn("Socket.IO connection failed, trying WebSocket",{error:e.message}),this.tryWebSocketConnection(t)}}tryWebSocketConnection(e){try{const t=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.host}/ws`;this.websocket=new WebSocket(t),this.websocket.onopen=()=>{this.connectionType="websocket",this.updateConnectionType("WebSocket"),this.logger.info("WebSocket connected",{sessionId:e}),this.websocket.send(JSON.stringify({type:"join-session",sessionId:e}))},this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);switch(t.type){case"progress":this.handleProgressEvent(t);break;case"complete":this.handleCompletionEvent(t);break;case"error":this.handleErrorEvent(t)}}catch(e){this.logger.error("Error parsing WebSocket message",{error:e.message})}},this.websocket.onclose=e=>{this.logger.warn("WebSocket closed",{code:e.code,reason:e.reason}),this.handleConnectionFailure()},this.websocket.onerror=e=>{this.logger.error("WebSocket error",{error:e.message}),this.handleConnectionFailure()}}catch(e){this.logger.error("WebSocket connection failed",{error:e.message}),this.handleConnectionFailure()}}handleConnectionFailure(){this.connectionRetries++,this.connectionRetries<=this.maxRetries?(this.logger.info("Retrying connection",{attempt:this.connectionRetries,maxRetries:this.maxRetries}),setTimeout(()=>{this.currentSessionId&&this.initializeRealTimeConnection(this.currentSessionId)},1e3*this.connectionRetries)):(this.logger.warn("Max connection retries reached, falling back to polling"),this.updateConnectionType("Polling (Fallback)"))}closeConnections(){this.socket&&(this.socket.disconnect(),this.socket=null),this.websocket&&(this.websocket.close(1e3,"Operation completed"),this.websocket=null),this.connectionType=null,this.logger.debug("Real-time connections closed")}updateSessionId(e){if(!e)return void this.logger.warn("No session ID provided for update");this.currentSessionId=e;const t=this.progressContainer.querySelector(".detail-value.session-id");t&&(t.textContent=e),this.logger.info("Session ID updated",{sessionId:e})}handleProgressEvent(e){if(!e)return void this.logger.warn("No progress data received");const{current:t,total:s,message:n,counts:i}=e;this.updateProgress(t,s,n,i),this.logger.debug("Progress event handled",{current:t,total:s,message:n})}handleCompletionEvent(e){this.completeOperation(e),this.logger.info("Completion event handled",{data:e})}handleErrorEvent(e){const{message:t,details:s}=e;this.handleOperationError(t,s),this.logger.error("Error event handled",{message:t,details:s})}updateProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this.isEnabled||!this.progressContainer)return void this.logger.warn("Progress manager not enabled or container not found");const i=this.progressContainer.querySelector(".progress-bar-fill");if(i){const s=t>0?Math.min(100,Math.round(e/t*100)):0;i.style.width=`${s}%`}const a=this.progressContainer.querySelector(".progress-percentage");if(a){const s=t>0?Math.min(100,Math.round(e/t*100)):0;a.textContent=`${s}%`}const l=this.progressContainer.querySelector(".progress-text");if(l&&s&&(l.textContent=s),t>0){const s=e/t*100;this.updateStepIndicatorBasedOnProgress(s)}n&&"object"==typeof n&&(this.stats={...this.stats,...n},this.updateStatsDisplay()),this.logger.debug("Progress updated",{current:e,total:t,message:s,details:n})}updateStatsDisplay(){this.progressContainer&&(Object.entries(this.stats).forEach(e=>{let[t,s]=e;const n=this.progressContainer.querySelector(`.stat-value.${t}`);n&&(n.textContent=s||0)}),this.logger.debug("Statistics display updated",{stats:this.stats}))}updateStepIndicatorBasedOnProgress(e){let t="init";e>=100?t="complete":e>=75?t="process":e>=25&&(t="validate"),this.updateStepIndicator(t)}updateStepIndicator(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelectorAll(".step");t.forEach(e=>{e.classList.remove("active","completed")});const s=this.progressContainer.querySelector(`[data-step="${e}"]`);s&&s.classList.add("active");const n=this.getStepOrder(e);t.forEach(e=>{const t=e.getAttribute("data-step");this.getStepOrder(t)<n&&e.classList.add("completed")}),this.logger.debug("Step indicator updated",{step:e})}getStepOrder(e){return{init:0,validate:1,process:2,complete:3}[e]||0}startTimingUpdates(){this.timingInterval&&clearInterval(this.timingInterval),this.timingInterval=setInterval(()=>{this.updateTiming()},1e3),this.logger.debug("Timing updates started")}updateTiming(){if(!this.startTime||!this.progressContainer)return;const e=Date.now()-this.startTime,t=this.progressContainer.querySelector(".elapsed-value");if(t&&(t.textContent=this.formatDuration(e)),this.stats.total>0&&this.stats.processed>0){const t=this.stats.processed/this.stats.total;if(t>0){const s=e/t-e,n=this.progressContainer.querySelector(".eta-value");n&&(n.textContent=this.formatDuration(s))}}this.logger.debug("Timing updated",{elapsed:e})}completeOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.isEnabled)return void this.logger.warn("Progress manager not enabled - cannot complete operation");this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections();const{processed:t,success:s,failed:n,skipped:i}=e;this.updateProgress(t||0,t||0,"Operation completed"),this.stats={...this.stats,...e},this.updateStatsDisplay(),this.updateStepIndicator("complete"),this.completeCallback&&"function"==typeof this.completeCallback&&this.completeCallback(e),this.isActive=!1,this.logger.info("Operation completed",{results:e})}handleOperationError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isEnabled)return void this.logger.warn("Progress manager not enabled - cannot handle error");this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections();const s=this.progressContainer.querySelector(".progress-text");s&&(s.textContent=`Error: ${e}`,s.classList.add("error")),this.isActive=!1,this.logger.error("Operation error",{message:e,details:t})}cancelOperation(){this.isEnabled&&this.isActive?(this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections(),this.cancelCallback&&"function"==typeof this.cancelCallback&&this.cancelCallback(),this.isActive=!1,this.hideProgress(),this.logger.info("Operation cancelled")):this.logger.warn("No active operation to cancel")}showProgress(){if(!this.isEnabled||!this.progressContainer)return void this.logger.warn("Progress manager not enabled or container not found");this.progressContainer.style.display="block",this.progressContainer.classList.add("visible"),this.progressContainer.setAttribute("style","display: block !important; visibility: visible !important;");const e=this.progressContainer.querySelector(".cancel-operation");e&&e.focus(),this.logger.debug("Progress display shown",{containerId:this.progressContainer.id}),console.log(`🔍 [PROGRESS] Showing progress container: ${this.progressContainer.id}`)}hideProgress(){this.progressContainer&&(this.logger.debug("Hiding progress display",{containerId:this.progressContainer.id}),console.log(`🔍 [PROGRESS] Hiding progress container: ${this.progressContainer.id}`),this.progressContainer.classList.remove("visible"),this.progressContainer.style.display="none",this.logger.debug("Progress display hidden"))}updateOperationTitle(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelector(".title-text");if(t){const s={import:"Import Users",export:"Export Users",delete:"Delete Users",modify:"Modify Users"};t.textContent=s[e]||"Operation in Progress"}this.logger.debug("Operation title updated",{operationType:e})}updateOperationDetails(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.progressContainer)return;const{populationName:t,populationId:s,totalUsers:n}=e,i=this.progressContainer.querySelector(".detail-value.operation-type");i&&(i.textContent=this.currentOperation||"Unknown");const a=this.progressContainer.querySelector(".detail-value.population-info");a&&(a.textContent=t||s||"Unknown"),n&&(this.stats.total=n,this.updateStatsDisplay()),this.logger.debug("Operation details updated",{options:e})}updateOperationStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(!this.progressContainer)return;const s=this.progressContainer.querySelector(".operation-subtitle");s&&(s.textContent=t||e),this.logger.debug("Operation status updated",{status:e,message:t})}updateConnectionType(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelector(".detail-value.connection-type");t&&(t.textContent=e),this.logger.debug("Connection type updated",{type:e})}resetOperationStats(){this.stats={processed:0,success:0,failed:0,skipped:0,total:0},this.updateStatsDisplay(),this.logger.debug("Operation statistics reset")}formatDuration(e){const t=Math.floor(e/1e3),s=Math.floor(t/60),n=Math.floor(s/60);return n>0?`${n}:${String(s%60).padStart(2,"0")}:${String(t%60).padStart(2,"0")}`:s>0?`${s}:${String(t%60).padStart(2,"0")}`:`${t}s`}setProgressCallback(e){this.progressCallback=e,this.logger.debug("Progress callback set")}setCompleteCallback(e){this.completeCallback=e,this.logger.debug("Completion callback set")}setCancelCallback(e){this.cancelCallback=e,this.logger.debug("Cancel callback set")}debugLog(e,t){a&&this.logger.debug(`[${e}] ${t}`)}destroy(){this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections(),this.progressCallback=null,this.completeCallback=null,this.cancelCallback=null,this.isActive=!1,this.currentOperation=null,this.currentSessionId=null,this.logger.info("Progress manager destroyed")}}s.ProgressManager=ProgressManager;const l=new ProgressManager;s.default=l}).call(this)}).call(this,e("_process"))},{"./element-registry.js":41,"./message-formatter.js":46,"./session-manager.js":48,"./winston-logger.js":52,"@babel/runtime/helpers/interopRequireDefault":1,_process:25}],48:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.sessionManager=s.default=void 0;var n=e("./winston-logger.js");const i=s.sessionManager=new class SessionManager{constructor(){this.logger=(0,n.createWinstonLogger)({service:"pingone-import-session",environment:t.env.NODE_ENV||"development"}),this.activeSessions=new Map,this.sessionCounter=0}generateSessionId(){try{const e=Date.now(),t=Math.random().toString(36).substring(2,15),s=`session_${e}_${t}_${++this.sessionCounter}`;return this.logger.debug("Session ID generated",{sessionId:s}),s}catch(e){return this.logger.error("Error generating session ID",{error:e.message}),`session_${Date.now()}_${Math.random().toString(36).substring(2,8)}`}}validateSessionId(e){try{if(!e||"string"!=typeof e)return this.logger.warn("Session ID validation failed: null/undefined/non-string",{sessionId:e,type:typeof e}),!1;if(""===e.trim())return this.logger.warn("Session ID validation failed: empty string"),!1;if(e.length<8)return this.logger.warn("Session ID validation failed: too short",{length:e.length}),!1;return/^[a-zA-Z0-9_-]+$/.test(e)?(this.logger.debug("Session ID validation passed",{sessionId:e}),!0):(this.logger.warn("Session ID validation failed: invalid characters",{sessionId:e}),!1)}catch(t){return this.logger.error("Error validating session ID",{error:t.message,sessionId:e}),!1}}registerSession(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{if(!this.validateSessionId(e))return this.logger.error("Cannot register invalid session ID",{sessionId:e,operationType:t}),!1;const n={sessionId:e,operationType:t,createdAt:Date.now(),lastActivity:Date.now(),metadata:s};return this.activeSessions.set(e,n),this.logger.info("Session registered",{sessionId:e,operationType:t,metadata:s}),!0}catch(s){return this.logger.error("Error registering session",{error:s.message,sessionId:e,operationType:t}),!1}}updateSessionActivity(e){try{const t=this.activeSessions.get(e);t?(t.lastActivity=Date.now(),this.logger.debug("Session activity updated",{sessionId:e})):this.logger.warn("Session not found for activity update",{sessionId:e})}catch(t){this.logger.error("Error updating session activity",{error:t.message,sessionId:e})}}unregisterSession(e){try{const t=this.activeSessions.get(e);t?(this.activeSessions.delete(e),this.logger.info("Session unregistered",{sessionId:e,operationType:t.operationType})):this.logger.warn("Session not found for unregistration",{sessionId:e})}catch(t){this.logger.error("Error unregistering session",{error:t.message,sessionId:e})}}getSession(e){try{return this.activeSessions.get(e)||null}catch(t){return this.logger.error("Error getting session",{error:t.message,sessionId:e}),null}}getActiveSessions(){try{return Array.from(this.activeSessions.values())}catch(e){return this.logger.error("Error getting active sessions",{error:e.message}),[]}}cleanupExpiredSessions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:36e5;try{const t=Date.now(),s=[];for(const[n,i]of this.activeSessions.entries())t-i.lastActivity>e&&s.push(n);s.forEach(e=>{this.unregisterSession(e)}),s.length>0&&this.logger.info("Cleaned up expired sessions",{count:s.length})}catch(e){this.logger.error("Error cleaning up expired sessions",{error:e.message})}}getSessionStats(){try{const e=this.getActiveSessions(),t={total:e.length,byOperation:{},oldest:null,newest:null};return e.forEach(e=>{t.byOperation[e.operationType]=(t.byOperation[e.operationType]||0)+1,(!t.oldest||e.createdAt<t.oldest.createdAt)&&(t.oldest=e),(!t.newest||e.createdAt>t.newest.createdAt)&&(t.newest=e)}),t}catch(e){return this.logger.error("Error getting session stats",{error:e.message}),{total:0,byOperation:{},oldest:null,newest:null}}}};s.default=i}).call(this)}).call(this,e("_process"))},{"./winston-logger.js":52,_process:25}],49:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SettingsManager=void 0;var n=e("./winston-logger.js"),i=e("./crypto-utils.js");s.SettingsManager=class SettingsManager{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.settings=this.getDefaultSettings(),this.storageKey="pingone-import-settings",this.encryptionKey=null,this.initializeLogger(e),this.encryptionInitialized=!1}async init(){try{await this.initializeEncryption(),this.encryptionInitialized=!0,this.logger.info("Settings manager initialized successfully")}catch(e){throw this.logger.error("Failed to initialize settings manager",{error:e.message}),e}}initializeLogger(e){e&&"function"==typeof e.child?this.logger=e.child({component:"settings-manager"}):this.logger=(0,n.createWinstonLogger)({service:"pingone-import-settings",environment:t.env.NODE_ENV||"development"})}createDefaultLogger(){var e=this;return{log:function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";return e.logger.log(s,`[Settings] ${t}`)},info:e=>this.logger.info(`[Settings] ${e}`),warn:e=>this.logger.warn(`[Settings] ${e}`),error:e=>this.logger.error(`[Settings] ${e}`),debug:e=>this.logger.debug(`[Settings] ${e}`)}}static getRegionInfo(e){if(!e)return{code:"NA",tld:"com",label:"North America (excluding Canada)"};const t={NA:{code:"NA",tld:"com",label:"North America (excluding Canada)"},CA:{code:"CA",tld:"ca",label:"Canada"},EU:{code:"EU",tld:"eu",label:"European Union"},AU:{code:"AU",tld:"com.au",label:"Australia"},SG:{code:"SG",tld:"sg",label:"Singapore"},AP:{code:"AP",tld:"asia",label:"Asia-Pacific"}};return t[e]||t.NA}getDefaultSettings(){return{environmentId:"",region:"NA",apiClientId:"",populationId:"",rateLimit:50,connectionStatus:"disconnected",connectionMessage:"Not connected",lastConnectionTest:null,autoSave:!0,lastUsedDirectory:"",theme:"light",pageSize:50,showNotifications:!0}}normalizeSettingsFields(e){if(!e||"object"!=typeof e)return e;const t={...e},s={"environment-id":"environmentId","api-client-id":"apiClientId","client-id":"apiClientId","api-secret":"apiSecret","client-secret":"apiSecret","population-id":"populationId","rate-limit":"rateLimit"};for(const[e,n]of Object.entries(s))e in t&&(t[n]=t[e],delete t[e],this.logger.debug(`Normalized field: ${e} -> ${n}`));return t.clientId&&!t.apiClientId&&(t.apiClientId=t.clientId,delete t.clientId,this.logger.debug("Normalized field: clientId -> apiClientId")),t.clientSecret&&!t.apiSecret&&(t.apiSecret=t.clientSecret,delete t.clientSecret,this.logger.debug("Normalized field: clientSecret -> apiSecret")),t}async loadSettings(){try{const e=localStorage.getItem(this.storageKey);if(!e)return this.logger.info("No stored settings found, using defaults"),this.settings;try{const t=JSON.parse(e),s=this.normalizeSettingsFields(t);return this.settings={...this.getDefaultSettings(),...s},this.logger.info("Settings loaded successfully (unencrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),this.settings}catch(t){if(!this.encryptionInitialized)return this.logger.warn("Encryption not initialized and JSON parsing failed, using defaults"),this.settings;try{const t=await i.CryptoUtils.decrypt(e,this.encryptionKey),s=JSON.parse(t),n=this.normalizeSettingsFields(s);return this.settings={...this.getDefaultSettings(),...n},this.logger.info("Settings loaded successfully (encrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),this.settings}catch(e){return this.logger.error("Failed to decrypt settings",{error:e.message}),this.settings}}}catch(e){return this.logger.error("Failed to load settings",{error:e.message}),this.settings}}async saveSettings(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{e&&(this.settings={...this.settings,...e});const t=JSON.stringify(this.settings);if(!this.encryptionInitialized)return this.logger.warn("Encryption not initialized, saving settings without encryption"),localStorage.setItem(this.storageKey,t),this.logger.info("Settings saved successfully (unencrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),void window.dispatchEvent(new CustomEvent("settings:save-success",{detail:{message:"Settings saved successfully (unencrypted)."}}));try{const e=await i.CryptoUtils.encrypt(t,this.encryptionKey);localStorage.setItem(this.storageKey,e),this.logger.info("Settings saved successfully (encrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),window.dispatchEvent(new CustomEvent("settings:save-success",{detail:{message:"Settings saved successfully."}}))}catch(e){this.logger.warn("Encryption failed, saving settings without encryption",{error:e.message}),localStorage.setItem(this.storageKey,t),this.logger.info("Settings saved successfully (unencrypted fallback)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),window.dispatchEvent(new CustomEvent("settings:save-success",{detail:{message:"Settings saved successfully (encryption failed, used fallback)."}}))}}catch(e){throw this.logger.error("Failed to save settings",{error:e.message}),window.dispatchEvent(new CustomEvent("settings:save-error",{detail:{message:`Failed to save settings: ${e.message}`}})),e}}getSetting(e){if(!e)throw new Error("Setting key is required");return this.settings[e]}async setSetting(e,t){if(!e)throw new Error("Setting key is required");try{this.settings[e]=t,await this.saveSettings(),this.logger.debug("Setting updated",{key:e,value:"string"==typeof t?t:"[object]"})}catch(t){throw this.logger.error("Failed to update setting",{key:e,error:t.message}),t}}getAllSettings(){return{...this.settings}}async updateSettings(e){if(!e||"object"!=typeof e)throw new Error("New settings object is required");try{this.settings={...this.settings,...e},await this.saveSettings(),this.logger.info("Multiple settings updated",{updatedKeys:Object.keys(e),hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId})}catch(e){throw this.logger.error("Failed to update settings",{error:e.message}),e}}async resetSettings(){try{this.settings=this.getDefaultSettings(),await this.saveSettings(),this.logger.info("Settings reset to defaults")}catch(e){throw this.logger.error("Failed to reset settings",{error:e.message}),e}}async clearSettings(){try{localStorage.removeItem(this.storageKey),this.settings=this.getDefaultSettings(),this.logger.info("Settings cleared")}catch(e){throw this.logger.error("Failed to clear settings",{error:e.message}),e}}async initializeEncryption(){try{let e=await this.getDeviceId();"string"!=typeof e&&(e=String(e||"")),e||(e="fallback-device-id"),this.encryptionKey=await i.CryptoUtils.generateKey(e),this.logger.debug("Encryption initialized successfully")}catch(e){this.logger.error("Failed to initialize encryption",{error:e.message}),this.encryptionKey=await i.CryptoUtils.generateKey("fallback-encryption-key"),this.logger.warn("Using fallback encryption key")}}async getDeviceId(){try{if(this.isLocalStorageAvailable()){const e=localStorage.getItem("pingone-device-id");if(e&&"string"==typeof e)return e}const e={userAgent:navigator.userAgent,platform:navigator.platform,hardwareConcurrency:navigator.hardwareConcurrency,deviceMemory:navigator.deviceMemory,maxTouchPoints:navigator.maxTouchPoints},t=(new TextEncoder).encode(JSON.stringify(e)),s=await crypto.subtle.digest("SHA-256",t),n=Array.from(new Uint8Array(s)).map(e=>e.toString(16).padStart(2,"0")).join("");return"string"==typeof n&&n?n:"fallback-device-id"}catch(e){return this.logger.error("Failed to generate device ID:",e),"fallback-"+Math.random().toString(36).substring(2,15)}}isLocalStorageAvailable(){try{const e="test";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return this.logger.warn("localStorage not available",{error:e.message}),!1}}async exportSettings(){try{const e={settings:this.settings,exportDate:(new Date).toISOString(),version:"1.0"};return this.logger.info("Settings exported",{exportDate:e.exportDate}),e}catch(e){throw this.logger.error("Failed to export settings",{error:e.message}),e}}async importSettings(e){if(!e)throw new Error("Import data is required");if(!e.settings)throw new Error("Invalid import data: missing settings");try{this.settings={...this.getDefaultSettings(),...e.settings},await this.saveSettings(),this.logger.info("Settings imported successfully",{importDate:e.exportDate,hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId})}catch(e){throw this.logger.error("Failed to import settings",{error:e.message}),e}}debugLocalStorage(){try{const e=localStorage.getItem(this.storageKey);if(!e)return this.logger.info("No data found in localStorage",{key:this.storageKey}),null;this.logger.info("localStorage contents found",{key:this.storageKey,length:e.length,preview:e.substring(0,100)+(e.length>100?"...":"")});try{const t=JSON.parse(e);return this.logger.info("Data is valid JSON",{keys:Object.keys(t),hasEnvironmentId:!!t.environmentId,hasApiClientId:!!t.apiClientId}),t}catch(e){return this.logger.info("Data is not valid JSON, likely encrypted",{error:e.message}),"encrypted"}}catch(e){return this.logger.error("Failed to debug localStorage",{error:e.message}),null}}}}).call(this)}).call(this,e("_process"))},{"./crypto-utils.js":40,"./winston-logger.js":52,_process:25}],50:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.UIManager=void 0;var n=e("./element-registry.js"),i=e("../../../src/client/utils/safe-logger.js");s.UIManager=class UIManager{constructor(){var e=this;let{errorManager:s,logManager:n,instanceId:a="default"}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=(0,i.createSafeLogger)(n?.getLogger("UIManager")||console,{level:t.env.LOG_LEVEL||"INFO",defaultMeta:{component:"UIManager",instanceId:a,env:t.env.NODE_ENV||"development"}}),this.errorManager=s||{handleError:function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.logger.error("Unhandled error",{error:t instanceof Error?t.message:String(t),stack:t.stack,...s}),e.statusBarElement&&e.showError(t.message||"An error occurred",{autoDismiss:!1,errorId:s.errorId||"unhandled-error"})}},this.notificationContainer=null,this.progressContainer=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.statusBarElement=null,this.statusBarTimeout=null,this.initialize()}initialize(){try{this.setupElements(),this.logger.log("[UIManager] Initialized successfully")}catch(e){this.logger.error("[UIManager] Error during initialization:",e)}}setupElements(){try{this.statusBarElement=document.getElementById("global-status-bar"),this.statusBarElement||this.createStatusBar(),this.notificationContainer=n.ElementRegistry.notificationContainer?.()||document.querySelector(".notification-container"),this.progressContainer=n.ElementRegistry.progressContainer?.()||document.querySelector(".progress-container"),this.tokenStatusElement=n.ElementRegistry.tokenStatus?.()||document.querySelector(".token-status"),this.connectionStatusElement=n.ElementRegistry.connectionStatus?.()||document.querySelector(".connection-status"),this.logger.log("[UIManager] UI elements initialized")}catch(e){this.logger.error("[UIManager] Error setting up UI elements:",e)}}createStatusBar(){try{this.statusBarElement=document.createElement("div"),this.statusBarElement.id="global-status-bar",this.statusBarElement.className="global-status-bar",this.statusBarElement.style.display="none",this.statusBarElement.setAttribute("role","status"),this.statusBarElement.setAttribute("aria-live","polite");const e=document.createElement("div");e.className="status-container";const t=document.createElement("div");t.className="status-content";const s=document.createElement("i");s.className="status-icon fas";const n=document.createElement("span");n.className="status-text";const i=document.createElement("button");i.className="status-close",i.setAttribute("aria-label","Dismiss message"),i.innerHTML='<i class="fas fa-times"></i>',i.addEventListener("click",()=>this.clearStatusBar()),t.appendChild(s),t.appendChild(n),t.appendChild(i),e.appendChild(t),this.statusBarElement.appendChild(e);const a=document.querySelector("main")||document.body;a.insertBefore(this.statusBarElement,a.firstChild),this.logger.log("[UIManager] Created status bar element")}catch(e){this.logger.error("[UIManager] Error creating status bar:",e)}}showStatusBar(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{duration:n=5e3,autoDismiss:i=!0,errorId:a,context:l={},source:c="ui"}=s,g={type:t,duration:n,autoDismiss:i,errorId:a,source:c,...l};switch(t){case"error":this.logger.error(e,g);break;case"warn":case"warning":this.logger.warn(e,g);break;case"success":this.logger.info(`SUCCESS: ${e}`,g);break;case"debug":this.logger.debug(e,g);break;default:this.logger.info(e,g)}if(this.statusBarElement)try{const s=this.statusBarElement.querySelector(".status-content"),a=this.statusBarElement.querySelector(".status-icon"),l=this.statusBarElement.querySelector(".status-text");if(s&&a&&l){s.className="status-content",s.classList.add(`status-${t}`);const c={success:"check-circle",warning:"exclamation-triangle",error:"exclamation-circle",info:"info-circle"}[t]||"info-circle";a.className=`status-icon fas fa-${c}`,l.textContent=e,this.statusBarElement.style.display="block",i&&this.scheduleStatusBarClear(n),this.logger.log(`[UIManager] Status bar updated (${t}):`,e)}}catch(e){this.logger.error("[UIManager] Error showing status bar:",e)}else this.logger.warn("[UIManager] Status bar not available")}handleError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{errorId:s=`err-${Date.now()}`,showInUI:n=!0,source:i="ui",...a}=t;let l,c;e instanceof Error?(l=e.message,c=e):"object"==typeof e&&null!==e?(l=e.message||JSON.stringify(e),c=new Error(l),Object.assign(c,e)):(l=String(e),c=new Error(l)),c.errorId=s;const g={errorId:s,source:i,showInUI:n,stack:c.stack,...a};return this.logger.error(l,g),n&&this.showStatusBar(l,"error",{autoDismiss:!1,errorId:s,source:i,context:g}),this.errorManager?this.errorManager.handleError(c,g):console.error(`[${s}] ${l}`,g),c}scheduleStatusBarClear(e){this.statusBarTimeout&&clearTimeout(this.statusBarTimeout),this.statusBarTimeout=setTimeout(()=>{this.clearStatusBar()},e)}clearStatusBar(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{force:t=!1}=e;if(this.statusBarElement){this.cancelPendingStatusBarClear();try{t?(this.statusBarElement.style.display="none",this.cleanupStatusBarContent()):(this.statusBarElement.style.transition="opacity 0.3s ease-in-out",this.statusBarElement.style.opacity="0",this.statusBarTimeout=setTimeout(()=>{this.statusBarElement.style.display="none",this.statusBarElement.style.opacity="1",this.cleanupStatusBarContent(),this.statusBarTimeout=null},300))}catch(e){this.logger.error("Failed to clear status bar",{error:e.message,stack:e.stack,force:t}),this.statusBarElement&&(this.statusBarElement.style.display="none",this.cleanupStatusBarContent())}}else this.logger.debug("Status bar element not available for clearing")}cleanupStatusBarContent(){if(this.statusBarElement)try{this.statusBarElement.querySelectorAll(".status-text, .status-icon").forEach(e=>{e&&(e.textContent="")});const e=this.statusBarElement.querySelector(".status-content");e&&(e.className="status-content",e.removeAttribute("title"),e.removeAttribute("aria-label")),this.statusBarElement.style.cssText=""}catch(e){this.logger.error("Failed to clean up status bar content",{error:e.message,stack:e.stack})}}cancelPendingStatusBarClear(){this.statusBarTimeout&&(clearTimeout(this.statusBarTimeout),this.statusBarTimeout=null)}async cleanup(){try{if(this.logger.debug("Starting UIManager cleanup"),this.cancelPendingStatusBarClear(),this.clearStatusBar({force:!0}),this.notificationContainer)try{this.notificationContainer.innerHTML=""}catch(e){this.logger.error("Failed to clean up notifications",{error:e.message})}if(this.progressContainer)try{this.progressContainer.innerHTML=""}catch(e){this.logger.error("Failed to clean up progress indicators",{error:e.message})}this.statusBarElement=null,this.notificationContainer=null,this.progressContainer=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.logger.info("UIManager cleanup completed")}catch(e){throw this.logger.error("Error during UIManager cleanup",{error:e.message,stack:e.stack}),e}}showInfo(e,t){this.showStatusBar(e,"info",t)}showSuccess(e,t){this.showStatusBar(e,"success",t)}showWarning(e,t){this.showStatusBar(e,"warning",t)}showError(e,t){this.showStatusBar(e,"error",{...t,autoDismiss:!1})}}}).call(this)}).call(this,e("_process"))},{"../../../src/client/utils/safe-logger.js":82,"./element-registry.js":41,_process:25}],51:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.SafeDOM=void 0;class SafeDOM{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:console;this.logger=e}getElementById(e){try{return document.getElementById(e)}catch(t){return this.logger.error("Error getting element by ID:",{id:e,error:t.message}),null}}querySelector(e){try{return document.querySelector(e)}catch(t){return this.logger.error("Error with querySelector:",{selector:e,error:t.message}),null}}querySelectorAll(e){try{return document.querySelectorAll(e)}catch(t){return this.logger.error("Error with querySelectorAll:",{selector:e,error:t.message}),[]}}setText(e,t){try{e&&void 0!==e.textContent&&(e.textContent=t)}catch(e){this.logger.error("Error setting text content:",{text:t,error:e.message})}}setHTML(e,t){try{e&&void 0!==e.innerHTML&&(e.innerHTML=t)}catch(e){this.logger.error("Error setting HTML content:",{html:t,error:e.message})}}show(e){try{e&&e.style&&(e.style.display="block")}catch(e){this.logger.error("Error showing element:",{error:e.message})}}hide(e){try{e&&e.style&&(e.style.display="none")}catch(e){this.logger.error("Error hiding element:",{error:e.message})}}addClass(e,t){try{e&&e.classList&&e.classList.add(t)}catch(e){this.logger.error("Error adding class:",{className:t,error:e.message})}}removeClass(e,t){try{e&&e.classList&&e.classList.remove(t)}catch(e){this.logger.error("Error removing class:",{className:t,error:e.message})}}setAttribute(e,t,s){try{e&&"function"==typeof e.setAttribute&&e.setAttribute(t,s)}catch(e){this.logger.error("Error setting attribute:",{name:t,value:s,error:e.message})}}getAttribute(e,t){try{return e&&"function"==typeof e.getAttribute?e.getAttribute(t):null}catch(e){return this.logger.error("Error getting attribute:",{name:t,error:e.message}),null}}addEventListener(e,t,s){try{e&&"function"==typeof e.addEventListener&&e.addEventListener(t,s)}catch(e){this.logger.error("Error adding event listener:",{event:t,error:e.message})}}removeEventListener(e,t,s){try{e&&"function"==typeof e.removeEventListener&&e.removeEventListener(t,s)}catch(e){this.logger.error("Error removing event listener:",{event:t,error:e.message})}}}s.SafeDOM=SafeDOM;s.default=SafeDOM},{}],52:[function(e,t,s){(function(e){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.apiLogger=s.WinstonLogger=void 0,s.createComponentLogger=createComponentLogger,s.createWinstonLogger=createWinstonLogger,s.uiLogger=s.tokenLogger=s.settingsLogger=s.fileLogger=s.defaultLogger=void 0;class WinstonLogger{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.level=t.level||this.getDefaultLevel(),this.service=t.service||"pingone-import-frontend",this.environment=t.environment||e.env.NODE_ENV||"development",this.enableServerLogging=!1!==t.enableServerLogging,this.enableConsoleLogging=!1!==t.enableConsoleLogging,this.levels={error:0,warn:1,info:2,debug:3},this.transports=[],this.initializeTransports()}getDefaultLevel(){return"production"===this.environment?"info":"test"===this.environment?"warn":"debug"}initializeTransports(){this.enableConsoleLogging&&this.transports.push({name:"console",log:(e,t,s)=>this.logToConsole(e,t,s)}),this.enableServerLogging&&this.transports.push({name:"server",log:(e,t,s)=>this.logToServer(e,t,s)})}shouldLog(e){return this.levels[e]<=this.levels[this.level]}formatTimestamp(){return(new Date).toISOString()}formatLogEntry(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{timestamp:this.formatTimestamp(),level:e,message:t,service:this.service,environment:this.environment,...s}}logToConsole(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.shouldLog(e))return;const n=this.formatLogEntry(e,t,s).timestamp,i=e.toUpperCase();let a=`[${n}] [${this.service}] ${i}: ${t}`;switch(Object.keys(s).length>0&&(a+=`\n${JSON.stringify(s,null,2)}`),e){case"error":console.error(a);break;case"warn":console.warn(a);break;case"info":console.info(a);break;case"debug":console.debug(a);break;default:console.log(a)}}async logToServer(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.shouldLog(e))try{const n={message:t,level:e,data:s,source:"frontend"};await fetch("/api/logs/ui",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})}catch(n){if(n.message.includes("Failed to fetch")||n.message.includes("ERR_CONNECTION_REFUSED"))return;console.warn("Server logging failed, falling back to console:",n.message),this.logToConsole(e,t,s)}}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.shouldLog(e)&&this.transports.forEach(n=>{try{n.log(e,t,s)}catch(e){console.error(`Error in ${n.name} transport:`,e)}})}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}errorWithStack(e,t){const s={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},error:{message:t.message,stack:t.stack,code:t.code,name:t.name}};this.error(e,s)}child(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const s=new WinstonLogger({level:this.level,service:this.service,environment:this.environment,enableServerLogging:this.enableServerLogging,enableConsoleLogging:this.enableConsoleLogging});return s.formatLogEntry=function(s,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{...e.formatLogEntry(s,n,i),...t}},s}setLevel(e){this.levels.hasOwnProperty(e)?this.level=e:this.warn(`Invalid log level: ${e}`)}setServerLogging(e){this.enableServerLogging=e,this.transports=this.transports.filter(e=>"server"!==e.name),e&&this.transports.push({name:"server",log:(e,t,s)=>this.logToServer(e,t,s)})}setConsoleLogging(e){this.enableConsoleLogging=e,this.transports=this.transports.filter(e=>"console"!==e.name),e&&this.transports.push({name:"console",log:(e,t,s)=>this.logToConsole(e,t,s)})}}function createWinstonLogger(){return new WinstonLogger(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})}function createComponentLogger(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return createWinstonLogger({...t,service:`${t.service||"pingone-import"}-${e}`})}s.WinstonLogger=WinstonLogger;s.defaultLogger=createWinstonLogger(),s.apiLogger=createComponentLogger("api"),s.uiLogger=createComponentLogger("ui"),s.fileLogger=createComponentLogger("file"),s.settingsLogger=createComponentLogger("settings"),s.tokenLogger=createComponentLogger("token")}).call(this)}).call(this,e("_process"))},{_process:25}],53:[function(e,t,s){(function(e){(function(){"use strict";class CentralizedLogger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.component=e.component||"app",this.level=e.level||"info",this.enableRemoteLogging=!1!==e.enableRemoteLogging,this.enableConsoleLogging=!1!==e.enableConsoleLogging,this.timers=new Map,this.sensitivePatterns=[/password/i,/token/i,/secret/i,/key/i,/credential/i,/auth/i]}maskSensitiveData(e){if("string"==typeof e)return e.replace(/("(?:password|token|secret|key|credential|auth)"\s*:\s*")([^"]+)"/gi,'$1***MASKED***"');if("object"==typeof e&&null!==e){const t={...e};for(const e in t)this.sensitivePatterns.some(t=>t.test(e))?t[e]="***MASKED***":"object"==typeof t[e]&&(t[e]=this.maskSensitiveData(t[e]));return t}return e}formatMessage(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const n=(new Date).toISOString(),i=this.component;let a=`[${n}] [${e.toUpperCase()}] [${i}] ${t}`;if(s){const e=this.maskSensitiveData(s);a+=` | Data: ${JSON.stringify(e,null,2)}`}return a}async sendRemoteLog(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(this.enableRemoteLogging)try{const n={timestamp:(new Date).toISOString(),level:e,component:this.component,message:t,data:this.maskSensitiveData(s),userAgent:navigator.userAgent,url:window.location.href};await fetch("/api/logs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})}catch(e){this.enableConsoleLogging&&console.warn("Remote logging failed:",e)}}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if((window.settings||{}).debugMode)try{const s=this.formatMessage?this.formatMessage("debug",e,t):`[DEBUG] ${e}`;this.enableConsoleLogging&&console.debug(s),this.sendRemoteLog("debug",e,t)}catch(s){console.debug(`[DEBUG] ${e}`,t)}}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{const s=this.formatMessage?this.formatMessage("info",e,t):`[INFO] ${e}`;this.enableConsoleLogging&&console.log(s),this.sendRemoteLog("info",e,t)}catch(s){console.log(`[INFO] ${e}`,t)}}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{const s=this.formatMessage?this.formatMessage("warn",e,t):`[WARN] ${e}`;this.enableConsoleLogging&&console.warn(s),this.sendRemoteLog("warn",e,t)}catch(s){console.warn(`[WARN] ${e}`,t)}}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{const s=this.formatMessage?this.formatMessage("error",e,t):`[ERROR] ${e}`;this.enableConsoleLogging&&console.error(s),this.sendRemoteLog("error",e,t)}catch(s){console.error(`[ERROR] ${e}`,t)}}startTimer(e){this.timers||(this.timers=new Map);const t=performance?performance.now():Date.now();return this.timers.set(e,t),console.time&&console.time(e),this.debug(`Timer started: ${e}`),{label:e,startTime:t}}endTimer(e){if(!e||!e.label)return this.warn("Invalid timer object provided to endTimer"),0;const t=e.label;if(!this.timers||!this.timers.has(t))return this.warn(`Timer '${t}' not found`),0;const s=this.timers.get(t),n=(performance?performance.now():Date.now())-s;return this.timers.delete(t),console.timeEnd&&console.timeEnd(t),this.info(`Timer '${t}' completed in ${n.toFixed(2)}ms`),n}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=e.component?`${this.component}.${e.component}`:this.component;return new CentralizedLogger({...e,component:t,level:e.level||this.level,enableRemoteLogging:void 0!==e.enableRemoteLogging?e.enableRemoteLogging:this.enableRemoteLogging,enableConsoleLogging:void 0!==e.enableConsoleLogging?e.enableConsoleLogging:this.enableConsoleLogging})}}void 0!==t&&t.exports?t.exports={CentralizedLogger:CentralizedLogger}:"function"==typeof define&&define.amd?define([],function(){return{CentralizedLogger:CentralizedLogger}}):"undefined"!=typeof window&&(window.CentralizedLogger=CentralizedLogger);try{if(void 0===s||s.nodeType)if("function"==typeof define&&define.amd);else if("undefined"!=typeof window);else{(void 0!==e?e:window||{}).CentralizedLogger=CentralizedLogger}else void 0!==t&&!t.nodeType&&t.exports&&(s=t.exports={CentralizedLogger:CentralizedLogger}),s.CentralizedLogger=CentralizedLogger}catch(e){"undefined"!=typeof console&&console.warn&&console.warn("CentralizedLogger export failed:",e)}if("undefined"==typeof window&&void 0!==s)try{s.CentralizedLogger=CentralizedLogger}catch(e){}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],54:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.UI_CONFIG=s.MESSAGES=s.BUSINESS_CONFIG=s.API_CONFIG=void 0;const n=s.API_CONFIG={ENDPOINTS:{SETTINGS:"/api/settings",IMPORT:"/api/import",EXPORT:"/api/export",POPULATIONS:"/api/populations",TEST_CONNECTION:"/api/pingone/test-connection",LOGS:"/api/logs"},TIMEOUTS:{DEFAULT:1e4,LONG_OPERATION:3e4,FILE_UPLOAD:6e4,CONNECTION_TEST:5e3},RETRY:{MAX_ATTEMPTS:3,DELAYS:[1e3,2e3,5e3]}},i=s.UI_CONFIG={SELECTORS:{APP_CONTAINER:".app-container",NAV_ITEMS:"[data-view]",SETTINGS_FORM:"#settings-form",PROGRESS_BAR:".progress-bar",STATUS_INDICATOR:".status-indicator",MODAL_BACKDROP:".modal-backdrop"},CLASSES:{HIDDEN:"hidden",ACTIVE:"active",LOADING:"loading",ERROR:"error",SUCCESS:"success"}},a=s.MESSAGES={SUCCESS:{SETTINGS_SAVED:"Settings saved successfully",FILE_UPLOADED:"File uploaded successfully",CONNECTION_SUCCESS:"Connection test successful"},ERROR:{NETWORK_ERROR:"Network connection error",FILE_TOO_LARGE:"File size exceeds 10MB limit",SETTINGS_SAVE_FAILED:"Failed to save settings",CONNECTION_FAILED:"Connection test failed"}},l=s.BUSINESS_CONFIG={FILE_UPLOAD:{MAX_SIZE:10485760,ALLOWED_TYPES:[".csv",".txt"]},IMPORT:{BATCH_SIZE:100,MAX_CONCURRENT:5}};"undefined"!=typeof window&&(window.API_CONFIG=n,window.UI_CONFIG=i,window.MESSAGES=a,window.BUSINESS_CONFIG=l)},{}],55:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ErrorHandler=void 0;class ErrorHandler{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=e||{error:(e,t)=>console.error(e,t),warn:(e,t)=>console.warn(e,t),debug:(e,t)=>console.debug(e,t)}}wrapAsync(e){var t=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Unknown operation",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{retries:a=0,retryDelay:l=1e3,fallbackValue:c=null,suppressErrors:g=!1,rethrow:u=!1}=i;return async function(){for(var i=arguments.length,d=new Array(i),h=0;h<i;h++)d[h]=arguments[h];for(let i=0;i<=a;i++)try{return await e(...d)}catch(e){if(i<a){t.logger.warn(`${s} failed (attempt ${i+1}/${a+1}), retrying...`,{error:e.message,args:t._sanitizeArgs(d)}),await t._delay(l*(i+1));continue}if(t.handleError(e,s,{userMessage:n||"An unexpected error occurred.",retries:a,suppress:g}),u)throw e;return c}return c}}wrapSync(e){var t=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Unknown operation",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{fallbackValue:a=null,suppressErrors:l=!1,rethrow:c=!1}=i;return function(){for(var i=arguments.length,g=new Array(i),u=0;u<i;u++)g[u]=arguments[u];try{return e(...g)}catch(e){if(t.handleError(e,s,{userMessage:n||"An unexpected error occurred.",suppress:l,args:t._sanitizeArgs(g)}),c)throw e;return a}}}createError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"UNKNOWN_ERROR",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const i=new Error(e);return i.code=t,i.context=s,i.timestamp=(new Date).toISOString(),n&&(i.originalError=n,i.originalStack=n.stack),i}handleError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Unknown context",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{userMessage:n,suppress:i,...a}=s;if(i)return;const l={message:e.message,code:e.code||"UNHANDLED_EXCEPTION",context:t,timestamp:(new Date).toISOString(),stack:e.stack,...a};if(this.logger.error(`Error in ${t}:`,l),this._reportToErrorService(l),"undefined"!=typeof window&&window.app&&window.app.uiManager){const s=window.app.uiManager,i=n||e.message;s.showError(`Error: ${t}`,i)}}wrapEventHandler(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Event handler";return s=>{try{return e(s)}catch(e){this.logger.error(`${t} failed`,{error:e.message,eventType:s?.type,target:s?.target?.tagName||"unknown"}),s?.preventDefault?.(),s?.stopPropagation?.()}}}makeSafe(e){var t=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Safe function",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(){for(var i=arguments.length,a=new Array(i),l=0;l<i;l++)a[l]=arguments[l];try{return e(...a)}catch(e){return t.logger.warn(`${s} failed safely`,{error:e.message,args:t._sanitizeArgs(a)}),n}}}async handleApiResponse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"API call";try{if(!e.ok){const s={status:e.status,statusText:e.statusText,url:e.url};let n=`${t} failed with status ${e.status}`;try{const t=await e.text();s.body=t;try{const e=JSON.parse(t);e.message&&(n=e.message)}catch(e){}}catch(e){}throw this.createError(n,`HTTP_${e.status}`,s)}return await e.json()}catch(e){if(e.code&&e.code.startsWith("HTTP_"))throw e;throw this.createError(`${t} response parsing failed`,"RESPONSE_PARSE_ERROR",{originalError:e.message})}}_sanitizeArgs(e){return e.map(e=>"string"==typeof e&&e.length>100?e.substring(0,100)+"...":"object"==typeof e&&null!==e?{...e,_truncated:!0}:e)}_delay(e){return new Promise(t=>setTimeout(t,e))}_reportToErrorService(e){"undefined"!=typeof window&&window.errorReportingEnabled}}s.ErrorHandler=ErrorHandler,void 0!==t&&t.exports?t.exports={ErrorHandler:ErrorHandler}:"undefined"!=typeof window&&(window.ErrorHandler=ErrorHandler)},{}],56:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SafeDOM=void 0;class SafeDOM{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=this.createBulletproofLogger(e),this.operationCount=0,this.failureCount=0,this.lastOperation=null,this.initialize()}initialize(){try{"undefined"==typeof document&&(this.logger.warn("SafeDOM: Document not available, creating mock"),this.createMockDocument()),this.logger.debug("SafeDOM: Initialized successfully")}catch(e){this.emergencyLog("SafeDOM initialization failed",e)}}createBulletproofLogger(e){try{if(e&&"object"==typeof e)return{warn:this.safeLogMethod(e.warn||console.warn),error:this.safeLogMethod(e.error||console.error),debug:this.safeLogMethod(e.debug||console.debug),info:this.safeLogMethod(e.info||console.info)}}catch(e){}return{warn:this.safeLogMethod(console.warn),error:this.safeLogMethod(console.error),debug:this.safeLogMethod(console.debug),info:this.safeLogMethod(console.info)}}safeLogMethod(e){return(t,s)=>{try{e&&"function"==typeof e?e.call(console,t,s):console.log(t,s)}catch(e){this.emergencyLog(t,s)}}}createMockDocument(){try{window.document={getElementById:()=>null,querySelector:()=>null,querySelectorAll:()=>[],createElement:e=>({tagName:e,style:{},innerHTML:"",textContent:""}),body:{appendChild:()=>{},style:{}},head:{appendChild:()=>{}}}}catch(e){}}select(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return this.executeWithProtection("select",()=>{if(!this.validateSelector(e))return null;const s=this.validateContext(t);if(!s)return null;let n=null;try{if(n=s.querySelector(e),n)return this.logger.debug(`SafeDOM: Element found for selector: ${e}`),n}catch(t){this.logger.debug(`SafeDOM: querySelector failed for ${e}, trying alternatives`)}if(e.startsWith("#"))try{const t=e.substring(1);if(n=s.getElementById?s.getElementById(t):null,n)return this.logger.debug(`SafeDOM: Element found by ID: ${t}`),n}catch(e){}if(e.startsWith("."))try{const t=e.substring(1),n=s.getElementsByClassName?s.getElementsByClassName(t):[];if(n&&n.length>0)return this.logger.debug(`SafeDOM: Element found by class: ${t}`),n[0]}catch(e){}if(e&&!e.includes(".")&&!e.includes("#")&&!e.includes("["))try{const t=s.getElementsByTagName?s.getElementsByTagName(e):[];if(t&&t.length>0)return this.logger.debug(`SafeDOM: Element found by tag: ${e}`),t[0]}catch(e){}return this.logger.debug(`SafeDOM: Element not found for selector: ${e}`),null},e,t)}selectAll(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;try{if(!e)return this.logger.warn("SafeDOM: Empty selector provided"),[];const s=t.querySelectorAll(e);return Array.from(s)}catch(t){return this.logger.error("SafeDOM: Error selecting elements",{selector:e,error:t.message}),[]}}getElementById(e){try{if(!e||""===e){const e=(new Error).stack,t=e?e.split("\n")[2]:"unknown";return this.logger.warn("SafeDOM: Empty ID provided",{caller:t.trim()}),null}const t=document.getElementById(e);return t||this.logger.debug(`SafeDOM: Element not found for ID: ${e}`),t}catch(t){return this.logger.error("SafeDOM: Error getting element by ID",{id:e,error:t.message}),null}}selectById(e){return this.getElementById(e)}setText(e,t){try{return e?(e.textContent=t||"",!0):(this.logger.warn("SafeDOM: Null element provided to setText"),!1)}catch(e){return this.logger.error("SafeDOM: Error setting text content",{text:t,error:e.message}),!1}}setHTML(e,t){try{return e?(t&&"string"==typeof t&&(t.includes("<script")||t.includes("javascript:"))&&this.logger.warn("SafeDOM: Potentially unsafe HTML detected",{html:t.substring(0,100)}),e.innerHTML=t||"",!0):(this.logger.warn("SafeDOM: Null element provided to setHTML"),!1)}catch(e){return this.logger.error("SafeDOM: Error setting HTML content",{error:e.message}),!1}}addEventListener(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{return e?"function"!=typeof s?(this.logger.warn("SafeDOM: Non-function handler provided to addEventListener"),!1):(e.addEventListener(t,s,n),!0):(this.logger.warn("SafeDOM: Null element provided to addEventListener"),!1)}catch(e){return this.logger.error("SafeDOM: Error adding event listener",{event:t,error:e.message}),!1}}removeEventListener(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{return e?(e.removeEventListener(t,s,n),!0):(this.logger.warn("SafeDOM: Null element provided to removeEventListener"),!1)}catch(e){return this.logger.error("SafeDOM: Error removing event listener",{event:t,error:e.message}),!1}}addClass(e,t){try{return e?t?(e.classList.add(t),!0):(this.logger.warn("SafeDOM: Empty className provided to addClass"),!1):(this.logger.warn("SafeDOM: Null element provided to addClass"),!1)}catch(e){return this.logger.error("SafeDOM: Error adding CSS class",{className:t,error:e.message}),!1}}removeClass(e,t){try{return e?t?(e.classList.remove(t),!0):(this.logger.warn("SafeDOM: Empty className provided to removeClass"),!1):(this.logger.warn("SafeDOM: Null element provided to removeClass"),!1)}catch(e){return this.logger.error("SafeDOM: Error removing CSS class",{className:t,error:e.message}),!1}}toggleClass(e,t){try{return e?t?(e.classList.toggle(t),!0):(this.logger.warn("SafeDOM: Empty className provided to toggleClass"),!1):(this.logger.warn("SafeDOM: Null element provided to toggleClass"),!1)}catch(e){return this.logger.error("SafeDOM: Error toggling CSS class",{className:t,error:e.message}),!1}}show(e){try{return e?(e.style.display="",!0):(this.logger.warn("SafeDOM: Null element provided to show"),!1)}catch(e){return this.logger.error("SafeDOM: Error showing element",{error:e.message}),!1}}hide(e){try{return e?(e.style.display="none",!0):(this.logger.warn("SafeDOM: Null element provided to hide"),!1)}catch(e){return this.logger.error("SafeDOM: Error hiding element",{error:e.message}),!1}}executeWithProtection(e,t){for(var s=arguments.length,n=new Array(s>2?s-2:0),i=2;i<s;i++)n[i-2]=arguments[i];try{this.operationCount++,this.lastOperation={name:e,args:n,timestamp:Date.now()};return t()}catch(t){return this.failureCount++,this.logger.error(`SafeDOM: ${e} failed`,{error:t.message,args:n,operationCount:this.operationCount,failureCount:this.failureCount}),null}}validateSelector(e){try{if(!e||""===e||"string"!=typeof e){const t=(new Error).stack,s=t?t.split("\n")[3]:"unknown";return this.logger.warn("SafeDOM: Invalid selector provided",{selector:e,type:typeof e,caller:s.trim()}),!1}return!e.includes("<script")&&!e.includes("javascript:")||(this.logger.warn("SafeDOM: Potentially dangerous selector blocked",{selector:e}),!1)}catch(e){return this.emergencyLog("Selector validation failed",e),!1}}validateContext(e){try{return e?"function"==typeof e.querySelector?e:(this.logger.debug("SafeDOM: Invalid context, using document"),document||this.createMockDocument()):document||this.createMockDocument()}catch(e){return this.emergencyLog("Context validation failed",e),document||this.createMockDocument()}}emergencyLog(e,t){try{const s=(new Date).toISOString(),n=`[${s}] SafeDOM EMERGENCY: ${e}`;console&&(console.error?console.error(n,t):console.warn?console.warn(n,t):console.log&&console.log(n,t)),window.safeDOMEmergencyLogs||(window.safeDOMEmergencyLogs=[]),window.safeDOMEmergencyLogs.push({timestamp:s,message:e,error:t})}catch(e){}}getStats(){try{return{operationCount:this.operationCount,failureCount:this.failureCount,successRate:this.operationCount>0?((this.operationCount-this.failureCount)/this.operationCount*100).toFixed(2)+"%":"100%",lastOperation:this.lastOperation}}catch(e){return{error:"Stats unavailable"}}}}s.SafeDOM=SafeDOM,void 0!==t&&t.exports?t.exports={SafeDOM:SafeDOM}:"undefined"!=typeof window&&(window.SafeDOM=SafeDOM)},{}],57:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),Object.defineProperty(s,"API_CONFIG",{enumerable:!0,get:function(){return l.API_CONFIG}}),Object.defineProperty(s,"BUSINESS_CONFIG",{enumerable:!0,get:function(){return l.BUSINESS_CONFIG}}),Object.defineProperty(s,"MESSAGES",{enumerable:!0,get:function(){return l.MESSAGES}}),Object.defineProperty(s,"UI_CONFIG",{enumerable:!0,get:function(){return l.UI_CONFIG}}),s.safeDOM=s.logger=s.errorHandler=void 0;var n=e("./centralized-logger.js"),i=e("./safe-dom.js"),a=e("./error-handler.js"),l=e("./config-constants.js");const c=s.logger=new n.CentralizedLogger,g=s.safeDOM=new i.SafeDOM(c),u=s.errorHandler=new a.ErrorHandler(c);"undefined"!=typeof window&&(window.logger=c,window.safeDOM=g,window.errorHandler=u,window.API_CONFIG=l.API_CONFIG,window.UI_CONFIG=l.UI_CONFIG,window.MESSAGES=l.MESSAGES,window.BUSINESS_CONFIG=l.BUSINESS_CONFIG,c.info("Debug utilities loaded",{utilities:["CentralizedLogger","SafeDOM","ErrorHandler","ConfigConstants"],timestamp:(new Date).toISOString()}))},{"./centralized-logger.js":53,"./config-constants.js":54,"./error-handler.js":55,"./safe-dom.js":56}],58:[function(e,t,s){(function(t){(function(){"use strict";var n=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.App=void 0;e("./utils/browser-logging-service.js");var i=e("./utils/debug-logger.js");e("./utils/safe-logger.js");e("../../public/js/utils/utility-loader.js");var a=n(e("./utils/bulletproof-app-integration.js")),l=(e("./utils/bulletproof-token-manager.js"),e("./utils/bulletproof-subsystem-wrapper.js"));e("./utils/bulletproof-global-handler.js");var c=e("../../public/js/modules/logger.js"),g=(e("../../public/js/modules/file-logger.js"),e("../../public/js/modules/event-bus.js")),u=(e("../../public/js/utils/centralized-logger.js"),e("../../public/js/modules/settings-manager.js")),d=e("./components/ui-manager.js"),h=(n(e("./utils/local-api-client.js")),n(e("./subsystems/settings-subsystem.js"))),p=(n(e("./components/credentials-manager.js")),n(e("./utils/pingone-client.js"))),m=e("./subsystems/connection-manager-subsystem.js"),f=e("./subsystems/auth-management-subsystem.js"),y=e("./subsystems/advanced-realtime-subsystem.js"),b=e("./subsystems/view-management-subsystem.js"),v=e("./subsystems/operation-manager-subsystem.js"),w=e("./subsystems/population-subsystem.js"),S=e("./subsystems/history-subsystem.js"),E=e("./subsystems/import-subsystem.js"),k=e("./subsystems/navigation-subsystem.js"),T=e("./subsystems/realtime-communication-subsystem.js"),I=e("./subsystems/global-token-manager-subsystem.js");const C={USE_CENTRALIZED_LOGGING:!0,USE_NAVIGATION_SUBSYSTEM:!0,USE_CONNECTION_MANAGER:!0,USE_REALTIME_SUBSYSTEM:!0,USE_AUTH_MANAGEMENT:!0,USE_VIEW_MANAGEMENT:!0,USE_OPERATION_MANAGER:!0,USE_IMPORT_SUBSYSTEM:!0,USE_EXPORT_SUBSYSTEM:!0,USE_ADVANCED_REALTIME:!0};class App{constructor(){try{this.logger=new c.Logger({context:"app",version:"7.0.1.0",enableConsole:!0,enableStorage:!1}),this.logger.info("Centralized Logger initialized successfully",{version:"7.0.1.0",featureFlags:C,userAgent:navigator.userAgent})}catch(e){console.error("Failed to initialize CentralizedLogger, falling back to console logging:",e),this.logger={debug:console.debug.bind(console),info:console.info.bind(console),warn:console.warn.bind(console),error:console.error.bind(console),startTimer:e=>({label:e,startTime:Date.now()}),endTimer:e=>{const t=Date.now()-e.startTime;return console.log(`[${e.label}] Completed in ${t}ms`),t}},this.logger.warn("Using fallback console logger due to CentralizedLogger initialization failure")}this.bulletproofSystem=null,this.initializeBulletproofSystem(),this.logger.info("🚀 PingOne Import Tool starting...",{version:"6.5.2.4",timestamp:(new Date).toISOString(),userAgent:navigator.userAgent,url:window.location.href}),this.eventBus=new g.EventBus,this.settingsManager=null,this.uiManager=new d.UIManager({logger:this.logger}),this.tokenManager=null,this.fileHandler=null,this.versionManager=null,this.localClient=null,this.globalTokenManager=null,this.progressSubsystem=null,this.enhancedProgressSubsystem=null,this.enhancedTokenStatusSubsystem=null,this.sessionSubsystem=null,this.loggingSubsystem=null,this.historySubsystem=null,this.populationSubsystem=null,this.settingsSubsystem=null,this.advancedRealtimeSubsystem=null,this.realtimeCollaborationUI=null,this.subsystems={},this.isInitialized=!1,this.currentView="home",this.socket=null,this.version="7.0.1.0",this.buildTimestamp=(new Date).toISOString(),this.environment="development",this.features={bulletproofProgressContainer:!0},this.logger.startTimer("app-initialization")}initializeBulletproofSystem(){try{this.logger.info("🛡️ Initializing Bulletproof Protection System..."),this.bulletproofSystem=new a.default({logger:this.logger,eventBus:this.eventBus,app:this}),this.bulletproofSystem.initialize(),this.logger.info("🛡️ Bulletproof Protection System initialized successfully")}catch(e){this.logger.error("🛡️ Failed to initialize Bulletproof Protection System",e)}}async init(){console.log("🔧 [APP INIT] Starting app.init() method...");try{console.log("🔧 [APP INIT] Logger available:",!!this.logger),this.logger.info("Starting application initialization"),console.log("🔧 [APP INIT] About to initialize core components..."),this.uiManager.updateStartupMessage("Initializing core components..."),await this.initializeCoreComponents(),await this.initializeSubsystems(),this.uiManager.updateStartupMessage("Loading legacy components..."),await this.initializeLegacyComponents(),this.uiManager.updateStartupMessage("Setting up event listeners..."),this.setupEventListeners(),this.setupModalCompletionListeners(),this.uiManager.updateStartupMessage("Finalizing user interface..."),await this.initializeUI(),this.isInitialized=!0,this.hideStartupScreen();const e=this.logger.endTimer("app-initialization");this.logger.info("Application initialization completed",{initializationTime:`${e}ms`,subsystemsEnabled:Object.keys(this.subsystems).length}),this.showInitializationSuccessStatus()}catch(e){this.logger.error("Application initialization failed:",{error:e.message,stack:e.stack}),this.uiManager.showError("Application failed to start. Please check the console for details.")}}showInitializationSuccessStatus(){try{const e=document.querySelectorAll('script[src*="bundle-"]');let t="Unknown";if(e.length>0){const s=e[e.length-1].src.match(/bundle-(\d+)\.js/);s&&(t=s[1])}let s="No Token",n="";try{if(this.subsystems.enhancedTokenStatus&&"function"==typeof this.subsystems.enhancedTokenStatus.getTokenStatus){const e=this.subsystems.enhancedTokenStatus.getTokenStatus();e&&e.isValid?(s="Valid Token",n=` (${e.expiresInMinutes}min left)`):s="Invalid Token"}else{s=this.checkCredentialsAvailable()?"Checking Token...":"No Credentials"}}catch(e){this.logger.warn("Could not get token status",{error:e.message}),s="Token Status Unknown"}const i=`✅ v${this.version} Ready | Bundle: ${t} | Last Update: UIManager & SafeDOM fixes | Token: ${s}${n}`;this.uiManager&&this.uiManager.showStatusBar&&this.uiManager.showStatusBar(i,"success",{duration:1e4,autoDismiss:!0}),this.logger.info("Initialization success status displayed",{version:this.version,bundleVersion:t,tokenStatus:s,tokenTimeLeft:n})}catch(e){this.logger.error("Failed to show initialization success status",{error:e.message,stack:e.stack})}}checkCredentialsAvailable(){try{if(void 0!==t&&t.env){if(t.env.PINGONE_CLIENT_ID&&t.env.PINGONE_CLIENT_SECRET&&t.env.PINGONE_ENVIRONMENT_ID)return!0}if(this.subsystems.settings&&"function"==typeof this.subsystems.settings.getSettings){const e=this.subsystems.settings.getSettings();return e.apiClientId&&e.apiSecret&&e.environmentId&&!e.apiClientId.includes("test-")&&!e.apiSecret.includes("test-")}return!1}catch(e){return this.logger.warn("Error checking credentials availability",{error:e.message}),!1}}async loadVersion(){try{const e=document.getElementById("startup-wait-screen"),t=document.querySelector(".app-container");if(e){this.logger.debug("Starting to hide startup wait screen"),e.classList.add("fade-out"),t&&t.classList.remove("startup-loading");setTimeout(()=>{try{e&&e.parentNode&&(e.offsetHeight,e.parentNode.removeChild(e),this.logger.debug("Startup wait screen removed from DOM"))}catch(e){this.logger.error("Error removing startup screen from DOM:",e)}},600),this.logger.debug("Startup wait screen hidden with animation")}else this.logger.warn("Startup wait screen element not found"),t&&t.classList.remove("startup-loading");t&&t.classList.contains("startup-loading")&&t.classList.remove("startup-loading")}catch(e){this.logger.error("Error in hideStartupScreen:",e);try{const e=document.getElementById("startup-wait-screen");e&&(e.style.display="none",e.parentNode&&e.parentNode.removeChild(e));const t=document.querySelector(".app-container");t&&t.classList.remove("startup-loading")}catch(e){this.logger.error("Fallback error handling failed:",e)}}}updateVersionDisplay(){try{const e=document.getElementById("version-display");e&&(e.textContent=`v${this.version}`),document.title=`PingOne User Import v${this.version}`,this.logger.debug("Version display updated:",{version:this.version})}catch(e){this.logger.error("Failed to update version display:",{error:e.message})}}async initializeCoreComponents(){this.logger.debug("Initializing core components"),this.uiManager.setupUI(),this.settingsManager=new u.SettingsManager(this.logger.child({component:"settings-manager"})),await this.settingsManager.init(),this.logger.debug("Settings manager initialized"),this.settingsSubsystem=new h.default(this.logger.child({subsystem:"settings"}),this.uiManager,this.localClient,this.settingsManager,this.eventBus),await this.settingsSubsystem.init(),this.subsystems.settings=this.settingsSubsystem,this.logger.debug("Settings subsystem initialized as a core component"),this.pingoneClient=new p.default(this.localClient,this.logger.child({component:"pingone-client"})),this.logger.debug("PingOne client created successfully"),this.realtimeComm=new T.RealtimeCommunicationSubsystem(this.logger.child({subsystem:"realtime-comm"}),this.uiManager),this.logger.debug("Realtime communication subsystem initialized as a core component"),this.logger.debug("Core components initialized")}async initializeSubsystems(){this.logger.info("Initializing subsystems..."),this.uiManager.updateStartupMessage("Initializing subsystems...");k.NavigationSubsystem,this.logger.child({subsystem:"navigation"}),this.uiManager,this.settingsManager,m.ConnectionManagerSubsystem,this.logger.child({subsystem:"connection"}),this.eventBus,this.uiManager,this.localClient,y.AdvancedRealtimeSubsystem,this.logger.child({subsystem:"realtime"}),this.eventBus,this.realtimeComm,this.subsystems.settingsSubsystem,this.subsystems.operationManager,f.AuthManagementSubsystem,this.logger.child({subsystem:"auth"}),this.pingoneClient,this.eventBus,this.uiManager,this.localClient,b.ViewManagementSubsystem,this.logger.child({subsystem:"view"}),this.uiManager,this.eventBus,v.OperationManagerSubsystem,this.logger.child({subsystem:"operation"}),this.eventBus,this.uiManager,w.PopulationSubsystem,this.logger.child({subsystem:"population"}),this.uiManager,this.localClient,this.eventBus,S.HistorySubsystem,this.logger.child({subsystem:"history"}),this.localClient,this.uiManager,this.eventBus,E.ImportSubsystem,this.logger.child({subsystem:"import"}),this.uiManager,this.localClient,this.eventBus;try{const e=[{name:"logging",flag:!0,constructor:LoggingSubsystem,deps:[this.eventBus,this.logger]},{name:"navigation",flag:C.USE_NAVIGATION_SUBSYSTEM,constructor:k.NavigationSubsystem,deps:[this.logger,this.uiManager,this.subsystems.settings]},{name:"connectionManager",flag:C.USE_CONNECTION_MANAGER,constructor:m.ConnectionManagerSubsystem,deps:[this.logger,this.uiManager,this.subsystems.settings,this.localClient]},{name:"realtimeManager",flag:C.USE_REALTIME_SUBSYSTEM,constructor:T.RealtimeCommunicationSubsystem,deps:[this.logger,this.uiManager]},{name:"authManager",flag:C.USE_AUTH_MANAGEMENT,constructor:f.AuthManagementSubsystem,deps:[this.logger,this.uiManager,this.localClient,this.subsystems.settings]},{name:"viewManager",flag:C.USE_VIEW_MANAGEMENT,constructor:b.ViewManagementSubsystem,deps:[this.logger,this.uiManager]},{name:"operationManager",flag:C.USE_OPERATION_MANAGER,constructor:v.OperationManagerSubsystem,deps:[this.logger,this.uiManager,this.subsystems.settings,this.localClient]},{name:"population",flag:!0,constructor:w.PopulationSubsystem,deps:[this.eventBus,this.subsystems.settings,()=>this.subsystems.logging,this.localClient]},{name:"history",flag:!0,constructor:S.HistorySubsystem,deps:[this.eventBus,this.subsystems.settings,()=>this.subsystems.logging]},{name:"import",flag:C.USE_IMPORT_SUBSYSTEM,constructor:E.ImportSubsystem,deps:[this.logger,this.uiManager,this.localClient,this.subsystems.settings,this.eventBus,()=>this.subsystems.population,()=>this.subsystems.authManager]},{name:"export",flag:C.USE_EXPORT_SUBSYSTEM,constructor:ExportSubsystem,deps:[this.logger,this.uiManager,this.localClient,this.subsystems.settings,this.eventBus,()=>this.subsystems.population]},{name:"advancedRealtime",flag:C.USE_ADVANCED_REALTIME,constructor:y.AdvancedRealtimeSubsystem,deps:[this.logger,this.eventBus,()=>this.subsystems.realtimeManager,this.sessionSubsystem,this.progressSubsystem]}];for(const t of e)if(t.flag)try{console.log(`🔧 [SUBSYSTEM INIT] Starting ${t.name} subsystem initialization...`),this.logger.debug(`Initializing ${t.name} subsystem...`),console.log(`🔧 [SUBSYSTEM INIT] ${t.name} dependencies:`,t.deps.map(e=>"function"==typeof e?"function()":e));const e=t.deps.map(e=>{if("function"==typeof e){const s=e();return console.log(`🔧 [SUBSYSTEM INIT] ${t.name} lazy dependency resolved:`,s?"success":"null/undefined"),s}return e});if(console.log(`🔧 [SUBSYSTEM INIT] ${t.name} resolved dependencies:`,e.map(e=>e?"available":"null/undefined")),!t.constructor)throw new Error(`Constructor not found for ${t.name} subsystem`);console.log(`🔧 [SUBSYSTEM INIT] ${t.name} creating instance...`);const s=new t.constructor(...e);console.log(`🔧 [SUBSYSTEM INIT] ${t.name} calling init()...`),await s.init(),console.log(`🛡️ [SUBSYSTEM INIT] ${t.name} applying bulletproof protection...`),this.subsystems[t.name]=(0,l.createBulletproofSubsystemWrapper)(s,this.logger.child({subsystem:t.name})),console.log(`✅ [SUBSYSTEM INIT] ${t.name} subsystem initialized successfully!`),this.logger.info(`${t.name} subsystem initialized successfully.`)}catch(e){console.error(`❌ [SUBSYSTEM INIT] Failed to initialize ${t.name} subsystem:`,e),this.logger.error(`Failed to initialize ${t.name} subsystem`,{error:e.message,stack:e.stack,subsystem:t.name}),console.log(`🛡️ [SUBSYSTEM INIT] Creating emergency fallback for ${t.name}...`),this.subsystems[t.name]=this.createEmergencySubsystem(t.name,e)}else console.log(`⏭️ [SUBSYSTEM INIT] Skipping ${t.name} subsystem (flag disabled)`);this.subsystems.advancedRealtime&&(this.realtimeCollaborationUI=new RealtimeCollaborationUI(this.logger,this.eventBus,this.subsystems.advancedRealtime,this.uiManager),this.realtimeCollaborationUI.init()),this.logger.info("Subsystem initialization completed (some may have failed).")}catch(e){this.logger.error("Critical error during subsystem initialization",{error:e.message,stack:e.stack}),this.logger.warn("Continuing app initialization despite subsystem errors")}try{this.logger.info("Initializing Global Token Manager..."),this.subsystems.globalTokenManager=new I.GlobalTokenManagerSubsystem(this.logger.child({subsystem:"globalTokenManager"}),this.eventBus),await this.subsystems.globalTokenManager.init(),window.globalTokenManager=this.subsystems.globalTokenManager,this.logger.info("Global Token Manager initialized successfully")}catch(e){this.logger.error("Global token manager initialization failed",e),this.subsystems.globalTokenManager={name:"EmergencyTokenManager",init:()=>Promise.resolve(!0),updateGlobalTokenStatus:()=>{try{const e=document.getElementById("global-token-status");if(e){const t=e.querySelector(".global-token-icon"),s=e.querySelector(".global-token-text");t&&(t.textContent="🛡️"),s&&(s.textContent="Token status protected")}}catch(e){console.log("🛡️ Emergency token status active")}},destroy:()=>Promise.resolve(!0)},window.globalTokenManager=this.subsystems.globalTokenManager}this.subsystems.tokenNotification=new TokenNotificationSubsystem(this.logger.child({subsystem:"token-notification"}),this.eventBus,this.subsystems.navigation),await this.subsystems.tokenNotification.init(),this.logger.debug("Token Notification subsystem initialized"),this.enhancedProgressSubsystem=new EnhancedProgressSubsystem(this.logger.child({subsystem:"enhanced-progress"}),this.uiManager,this.eventBus,this.subsystems.realtimeManager),await this.enhancedProgressSubsystem.init(),this.subsystems.enhancedProgress=this.enhancedProgressSubsystem,this.logger.debug("Enhanced Progress subsystem initialized"),this.enhancedTokenStatusSubsystem=new EnhancedTokenStatusSubsystem(this.logger.child({subsystem:"enhanced-token-status"}),this.eventBus,this.uiManager),await this.enhancedTokenStatusSubsystem.init(),this.subsystems.enhancedTokenStatus=this.enhancedTokenStatusSubsystem,this.logger.debug("Enhanced Token Status subsystem initialized"),this.logger.info("All subsystems initialized successfully",{subsystemCount:Object.keys(this.subsystems).length,enabledSubsystems:Object.keys(this.subsystems)})}setupEventListeners(){this.logger.debug("Setting up global event listeners"),window.addEventListener("error",e=>{this.logger.error("Unhandled global error:",{message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno,error:e.error?e.error.stack:"N/A"})}),window.addEventListener("unhandledrejection",e=>{this.logger.warn("Unhandled promise rejection:",{reason:e.reason?e.reason.stack:"N/A"})}),this.logger.debug("Global event listeners set up")}async handleTestConnection(){this.logger.info("🔧 SETTINGS: Testing connection..."),i.debugLog.userAction("test_connection","test-connection-btn",{timestamp:Date.now()});try{if(this.showSettingsStatus("Testing connection...","info"),this.subsystems.connectionManager&&"function"==typeof this.subsystems.connectionManager.testConnection){const e=await this.subsystems.connectionManager.testConnection();if(e.success){let t=e.message||"Success - Token minted";e.token&&e.token.timeLeft&&(t+=` - Time left: ${e.token.timeLeft}`),this.showSettingsStatus(t,"success")}else this.showSettingsStatus(`Connection test failed: ${e.error}`,"error")}else{const e=await fetch("/api/pingone/test-connection",{method:"GET",headers:{"Content-Type":"application/json"}}),t=await e.json();if(t.success){let e=t.message||"Success - Token minted";t.token&&t.token.timeLeft&&(e+=` - Time left: ${t.token.timeLeft}`),this.showSettingsStatus(e,"success")}else this.showSettingsStatus(`Connection test failed: ${t.error}`,"error")}}catch(e){this.logger.error("🔧 SETTINGS: Connection test failed",{error:e.message}),this.showSettingsStatus(`Connection test failed: ${e.message}`,"error")}}async handleGetToken(){this.logger.info("🔧 SETTINGS: Getting token..."),i.debugLog.userAction("get_token","get-token-btn",{timestamp:Date.now()});try{if(this.showSettingsStatus("Getting token...","info"),this.tokenManager&&"function"==typeof this.tokenManager.getToken){await this.tokenManager.getToken()?this.showSettingsStatus("Token acquired successfully!","success"):this.showSettingsStatus("Failed to get token","error")}else{const e=await fetch("/api/pingone/token",{method:"POST",headers:{"Content-Type":"application/json"}});(await e.json()).access_token?this.showSettingsStatus("Token acquired successfully!","success"):this.showSettingsStatus("Failed to get token","error")}}catch(e){this.logger.error("🔧 SETTINGS: Failed to get token",{error:e.message}),this.showSettingsStatus(`Failed to get token: ${e.message}`,"error")}}handleToggleSecretVisibility(){this.logger.debug("🔧 SETTINGS: Toggling secret visibility");try{const e=document.getElementById("api-secret"),t=document.getElementById("toggle-api-secret-visibility"),s=t?.querySelector("i");e&&t&&s&&("password"===e.type?(e.type="text",s.className="fas fa-eye-slash",this.logger.debug("🔧 SETTINGS: Secret visibility: shown")):(e.type="password",s.className="fas fa-eye",this.logger.debug("🔧 SETTINGS: Secret visibility: hidden")))}catch(e){this.logger.error("🔧 SETTINGS: Failed to toggle secret visibility",{error:e.message})}}showSettingsStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";try{const s=document.getElementById("settings-action-status"),n=s?.querySelector(".status-message"),i=s?.querySelector(".status-icon");if(s&&n&&i){n.textContent=e;const a={success:"fas fa-check-circle",error:"fas fa-exclamation-circle",info:"fas fa-info-circle",warning:"fas fa-exclamation-triangle"};i.className=a[t]||a.info,s.className=`action-status ${t}`,s.style.display="block","success"!==t&&"info"!==t||setTimeout(()=>{s.style.display="none"},5e3),this.logger.debug(`🔧 SETTINGS: Status shown: ${t} - ${e}`)}}catch(e){this.logger.error("🔧 SETTINGS: Failed to show status",{error:e.message})}}async directShowView(e){this.logger.info(`🔧 DIRECT NAV: Switching to view: ${e}`),i.debugLog.navigation(this.currentView,e,{method:"direct_navigation",timestamp:Date.now()});try{const t=document.querySelectorAll(".view, .view-container");this.logger.debug(`🔧 DIRECT NAV: Found ${t.length} view containers to hide`),t.forEach(e=>{e.style.display="none",e.classList.remove("active")});const s=document.getElementById(`${e}-view`);s?(s.style.display="block",s.classList.add("active"),this.logger.info(`🔧 DIRECT NAV: Successfully showed ${e}-view`),this.updateDirectNavigationState(e),this.currentView=e,this.updatePageTitle(e),this.logger.info(`🔧 DIRECT NAV: Navigation to ${e} completed successfully`)):this.logger.error(`🔧 DIRECT NAV: View element not found: ${e}-view`)}catch(t){this.logger.error(`🔧 DIRECT NAV: Failed to show view ${e}`,{error:t.message})}}updateDirectNavigationState(e){try{document.querySelectorAll("[data-view]").forEach(t=>{t.getAttribute("data-view")===e?t.classList.add("active"):t.classList.remove("active")}),this.logger.debug(`🔧 DIRECT NAV: Updated navigation state for ${e}`)}catch(e){this.logger.error("🔧 DIRECT NAV: Failed to update navigation state",{error:e.message})}}updatePageTitle(e){try{const t={home:"Home",import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History"}[e]||"PingOne Import Tool";document.title=`${t} - PingOne Import Tool v6.5.1.1`,this.logger.debug(`🔧 DIRECT NAV: Updated page title to: ${document.title}`)}catch(e){this.logger.error("🔧 DIRECT NAV: Failed to update page title",{error:e.message})}}async initializeUI(){this.logger.debug("Initializing UI"),this.subsystems.viewManager?await this.subsystems.viewManager.showView(this.currentView):await this.legacyShowView(this.currentView),this.logger.debug("UI initialized")}async showView(e){return this.logger.debug("Showing view",{view:e,useSubsystem:!!this.subsystems.viewManager}),this.subsystems.viewManager?await this.subsystems.viewManager.showView(e):await this.legacyShowView(e)}async legacyShowView(e){this.logger.debug("Using legacy view management",{view:e}),this.currentView=e}async startImport(){return this.logger.info("Starting import operation"),this.subsystems.import&&"function"==typeof this.subsystems.import.startImport?await this.subsystems.import.startImport():this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.startImport?await this.subsystems.importManager.startImport():this.importSubsystem&&"function"==typeof this.importSubsystem.startImport?await this.importSubsystem.startImport():(this.logger.warn("Using legacy import - subsystem not available"),await this.legacyStartImport())}async startExport(){return this.logger.info("Starting export operation"),this.subsystems.exportManager?await this.subsystems.exportManager.startExport():(this.logger.warn("Using legacy export - subsystem not available"),await this.legacyStartExport())}async getToken(){return this.logger.debug("Getting authentication token"),this.subsystems.authManager?await this.subsystems.authManager.getToken():(this.logger.warn("Using legacy token management - subsystem not available"),await this.tokenManager.getToken())}async legacyStartImport(){this.logger.debug("Legacy import method called")}async legacyStartExport(){this.logger.debug("Legacy export method called")}navigateToView(e){this.logger.debug("Navigating to view",{viewName:e});try{this.subsystems.viewManager?this.subsystems.viewManager.showView(e):this.legacyShowView(e),this.currentView=e,this.logger.info("Navigation completed",{viewName:e})}catch(t){this.logger.error("Navigation failed",{viewName:e,error:t.message})}}handleFileSelection(e){this.logger.debug("Handling file selection");try{const t=e.target.files;if(t&&t.length>0){const e=t[0];if(this.logger.info("File selected",{fileName:e.name,fileSize:e.size,fileType:e.type}),this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelect)this.subsystems.import.handleFileSelect(e);else if(this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelection)this.subsystems.import.handleFileSelection(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelect)this.subsystems.importManager.handleFileSelect(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelection)this.subsystems.importManager.handleFileSelection(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelect)this.importSubsystem.handleFileSelect(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelection)this.importSubsystem.handleFileSelection(e);else if(this.logger.warn("Import subsystem not available, using legacy import"),this.logger.warn("SUBSYSTEM STATUS CHECK:",{"this.subsystems":!!this.subsystems,"subsystems.import":!(!this.subsystems||!this.subsystems.import),"import.handleFileSelect":!(!this.subsystems||!this.subsystems.import||"function"!=typeof this.subsystems.import.handleFileSelect),"import.handleFileSelection":!(!this.subsystems||!this.subsystems.import||"function"!=typeof this.subsystems.import.handleFileSelection),fileHandler:!!this.fileHandler,"fileHandler.handleFile":!(!this.fileHandler||"function"!=typeof this.fileHandler.handleFile),availableSubsystems:this.subsystems?Object.keys(this.subsystems):"null"}),this.logger.debug("File handling diagnostics:",{"subsystems.import":!!this.subsystems.import,"subsystems.importManager":!!this.subsystems.importManager,importSubsystem:!!this.importSubsystem,fileHandler:!!this.fileHandler,"fileHandler.handleFile":!(!this.fileHandler||"function"!=typeof this.fileHandler.handleFile),availableSubsystems:Object.keys(this.subsystems||{})}),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)this.logger.info("Using legacy file handler"),this.fileHandler.handleFile(e);else{if(!this.fileHandler)try{if(this.logger.warn("Attempting to reinitialize file handler..."),this.fileHandler=new FileHandler(this.logger,this.uiManager),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)return this.logger.info("Emergency file handler initialized successfully"),void this.fileHandler.handleFile(e)}catch(e){this.logger.error("Failed to reinitialize file handler",{error:e.message})}this.logger.error("No file handling method available",{"subsystems.import":!!this.subsystems.import,fileHandler:!!this.fileHandler,"FileHandler class":typeof FileHandler}),this.showMessage("File handling is temporarily unavailable. Please refresh the page and try again.","error")}}}catch(e){this.logger.error("File selection handling failed",{error:e.message})}}handleFileDrop(e){this.logger.debug("Handling file drop");try{const t=e.dataTransfer.files;if(t&&t.length>0){const e=t[0];if(this.logger.info("File dropped",{fileName:e.name,fileSize:e.size,fileType:e.type}),this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelect)this.subsystems.import.handleFileSelect(e);else if(this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelection)this.subsystems.import.handleFileSelection(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelect)this.subsystems.importManager.handleFileSelect(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelection)this.subsystems.importManager.handleFileSelection(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelect)this.importSubsystem.handleFileSelect(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelection)this.importSubsystem.handleFileSelection(e);else if(this.logger.warn("Import subsystem not available, using legacy import"),this.logger.debug("File drop handling diagnostics:",{"subsystems.import":!!this.subsystems.import,"subsystems.importManager":!!this.subsystems.importManager,importSubsystem:!!this.importSubsystem,fileHandler:!!this.fileHandler,"fileHandler.handleFile":!(!this.fileHandler||"function"!=typeof this.fileHandler.handleFile),availableSubsystems:Object.keys(this.subsystems||{})}),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)this.logger.info("Using legacy file handler for drop"),this.fileHandler.handleFile(e);else{if(!this.fileHandler)try{if(this.logger.warn("Attempting to reinitialize file handler for drop..."),this.fileHandler=new FileHandler(this.logger,this.uiManager),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)return this.logger.info("Emergency file handler initialized successfully for drop"),void this.fileHandler.handleFile(e)}catch(e){this.logger.error("Failed to reinitialize file handler for drop",{error:e.message})}this.logger.error("No file handling method available for drop",{"subsystems.import":!!this.subsystems.import,fileHandler:!!this.fileHandler,"FileHandler class":typeof FileHandler}),this.showMessage("File drop handling is temporarily unavailable. Please refresh the page and try again.","error")}}}catch(e){this.logger.error("File drop handling failed",{error:e.message})}}cancelImport(){this.logger.debug("Cancelling import operation");try{this.subsystems.import&&"function"==typeof this.subsystems.import.cancelImport?this.subsystems.import.cancelImport():this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.cancelImport?this.subsystems.importManager.cancelImport():this.importSubsystem&&"function"==typeof this.importSubsystem.cancelImport?this.importSubsystem.cancelImport():(this.logger.warn("Import subsystem not available, using legacy cancel"),this.legacyCancelImport()),this.logger.info("Import cancellation requested")}catch(e){this.logger.error("Import cancellation failed",{error:e.message})}}enableToolAfterDisclaimer(){this.logger.info("Enabling tool after disclaimer acceptance");try{this.showModalLoading("Setting up...","Preparing your PingOne Import Tool experience."),this.hideStartupScreen(),this.uiManager&&"function"==typeof this.uiManager.enableUI&&this.uiManager.enableUI(),this.eventListenersSetup||(this.setupEventListeners(),this.eventListenersSetup=!0),Object.values(this.subsystems).forEach(e=>{e&&"function"==typeof e.enable&&e.enable()});const e=document.querySelector(".app-container");e&&(e.classList.remove("disabled","modal-active"),e.style.pointerEvents="auto");document.querySelectorAll("button, .btn").forEach(e=>{e.disabled=!1,e.style.pointerEvents="auto"}),this.logger.info("Tool enabled successfully after disclaimer"),setTimeout(()=>{this.hideModalLoading()},1e3)}catch(e){this.logger.error("Failed to enable tool after disclaimer",{error:e.message}),this.hideModalLoading()}}getHealthStatus(){return{initialized:this.isInitialized,subsystems:Object.keys(this.subsystems).reduce((e,t)=>(e[t]=this.subsystems[t].isInitialized||!1,e),{}),featureFlags:C,currentView:this.currentView,timestamp:(new Date).toISOString()}}showMessage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";this.logger.debug(`Showing message: ${e}`,{type:t}),this.showSettingsStatus(e,t)}createEmergencySubsystem(e,t){try{this.logger.warn(`🛡️ Creating emergency fallback for ${e}`,{originalError:t.message});const s={name:`Emergency${e.charAt(0).toUpperCase()+e.slice(1)}`,initialized:!0,emergency:!0,originalError:t.message,init:()=>Promise.resolve(!0),destroy:()=>Promise.resolve(!0),..."export"===e&&{exportUsers:()=>(this.logger.warn("🛡️ Export subsystem in emergency mode - functionality limited"),Promise.resolve({success:!1,error:"Export subsystem unavailable - please refresh the page",emergency:!0})),getExportStatus:()=>({status:"emergency",message:"Export subsystem unavailable",emergency:!0}),validateExportRequest:()=>({valid:!1,error:"Export validation unavailable in emergency mode"})},..."import"===e&&{importUsers:()=>(this.logger.warn("🛡️ Import subsystem in emergency mode - functionality limited"),Promise.resolve({success:!1,error:"Import subsystem unavailable - please refresh the page",emergency:!0})),getImportStatus:()=>({status:"emergency",message:"Import subsystem unavailable",emergency:!0})},getStatus:()=>({status:"emergency",subsystem:e,message:`${e} subsystem is in emergency mode`,error:t.message,emergency:!0}),isReady:()=>!1,hasData:()=>!1,__emergencyHandler:t=>(this.logger.warn(`🛡️ Emergency subsystem ${e}: method ${t} called`),Promise.resolve({success:!1,error:`${t} unavailable in emergency mode`,emergency:!0}))},n=(0,l.createBulletproofSubsystemWrapper)(s,this.logger.child({subsystem:`emergency-${e}`}));return this.logger.info(`🛡️ Emergency ${e} subsystem created successfully`),n}catch(t){return this.logger.error(`🛡️ Failed to create emergency subsystem for ${e}`,t),{name:`UltimateEmergency${e}`,emergency:!0,init:()=>Promise.resolve(!1),destroy:()=>Promise.resolve(!1),getStatus:()=>({status:"critical-emergency",subsystem:e})}}}cleanup(){try{this.logger.info("🛡️ Cleaning up bulletproof systems..."),this.bulletproofTokenManager&&"function"==typeof this.bulletproofTokenManager.destroy&&(this.bulletproofTokenManager.destroy(),this.logger.debug("🛡️ Bulletproof token manager cleaned up")),this.bulletproofSystem&&"function"==typeof this.bulletproofSystem.destroy&&(this.bulletproofSystem.destroy(),this.logger.debug("🛡️ Bulletproof app integration cleaned up")),this.logger.info("🛡️ Bulletproof systems cleanup completed")}catch(e){this.logger.debug("🛡️ Bulletproof cleanup failed (non-critical)",e)}}}s.App=App;s.default=App;window.App=App;const O=new App;window.app=O;try{window.addEventListener("beforeunload",()=>{window.app&&"function"==typeof window.app.cleanup&&window.app.cleanup()}),window.addEventListener("pagehide",()=>{window.app&&"function"==typeof window.app.cleanup&&window.app.cleanup()})}catch(e){console.debug("🛡️ Failed to setup cleanup listeners (non-critical)",e)}window.enableToolAfterDisclaimer=()=>{window.app&&"function"==typeof window.app.enableToolAfterDisclaimer?window.app.enableToolAfterDisclaimer():window.logger?.warn("App not available or enableToolAfterDisclaimer method not found")||console.warn("App not available or enableToolAfterDisclaimer method not found")},window.testLoading={show:(e,t)=>{window.app&&window.app.showModalLoading(e,t)},hide:()=>{window.app&&window.app.hideModalLoading()},testSequence:()=>{window.app&&(window.logger?.info("🔄 Testing loading sequence...")||console.log("🔄 Testing loading sequence..."),window.app.showModalLoading("Step 1","Testing loading overlay..."),setTimeout(()=>{window.app.showModalLoading("Step 2","Updating message..."),setTimeout(()=>{window.app.showModalLoading("Step 3","Almost done..."),setTimeout(()=>{window.app.hideModalLoading(),window.logger?.info("🔄 Loading test completed")||console.log("🔄 Loading test completed")},1500)},1500)},1500))}},window.app=null,document.addEventListener("DOMContentLoaded",async()=>{try{const e=new App;window.app=e,await e.init(),window.logger?.info("🚀 PingOne Import Tool v6.5.1.2 initialized successfully")||console.log("🚀 PingOne Import Tool v6.5.1.2 initialized successfully"),window.logger?.info("📊 Health Status:",e.getHealthStatus())||console.log("📊 Health Status:",e.getHealthStatus())}catch(e){window.logger?.error("❌ Application initialization failed:",e)||console.error("❌ Application initialization failed:",e)}})}).call(this)}).call(this,e("_process"))},{"../../public/js/modules/event-bus.js":43,"../../public/js/modules/file-logger.js":44,"../../public/js/modules/logger.js":45,"../../public/js/modules/settings-manager.js":49,"../../public/js/utils/centralized-logger.js":53,"../../public/js/utils/utility-loader.js":57,"./components/credentials-manager.js":59,"./components/ui-manager.js":60,"./subsystems/advanced-realtime-subsystem.js":61,"./subsystems/auth-management-subsystem.js":62,"./subsystems/connection-manager-subsystem.js":63,"./subsystems/global-token-manager-subsystem.js":64,"./subsystems/history-subsystem.js":65,"./subsystems/import-subsystem.js":66,"./subsystems/navigation-subsystem.js":67,"./subsystems/operation-manager-subsystem.js":68,"./subsystems/population-subsystem.js":69,"./subsystems/realtime-communication-subsystem.js":70,"./subsystems/settings-subsystem.js":71,"./subsystems/view-management-subsystem.js":72,"./utils/browser-logging-service.js":73,"./utils/bulletproof-app-integration.js":74,"./utils/bulletproof-global-handler.js":75,"./utils/bulletproof-subsystem-wrapper.js":77,"./utils/bulletproof-token-manager.js":78,"./utils/debug-logger.js":79,"./utils/local-api-client.js":80,"./utils/pingone-client.js":81,"./utils/safe-logger.js":82,"@babel/runtime/helpers/interopRequireDefault":1,_process:25}],59:[function(e,t,s){"use strict";window.CredentialsManager=class CredentialsManager{constructor(){this.storageKey="pingone-credentials",this.defaultCredentials=this.getDefaultCredentials(),this.credentials=null,this.init()}init(){this.loadCredentials(),(window.logger?.info||console.log)("Credentials Manager initialized")}getDefaultCredentials(){return{environmentId:"",apiClientId:"",apiSecret:"",region:"NorthAmerica",populationId:""}}loadCredentials(){try{const e=localStorage.getItem(this.storageKey);e?(this.credentials=JSON.parse(e),(window.logger?.debug||console.log)("Credentials loaded from localStorage")):(this.credentials=this.getDefaultCredentials(),(window.logger?.debug||console.log)("No stored credentials found, using defaults"))}catch(e){(window.logger?.warn||console.warn)("Failed to load credentials from localStorage:",e),this.credentials=this.getDefaultCredentials()}}saveCredentials(e){try{this.credentials={...this.credentials,...e},localStorage.setItem(this.storageKey,JSON.stringify(this.credentials)),(window.logger?.debug||console.log)("Credentials saved to localStorage")}catch(e){(window.logger?.error||console.error)("Failed to save credentials to localStorage:",e)}}getCredentials(){return{...this.credentials}}updateCredentials(e){this.credentials={...this.credentials,...e},this.saveCredentials(this.credentials)}clearCredentials(){try{localStorage.removeItem(this.storageKey),this.credentials=this.getDefaultCredentials(),(window.logger?.debug||console.log)("Credentials cleared")}catch(e){(window.logger?.error||console.error)("Failed to clear credentials:",e)}}hasCompleteCredentials(){return!!(this.credentials.environmentId&&this.credentials.apiClientId&&this.credentials.apiSecret)}getValidCredentials(){return this.hasCompleteCredentials()?this.getCredentials():null}validateCredentials(e){const t=[];return e.environmentId?this.isValidUUID(e.environmentId)||t.push("Environment ID must be a valid UUID"):t.push("Environment ID is required"),e.apiClientId||t.push("API Client ID is required"),e.apiSecret||t.push("API Secret is required"),e.region||t.push("Region is required"),{isValid:0===t.length,errors:t}}isValidUUID(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}exportCredentials(){return JSON.stringify(this.credentials,null,2)}importCredentials(e){try{const t=JSON.parse(e),s=this.validateCredentials(t);return s.isValid?(this.saveCredentials(t),{success:!0,message:"Credentials imported successfully"}):{success:!1,errors:s.errors}}catch(e){return{success:!1,errors:["Invalid JSON format"]}}}displayCredentialsModal(){const e=document.getElementById("credentials-modal");if(!e)return void(window.logger?.error||console.error)("Credentials modal element not found");const t=e.querySelector(".modal-content");t&&(t.innerHTML=`\n                <h3>API Credentials</h3>\n                <p><strong>Environment ID:</strong> ${this.credentials.environmentId}</p>\n                <p><strong>API Client ID:</strong> ${this.credentials.apiClientId}</p>\n                <p><strong>API Secret:</strong> ${this.credentials.apiSecret}</p>\n                <p><strong>Region:</strong> ${this.credentials.region}</p>\n                <p><strong>Population ID:</strong> ${this.credentials.populationId}</p>\n            `),e.style.display="block",(window.logger?.info||console.log)("Credentials modal displayed")}hideCredentialsModal(){const e=document.getElementById("credentials-modal");e&&(e.style.display="none",(window.logger?.info||console.log)("Credentials modal hidden"))}}},{}],60:[function(e,t,s){(function(t){(function(){"use strict";var n=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.UIManager=void 0;e("../../../public/js/modules/circular-progress.js");var i=e("../../../public/js/modules/element-registry.js"),a=(n(e("../../../public/js/modules/progress-manager.js")),e("../../../public/js/modules/error/error-types.js"),e("../../../public/js/modules/utils/safe-dom.js"));const l="development"===t.env.NODE_ENV;s.UIManager=class UIManager{constructor(){let{errorManager:e,logger:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=t?t.child({component:"UIManager"}):console,this.errorManager=e||{handleError:(e,t)=>{(window.logger?.error||console.error)("Unhandled error (no error manager):",e,t)}},this.notificationContainer=null,this.progressContainer=null,this.statusBarElement=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.initialize()}initialize(){try{this.setupElements(),this.logger.info("UI Manager initialized successfully")}catch(e){this.errorManager.handleError(e,{component:"UIManager",operation:"initialize",severity:"error",context:{message:"Failed to initialize UI Manager",error:e.message}})}}setupUI(){try{this.logger.debug("Setting up UI components..."),this.setupElements(),this.setupEventListeners(),this.initializeStatusIndicators(),this.initializeProgressTracking(),this.logger.info("UI setup completed successfully")}catch(e){this.logger.error("Error during UI setup:",e),this.errorManager.handleError(e,{component:"UIManager",operation:"setupUI",severity:"error",context:{message:"Failed to setup UI components",error:e.message}})}}setupEventListeners(){try{window.addEventListener("error",e=>{this.handleGlobalError(e.error,{type:"global_error",filename:e.filename,lineno:e.lineno,colno:e.colno})}),window.addEventListener("unhandledrejection",e=>{this.handleGlobalError(e.reason,{type:"unhandled_promise_rejection"})}),this.logger.debug("Event listeners setup completed")}catch(e){this.logger.error("Error setting up event listeners:",e)}}initializeStatusIndicators(){try{this.tokenStatusElement&&this.updateTokenStatus("checking","Checking token status..."),this.connectionStatusElement&&this.updateConnectionStatus("connecting","Connecting..."),this.logger.debug("Status indicators initialized")}catch(e){this.logger.error("Error initializing status indicators:",e)}}initializeProgressTracking(){try{this.progressContainer&&this.hideProgress(),this.logger.debug("Progress tracking initialized")}catch(e){this.logger.error("Error initializing progress tracking:",e)}}handleGlobalError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{this.logger.error("Global error caught:",{error:e.message,context:t}),this.errorManager&&"function"==typeof this.errorManager.handleError&&this.errorManager.handleError(e,{component:"UIManager",operation:"global_error_handler",severity:"error",context:t})}catch(e){console.error("Error in global error handler:",e)}}async init(){return this.initialize(),Promise.resolve()}setupElements(){try{this.logger.debug("🔧 Starting bulletproof UI elements setup..."),this.notificationContainer=this._safeGetElement(()=>i.ElementRegistry.notificationContainer?.(),"notification container"),this.statusBarElement=this._safeGetElement(()=>i.ElementRegistry.statusBar?.(),"global status bar"),this.tokenStatusElement=this._safeGetElement(()=>i.ElementRegistry.tokenStatus?.(),"token status element"),this.connectionStatusElement=this._safeGetElement(()=>i.ElementRegistry.connectionStatus?.(),"connection status element"),this.progressContainer=this._getBulletproofProgressContainer(),this.navItems=document.querySelectorAll("[data-view]")||[],this._validateProgressContainer(),this.logger.debug("✅ Bulletproof UI elements setup completed",{hasNotificationContainer:!!this.notificationContainer,hasStatusBarElement:!!this.statusBarElement,hasProgressContainer:!!this.progressContainer,progressContainerId:this.progressContainer?.id||"dynamic-created",progressContainerValid:this._isProgressContainerValid(),hasTokenStatusElement:!!this.tokenStatusElement,hasConnectionStatusElement:!!this.connectionStatusElement,navItemsCount:this.navItems?this.navItems.length:0})}catch(e){this.logger.error("🚨 Critical error in UI elements setup - applying emergency fallbacks",{error:e.message}),this._applyEmergencyFallbacks()}}showStatusBar(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{duration:i=5e3,autoDismiss:l=!0,errorId:c,context:g={}}=n;try{const n={info:"info",success:"info",warning:"warn",error:"error"}[s]||"log",u={messageType:s,...c&&{errorId:c},...g};if(this.logger[n](`Status: ${e}`,u),!this.statusBarElement)return void this.logger.debug("Status bar element not available in current view",u);this.statusBarTimer&&(clearTimeout(this.statusBarTimer),this.statusBarTimer=null);const d=window.safeDOM||new a.SafeDOM(this.logger),h=window.errorHandler||new ErrorHandler(this.logger),p=window.UI_CONFIG||{CLASSES:{ERROR:"error",SUCCESS:"success"}};d.setHTML(this.statusBarElement,"");const m=document.createElement("span");d.addClass(m,"status-message");let f=e;if(s===p.CLASSES.ERROR&&c&&(f+=` (Error ID: ${c})`,"development"===t.env.NODE_ENV&&Object.keys(g).length>0&&(f+=`\n${JSON.stringify(g,null,2)}`)),d.setText(m,f),this.statusBarElement.appendChild(m),s===p.CLASSES.ERROR||"warning"===s){const e=document.createElement("button");d.addClass(e,"status-dismiss"),d.setHTML(e,"&times;"),e.setAttribute("aria-label","Dismiss message"),e.onclick=h.wrapEventHandler(()=>this.clearStatusBar(),"Status bar dismiss button click"),this.statusBarElement.appendChild(e)}this.statusBarElement.className=`status-bar status-bar-${s} visible`;l&&("success"===s||"info"===s)&&(this.statusBarTimer=setTimeout(()=>{this.clearStatusBar()},i))}catch(t){this.errorManager.handleError(t,{component:"UIManager",operation:"showStatusBar",severity:"warning",context:{originalMessage:e,type:s,options:n,errorMessage:t.message}}),(window.logger?.error||console.error)("Failed to show status bar:",t),(window.logger?.debug||console.log)("Original message:",e);try{this.statusBarElement&&(this.statusBarElement.textContent=`Error: ${e.substring(0,100)}`,this.statusBarElement.className="status-bar status-bar-error visible")}catch(e){(window.logger?.error||console.error)("Completely failed to show status bar:",e)}}}clearStatusBar(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{if(this.statusBarTimer&&(clearTimeout(this.statusBarTimer),this.statusBarTimer=null),!this.statusBarElement)return void this.logger.debug("Status bar element not found during clear");const{force:t=!1}=e,s=window.safeDOM||new a.SafeDOM(this.logger),n=window.UI_CONFIG||{TIMEOUTS:{ANIMATION:300}};t?(s.setHTML(this.statusBarElement,""),this.statusBarElement.className="status-bar",this.logger.debug("Status bar cleared immediately")):(s.removeClass(this.statusBarElement,"visible"),setTimeout(()=>{this.statusBarElement&&(s.setHTML(this.statusBarElement,""),this.statusBarElement.className="status-bar")},n.TIMEOUTS?.ANIMATION||300),this.logger.debug("Status bar cleared with animation"))}catch(t){this.errorManager.handleError(t,{component:"UIManager",operation:"clearStatusBar",severity:"warning",context:{options:e,errorMessage:t.message}});try{this.statusBarElement&&(this.statusBarElement.innerHTML="",this.statusBarElement.className="status-bar")}catch(e){(window.logger?.error||console.error)("Failed to clear status bar:",e)}}}showSuccess(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.showStatusBar(e,"success"),this.logger.info("Success message shown",{message:e,...t})}showWarning(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.showStatusBar(e,"warning"),this.logger.warn("Warning message shown",{message:e,...t})}showInfo(e){this.showStatusBar(e,"info")}showError(e){let t,s,n,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e instanceof Error)s=e,t=e.message,n="object"==typeof i&&null!==i?i:{};else if("string"==typeof e&&i instanceof Error)s=i,t=`${e}: ${i.message}`,n={};else if("string"==typeof e&&"string"==typeof i)t=`${e}: ${i}`,s=new Error(t),s.name=e,n={};else{if("string"!=typeof e){const t=new Error("Invalid parameters passed to showError");return void this.errorManager.handleError(t,{component:"UIManager",operation:"showError",severity:"error",context:{error:e,details:i,options:a}})}t=e,s=new Error(t),n="object"==typeof i&&null!==i?i:{}}const l={...n,...a.context};!1!==a.reportToServer&&this.errorManager.handleError(s,{component:a.component||"UIManager",operation:a.operation||"showError",severity:"error",context:l}),this.showStatusBar(t,"error",{autoDismiss:!1,errorId:a.errorId,context:l,...a}),this.logger.error("Error message shown",{error:t,name:s.name,stack:s.stack,...l})}catch(e){(window.logger?.error||console.error)("Error in showError:",e);try{const t="An error occurred";this.showStatusBar(t,"error",{autoDismiss:!1,context:{originalError:e instanceof Error?e.message:String(e),timestamp:(new Date).toISOString()}})}catch(e){(window.logger?.error||console.error)("Completely failed to show error:",e)}}hideLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.clearStatusBar(),e&&this.showSuccess(e),this.logger.debug("Loading indicator hidden")}updateProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() called with:",{current:e,total:t,message:s}),!this.progressContainer)return(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found in updateProgress"),void this.logger.warn("Progress container not found");(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container found, calculating percentage...");const n=t>0?Math.round(e/t*100):0;(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Calculated percentage:",n);const i=window.safeDOM||new a.SafeDOM(this.logger),l=window.UI_CONFIG||{SELECTORS:{PROGRESS_BAR_FILL:".progress-bar-fill",PROGRESS_PERCENTAGE:".progress-percentage",PROGRESS_TEXT:".progress-text"}},c=i.select(l.SELECTORS.PROGRESS_BAR_FILL,this.progressContainer);if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar element:",c),c)try{c.style.width=`${n}%`,(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar updated to:",`${n}%`)}catch(e){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar update failed:",e.message)}else(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar element not found - container may not be fully initialized");const g=i.select(l.SELECTORS.PROGRESS_PERCENTAGE,this.progressContainer);if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage element:",g),g)try{i.setText(g,`${n}%`),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage text updated to:",`${n}%`)}catch(e){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage text update failed:",e.message)}else(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage element not found - container may not be fully initialized");const u=i.select(l.SELECTORS.PROGRESS_TEXT,this.progressContainer);if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element:",u),u&&s)try{i.setText(u,s),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text updated to:",s)}catch(e){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text update failed:",e.message)}else u?(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element found but no message provided"):(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element not found - container may not be fully initialized");this.logger.debug("Progress updated",{current:e,total:t,percentage:n,message:s}),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() completed")}updateTokenStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.tokenStatusElement?(this.tokenStatusElement.className=`token-status ${e}`,this.tokenStatusElement.textContent=t||e,this.logger.debug("Token status updated",{status:e,message:t})):this.logger.warn("Token status element not found")}updateConnectionStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.connectionStatusElement?(this.connectionStatusElement.className=`connection-status ${e}`,this.connectionStatusElement.textContent=t||e,this.logger.debug("Connection status updated",{status:e,message:t})):this.logger.warn("Connection status element not found")}showCurrentTokenStatus(e){if(!e)return void this.logger.warn("No token info provided");const{isValid:t,expiresAt:s,timeRemaining:n}=e;if(!t)return void this.updateTokenStatus("expired","");const i=n?` (${n})`:"";this.updateTokenStatus("valid",`Token valid${i}`),this.logger.info("Current token status displayed",{isValid:t,expiresAt:s,timeRemaining:n})}updateUniversalTokenStatus(e){const t=document.getElementById("token-status-indicator");if(!t)return void this.logger.warn("Token status indicator not found");if(!e)return void(t.style.display="none");const{isValid:s,expiresAt:n,timeRemaining:i}=e,a=t.querySelector(".token-status-content");if(a){const e=a.querySelector(".token-status-icon"),t=a.querySelector(".token-status-text"),n=a.querySelector(".token-status-time");s?(e.textContent="✅",t.textContent="Token valid",n.textContent=i||""):(e.textContent="❌",t.textContent="",t.style.visibility="hidden",n.textContent="")}t.style.display="block",this.logger.debug("Token status indicator updated",{isValid:s,timeRemaining:i})}updateHomeTokenStatus(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const s=document.getElementById("home-token-status");if(!s)return void(window.logger?.error||console.log)("❌ home-token-status element not found!");(window.logger?.debug||console.log)("✅ Found home-token-status element:",s);let n=!1,i="btn-danger",a="Get New Token";try{if(n=this.checkForStashedToken(),!n&&window.app&&window.app.pingOneClient){const e=window.app.pingOneClient.getCurrentTokenTimeRemaining();e&&e.token&&!e.isExpired&&(n=!0)}n&&(i="btn-success",a="Token Valid")}catch(e){(window.logger?.error||console.log)("Error checking token status:",e)}const l=document.querySelector(".sidebar");if(l&&s.parentNode!==l&&(l.appendChild(s),(window.logger?.debug||console.log)("✅ Moved home-token-status to bottom of sidebar")),!document.getElementById("debug-home-token-status-label")){const e=document.createElement("div");e.id="debug-home-token-status-label",e.style.cssText="\n                position: absolute !important;\n                top: -30px !important;\n                left: 0 !important;\n                background: #ff0000 !important;\n                color: #ffffff !important;\n                padding: 4px 8px !important;\n                font-size: 12px !important;\n                font-weight: bold !important;\n                border: 2px solid #000 !important;\n                z-index: 9999 !important;\n                white-space: nowrap !important;\n                pointer-events: none !important;\n            ",e.textContent="DEBUG: home-token-status CONTAINER",s.style.cssText="\n                position: relative !important;\n                background: #ffffcc !important;\n                border: 1px solid #dee2e6 !important;\n                border-radius: 6px !important;\n                padding: 2px !important;\n                width: fit-content !important;\n                height: auto !important;\n                display: block !important;\n                overflow: visible !important;\n                margin-top: auto !important;\n            ",s.appendChild(e),(window.logger?.debug||console.log)("✅ Added debug label to home-token-status container")}if(e)s.innerHTML="";else{s.innerHTML=`\n                <div id="token-status-indicator" class="token-status-indicator valid" role="status" aria-live="polite" style="display: block !important; padding: 0 !important; margin: 0 !important; background: none !important; border: none !important;">\n                    <button id="get-token-btn" class="btn ${i}" style="font-size: 14px !important; padding: 8px 16px !important; margin: 0 !important; font-weight: 500 !important; border-radius: 6px !important; box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important; transition: all 0.2s ease !important;">\n                        <i class="fas fa-key"></i> ${a}\n                    </button>\n                </div>\n            `;const e=document.getElementById("get-token-btn");e&&e.addEventListener("click",()=>{window.tokenStatusIndicator&&"function"==typeof window.tokenStatusIndicator.getNewToken?window.tokenStatusIndicator.getNewToken():"function"==typeof this.getNewToken&&this.getNewToken()})}s.style.display="block",this.logger.debug("Home token status updated",{isLoading:e,message:t,hasValidToken:n,buttonClass:i})}checkForStashedToken(){try{if("undefined"==typeof localStorage)return!1;const e=localStorage.getItem("pingone_worker_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return!1;const s=parseInt(t,10),n=Date.now();return!(isNaN(s)||n>=s-3e5)}catch(e){return(window.logger?.error||console.error)("Error checking for stashed token:",e),!1}}updateSettingsSaveStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";const s=document.querySelector(".settings-save-status");if(!s)return void this.logger.warn("Settings save status element not found");s.className=`settings-save-status ${t} show`;const n=this.getStatusIcon(t);s.innerHTML=`\n            <span>${e}</span>\n            <i class="fas ${n}"></i>\n        `,"success"===t&&setTimeout(()=>{s.classList.remove("show")},3e3),this.logger.info("Settings save status updated",{message:e,type:t})}showSettingsActionStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";const s=document.getElementById("settings-action-status");if(!s)return void this.logger.warn("Settings action status element not found");s.innerHTML="",s.className=`settings-action-status ${t}`;const n=document.createElement("div");n.className="status-content";const i=document.createElement("span");i.textContent=e,n.appendChild(i);const a=document.createElement("i");a.className=`fas ${this.getStatusIcon(t)}`,n.appendChild(a),s.appendChild(n),s.style.display="block",this.logger.info("Settings action status shown",{message:e,type:t,autoDismiss:!1})}getStatusIcon(e){const t={success:"fa-check-circle",error:"fa-times-circle",warning:"fa-exclamation-triangle",info:"fa-info-circle"};return t[e]||t.info}hideSettingsActionStatus(){const e=document.getElementById("settings-action-status");e&&(e.style.display="none",this.logger.debug("Settings action status hidden"))}showImportStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=document.getElementById("import-status");if(!n)return void this.logger.warn("Import status element not found");n.style.display="block",n.className=`import-status ${e}`;const i=n.querySelector(".status-text");i&&(i.textContent=t||e),this.logger.info("Import status shown",{status:e,message:t,details:s})}clearNotifications(){this.notificationContainer&&(this.notificationContainer.innerHTML="",this.logger.debug("All notifications cleared")),this.clearStatusBar()}hideProgress(){if(this.progressContainer){(window.safeDOM||new a.SafeDOM(this.logger)).hide(this.progressContainer),this.logger.debug("Progress display hidden")}}showProgress(){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] showProgress() called"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] this.progressContainer:",this.progressContainer);let e=this.progressContainer;if(e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found in UI manager, trying direct access..."),e=document.getElementById("progress-container")),e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found by ID, trying ElementRegistry..."),void 0!==i.ElementRegistry&&i.ElementRegistry.progressContainer&&(e=i.ElementRegistry.progressContainer())),e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found by ElementRegistry, trying class selector..."),e=document.querySelector(".progress-container")),!e)return(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Progress container not found by any method"),(window.logger?.error||console.error)('🔍 [UI MANAGER DEBUG] Available containers with "progress" in ID:',Array.from(document.querySelectorAll('[id*="progress"]')).map(e=>e.id)),void(window.logger?.error||console.error)('🔍 [UI MANAGER DEBUG] Available containers with "progress" in class:',Array.from(document.querySelectorAll('[class*="progress"]')).map(e=>({id:e.id,className:e.className})));(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container found, showing..."),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Current display style:",e.style.display),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Current visibility:",null!==e.offsetParent?"visible":"hidden"),e.style.display="block",e.style.visibility="visible",e.style.opacity="1",e.classList.remove("hidden","d-none"),e.classList.add("visible"),e.offsetHeight,(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Display style after setting to block:",e.style.display),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Container visibility:",null!==e.offsetParent?"visible":"hidden"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Container dimensions:",{offsetWidth:e.offsetWidth,offsetHeight:e.offsetHeight,clientWidth:e.clientWidth,clientHeight:e.clientHeight}),null!==e.offsetParent&&e.scrollIntoView({behavior:"smooth",block:"center"}),this.progressContainer=e,this.logger.debug("Progress display shown"),setTimeout(()=>{const t=null!==e.offsetParent,s=e.getBoundingClientRect();(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Final verification:",{isVisible:t,dimensions:{width:s.width,height:s.height},display:e.style.display,computedDisplay:window.getComputedStyle(e).display})},100)}setButtonLoading(e,t){const s=document.getElementById(e);s?(t?(s.disabled=!0,s.innerHTML='<i class="fas fa-spinner fa-spin"></i> Loading...',s.classList.add("loading")):(s.disabled=!1,s.innerHTML=s.getAttribute("data-original-text")||"Submit",s.classList.remove("loading")),this.logger.debug("Button loading state updated",{buttonId:e,isLoading:t})):"get-token-quick"===e?this.logger.debug(`Button with ID '${e}' not found (may be hidden)`):this.logger.warn(`Button with ID '${e}' not found`)}updatePopulationFields(e){if(!e||!Array.isArray(e))return void this.logger.warn("Invalid populations data provided");const t=document.querySelectorAll('select[id*="population"]');t.forEach(t=>{const s=t.value;t.innerHTML="";const n=document.createElement("option");n.value="",n.textContent="Select a population...",t.appendChild(n),e.forEach(e=>{const s=document.createElement("option");s.value=e.id,s.textContent=e.name,t.appendChild(s)}),s&&t.querySelector(`option[value="${s}"]`)&&(t.value=s)}),this.logger.info("Population fields updated",{populationCount:e.length,selectCount:t.length})}showNotification(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"info",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this.notificationContainer)return void this.logger.warn("Notification container not found");this.notificationContainer.innerHTML="";const i=document.createElement("div");i.className="status-content";const a=document.createElement("i");a.className=`fas ${this.getStatusIcon(s)}`,i.appendChild(a);const l=document.createElement("span");l.textContent=e&&t?`${e}: ${t}`:e||t,i.appendChild(l),this.notificationContainer.appendChild(i);const c=!1!==n.autoDismiss&&"error"!==s&&"success"!==s;if(c){const e=n.duration||5e3;setTimeout(()=>{this.notificationContainer&&this.notificationContainer.contains(i)&&(this.notificationContainer.innerHTML="")},e)}this.logger.info("Status header updated",{title:e,message:t,type:s,autoDismiss:c})}updateImportProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";if(this.updateProgress(e,t,s),n&&"object"==typeof n&&Object.entries(n).forEach(e=>{let[t,s]=e;const n=document.querySelector(`.stat-value.${t}`);n&&(n.textContent=s||0)}),i||a){const e=document.querySelector(".detail-value.population-info");e&&(e.textContent=i||a||"Unknown")}this.logger.debug("Import progress updated",{current:e,total:t,message:s,counts:n,populationName:i,populationId:a})}startImportOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] startImportOperation() called with options:",e);const{operationType:t,totalUsers:s,populationName:n,populationId:i}=e;(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] About to call showProgress()..."),this.showProgress(),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] showProgress() completed"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] About to call updateProgress()..."),this.updateProgress(0,s||0,"Starting import operation..."),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() completed");const a=document.querySelector(".detail-value.operation-type");(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Operation type element:",a),a?(a.textContent=t||"Import",(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Operation type updated to:",t||"Import")):(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Operation type element not found"),this.logger.info("Import operation started",{operationType:t,totalUsers:s,populationName:n,populationId:i}),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] startImportOperation() completed")}updateImportOperationWithSessionId(e){if(!e)return void this.logger.warn("No session ID provided for import operation");const t=document.querySelector(".detail-value.session-id");t&&(t.textContent=e),this.logger.info("Import operation session ID updated",{sessionId:e})}startExportOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:s}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting export operation...");const n=document.querySelector(".detail-value.operation-type");n&&(n.textContent="Export"),this.logger.info("Export operation started",{totalUsers:t,populationName:s})}startDeleteOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:s}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting delete operation...");const n=document.querySelector(".detail-value.operation-type");n&&(n.textContent="Delete"),this.logger.info("Delete operation started",{totalUsers:t,populationName:s})}startModifyOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:s}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting modify operation...");const n=document.querySelector(".detail-value.operation-type");n&&(n.textContent="Modify"),this.logger.info("Modify operation started",{totalUsers:t,populationName:s})}completeOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{processed:t,success:s,failed:n,skipped:i}=e;this.updateProgress(t||0,t||0,"Operation completed");const a=`Operation completed: ${s||0} successful, ${n||0} failed, ${i||0} skipped`;this.showSuccess(a),setTimeout(()=>{this.hideProgress()},2e3),this.logger.info("Operation completed",{processed:t,success:s,failed:n,skipped:i})}handleDuplicateUsers(e,t){if(!e||0===e.length)return void this.logger.warn("No duplicates provided for handling");const s=`Found ${e.length} duplicate users. How would you like to proceed?`;this.showWarning(s),this.logger.info("Duplicate users found",{count:e.length}),t&&"function"==typeof t&&t("skip")}debugLog(e,t){l&&this.logger.debug(`[${e}] ${t}`)}showStatusMessage(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const n=s?`${t}: ${s}`:t;this.showNotification("Status Update",n,e)}showExportStatus(){this.showProgress(),this.updateProgress(0,100,"Preparing export..."),this.logger.info("Export status shown")}showStartupWaitScreen(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Initializing application...";try{let t=document.getElementById("startup-wait-screen");if(t){const s=t.querySelector(".startup-message");s&&(s.textContent=e)}else t=document.createElement("div"),t.id="startup-wait-screen",t.className="startup-wait-screen",t.innerHTML=`\n                    <div class="startup-content">\n                        <div class="startup-spinner"></div>\n                        <div class="startup-message">${e}</div>\n                    </div>\n                `,document.body.appendChild(t);t.style.display="flex",this.logger.debug("Startup wait screen shown",{message:e})}catch(e){this.logger.error("Error showing startup wait screen:",e)}}hideStartupWaitScreen(){try{const e=document.getElementById("startup-wait-screen");e&&(e.style.display="none",this.logger.debug("Startup wait screen hidden"))}catch(e){this.logger.error("Error hiding startup wait screen:",e)}}updateStartupMessage(e){try{const t=document.getElementById("startup-wait-screen");if(t){const s=t.querySelector(".startup-message");s?(s.textContent=e,this.logger.debug("Startup message updated",{message:e})):this.logger.warn("Startup message element not found")}else this.showStartupWaitScreen(e)}catch(e){this.logger.error("Error updating startup message:",e)}}updateExportProgress(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.updateProgress(e,t,s),n&&"object"==typeof n&&Object.entries(n).forEach(e=>{let[t,s]=e;const n=document.querySelector(`.stat-value.${t}`);n&&(n.textContent=s||0)}),this.logger.debug("Export progress updated",{current:e,total:t,message:s,counts:n})}showDeleteStatus(e,t,s){this.showProgress(),this.updateProgress(0,e||0,"Preparing delete operation...");const n=document.querySelector(".detail-value.operation-type");n&&(n.textContent="Delete"),this.logger.info("Delete status shown",{totalUsers:e,populationName:t,populationId:s})}updateDeleteProgress(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";this.updateProgress(e,t,s),n&&"object"==typeof n&&Object.entries(n).forEach(e=>{let[t,s]=e;const n=document.querySelector(`.stat-value.${t}`);n&&(n.textContent=s||0)}),this.logger.debug("Delete progress updated",{current:e,total:t,message:s,counts:n,populationName:i,populationId:a})}showModifyStatus(e){this.showProgress(),this.updateProgress(0,e||0,"Preparing modify operation...");const t=document.querySelector(".detail-value.operation-type");t&&(t.textContent="Modify"),this.logger.info("Modify status shown",{totalUsers:e})}updateModifyProgress(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.updateProgress(e,t,s),n&&"object"==typeof n&&Object.entries(n).forEach(e=>{let[t,s]=e;const n=document.querySelector(`.stat-value.${t}`);n&&(n.textContent=s||0)}),this.logger.debug("Modify progress updated",{current:e,total:t,message:s,counts:n})}_getBulletproofProgressContainer(){const e=[()=>{const e=i.ElementRegistry.progressContainer?.();return e?(this.logger.debug("✅ Progress container found via ElementRegistry"),e):null},()=>{const e=["import-progress-container","export-progress-container","delete-progress-container","modify-progress-container","progress-container"];for(const t of e){const e=document.getElementById(t);if(e)return this.logger.debug(`✅ Progress container found by ID: ${t}`),e}return null},()=>{const e=[".progress-container",".import-progress",".export-progress",".progress-wrapper","[data-progress-container]"];for(const t of e){const e=document.querySelector(t);if(e)return this.logger.debug(`✅ Progress container found by selector: ${t}`),e}return null},()=>{const e=["#import-section","#export-section",".main-content",".content-area","main"];for(const t of e){const e=document.querySelector(t);if(e){const s=e.querySelector('.progress-container, [id*="progress"]');if(s)return this.logger.debug(`✅ Progress container found in parent: ${t}`),s}}return null},()=>{const e=document.querySelectorAll('[id*="progress"], [class*="progress"], [data-progress]');for(const t of e)if(t.querySelector(".progress-bar-fill, .progress-percentage, .progress-text"))return this.logger.debug("✅ Progress container found by progress-related attributes"),t;return null},()=>(this.logger.warn("🔧 No existing progress container found - creating dynamic container"),this._createDynamicProgressContainer())];for(let t=0;t<e.length;t++)try{const s=e[t]();if(s)return this.logger.debug(`🎯 Progress container acquired using strategy ${t+1}`),s}catch(e){this.logger.warn(`⚠️ Strategy ${t+1} failed:`,e.message)}return this.logger.error("🚨 CRITICAL: All progress container strategies failed - this should be impossible!"),this._createEmergencyProgressContainer()}_createDynamicProgressContainer(){try{const e=document.createElement("div");return e.id="ui-manager-dynamic-progress-container",e.className="progress-container dynamic-created",e.style.cssText="\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                background: white;\n                border: 1px solid #ddd;\n                border-radius: 8px;\n                padding: 20px;\n                box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n                z-index: 10000;\n                min-width: 300px;\n                display: none;\n            ",e.innerHTML='\n                <div class="progress-header">\n                    <h3>Progress</h3>\n                </div>\n                <div class="progress-bar-container" style="background: #f0f0f0; border-radius: 4px; height: 20px; margin: 10px 0;">\n                    <div class="progress-bar-fill" style="background: #007bff; height: 100%; border-radius: 4px; width: 0%; transition: width 0.3s ease;"></div>\n                </div>\n                <div class="progress-info">\n                    <div class="progress-percentage" style="font-weight: bold; text-align: center;">0%</div>\n                    <div class="progress-text" style="margin-top: 5px; font-size: 14px; color: #666;">Initializing...</div>\n                </div>\n            ',document.body.appendChild(e),this.logger.debug("✅ Dynamic progress container created successfully"),e}catch(e){return this.logger.error("🚨 Failed to create dynamic progress container:",e),this._createEmergencyProgressContainer()}}_createEmergencyProgressContainer(){const e=document.createElement("div");return e.id="emergency-progress-container",e.innerHTML='\n            <div class="progress-bar-fill" style="width: 0%;"></div>\n            <div class="progress-percentage">0%</div>\n            <div class="progress-text">Ready</div>\n        ',e.style.display="none",document.body.appendChild(e),this.logger.warn("🚨 Emergency progress container created"),e}_validateProgressContainer(){if(!this.progressContainer)return this.logger.error("🚨 Progress container validation failed - container is null"),!1;const e=[{selector:".progress-bar-fill",name:"progress bar fill"},{selector:".progress-percentage",name:"progress percentage"},{selector:".progress-text",name:"progress text"}];let t=!0;const s=[];for(const{selector:n,name:i}of e){this.progressContainer.querySelector(n)||(s.push(i),t=!1)}return t?this.logger.debug("✅ Progress container validation passed"):(this.logger.warn("⚠️ Progress container missing elements:",s),this._addMissingProgressElements(s)),t}_addMissingProgressElements(e){try{if(e.includes("progress bar fill")){const e=document.createElement("div");e.className="progress-bar-fill",e.style.cssText="width: 0%; height: 20px; background: #007bff; border-radius: 4px; transition: width 0.3s ease;",this.progressContainer.appendChild(e)}if(e.includes("progress percentage")){const e=document.createElement("div");e.className="progress-percentage",e.style.cssText="font-weight: bold; text-align: center; margin: 5px 0;",e.textContent="0%",this.progressContainer.appendChild(e)}if(e.includes("progress text")){const e=document.createElement("div");e.className="progress-text",e.style.cssText="font-size: 14px; color: #666; text-align: center;",e.textContent="Ready",this.progressContainer.appendChild(e)}this.logger.debug("✅ Missing progress elements added successfully")}catch(e){this.logger.error("🚨 Failed to add missing progress elements:",e)}}_isProgressContainerValid(){return this.progressContainer&&this.progressContainer.querySelector(".progress-bar-fill")&&this.progressContainer.querySelector(".progress-percentage")&&this.progressContainer.querySelector(".progress-text")}_safeGetElement(e,t){try{const s=e();return s?this.logger.debug(`✅ ${t} found`):this.logger.debug(`⚠️ ${t} not found`),s}catch(e){return this.logger.warn(`⚠️ Error getting ${t}:`,e.message),null}}_applyEmergencyFallbacks(){try{this.logger.warn("🚨 Applying emergency fallbacks..."),this.progressContainer||(this.progressContainer=this._createEmergencyProgressContainer()),this.navItems||(this.navItems=[]),this.logger.debug("✅ Emergency fallbacks applied successfully")}catch(e){this.logger.error("🚨 CRITICAL: Emergency fallbacks failed:",e),this.progressContainer=document.createElement("div"),this.navItems=[]}}}}).call(this)}).call(this,e("_process"))},{"../../../public/js/modules/circular-progress.js":39,"../../../public/js/modules/element-registry.js":41,"../../../public/js/modules/error/error-types.js":42,"../../../public/js/modules/progress-manager.js":47,"../../../public/js/modules/utils/safe-dom.js":51,"@babel/runtime/helpers/interopRequireDefault":1,_process:25}],61:[function(e,t,s){"use strict";function safeEmit(e,t,s){e&&"function"==typeof e.emit&&e.emit(t,s)}Object.defineProperty(s,"__esModule",{value:!0}),s.AdvancedRealtimeSubsystem=void 0;s.AdvancedRealtimeSubsystem=class AdvancedRealtimeSubsystem{constructor(e,t,s,n,i){this.logger=e&&"function"==typeof e.info?e:{info:()=>{},warn:()=>{},debug:()=>{},error:()=>{}},this.eventBus=t,this.realtimeCommunication=s,this.sessionSubsystem=n,this.progressSubsystem=i,this.activeOperations=new Map,this.activeUsers=new Map,this.collaborationRooms=new Map,this.sharedOperations=new Map,this.liveProgressStreams=new Map,this.notificationQueues=new Map,this.analyticsStreams=new Map,this.config={maxUsersPerRoom:10,progressUpdateInterval:1e3,presenceUpdateInterval:5e3,notificationRetention:100,analyticsBufferSize:1e3},this.isInitialized=!1,this.currentRoom=null,this.currentUser=null,this.analyticsDashboard={getAnalyticsDashboardData:()=>({systemMetrics:{},operationSummary:{},recentActivity:[]})},this.sharedProgress=new Map,this.logger.info("Advanced Real-time Features Subsystem initialized")}async init(){try{this.setupEventBusListeners(),await this.initializePresenceSystem(),await this.initializeLiveProgressSharing(),await this.initializeNotificationSystem(),await this.initializeCollaborativeOperations(),await this.initializeLiveAnalytics(),this.logger.info("Advanced Real-time Features Subsystem initialized successfully"),safeEmit(this.eventBus,"subsystem:ready",{subsystem:"advanced-realtime"})}catch(e){throw this.logger.error("Failed to initialize Advanced Real-time Features Subsystem",e),safeEmit(this.eventBus,"subsystem:error",{subsystem:"advanced-realtime",error:e}),e}}setupEventBusListeners(){this.logger.debug("Setting up EventBus listeners for advanced real-time features"),this.eventBus.on("session:user-joined",e=>this.handleUserJoined(e)),this.eventBus.on("session:user-left",e=>this.handleUserLeft(e)),this.eventBus.on("session:activity-update",e=>this.handleActivityUpdate(e)),this.eventBus.on("operation:started",e=>this.handleOperationStarted(e)),this.eventBus.on("operation:progress",e=>this.handleOperationProgress(e)),this.eventBus.on("operation:completed",e=>this.handleOperationCompleted(e)),this.eventBus.on("operation:failed",e=>this.handleOperationFailed(e)),this.eventBus.on("progress:updated",e=>this.handleProgressUpdate(e)),this.eventBus.on("progress:milestone",e=>this.handleProgressMilestone(e)),this.eventBus.on("analytics:metric-update",e=>this.handleAnalyticsUpdate(e)),this.eventBus.on("analytics:performance-data",e=>this.handlePerformanceData(e)),this.logger.debug("EventBus listeners set up for advanced real-time features")}async initializePresenceSystem(){this.logger.debug("Initializing multi-user presence system"),this.presenceInterval=setInterval(()=>{this.broadcastPresence()},this.config.presenceUpdateInterval),this.realtimeCommunication.on("user-presence",e=>{this.handlePresenceUpdate(e)}),this.realtimeCommunication.on("user-connected",e=>{this.handleUserConnected(e)}),this.realtimeCommunication.on("user-disconnected",e=>{this.handleUserDisconnected(e)}),this.logger.debug("Multi-user presence system initialized")}async initializeLiveProgressSharing(){this.logger.debug("Initializing live progress sharing"),this.progressInterval=setInterval(()=>{this.streamProgressUpdates()},this.config.progressUpdateInterval),this.realtimeCommunication.on("progress-update",e=>{this.handleSharedProgressUpdate(e)}),this.realtimeCommunication.on("progress-sync-request",e=>{this.handleProgressSyncRequest(e)}),this.logger.debug("Live progress sharing initialized")}broadcastPresence(){try{if(!this.currentRoom||!this.currentUser)return;const e={roomId:this.currentRoom,userId:this.currentUser.id||"anonymous",userName:this.currentUser.name||"Anonymous User",status:"active",lastActivity:(new Date).toISOString(),timestamp:(new Date).toISOString()};this.realtimeCommunication.emit("user-presence",e),this.activeUsers.set(e.userId,{...e,joinedAt:this.activeUsers.get(e.userId)?.joinedAt||new Date}),safeEmit(this.eventBus,"realtime:presence-broadcasted",e),this.logger.debug("Presence broadcasted",{roomId:this.currentRoom,userId:e.userId})}catch(e){this.logger.error("Failed to broadcast presence",e)}}streamProgressUpdates(){try{if(!this.currentRoom||!this.progressSubsystem)return;const e=this.progressSubsystem.getCurrentProgress();if(e&&e.isActive){const t={roomId:this.currentRoom,userId:this.currentUser?.id||"anonymous",userName:this.currentUser?.name||"Anonymous User",progress:{operationType:e.operationType,percentage:e.percentage,currentStep:e.currentStep,totalSteps:e.totalSteps,message:e.message,timestamp:(new Date).toISOString()}};this.realtimeCommunication.emit("progress-update",t),this.sharedProgress.set(t.userId,t.progress),safeEmit(this.eventBus,"realtime:progress-streamed",t),this.logger.debug("Progress update streamed",{roomId:this.currentRoom,userId:t.userId,percentage:e.percentage})}}catch(e){this.logger.error("Failed to stream progress updates",e)}}async initializeNotificationSystem(){this.logger.debug("Initializing real-time notification system"),this.realtimeCommunication.on("notification",e=>{this.handleIncomingNotification(e)}),this.eventBus.on("notification:send",e=>{this.broadcastNotification(e)}),this.logger.debug("Real-time notification system initialized")}async initializeCollaborativeOperations(){this.logger.debug("Initializing collaborative operation management"),this.realtimeCommunication.on("operation-request",e=>{this.handleOperationRequest(e)}),this.realtimeCommunication.on("operation-lock",e=>{this.handleOperationLock(e)}),this.realtimeCommunication.on("operation-unlock",e=>{this.handleOperationUnlock(e)}),this.logger.debug("Collaborative operation management initialized")}async initializeLiveAnalytics(){this.logger.debug("Initializing live analytics streaming"),this.analyticsInterval=setInterval(()=>{this.streamAnalyticsData()},5e3),this.realtimeCommunication.on("analytics-update",e=>{this.handleAnalyticsStreamUpdate(e)}),this.logger.debug("Live analytics streaming initialized")}streamAnalyticsData(){try{if(!this.currentRoom||!this.analyticsDashboard)return;const e=this.analyticsDashboard.getAnalyticsDashboardData("5m");if(e){const t={roomId:this.currentRoom,userId:this.currentUser?.id||"anonymous",analytics:{systemMetrics:e.systemMetrics,operationSummary:e.operationSummary,recentActivity:e.recentActivity?.slice(0,5),timestamp:(new Date).toISOString()}};this.realtimeCommunication.emit("analytics-update",t),safeEmit(this.eventBus,"realtime:analytics-streamed",t),this.logger.debug("Analytics data streamed",{roomId:this.currentRoom,userId:t.userId,metricsCount:Object.keys(t.analytics.systemMetrics||{}).length})}}catch(e){this.logger.error("Failed to stream analytics data",e)}}async joinCollaborationRoom(e,t){this.logger.info("Joining collaboration room",{roomId:e,userId:t.id});try{if(this.collaborationRooms.has(e)){if(this.collaborationRooms.get(e).users.size>=this.config.maxUsersPerRoom)throw new Error("Collaboration room is at capacity")}else this.collaborationRooms.set(e,{id:e,users:new Map,operations:new Map,createdAt:new Date,lastActivity:new Date});const s=this.collaborationRooms.get(e);return s.users.set(t.id,{...t,joinedAt:new Date,lastSeen:new Date,isActive:!0}),this.broadcastToRoom(e,"user-joined",{roomId:e,user:t,totalUsers:s.users.size}),this.sendToUser(t.id,"room-state",{roomId:e,users:Array.from(s.users.values()),operations:Array.from(s.operations.values())}),safeEmit(this.eventBus,"collaboration:user-joined",{roomId:e,user:t}),{success:!0,roomId:e,userCount:s.users.size,users:Array.from(s.users.values())}}catch(t){throw this.logger.error("Failed to join collaboration room",{roomId:e,error:t.message}),t}}async leaveCollaborationRoom(e,t){this.logger.info("Leaving collaboration room",{roomId:e,userId:t});try{if(!this.collaborationRooms.has(e))return{success:!0,message:"Room does not exist"};const s=this.collaborationRooms.get(e),n=s.users.get(t);return n&&(s.users.delete(t),this.broadcastToRoom(e,"user-left",{roomId:e,userId:t,user:n,totalUsers:s.users.size}),0===s.users.size&&(this.collaborationRooms.delete(e),this.logger.debug("Removed empty collaboration room",{roomId:e})),safeEmit(this.eventBus,"collaboration:user-left",{roomId:e,userId:t,user:n})),{success:!0,roomId:e,userCount:s.users.size}}catch(s){throw this.logger.error("Failed to leave collaboration room",{roomId:e,userId:t,error:s.message}),s}}async startLiveProgressSharing(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.info("Starting live progress sharing",{operationId:e});try{const s={operationId:e,startTime:new Date,lastUpdate:new Date,subscribers:new Set,config:{updateInterval:t.updateInterval||this.config.progressUpdateInterval,includeMetrics:t.includeMetrics||!0,includeErrors:t.includeErrors||!0,maxHistory:t.maxHistory||100},history:[],currentProgress:{percentage:0,stage:"initializing",message:"Starting operation...",metrics:{}}};return this.liveProgressStreams.set(e,s),this.broadcastProgressEvent("progress-sharing-started",{operationId:e,config:s.config}),safeEmit(this.eventBus,"progress-sharing:started",{operationId:e,config:s.config}),{success:!0,operationId:e,streamId:e}}catch(t){throw this.logger.error("Failed to start live progress sharing",{operationId:e,error:t.message}),t}}async subscribeLiveProgress(e,t){if(this.logger.debug("Subscribing to live progress",{operationId:e,subscriberId:t}),!this.liveProgressStreams.has(e))throw new Error(`Progress stream not found for operation: ${e}`);const s=this.liveProgressStreams.get(e);return s.subscribers.add(t),this.sendProgressUpdate(t,{operationId:e,progress:s.currentProgress,history:s.history.slice(-10)}),this.logger.debug("Subscribed to live progress",{operationId:e,subscriberId:t,totalSubscribers:s.subscribers.size}),{success:!0,operationId:e,subscriberId:t}}async sendRealtimeNotification(e){this.logger.debug("Sending real-time notification",{type:e.type,recipients:e.recipients?.length});try{const t={id:this.generateId(),timestamp:new Date,...e};return e.recipients&&e.recipients.forEach(e=>{this.notificationQueues.has(e)||this.notificationQueues.set(e,[]);const s=this.notificationQueues.get(e);s.push(t),s.length>this.config.notificationRetention&&s.shift()}),this.broadcastNotification(t),safeEmit(this.eventBus,"notification:sent",t),{success:!0,notificationId:t.id}}catch(e){throw this.logger.error("Failed to send real-time notification",{error:e.message}),e}}async getLiveAnalyticsDashboard(){this.logger.debug("Getting live analytics dashboard data");try{return{timestamp:new Date,activeUsers:this.activeUsers.size,collaborationRooms:this.collaborationRooms.size,liveProgressStreams:this.liveProgressStreams.size,totalNotifications:Array.from(this.notificationQueues.values()).reduce((e,t)=>e+t.length,0),connectionStatus:this.realtimeCommunication.getConnectionStatus(),systemMetrics:await this.getSystemMetrics(),operationMetrics:await this.getOperationMetrics(),userActivity:await this.getUserActivityMetrics()}}catch(e){throw this.logger.error("Failed to get live analytics dashboard data",{error:e.message}),e}}handleUserJoined(e){this.logger.debug("Handling user joined event",e),this.activeUsers.set(e.userId,{...e,joinedAt:new Date,lastActivity:new Date}),this.broadcastPresenceUpdate()}handleUserLeft(e){this.logger.debug("Handling user left event",e),this.activeUsers.delete(e.userId),this.broadcastPresenceUpdate()}handleOperationStarted(e){this.logger.debug("Handling operation started event",e),e.shareProgress&&this.startLiveProgressSharing(e.operationId,e.progressConfig)}handleOperationProgress(e){this.logger.debug("Handling operation progress event",e),this.liveProgressStreams.has(e.operationId)&&this.updateLiveProgress(e.operationId,e.progress)}handleProgressUpdate(e){this.logger.debug("Handling progress update event",e),this.streamProgressUpdate(e)}broadcastToRoom(e,t,s){if(this.collaborationRooms.has(e)){this.collaborationRooms.get(e).users.forEach((e,n)=>{this.sendToUser(n,t,s)})}}sendToUser(e,t,s){this.realtimeCommunication.isConnected&&this.realtimeCommunication.socket?.emit("user-message",{targetUserId:e,event:t,data:s})}broadcastPresenceUpdate(){const e={activeUsers:Array.from(this.activeUsers.values()),timestamp:new Date};this.realtimeCommunication.socket?.emit("presence-update",e),safeEmit(this.eventBus,"presence:updated",e)}streamProgressUpdate(e){this.realtimeCommunication.socket?.emit("progress-stream",e),safeEmit(this.eventBus,"progress-stream:update",e)}broadcastNotification(e){this.realtimeCommunication.socket?.emit("notification-broadcast",e)}generateId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}async getSystemMetrics(){return{memoryUsage:performance.memory?{used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit}:null,connectionLatency:await this.measureConnectionLatency(),timestamp:new Date}}async getOperationMetrics(){return{activeOperations:this.liveProgressStreams.size,completedOperations:0,failedOperations:0,averageOperationTime:0,timestamp:new Date}}async getUserActivityMetrics(){return{activeUsers:this.activeUsers.size,totalSessions:this.sessionSubsystem?await this.sessionSubsystem.getActiveSessionCount():0,averageSessionDuration:0,timestamp:new Date}}async measureConnectionLatency(){if(!this.realtimeCommunication.isConnected)return null;const e=performance.now();return new Promise(t=>{this.realtimeCommunication.socket?.emit("ping",e,s=>{const n=performance.now()-e;t(n)}),setTimeout(()=>t(null),5e3)})}async disconnect(){this.logger.info("Disconnecting Advanced Real-time Features Subsystem"),this.presenceInterval&&clearInterval(this.presenceInterval),this.progressInterval&&clearInterval(this.progressInterval),this.analyticsInterval&&clearInterval(this.analyticsInterval),this.activeUsers.clear(),this.collaborationRooms.clear(),this.sharedOperations.clear(),this.liveProgressStreams.clear(),this.notificationQueues.clear(),this.isInitialized=!0,this.logger.info("Advanced Real-time Features Subsystem initialized successfully"),safeEmit(this.eventBus,"subsystem:ready",{subsystem:"advanced-realtime"})}catch(e){throw this.logger.error("Failed to initialize Advanced Real-time Features Subsystem",e),safeEmit(this.eventBus,"subsystem:error",{subsystem:"advanced-realtime",error:e}),e}getStatus(){return{isInitialized:!0,activeUsers:this.activeUsers.size,collaborationRooms:this.collaborationRooms.size,liveProgressStreams:this.liveProgressStreams.size,connectionStatus:this.realtimeCommunication.getConnectionStatus(),timestamp:new Date}}async shareProgressUpdate(e){return this.logger.info("Sharing progress update",e),Promise.resolve()}async sendNotification(e){return this.logger.info("Sending notification",e),Promise.resolve()}async startCollaborativeOperation(e,t){return this.logger.info("Starting collaborative operation",{operationId:e,operationType:t}),this.sharedOperations.set(e,{type:t,started:!0}),Promise.resolve()}async getRoomParticipants(){return Array.from(this.activeUsers.values())}async handleConnectionStatusChange(e){return this.logger.info("Handling connection status change",e),Promise.resolve()}async destroy(){return await this.disconnect(),Promise.resolve()}async streamAnalyticsData(e){return this.logger.info("Streaming analytics data",e),Promise.resolve()}}},{}],62:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.AuthManagementSubsystem=void 0;s.AuthManagementSubsystem=class AuthManagementSubsystem{constructor(e,t,s,n){this.logger=e,this.uiManager=t,this.localClient=s,this.settingsSubsystem=n,this.isAuthenticated=!1,this.tokenStatus=null,this.tokenExpiry=null,this.refreshTimer=null,this.logger.info("Authentication Management Subsystem initialized")}async init(){try{this.setupEventListeners(),await this.checkInitialTokenStatus(),this.setupTokenRefreshTimer(),this.logger.info("Authentication Management Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Authentication Management Subsystem",e),e}}setupEventListeners(){const e=document.getElementById("get-token-btn");e&&e.addEventListener("click",async e=>{e.preventDefault(),await this.getToken()});const t=document.getElementById("test-connection-btn");t&&t.addEventListener("click",async e=>{e.preventDefault(),await this.testConnection()});const s=document.getElementById("global-refresh-token");s&&s.addEventListener("click",async e=>{e.preventDefault(),await this.refreshToken()});const n=document.getElementById("settings-form");n&&n.addEventListener("submit",async e=>{e.preventDefault(),await this.handleSettingsSubmit(e)})}async getToken(){try{this.logger.info("Getting new authentication token"),this.showTokenProgress("Getting token..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))throw new Error("Invalid settings - please check your configuration");const t=await this.localClient.post("/api/v1/auth/token",{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region});if(!t.success)throw new Error(t.error||"Failed to get token");this.tokenStatus=t.token,this.tokenExpiry=t.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token obtained successfully"),this.uiManager.showSuccess("Authentication successful"),this.setupTokenRefreshTimer(),this.logger.info("Token obtained successfully")}catch(e){this.logger.error("Failed to get token",e),this.updateTokenStatusUI(!1,e.message),this.uiManager.showError("Authentication Failed",e.message)}finally{this.hideTokenProgress()}}async testConnection(){try{this.logger.info("Testing connection"),this.showConnectionProgress("Testing connection..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))throw new Error("Invalid settings - please check your configuration");const t=await this.localClient.post("/api/pingone/test-connection",{environmentId:e.environmentId,clientId:e.clientId,clientSecret:e.clientSecret,region:e.region});if(!t.success)throw new Error(t.error||"Connection test failed");let s=t.message||"Success - Token minted";t.token&&t.token.timeLeft&&(s+=` - Time left: ${t.token.timeLeft}`),this.updateConnectionStatusUI(!0,s),this.uiManager.showSuccess(s),this.logger.info("Connection test successful")}catch(e){this.logger.error("Connection test failed",e),this.updateConnectionStatusUI(!1,e.message),this.uiManager.showError("Connection Test Failed",e.message)}finally{this.hideConnectionProgress()}}async refreshToken(){try{this.logger.info("Refreshing authentication token"),this.showTokenProgress("Refreshing token...");const e=await this.localClient.post("/api/v1/auth/refresh");if(!e.success)throw new Error(e.error||"Failed to refresh token");this.tokenStatus=e.token,this.tokenExpiry=e.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token refreshed successfully"),this.uiManager.showSuccess("Token refreshed successfully"),this.setupTokenRefreshTimer(),this.logger.info("Token refreshed successfully")}catch(e){this.logger.error("Failed to refresh token",e),this.updateTokenStatusUI(!1,e.message),this.uiManager.showError("Token Refresh Failed",e.message),this.clearAuthenticationState()}finally{this.hideTokenProgress()}}async handleSettingsSubmit(e){try{const t=new FormData(e.target),s=Object.fromEntries(t.entries());if(this.logger.info("Saving settings"),!this.validateSettings(s))throw new Error("Invalid settings - please check all required fields");await this.settingsManager.saveSettings(s),this.clearAuthenticationState(),this.uiManager.updateSettingsSaveStatus("Settings saved successfully","success"),this.logger.info("Settings saved successfully")}catch(e){this.logger.error("Failed to save settings",e),this.uiManager.updateSettingsSaveStatus(`Settings Save Failed: ${e.message}`,"error")}}validateSettings(e){if(!e)return this.logger.error("No settings provided for validation"),!1;const t=["environmentId","apiClientId","apiSecret","region"].filter(t=>!e[t]?.trim());return!(t.length>0)||(this.logger.warn("Missing required settings fields",{missingFields:t}),!1)}async checkInitialTokenStatus(){try{if(this.logger.info("Checking initial token status"),!this.settingsSubsystem||"function"!=typeof this.settingsSubsystem.loadCurrentSettings)return void this.logger.warn("Settings subsystem not available for initial token check");try{await this.settingsSubsystem.loadCurrentSettings()}catch(e){return this.logger.error("Failed to load settings",e),void this.updateTokenStatusUI(!1,"Failed to load settings")}const e=this.settingsSubsystem.currentSettings;if(!e||!e.apiClientId)return this.logger.warn("No API client ID found in settings, skipping initial token check"),void this.updateTokenStatusUI(!1,"Please configure your API settings");if(!this.validateSettings(e))return this.logger.warn("Invalid settings configuration"),void this.updateTokenStatusUI(!1,"Please check your settings configuration");const t=await this.localClient.get("/api/v1/auth/status");if(t.success&&t.isValid)this.tokenStatus=t.status,this.tokenExpiry=t.expiresIn,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,`Token is ${t.status}`),this.logger.info("Valid token found, authentication ready");else if(t.success&&t.hasToken){this.logger.warn("Token expired, attempting automatic refresh..."),this.tokenStatus=t.status,this.tokenExpiry=t.expiresIn;await this.attemptAutomaticTokenRefresh()?this.logger.info("Token automatically refreshed, authentication ready"):(this.logger.warn("Automatic token refresh failed, user intervention required"),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,"Token expired - refresh required"))}else{this.logger.warn("No token found, attempting automatic acquisition...");await this.attemptAutomaticTokenRefresh()?this.logger.info("Token automatically acquired, authentication ready"):(this.logger.warn("No token available and automatic acquisition failed"),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,t.status||"No valid token"))}}catch(e){this.logger.error("Failed to check token status",e),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,"Token status unknown")}}async attemptAutomaticTokenRefresh(){try{this.logger.debug("Attempting automatic token acquisition..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))return this.logger.debug("No valid credentials available for automatic token acquisition"),!1;this.logger.debug("Valid credentials found, attempting token acquisition...");const t=await this.localClient.post("/api/v1/auth/token",{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region});return t.success&&t.token?(this.tokenStatus=t.token,this.tokenExpiry=t.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token obtained automatically"),this.setupTokenRefreshTimer(),this.logger.info("Automatic token acquisition successful"),!0):(this.logger.warn("Token acquisition failed:",t.error||"Unknown error"),!1)}catch(e){return this.logger.error("Error during automatic token acquisition:",e),!1}}setupTokenRefreshTimer(){if(this.refreshTimer&&clearTimeout(this.refreshTimer),!this.tokenExpiry)return;const e=new Date(this.tokenExpiry).getTime()-3e5,t=Date.now();if(e>t){const s=e-t;this.refreshTimer=setTimeout(()=>{this.refreshToken()},s),this.logger.info("Token refresh timer set",{refreshIn:Math.round(s/1e3/60),unit:"minutes"})}}clearAuthenticationState(){this.isAuthenticated=!1,this.tokenStatus=null,this.tokenExpiry=null,this.refreshTimer&&(clearTimeout(this.refreshTimer),this.refreshTimer=null),this.updateTokenStatusUI(!1,"Authentication cleared")}updateTokenStatusUI(e,t){try{const s=document.getElementById("global-token-status");s&&(s.className="token-status "+(e?"valid":"invalid"),s.textContent=t||(e?"Authenticated":"Not authenticated"));const n=document.getElementById("token-status-indicator");n&&(n.className="token-indicator "+(e?"valid":"invalid"));const i=document.getElementById("token-status"),a=document.getElementById("token-expiry"),l=document.getElementById("get-token-btn");if(i&&(i.textContent=t||(e?"Authenticated":"Not authenticated"),i.className="status-badge "+(e?"status-valid":"status-invalid")),a)if(e&&this.tokenExpiry)try{const e=new Date(this.tokenExpiry);a.textContent=`Expires: ${e.toLocaleString()}`;const t=3e5;e-Date.now()<t?a.classList.add("expiry-warning"):a.classList.remove("expiry-warning")}catch(e){this.logger.error("Error formatting token expiry date",e),a.textContent="Expiry: Unknown"}else a.textContent="Not authenticated",a.classList.remove("expiry-warning");l&&(l.style.display=e?"none":"inline-block")}catch(e){this.logger.error("Error updating token status UI",e)}const s=document.getElementById("global-refresh-token");s&&(s.style.display=e?"inline-block":"none")}updateConnectionStatusUI(e,t){const s=document.getElementById("connection-status");s&&(s.className="connection-status "+(e?"connected":"disconnected"),s.textContent=t)}showTokenProgress(e){const t=document.getElementById("get-token-btn");t&&(t.disabled=!0,t.textContent=e)}hideTokenProgress(){const e=document.getElementById("get-token-btn");e&&(e.disabled=!1,e.textContent="Get Token")}showConnectionProgress(e){const t=document.getElementById("test-connection-btn");t&&(t.disabled=!0,t.textContent=e)}hideConnectionProgress(){const e=document.getElementById("test-connection-btn");e&&(e.disabled=!1,e.textContent="Test Connection")}getAuthenticationStatus(){return{isAuthenticated:this.isAuthenticated,tokenStatus:this.tokenStatus,tokenExpiry:this.tokenExpiry,timeUntilExpiry:this.tokenExpiry?Math.max(0,new Date(this.tokenExpiry).getTime()-Date.now()):0}}isTokenValid(){if(!this.isAuthenticated||!this.tokenExpiry)return!1;const e=Date.now();return new Date(this.tokenExpiry).getTime()>e}}},{}],63:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ConnectionManagerSubsystem=void 0;var n=e("../utils/browser-logging-service.js");s.ConnectionManagerSubsystem=class ConnectionManagerSubsystem{constructor(e,t,s,i){this.logger=e||(0,n.createLogger)({serviceName:"connection-manager-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=s,this.apiClient=i,this.connectionStatus="disconnected",this.lastConnectionTest=null,this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.healthCheckInterval=null,this.tokenRefreshInterval=null,this.connectionRetryCount=0,this.maxRetryAttempts=3,this.eventListeners=new Map,this.logger.info("Connection Manager subsystem initialized")}async init(){try{this.logger.info("Initializing connection manager subsystem..."),await this.loadExistingToken(),this.startConnectionMonitoring(),this.setupTokenRefresh(),this.logger.info("Connection Manager subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize connection manager subsystem",{error:e.message}),e}}async testConnection(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{this.logger.info("Testing PingOne connection..."),this.uiManager&&this.uiManager.updateConnectionStatus("testing","Testing connection...");const t=e||await this.getCredentials();if(!t)throw new Error("No credentials available for connection test");this.validateCredentials(t);const s=await this.acquireToken(t);if(s.success)return this.connectionStatus="connected",this.lastConnectionTest={timestamp:Date.now(),success:!0,credentials:{clientId:t.clientId,environmentId:t.environmentId,region:t.region}},this.uiManager&&this.uiManager.updateConnectionStatus("success","Connection successful"),this.logger.info("Connection test successful"),this.emit("connectionSuccess",this.lastConnectionTest),{success:!0,message:"Connection successful",token:s.token,expiresIn:s.expiresIn};throw new Error(s.error||"Failed to acquire token")}catch(e){return this.logger.error("Connection test failed",{error:e.message}),this.connectionStatus="disconnected",this.lastConnectionTest={timestamp:Date.now(),success:!1,error:e.message},this.uiManager&&this.uiManager.updateConnectionStatus("error",`Connection failed: ${e.message}`),this.emit("connectionFailure",{error:e.message}),{success:!1,error:e.message}}}async acquireToken(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{this.logger.info("Acquiring PingOne token...");const t=e||await this.getCredentials();if(!t)throw new Error("No credentials available for token acquisition");this.validateCredentials(t);const s=await this.apiClient.post("/api/auth/token",{clientId:t.clientId,clientSecret:t.clientSecret,environmentId:t.environmentId,region:t.region});if(s.success&&s.token)return this.tokenInfo={token:s.token,expiresAt:Date.now()+1e3*s.expiresIn,isValid:!0,acquiredAt:Date.now()},this.connectionStatus="connected",this.uiManager&&this.uiManager.updateTokenStatus(!0,"Token acquired successfully"),this.logger.info("Token acquired successfully",{expiresIn:s.expiresIn}),this.emit("tokenAcquired",{token:s.token,expiresIn:s.expiresIn}),{success:!0,token:s.token,expiresIn:s.expiresIn};throw new Error(s.error||"Failed to acquire token")}catch(e){return this.logger.error("Token acquisition failed",{error:e.message}),this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.connectionStatus="disconnected",this.uiManager&&this.uiManager.updateTokenStatus(!1,`Token acquisition failed: ${e.message}`),this.emit("tokenAcquisitionFailure",{error:e.message}),{success:!1,error:e.message}}}async validateToken(){try{if(!this.tokenInfo.token)return this.logger.debug("No token to validate"),!1;if(this.tokenInfo.expiresAt&&Date.now()>=this.tokenInfo.expiresAt)return this.logger.info("Token has expired"),this.tokenInfo.isValid=!1,!1;const e=(await this.apiClient.get("/api/auth/validate",{headers:{Authorization:`Bearer ${this.tokenInfo.token}`}})).success;return this.tokenInfo.isValid=e,e?(this.logger.debug("Token validation successful"),this.connectionStatus="connected"):(this.logger.info("Token validation failed"),this.connectionStatus="disconnected"),e}catch(e){return this.logger.error("Token validation error",{error:e.message}),this.tokenInfo.isValid=!1,this.connectionStatus="disconnected",!1}}async refreshToken(){try{this.logger.info("Refreshing token...");const e=await this.getCredentials();if(!e)throw new Error("No credentials available for token refresh");const t=await this.acquireToken(e);return t.success&&(this.logger.info("Token refreshed successfully"),this.emit("tokenRefreshed",{token:t.token,expiresIn:t.expiresIn})),t}catch(e){return this.logger.error("Token refresh failed",{error:e.message}),this.emit("tokenRefreshFailure",{error:e.message}),{success:!1,error:e.message}}}async getCredentials(){try{if(window.credentialsManager){const e=window.credentialsManager.getCredentials();if(e&&this.isValidCredentialSet(e))return e}if(this.settingsManager){await this.settingsManager.loadCurrentSettings();const e=this.settingsManager.currentSettings;if(e&&this.isValidCredentialSet(e))return{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region}}return null}catch(e){return this.logger.error("Failed to get credentials",{error:e.message}),null}}validateCredentials(e){const t=["clientId","clientSecret","environmentId"].filter(t=>!e[t]);if(t.length>0)throw new Error(`Missing required credentials: ${t.join(", ")}`);if(!/^[a-f0-9-]{36}$/.test(e.clientId))throw new Error("Invalid client ID format");if(!/^[a-f0-9-]{36}$/.test(e.environmentId))throw new Error("Invalid environment ID format");if(e.clientSecret.length<10)throw new Error("Client secret appears to be invalid")}isValidCredentialSet(e){try{return this.validateCredentials(e),!0}catch(e){return!1}}async loadExistingToken(){try{if(window.globalTokenManager&&"function"==typeof window.globalTokenManager.getCachedToken){const e=window.globalTokenManager.getCachedToken();if(e){this.tokenInfo={token:e.token,expiresAt:e.expiresAt,isValid:e.isValid,acquiredAt:e.acquiredAt};await this.validateToken()?(this.connectionStatus="connected",this.logger.info("Existing token loaded and validated")):this.logger.info("Existing token loaded but invalid")}}}catch(e){this.logger.error("Failed to load existing token",{error:e.message})}}startConnectionMonitoring(){this.healthCheckInterval=setInterval(async()=>{if("connected"===this.connectionStatus){await this.validateToken()||(this.logger.info("Connection lost during health check"),this.emit("connectionLost"))}},3e5),this.logger.debug("Connection monitoring started")}setupTokenRefresh(){this.tokenRefreshInterval=setInterval(async()=>{if(this.tokenInfo.token&&this.tokenInfo.expiresAt){const e=this.tokenInfo.expiresAt-Date.now();e<=3e5&&e>0&&(this.logger.info("Token expiring soon, attempting refresh..."),await this.refreshToken())}},6e4),this.logger.debug("Automatic token refresh setup")}getConnectionStatus(){return this.connectionStatus}getTokenInfo(){return{hasToken:!!this.tokenInfo.token,isValid:this.tokenInfo.isValid,expiresAt:this.tokenInfo.expiresAt,timeUntilExpiry:this.tokenInfo.expiresAt?this.tokenInfo.expiresAt-Date.now():null}}getLastConnectionTest(){return this.lastConnectionTest}isConnected(){return"connected"===this.connectionStatus&&this.tokenInfo.isValid}hasValidToken(){return this.tokenInfo.isValid&&this.tokenInfo.token&&this.tokenInfo.expiresAt&&Date.now()<this.tokenInfo.expiresAt}disconnect(){this.logger.info("Disconnecting..."),this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.connectionStatus="disconnected",this.uiManager&&(this.uiManager.updateConnectionStatus("disconnected","Disconnected"),this.uiManager.updateTokenStatus(!1,"No token")),this.emit("disconnected"),this.logger.info("Disconnected successfully")}on(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e).push(t)}off(e,t){if(this.eventListeners.has(e)){const s=this.eventListeners.get(e),n=s.indexOf(t);n>-1&&s.splice(n,1)}}emit(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.eventListeners.has(e)&&this.eventListeners.get(e).forEach(s=>{try{s(t)}catch(t){this.logger.error("Event listener error",{event:e,error:t.message})}})}getConnectionStats(){return{status:this.connectionStatus,hasToken:!!this.tokenInfo.token,tokenValid:this.tokenInfo.isValid,tokenExpiresAt:this.tokenInfo.expiresAt,lastConnectionTest:this.lastConnectionTest,retryCount:this.connectionRetryCount}}cleanup(){this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),this.tokenRefreshInterval&&(clearInterval(this.tokenRefreshInterval),this.tokenRefreshInterval=null),this.eventListeners.clear(),this.disconnect(),this.logger.info("Connection Manager subsystem cleaned up")}}},{"../utils/browser-logging-service.js":73}],64:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.GlobalTokenManagerSubsystem=void 0;var n=e("../../utils/region-config.js"),i=e("../../utils/config-standardization-browser.js");class GlobalTokenManagerSubsystem{constructor(e,t){this.logger=e||console,this.eventBus=t,this.isInitialized=!1,this.isDestroyed=!1,this.globalTokenTimer=null,this.updateInterval=1e3,this.init=this.init.bind(this),this.destroy=this.destroy.bind(this),this.updateGlobalTokenStatus=this.updateGlobalTokenStatus.bind(this),this.setupGlobalTokenEventListeners=this.setupGlobalTokenEventListeners.bind(this),this.startGlobalTokenTimer=this.startGlobalTokenTimer.bind(this),this.getNewToken=this.getNewToken.bind(this),this.logger.debug("Global Token Manager Subsystem created")}async init(){if(this.isInitialized)this.logger.warn("Global Token Manager Subsystem already initialized");else try{this.logger.info("Initializing Global Token Manager Subsystem..."),await this.waitForTokenStatusElement(),this.preventTokenStatusConflicts(),this.setupGlobalTokenEventListeners(),this.setupEventBusListeners(),this.startGlobalTokenTimer(),this.updateGlobalTokenStatus(),this.isInitialized=!0,this.logger.info("Global Token Manager Subsystem initialized successfully"),this.eventBus&&this.eventBus.emit("globalTokenManager:initialized")}catch(e){throw this.logger.error("Failed to initialize Global Token Manager Subsystem",{error:e.message,stack:e.stack}),e}}async destroy(){this.isDestroyed||(this.logger.info("Destroying Global Token Manager Subsystem..."),this.globalTokenTimer&&(clearInterval(this.globalTokenTimer),this.globalTokenTimer=null),this.removeEventListeners(),this.mutationObserver&&(this.mutationObserver.disconnect(),this.mutationObserver=null),this.restoreOriginalMethods(),this.isDestroyed=!0,this.isInitialized=!1,this.eventBus&&this.eventBus.emit("globalTokenManager:destroyed"),this.logger.info("Global Token Manager Subsystem destroyed"))}async waitForTokenStatusElement(){for(let e=1;e<=100;e++){if("complete"!==document.readyState&&"interactive"!==document.readyState){this.logger.debug(`DOM not ready (${document.readyState}), waiting...`),await new Promise(e=>setTimeout(e,100));continue}const t=document.getElementById("global-token-status");if(t){const s=t.querySelector(".global-token-countdown"),n=t.querySelector(".global-token-icon"),i=t.querySelector(".global-token-text");if("global-token-status"===t.id)return this.logger.debug("Global token status element found and ready",{attempt:e,elementId:t.id,hasCountdown:!!s,hasIcon:!!n,hasText:!!i}),t}else this.logger.debug(`Global token status element not found (attempt ${e}/100)`);await new Promise(e=>setTimeout(e,100))}throw this.logger.error("Global token status element not found after waiting",{domState:document.readyState,bodyExists:!!document.body,sidebarExists:!!document.querySelector(".sidebar"),allElementsWithId:Array.from(document.querySelectorAll("[id]")).map(e=>e.id)}),new Error("Global token status element not found after waiting")}preventTokenStatusConflicts(){this.logger.debug("Preventing token status conflicts...");const e=document.getElementById("global-token-status");e&&(e.setAttribute("data-protected","true"),e.setAttribute("data-managed-by","GlobalTokenManagerSubsystem"),this.setupDOMProtection(e)),this.overrideConflictingMethods(),this.logger.debug("Token status conflicts prevention set up")}setupDOMProtection(e){if(!window.MutationObserver)return;this.mutationObserver=new MutationObserver(e=>{e.forEach(e=>{if("childList"===e.type&&e.removedNodes.length>0){Array.from(e.removedNodes).some(e=>"global-token-status"===e.id)&&(this.logger.warn("Global token status element was removed by another system, will reinitialize"),setTimeout(()=>{document.getElementById("global-token-status")||(this.logger.info("Reinitializing global token status element"),this.waitForTokenStatusElement().then(()=>{this.updateGlobalTokenStatus()}).catch(e=>{this.logger.error("Failed to reinitialize token status element",e)}))},100))}})});const t=e.parentElement;t&&this.mutationObserver.observe(t,{childList:!0,subtree:!0})}overrideConflictingMethods(){if(window.app&&window.app.uiManager){const e=window.app.uiManager;"function"==typeof e.updateUniversalTokenStatus&&(e._originalUpdateUniversalTokenStatus=e.updateUniversalTokenStatus,e.updateUniversalTokenStatus=()=>{this.logger.debug("UIManager.updateUniversalTokenStatus called - delegating to GlobalTokenManagerSubsystem"),this.updateGlobalTokenStatus()}),"function"==typeof e.updateHomeTokenStatus&&(e._originalUpdateHomeTokenStatus=e.updateHomeTokenStatus,e.updateHomeTokenStatus=()=>{this.logger.debug("UIManager.updateHomeTokenStatus called - delegating to GlobalTokenManagerSubsystem"),this.updateGlobalTokenStatus()}),this.logger.debug("Conflicting UIManager methods overridden")}}restoreOriginalMethods(){if(window.app&&window.app.uiManager){const e=window.app.uiManager;e._originalUpdateUniversalTokenStatus&&(e.updateUniversalTokenStatus=e._originalUpdateUniversalTokenStatus,delete e._originalUpdateUniversalTokenStatus),e._originalUpdateHomeTokenStatus&&(e.updateHomeTokenStatus=e._originalUpdateHomeTokenStatus,delete e._originalUpdateHomeTokenStatus),this.logger.debug("Original UIManager methods restored")}}setupEventBusListeners(){this.eventBus&&(this.eventBus.on("token:refreshed",()=>{this.logger.debug("Token refreshed event received, updating status"),this.updateGlobalTokenStatus()}),this.eventBus.on("token:error",e=>{this.logger.debug("Token error event received",e),this.updateGlobalTokenStatus()}),this.eventBus.on("settings:updated",()=>{this.logger.debug("Settings updated event received, updating token status"),this.updateGlobalTokenStatus()}),this.logger.debug("EventBus listeners set up for Global Token Manager"))}updateGlobalTokenStatus(){if(this.isDestroyed)return;const e=document.getElementById("global-token-status");if(!e)return void((!this.lastElementWarning||Date.now()-this.lastElementWarning>3e4)&&(this.logger.debug("Global token status box not found - widget may not be initialized yet"),this.lastElementWarning=Date.now()));e.style.display="flex";const t=e.querySelector(".global-token-countdown"),s=e.querySelector(".global-token-icon"),n=e.querySelector(".global-token-text"),i=document.getElementById("global-get-token");this.hideAuthenticationMessages(),t&&s&&n||(!this.lastChildElementWarning||Date.now()-this.lastChildElementWarning>3e4)&&(this.logger.debug("Some global token status child elements not found, will update what is available",{hasCountdown:!!t,hasIcon:!!s,hasText:!!n,statusBoxFound:!!e}),this.lastChildElementWarning=Date.now());try{const a=this.getTokenInfoSync();if(a.hasToken){const l=a.timeLeft,c=this.formatTime(l);t&&(t.textContent=c),l<=0?(e.className="global-token-status expired",s&&(s.textContent="❌"),n&&(n.textContent="Token expired"),i&&(i.style.display="inline-block")):l<=300?(e.className="global-token-status expiring",s&&(s.textContent="⚠️"),n&&(n.textContent=`Expires in ${c}`),i&&(i.style.display="none")):(e.className="global-token-status valid",s&&(s.textContent="✅"),n&&(n.textContent=`Valid - ${c} left`),i&&(i.style.display="none"),this.hideAuthenticationMessages())}else e.className="global-token-status missing",s&&(s.textContent="❌"),n&&(n.textContent="No valid token"),t&&(t.textContent="No Token"),i&&(i.style.display="inline-block")}catch(i){(!this.lastErrorWarning||Date.now()-this.lastErrorWarning>3e4)&&(this.logger.debug("Error updating global token status",{error:i.message}),this.lastErrorWarning=Date.now()),e&&(e.className="global-token-status error"),s&&(s.textContent="⚠️"),n&&(n.textContent="Status error"),t&&(t.textContent="Error")}}formatTime(e){if(e<=0)return"00:00";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),n=e%60;return t>0?`${t}h ${s}m ${n}s`:s>0?`${s}m ${n}s`:`${n}s`}getTokenInfoSync(){try{const e=localStorage.getItem("pingone_worker_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,source:"localStorage"};const s=parseInt(t),n=Date.now(),i=Math.floor((s-n)/1e3);return{hasToken:!0,timeLeft:Math.max(0,i),source:"localStorage"}}catch(e){return this.logger.debug("Error getting sync token info",{error:e.message}),{hasToken:!1,timeLeft:0,source:"error"}}}async getTokenInfo(){try{try{const e=await fetch("/api/v1/auth/token");if(e.ok){const t=await e.json();if(t.success&&t.tokenInfo)return{hasToken:t.tokenInfo.isValid,timeLeft:t.tokenInfo.timeLeft||0,source:"server"}}}catch(e){this.logger.debug("Could not fetch token info from server, checking localStorage",{error:e.message})}const e=localStorage.getItem("pingone_worker_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,source:"localStorage"};const s=parseInt(t),n=Date.now(),i=Math.floor((s-n)/1e3);return{hasToken:!0,timeLeft:Math.max(0,i),source:"localStorage"}}catch(e){return this.logger.error("Error getting token info",{error:e.message}),{hasToken:!1,timeLeft:0,source:"error"}}}setupGlobalTokenEventListeners(){const e=document.getElementById("global-refresh-token");e&&(this.refreshBtnHandler=()=>{this.logger.debug("Refresh token button clicked"),this.updateGlobalTokenStatus()},e.addEventListener("click",this.refreshBtnHandler));const t=document.getElementById("global-get-token");t&&(this.getTokenBtnHandler=()=>{this.logger.debug("Get token button clicked"),this.getNewToken()},t.addEventListener("click",this.getTokenBtnHandler)),this.logger.debug("Global token event listeners set up")}removeEventListeners(){const e=document.getElementById("global-refresh-token");e&&this.refreshBtnHandler&&e.removeEventListener("click",this.refreshBtnHandler);const t=document.getElementById("global-get-token");t&&this.getTokenBtnHandler&&t.removeEventListener("click",this.getTokenBtnHandler),this.logger.debug("Global token event listeners removed")}startGlobalTokenTimer(){this.globalTokenTimer&&clearInterval(this.globalTokenTimer),this.globalTokenTimer=setInterval(()=>{this.isDestroyed||this.updateGlobalTokenStatus()},this.updateInterval),this.logger.debug("Global token timer started",{interval:`${this.updateInterval}ms`})}async getNewToken(){if(!this.isDestroyed)try{this.logger.info("Getting new token via global token manager subsystem...");const e=document.getElementById("global-token-status");if(e){e.className="global-token-status loading";const t=e.querySelector(".global-token-icon"),s=e.querySelector(".global-token-text");t&&(t.textContent="⏳"),s&&(s.textContent="Getting token...")}let t=null;try{window.app&&"function"==typeof window.app.getToken?(this.logger.debug("Attempting token refresh via window.app.getToken()"),t=await window.app.getToken(),t?this.logger.info("Token refreshed successfully via app",{hasResult:!!t}):this.logger.warn("window.app.getToken() returned undefined, trying fallback")):this.logger.warn("window.app.getToken not available, trying API fallback")}catch(e){this.logger.warn("App token method failed, trying API fallback",{error:e.message})}if(!t)try{this.logger.debug("Attempting token refresh via PingOne API endpoint");const e=await fetch("/api/settings/credentials");let s={};if(!e.ok){const t=await e.text();throw new Error(`Credentials endpoint failed: ${e.status} ${t}`)}{const t=await e.json();if(!t.success)throw new Error(`Credentials endpoint failed: ${t.error}`);{const e=t.credentials;s=(0,i.standardizeConfigKeys)(e),this.logger.debug("Retrieved and standardized credentials from secure endpoint",{hasEnvironmentId:!!s[i.STANDARD_KEYS.ENVIRONMENT_ID],hasClientId:!!s[i.STANDARD_KEYS.CLIENT_ID],hasClientSecret:!!s[i.STANDARD_KEYS.CLIENT_SECRET],hasRegion:!!s[i.STANDARD_KEYS.REGION],standardizedKeys:Object.keys(s).filter(e=>e.startsWith("pingone_"))});const a=(0,n.getRegionConfig)({settings:s,envRegion:null,storageRegion:(0,n.getRegionFromStorage)()});(0,n.logRegionConfig)(a),s[i.STANDARD_KEYS.REGION]=a.region,this.logger.debug("Applied region configuration",{finalRegion:s[i.STANDARD_KEYS.REGION],source:a.source,authDomain:a.authDomain})}}const a=await fetch("/api/pingone/token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({environmentId:s[i.STANDARD_KEYS.ENVIRONMENT_ID],clientId:s[i.STANDARD_KEYS.CLIENT_ID],clientSecret:s[i.STANDARD_KEYS.CLIENT_SECRET],region:s[i.STANDARD_KEYS.REGION]})});if(!a.ok){const e=await a.text();throw new Error(`PingOne API request failed: ${a.status} ${a.statusText} - ${e}`)}if(t=await a.json(),this.logger.info("Token refreshed via PingOne API",{hasResult:!!t}),t.access_token){localStorage.setItem("pingone_worker_token",t.access_token);const e=Date.now()+1e3*(t.expires_in||3600);localStorage.setItem("pingone_token_expiry",e.toString()),this.logger.debug("Token stored in localStorage",{expiresIn:t.expires_in})}}catch(e){this.logger.error("PingOne API token refresh failed",{error:e.message})}if(!t)try{this.logger.debug("Attempting token refresh via auth refresh endpoint");const e=await fetch("/api/auth/refresh-token",{method:"POST",headers:{"Content-Type":"application/json"}});if(e.ok)t=await e.json(),this.logger.info("Token refreshed via auth refresh endpoint",{hasResult:!!t});else{const t=await e.text();this.logger.warn(`Auth refresh endpoint failed: ${e.status} ${e.statusText} - ${t}`)}}catch(e){this.logger.warn("Auth refresh endpoint failed",{error:e.message})}if(!t)throw new Error("All token acquisition methods failed - no token result obtained");return this.updateGlobalTokenStatus(),this.eventBus&&this.eventBus.emit("globalTokenManager:tokenRefreshed",{tokenResult:t}),t}catch(e){this.logger.error("Error getting new token",{error:e.message,stack:e.stack});const t=document.getElementById("global-token-status");if(t){t.className="global-token-status error";const e=t.querySelector(".global-token-icon"),s=t.querySelector(".global-token-text");e&&(e.textContent="❌"),s&&(s.textContent="Token error")}throw this.eventBus&&this.eventBus.emit("globalTokenManager:tokenError",{error:e.message}),e}}hideAuthenticationMessages(){try{[".auth-required-message",".token-notification-container","#token-notification-container",".global-status-bar.error",".notification-area .error"].forEach(e=>{document.querySelectorAll(e).forEach(e=>{e&&e.style&&(e.style.display="none")})}),this.logger.debug("Authentication messages hidden due to valid token")}catch(e){this.logger.debug("Error hiding authentication messages",e)}}async getTokenInfo(){try{try{const e=await fetch("/api/token/status");if(e.ok){const t=await e.json();if(t.hasToken)return{hasToken:!0,timeLeft:t.timeLeft||0,source:"server"}}}catch(e){this.logger.debug("Could not fetch token info from server, checking localStorage",{error:e.message})}const e=localStorage.getItem("pingone_worker_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,source:"localStorage"};const s=parseInt(t),n=Date.now(),i=Math.floor((s-n)/1e3);return{hasToken:!0,timeLeft:Math.max(0,i),source:"localStorage"}}catch(e){return this.logger.error("Error getting token info",{error:e.message}),{hasToken:!1,timeLeft:0,source:"error"}}}setupGlobalTokenEventListeners(){const e=document.getElementById("global-refresh-token");e&&(this.refreshBtnHandler=()=>{this.logger.debug("Refresh token button clicked"),this.updateGlobalTokenStatus()},e.addEventListener("click",this.refreshBtnHandler));const t=document.getElementById("global-get-token");t&&(this.getTokenBtnHandler=()=>{this.logger.debug("Get token button clicked"),this.getNewToken()},t.addEventListener("click",this.getTokenBtnHandler)),this.logger.debug("Global token event listeners set up")}removeEventListeners(){const e=document.getElementById("global-refresh-token");e&&this.refreshBtnHandler&&e.removeEventListener("click",this.refreshBtnHandler);const t=document.getElementById("global-get-token");t&&this.getTokenBtnHandler&&t.removeEventListener("click",this.getTokenBtnHandler),this.logger.debug("Global token event listeners removed")}startGlobalTokenTimer(){this.globalTokenTimer&&clearInterval(this.globalTokenTimer),this.globalTokenTimer=setInterval(()=>{this.isDestroyed||this.updateGlobalTokenStatus()},this.updateInterval),this.logger.debug("Global token timer started",{interval:`${this.updateInterval}ms`})}getStatus(){return{name:"GlobalTokenManagerSubsystem",initialized:this.isInitialized,destroyed:this.isDestroyed,timerActive:!!this.globalTokenTimer,updateInterval:this.updateInterval}}}s.GlobalTokenManagerSubsystem=GlobalTokenManagerSubsystem;s.default=GlobalTokenManagerSubsystem;window.GlobalTokenManagerSubsystem=GlobalTokenManagerSubsystem},{"../../utils/config-standardization-browser.js":83,"../../utils/region-config.js":84}],65:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default=class HistorySubsystem{constructor(e,t,s,n){if(!(e&&t&&s&&n))throw new Error("HistorySubsystem: logger, localClient, uiManager, and eventBus are required.");this.logger=e.child({subsystem:"HistorySubsystem"}),this.localClient=t,this.uiManager=s,this.eventBus=n,this.history=[],this.logger.info("HistorySubsystem initialized.")}async init(){this.logger.info("Initializing..."),this.eventBus.on("operation-completed",()=>this.fetchHistory(!0)),await this.fetchHistory(),this.logger.info("Successfully initialized.")}async fetchHistory(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.history.length>0&&!e)return this.history;this.logger.info("Fetching operation history...");try{const e=await this.localClient.get("/history");return this.history=e.history||[],this.logger.info(`Successfully fetched ${this.history.length} history records.`),this.renderHistory(),this.history}catch(e){return this.logger.error("Failed to fetch history:",e),this.uiManager.showError("Could not load operation history."),[]}}renderHistory(){this.logger.debug("Rendering history view...");const e=document.getElementById("history-view");e?(e.innerHTML=`<pre>${JSON.stringify(this.history,null,2)}</pre>`,this.logger.debug("History view rendered.")):this.logger.warn("History view element not found.")}}},{}],66:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ImportSubsystem=void 0;var n=e("../utils/safe-logger.js");s.ImportSubsystem=class ImportSubsystem{constructor(e,t,s,i,a,l){let c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;this.logger=(0,n.createSafeLogger)(e||console),this.uiManager=t,this.localClient=s,this.settingsManager=i,this.eventBus=a,this.populationService=l,this.authManagementSubsystem=c,this.isImporting=!1,this.socket=null,this.selectedPopulationId=null,this.selectedPopulationName=null,this.fallbackPolling=null,this.selectedFile=null,this.messageFormatter=window.messageFormatter||{formatMessage:(e,t)=>`[${e.toUpperCase()}] ${t}`};try{this.logger.info("Import Subsystem initialized")}catch(e){console.error("Failed to log Import Subsystem initialization:",e)}try{this.setupCrossSubsystemEvents()}catch(e){console.error("Failed to set up cross-subsystem events:",e)}}async init(){try{const debugLog=e=>{try{this.logger?.debug?this.logger.debug(e):window.logger?.debug?window.logger.debug(e):console.log(`[DEBUG] ${e}`)}catch(t){console.log(`[DEBUG] ${e} (fallback logging)`)}};debugLog("🚀 [DEBUG] ImportSubsystem: init() method called");try{debugLog("🔧 [DEBUG] ImportSubsystem: Setting up event listeners"),this.setupEventListeners()}catch(e){throw console.error("Failed to set up event listeners:",e),e}try{debugLog("📋 [DEBUG] ImportSubsystem: About to refresh population dropdown"),await this.refreshPopulationDropdown()}catch(e){console.error("Failed to refresh population dropdown:",e)}debugLog("🔘 [DEBUG] ImportSubsystem: Setting initial button state"),this.validateAndUpdateButtonState(),this.logger.debug("✅ [DEBUG] ImportSubsystem: Init completed successfully"),this.logger.info("Import Subsystem initialized successfully")}catch(e){throw this.logger.error("❌ [DEBUG] ImportSubsystem: Init failed with error:",e),this.logger.error("Failed to initialize Import Subsystem",e),e}}setupEventListeners(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{START_IMPORT_BTN:"start-import",CSV_FILE_INPUT:"csv-file",IMPORT_POPULATION_SELECT:"import-population-select"}},n=e.selectById(s.SELECTORS.START_IMPORT_BTN);n&&e.addEventListener(n,"click",t.wrapAsyncEventHandler(async e=>{e.preventDefault(),await this.startImport()},"Import button click handler"));const i=e.selectById(s.SELECTORS.CSV_FILE_INPUT);i&&e.addEventListener(i,"change",t.wrapAsyncEventHandler(async e=>{const t=e.target.files[0];t&&(this.selectedFile=t,await this.handleFileSelect(t),this.validateAndUpdateButtonState())},"CSV file input change handler"));const a=e.selectById(s.SELECTORS.IMPORT_POPULATION_SELECT);a&&e.addEventListener(a,"change",t.wrapEventHandler(e=>{this.handlePopulationChange(e.target.value,e.target.selectedOptions[0]?.text),this.validateAndUpdateButtonState()},"Population dropdown change handler")),this.setupDragAndDropListeners()}setupDragAndDropListeners(){const e=document.getElementById("import-drop-zone"),t=document.getElementById("csv-file");e?(["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,e=>{e.preventDefault(),e.stopPropagation()},!1)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,()=>{e.classList.add("drag-over")},!1)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,()=>{e.classList.remove("drag-over")},!1)}),e.addEventListener("drop",async e=>{const s=e.dataTransfer.files;if(s.length>0){const e=s[0];if(this.selectedFile=e,t){const s=new DataTransfer;s.items.add(e),t.files=s.files}await this.handleFileSelect(e),this.validateAndUpdateButtonState()}},!1),e.addEventListener("click",()=>{t&&t.click()}),this.logger.info("Drag and drop listeners set up successfully")):this.logger.warn("Import drop zone not found in DOM")}async startImport(){if(this.logger.info("🚀 [DEBUG] ImportSubsystem: Start import button clicked"),this.isImporting)return this.logger.warn("🚀 [DEBUG] ImportSubsystem: Import already in progress"),void this.uiManager.showNotification("An import is already in progress. Please wait for it to complete.",{type:"warning",duration:5e3,title:"Import In Progress"});try{if(this.isImporting=!0,this.logger.info("🚀 [DEBUG] ImportSubsystem: Starting import process"),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Validating prerequisites..."),!await this.validateImportPrerequisites())return void this.logger.warn("🚀 [DEBUG] ImportSubsystem: Prerequisites validation failed, aborting import");this.logger.info("🚀 [DEBUG] ImportSubsystem: Prerequisites validated, proceeding with import"),this.getPopulationSelection(),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Showing progress UI"),this.uiManager.showProgress();const e=this.generateSessionId();this.logger.debug("🚀 [DEBUG] ImportSubsystem: Establishing real-time connection with session:",e),await this.establishRealTimeConnection(e),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Executing import with session:",e),await this.executeImport(e)}catch(e){this.logger.error("🚀 [DEBUG] ImportSubsystem: Import process failed",e),this.uiManager.showError("Import Failed",e.message||"An unexpected error occurred during the import process.")}finally{this.isImporting=!1,this.logger.debug("🚀 [DEBUG] ImportSubsystem: Import process completed, resetting isImporting flag")}}async validateImportPrerequisites(){this.logger.debug("🔍 [DEBUG] ImportSubsystem: Validating import prerequisites");if(!await this.checkTokenStatus())return this.logger.warn("🔍 [DEBUG] ImportSubsystem: Token validation failed"),this.showAuthenticationModal("Import"),!1;if(!this.selectedFile)return this.logger.warn("🔍 [DEBUG] ImportSubsystem: No file selected (selectedFile is null)"),this.uiManager.showError("No File Selected","Please select a CSV file to import."),!1;const e=document.getElementById("import-population-select");return e&&e.value&&""!==e.value?(this.logger.info("✅ [DEBUG] ImportSubsystem: All prerequisites validated successfully",{hasFile:!!this.selectedFile,fileName:this.selectedFile?.name,hasPopulation:!!e?.value,populationId:e?.value}),!0):(this.logger.warn("🔍 [DEBUG] ImportSubsystem: No population selected"),this.uiManager.showError("No Population Selected","Please select a population for the import."),!1)}getPopulationSelection(){const e=document.getElementById("import-population-select");if(this.selectedPopulationId=e?.value||"",e){const t=e.options[e.selectedIndex];this.selectedPopulationName=t?.text||""}this.logger.info("Population selection",{id:this.selectedPopulationId,name:this.selectedPopulationName})}handleProgressUpdate(e){if(!e||void 0===e.current||void 0===e.total)return void this.logger.error("Invalid progress data",e);const t=Math.round(e.current/e.total*100);this.uiManager.updateProgress(t,e.message||`Processing ${e.current} of ${e.total} users...`),this.logger.info("Progress update",{current:e.current,total:e.total,percentage:t})}handleImportCompletion(e){if(this.logger.info("Import completed",e),this.uiManager&&this.uiManager.showSuccess){const t=e.message||`Import completed successfully! ${e.imported||0} users imported.`;this.uiManager.showSuccess(t,{imported:e.imported,total:e.total,duration:e.duration})}else this.logger.warn("UI Manager not available for success message display");this.cleanupConnections()}handleImportError(e){this.logger.error("Import error",e),this.cleanupConnections()}async executeImport(e){const t=document.getElementById("csv-file").files[0],s=new FormData;s.append("file",t),s.append("populationId",this.selectedPopulationId),s.append("sessionId",e);try{const e=await this.localClient.post("/api/import",s);if(!e.success)throw new Error(e.error||"Import failed");this.logger.info("Import request sent successfully")}catch(e){throw this.logger.error("Import request failed",e),e}}generateSessionId(){return`import_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async checkTokenStatus(){try{if((this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: checkTokenStatus called"),(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: this.authManagementSubsystem =",this.authManagementSubsystem),(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: typeof this.authManagementSubsystem =",typeof this.authManagementSubsystem),!this.authManagementSubsystem)return this.logger.warn("AuthManagementSubsystem not available for token check"),(this.logger?.debug||window.logger?.debug||console.log)("❌ [DEBUG] ImportSubsystem: AuthManagementSubsystem is null/undefined"),!1;(this.logger?.debug||window.logger?.debug||console.log)("✅ [DEBUG] ImportSubsystem: AuthManagementSubsystem is available, calling isTokenValid()");const e=this.authManagementSubsystem.isTokenValid();(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: isValid =",e);const t=this.authManagementSubsystem.getAuthenticationStatus();return(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: authStatus =",t),e}catch(e){return this.logger.error("Error checking token status:",e),(this.logger?.debug||window.logger?.debug||console.log)("❌ [DEBUG] ImportSubsystem: Error in checkTokenStatus:",e),!1}}showAuthenticationModal(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Import";try{this.createAuthenticationModal(e)}catch(t){this.logger.error("Error showing authentication modal:",t),this.uiManager.showError("Authentication Required",`You must have a valid token to start an ${e.toLowerCase()}. Please go to Settings to configure your credentials.`)}}createAuthenticationModal(e){const t=window.safeDOM||new SafeDOM(this.logger),s=window.errorHandler||new ErrorHandler(this.logger),n=window.UI_CONFIG||{SELECTORS:{TOKEN_ALERT_OVERLAY:".token-alert-overlay",SETTINGS_NAV_ITEM:'[data-view="settings"]'},CLASSES:{TOKEN_ALERT_OVERLAY:"token-alert-overlay"}},i=t.select(n.SELECTORS.TOKEN_ALERT_OVERLAY);i&&i.remove();const a=document.createElement("div");t.addClass(a,n.CLASSES.TOKEN_ALERT_OVERLAY),a.setAttribute("role","dialog"),a.setAttribute("aria-modal","true"),a.setAttribute("aria-labelledby","token-alert-title"),a.setAttribute("aria-describedby","token-alert-content"),a.innerHTML=`\n            <div class="token-alert-modal" tabindex="-1">\n                <div class="token-alert-header">\n                    <h2 id="token-alert-title">\n                        <span class="warning-icon" aria-hidden="true">⚠️</span>\n                        <span>Authentication Required</span>\n                    </h2>\n                    <button type="button" class="token-alert-close" id="token-alert-close" aria-label="Close">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n                </div>\n                <div class="token-alert-body">\n                    <div id="token-alert-content" class="token-alert-content">\n                        <div class="token-alert-icon">\n                            <span aria-hidden="true">🔐</span>\n                        </div>\n                        <h3>No Valid Token Available</h3>\n                        <p class="token-alert-message">\n                            <strong>Authentication is required to continue.</strong>\n                            You need valid credentials to perform the "${e}" operation.\n                        </p>\n                        <div class="token-status-info">\n                            <p><strong>Current Status:</strong> No token available</p>\n                        </div>\n                        <div class="token-alert-actions">\n                            <button type="button" class="btn btn-primary btn-lg" id="token-alert-settings-btn">\n                                <span class="btn-icon">⚙️</span>\n                                Go to Settings\n                            </button>\n                            <p class="token-alert-help">\n                                Add your PingOne credentials in the Settings page to generate a new token.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(a);const l=t.select("#token-alert-settings-btn",a),c=t.select("#token-alert-close",a);l&&t.addEventListener(l,"click",s.wrapEventHandler(()=>{if(a.remove(),window.app&&window.app.showView)window.app.showView("settings");else{const e=t.select(n.SELECTORS.SETTINGS_NAV_ITEM);e?e.click():window.location.href="/"}},"Authentication modal settings button click")),c.addEventListener("click",()=>{a.remove()}),a.addEventListener("keydown",e=>{"Escape"===e.key&&a.remove()}),a.style.display="flex",setTimeout(()=>{a.classList.add("show")},10)}async handleFileSelect(e){try{if(this.logger.info("File selected for import",{name:e.name,size:e.size,type:e.type}),!this.validateFile(e))return;this.displayFileInfo(e)}catch(e){this.logger.error("File selection failed",e),this.uiManager.showError("File Selection Error",e.message)}}validateAndUpdateButtonState(){console.log("🔍 [VALIDATION] validateAndUpdateButtonState called");const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{START_IMPORT_BTN:"start-import",IMPORT_POPULATION_SELECT:"import-population-select"},CLASSES:{BTN_DISABLED:"btn-disabled",BTN_PRIMARY:"btn-primary"}};console.log("🔍 [VALIDATION] UI_CONFIG:",s),t.wrapSync(()=>{console.log("🔍 [VALIDATION] Inside error handler wrapper");const t=e.selectById(s.SELECTORS.START_IMPORT_BTN);if(console.log("🔍 [VALIDATION] Import button found:",!!t,t),!t)return this.logger.warn("Import button not found for state validation"),void console.log("❌ [VALIDATION] Import button not found, exiting");const n=!!this.selectedFile;console.log("🔍 [VALIDATION] File check:",{hasFile:n,selectedFile:this.selectedFile?.name});const i=e.selectById(s.SELECTORS.IMPORT_POPULATION_SELECT);console.log("🔍 [VALIDATION] Population select found:",!!i,i);const a=i&&i.value&&""!==i.value;console.log("🔍 [VALIDATION] Population check:",{hasPopulation:a,value:i?.value,selectedText:i?.selectedOptions?.[0]?.text});const l=n&&a;console.log("🔍 [VALIDATION] Final validation:",{hasFile:n,hasPopulation:a,shouldEnable:l}),t.disabled=!l,console.log("🔍 [VALIDATION] Button disabled set to:",t.disabled),this.logger.debug("Import button state updated",{hasFile:n,hasPopulation:a,shouldEnable:l,buttonDisabled:t.disabled}),l?(console.log("🔍 [VALIDATION] Enabling button - removing disabled class, adding primary"),e.removeClass(t,s.CLASSES.BTN_DISABLED),e.addClass(t,s.CLASSES.BTN_PRIMARY)):(console.log("🔍 [VALIDATION] Disabling button - adding disabled class, removing primary"),e.addClass(t,s.CLASSES.BTN_DISABLED),e.removeClass(t,s.CLASSES.BTN_PRIMARY)),console.log("🔍 [VALIDATION] Button final state:",{disabled:t.disabled,classList:t.classList.toString()})},"Import button state validation")(),console.log("🔍 [VALIDATION] validateAndUpdateButtonState completed")}validateFile(e){return e.name.toLowerCase().endsWith(".csv")?!(e.size>10485760)||(this.uiManager.showError("File Too Large","File size must be less than 10MB"),!1):(this.uiManager.showError("Invalid File Type","Please select a CSV file"),!1)}async displayFileInfo(e){try{this.logger.info("Displaying comprehensive file information",{fileName:e.name});let t=null,s=null;try{const n=await this.readFileAsText(e);s=this.parseCSVContent(n),t=s?s.length:0,this.logger.debug("CSV parsing completed",{recordCount:t,hasData:!!s})}catch(e){this.logger.warn("Failed to parse CSV for record count",{error:e.message}),t="Unable to determine"}this.updateFileInfoDisplay(e,t,s)}catch(t){this.logger.error("Failed to display file information",{error:t.message});const s=window.safeDOM||new SafeDOM(this.logger),n=window.UI_CONFIG||{SELECTORS:{FILE_INFO:"file-info"},CLASSES:{FILE_INFO_ERROR:"file-info-error"},STYLES:{ERROR_BACKGROUND:"#f8d7da",ERROR_BORDER:"1px solid #f5c6cb",ERROR_COLOR:"#721c24"}},i=s.selectById(n.SELECTORS.FILE_INFO);if(i){const a=`\n                    <div class="${n.CLASSES.FILE_INFO_ERROR}" style="background: ${n.STYLES.ERROR_BACKGROUND}; border: ${n.STYLES.ERROR_BORDER}; border-radius: 4px; padding: 12px; color: ${n.STYLES.ERROR_COLOR};">\n                        <strong>⚠️ File Information Error</strong><br>\n                        Selected: ${e.name}<br>\n                        Size: ${(e.size/1024).toFixed(2)} KB<br>\n                        <em>Unable to display detailed information: ${t.message}</em>\n                    </div>\n                `;s.setHTML(i,a)}}}readFileAsText(e){return new Promise((t,s)=>{const n=new FileReader;n.onload=e=>t(e.target.result),n.onerror=()=>s(new Error("Failed to read file")),n.readAsText(e)})}parseCSVContent(e){if(!e||"string"!=typeof e)return[];try{const t=e.split("\n").filter(e=>e.trim().length>0);return t.length<=1?[]:t.slice(1).map(e=>{const t=[];let s="",n=!1;for(let i=0;i<e.length;i++){const a=e[i];'"'===a?n=!n:","!==a||n?s+=a:(t.push(s.trim()),s="")}return t.push(s.trim()),t}).filter(e=>e.some(e=>e.length>0))}catch(e){return this.logger.error("CSV parsing error",{error:e.message}),[]}}updateFileInfoDisplay(e,t,s){const n=document.getElementById("file-info");if(!n)return void this.logger.warn("File info element not found in DOM");const i=this.formatFileSize(e.size),a=new Date(e.lastModified).toLocaleString(),l=e.type||this.getFileExtension(e.name),c=this.getFileExtension(e.name),g="csv"===c||"txt"===c||"text/csv"===l||"text/plain"===l;let u="";g&&null!==t&&(u="number"==typeof t?t>0?`\n                        <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                            <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                            <span style="color: #0073C8; font-size: 0.8rem; font-weight: bold;">${t}</span>\n                        </div>\n                    `:'\n                        <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                            <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                            <span style="color: #dc3545; font-size: 0.8rem; font-weight: bold;">No user records found</span>\n                        </div>\n                    ':`\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                        <span style="color: #ffc107; font-size: 0.8rem; font-weight: bold;">${t}</span>\n                    </div>\n                `);const d=`\n            <div class="file-info-details" style="background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 6px; padding: 12px; margin: 8px 0; box-shadow: 0 1px 4px rgba(0,0,0,0.08);">\n                \n                \x3c!-- File Name Section --\x3e\n                <div class="file-name-section" style="text-align: center; margin-bottom: 12px; padding: 8px; background: #e6f4ff; border-radius: 4px; color: #1a237e; font-weight: bold; font-size: 1.1rem;">\n                    <div style="font-size: 1.3rem; font-weight: 600; margin-bottom: 3px; color: #1a237e; word-break: break-word; overflow-wrap: break-word;">\n                        <i class="fas fa-file-csv" style="margin-right: 6px; font-size: 1.2rem; color: #1976d2;"></i>\n                        ${e.name}\n                    </div>\n                    <div style="font-size: 0.85rem; opacity: 0.9; font-weight: 500; color: #1976d2;">\n                        File Selected Successfully\n                    </div>\n                </div>\n                \n                \x3c!-- File Information Grid --\x3e\n                <div class="file-info-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 8px; font-size: 0.8em; margin-bottom: 10px;">\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📊 File Size</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${i}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📅 Modified</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${a}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📄 Type</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${l||"CSV"}</span>\n                    </div>\n                    \n                    ${u}\n                </div>\n                \n                \x3c!-- File Status --\x3e\n                <div class="file-info-status" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: ${g?"#d4edda":"#f8d7da"}; border: 1px solid ${g?"#c3e6cb":"#f5c6cb"}; display: flex; align-items: center; gap: 6px;">\n                    <i class="fas ${g?"fa-check-circle":"fa-exclamation-triangle"}" style="color: ${g?"#155724":"#721c24"};"></i>\n                    <span style="color: ${g?"#155724":"#721c24"}; font-size: 0.85rem; font-weight: 500;">\n                        ${g?"Valid CSV file format":"Warning: File type may not be compatible"}\n                    </span>\n                </div>\n                \n                ${s&&s.length>0?`\n                <div class="file-info-preview" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: #fff3cd; border: 1px solid #ffeaa7;">\n                    <strong style="color: #856404; font-size: 0.85rem;">📋 Ready for Import</strong>\n                    <div style="color: #856404; font-size: 0.8rem; margin-top: 2px;">\n                        File contains ${t} user record${1===t?"":"s"} ready for processing\n                    </div>\n                </div>\n                `:""}\n            </div>\n        `;n.innerHTML=d,this.logger.info("File information display updated successfully",{recordCount:t,isValidType:g})}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}getFileExtension(e){return e.slice((e.lastIndexOf(".")-1>>>0)+2).toLowerCase()}async establishRealTimeConnection(e){try{return this.logger.debug("🔗 [DEBUG] ImportSubsystem: Establishing real-time connection for session:",e),"undefined"!=typeof io&&this.subsystems?.realtimeManager?(this.logger.debug("🔗 [DEBUG] ImportSubsystem: Socket.IO available, setting up real-time connection"),this.socket=this.subsystems.realtimeManager.getConnection(),this.socket?(this.socket.on(`import-progress-${e}`,e=>{this.handleProgressUpdate(e)}),this.socket.on(`import-complete-${e}`,e=>{this.handleImportCompletion(e)}),this.socket.on(`import-error-${e}`,e=>{this.handleImportError(e)}),this.logger.info("✅ [DEBUG] ImportSubsystem: Real-time connection established successfully")):(this.logger.warn("⚠️ [DEBUG] ImportSubsystem: Socket.IO connection not available, using fallback polling"),this.setupFallbackPolling(e))):(this.logger.warn("⚠️ [DEBUG] ImportSubsystem: Socket.IO not available, using fallback polling"),this.setupFallbackPolling(e)),Promise.resolve()}catch(t){return this.logger.error("❌ [DEBUG] ImportSubsystem: Failed to establish real-time connection:",t),this.setupFallbackPolling(e),Promise.resolve()}}cleanupConnections(){this.socket&&(this.socket.disconnect(),this.socket=null),this.fallbackPolling&&(clearInterval(this.fallbackPolling),this.fallbackPolling=null),this.isImporting=!1}setupFallbackPolling(e){this.fallbackPolling=setInterval(async()=>{try{const t=await this.localClient.get(`/api/import/status/${e}`);t.data&&this.handleProgressUpdate(t.data)}catch(e){this.logger.error("Fallback polling failed",e)}},2e3)}setupCrossSubsystemEvents(){this.eventBus?(this.eventBus.on("tokenExpired",e=>{this.logger.warn("Token expired during import operation"),this.isImporting&&(this.cleanupConnections(),this.uiManager.showError("Session Expired","Your authentication token expired during the import. Please re-authenticate and try again."))}),this.eventBus.on("tokenError",e=>{this.logger.error("Token error detected",e),this.isImporting&&(this.cleanupConnections(),this.uiManager.showError("Authentication Error",`Authentication failed: ${e.error}`))}),this.eventBus.on("tokenRefreshed",e=>{this.logger.info("Token refreshed successfully")}),this.eventBus.on("populationsChanged",e=>{this.logger.info("Populations changed, refreshing import dropdown",{count:e.count}),this.refreshPopulationDropdown()}),this.logger.debug("Cross-subsystem event listeners set up for ImportSubsystem")):this.logger.warn("EventBus not available for cross-subsystem events")}handlePopulationChange(e,t){this.logger.info("🔄 [DEBUG] ImportSubsystem: Population changed",{populationId:e,populationName:t});const s=document.querySelector(".population-name-text");s&&(e&&t?(s.innerHTML=`<span class="population-label">Population:</span> <span class="population-value">${t}</span>`,this.logger.debug("Updated population name display",{populationName:t})):s.innerHTML='<span class="population-label">Population:</span> <span class="population-placeholder">Select a population</span>');const n=document.querySelector(".api-url-text");if(n)if(e){const t=`/api/populations/${e}/users`;n.textContent=t,this.logger.debug("Updated API URL display",{apiUrl:t})}else n.textContent="Select a population to see the API URL";this.selectedPopulationId=e,this.selectedPopulationName=t,this.eventBus&&this.eventBus.emit("importPopulationChanged",{populationId:e,populationName:t})}refreshPopulationDropdown(){this.logger.info("🔍 [DEBUG] ImportSubsystem: refreshPopulationDropdown called"),this.populationService?(this.logger.info("🔍 [DEBUG] ImportSubsystem: PopulationService available, calling populateDropdown"),this.populationService.populateDropdown("import-population-select",{includeEmpty:!0,emptyText:"Select a population"}).then(()=>{this.logger.info("✅ [DEBUG] ImportSubsystem: Import population dropdown refreshed successfully")}).catch(e=>{this.logger.error("❌ [DEBUG] ImportSubsystem: Failed to refresh import population dropdown",e),this.uiManager.showError("Population Refresh Failed","Failed to refresh population dropdown.")})):this.logger.error("❌ [DEBUG] ImportSubsystem: PopulationService not available for dropdown refresh",{populationServiceType:typeof this.populationService,populationServiceExists:!!this.populationService})}}},{"../utils/safe-logger.js":82}],67:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.NavigationSubsystem=void 0;var n=e("../utils/browser-logging-service.js");s.NavigationSubsystem=class NavigationSubsystem{constructor(e,t,s,i){this.logger=e||(0,n.createLogger)({serviceName:"navigation-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=s,this.app=i,this.currentView="home",this.previousView=null,this.navigationHistory=[],this.viewInitializers=new Map,this.viewCleanupHandlers=new Map,this.navItems=null,this.viewContainers=null,this.logger.info("Navigation subsystem initialized")}async init(){try{this.logger.info("Initializing navigation subsystem..."),this.navItems=document.querySelectorAll("[data-view]"),this.viewContainers=document.querySelectorAll('.view-container, [id$="-view"]'),this.logger.info("Navigation elements found",{navItems:this.navItems.length,viewContainers:this.viewContainers.length}),this.setupNavigationListeners(),this.registerDefaultViewInitializers(),await this.showView(this.currentView),this.logger.info("Navigation subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize navigation subsystem",{error:e.message}),e}}setupNavigationListeners(){this.navItems.forEach(e=>{e.addEventListener("click",async t=>{t.preventDefault();const s=e.getAttribute("data-view");this.logger.debug("Navigation item clicked",{view:s}),s&&s!==this.currentView&&await this.navigateToView(s)})}),window.addEventListener("popstate",e=>{e.state&&e.state.view&&this.showView(e.state.view,!1)}),this.logger.debug("Navigation listeners set up")}async navigateToView(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(this.logger.info("Navigating to view",{from:this.currentView,to:e}),!this.isValidView(e))return this.logger.warn("Invalid view requested",{view:e}),!1;if(!0!==t.force&&!await this.canNavigateFrom(this.currentView))return this.logger.info("Navigation blocked by current view",{currentView:this.currentView}),!1;const s=await this.showView(e,!1!==t.pushToHistory);return s&&this.logger.info("Navigation completed successfully",{view:e}),s}catch(t){return this.logger.error("Navigation failed",{view:e,error:t.message}),!1}}async showView(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];try{if(this.logger.debug("Showing view",{view:e,pushToHistory:t}),this.previousView=this.currentView,this.previousView&&this.viewCleanupHandlers.has(this.previousView))try{await this.viewCleanupHandlers.get(this.previousView)(),this.logger.debug("View cleanup completed",{view:this.previousView})}catch(e){this.logger.warn("View cleanup failed",{view:this.previousView,error:e.message})}this.hideAllViews();const s=document.getElementById(`${e}-view`);if(!s)return this.logger.warn("View element not found",{view:e}),!1;if(s.style.display="block",s.classList.add("active"),this.updateNavigationState(e),this.viewInitializers.has(e))try{await this.viewInitializers.get(e)(),this.logger.debug("View initializer completed",{view:e})}catch(t){this.logger.warn("View initializer failed",{view:e,error:t.message})}if(t&&window.history){const t=new URL(window.location);t.searchParams.set("view",e),window.history.pushState({view:e},"",t)}return this.currentView=e,this.navigationHistory.push({view:e,timestamp:Date.now(),from:this.previousView}),this.navigationHistory.length>50&&(this.navigationHistory=this.navigationHistory.slice(-50)),this.logger.info("View shown successfully",{view:e}),!0}catch(t){return this.logger.error("Failed to show view",{view:e,error:t.message}),!1}}hideAllViews(){this.viewContainers.forEach(e=>{e.style.display="none",e.classList.remove("active")}),this.logger.debug("All views hidden")}updateNavigationState(e){this.navItems.forEach(t=>{t.classList.remove("active"),t.getAttribute("data-view")===e&&t.classList.add("active")}),this.updatePageTitle(e),this.logger.debug("Navigation state updated",{view:e})}updatePageTitle(e){const t="PingOne User Import v6.5.2.1",s={import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History"}[e];document.title=s?`${s} - ${t}`:t}registerViewInitializer(e,t){this.viewInitializers.set(e,t),this.logger.debug("View initializer registered",{view:e})}registerViewCleanup(e,t){this.viewCleanupHandlers.set(e,t),this.logger.debug("View cleanup handler registered",{view:e})}registerDefaultViewInitializers(){this.registerViewInitializer("import",async()=>{"function"==typeof window.app?.loadPopulations&&await window.app.loadPopulations("import-population-select")}),this.registerViewInitializer("export",async()=>{window.exportManager&&"function"==typeof window.exportManager.loadPopulations&&await window.exportManager.loadPopulations()}),this.registerViewInitializer("delete-csv",async()=>{window.deleteManager&&"function"==typeof window.deleteManager.loadPopulations&&await window.deleteManager.loadPopulations()}),this.registerViewInitializer("modify",async()=>{"function"==typeof window.app?.loadPopulations&&await window.app.loadPopulations("modify-population-select")}),this.registerViewInitializer("logs",async()=>{window.logManager&&"function"==typeof window.logManager.loadLogs&&window.logManager.loadLogs()}),this.registerViewInitializer("history",async()=>{window.logManager&&"function"==typeof window.logManager.loadLogs&&window.logManager.loadLogs()}),this.logger.debug("Default view initializers registered")}isValidView(e){return["home","import","export","modify","delete-csv","settings","logs","history","analytics"].includes(e)}async canNavigateFrom(e){if("import"===e&&window.app?.isImportRunning){return confirm("Import is currently running. Are you sure you want to leave this page?")}if("export"===e&&window.exportManager?.isExportRunning){return confirm("Export is currently running. Are you sure you want to leave this page?")}if("delete-csv"===e&&window.deleteManager?.isDeleteRunning){return confirm("Delete operation is currently running. Are you sure you want to leave this page?")}if("settings"===e&&this.settingsManager?.hasUnsavedChanges?.()){return confirm("You have unsaved settings. Are you sure you want to leave without saving?")}return!0}getCurrentView(){return this.currentView}getPreviousView(){return this.previousView}getNavigationHistory(){return[...this.navigationHistory]}async goBack(){if(this.previousView)await this.navigateToView(this.previousView);else if(this.navigationHistory.length>1){const e=this.navigationHistory[this.navigationHistory.length-2];await this.navigateToView(e.view)}}async refreshCurrentView(){await this.showView(this.currentView,!1)}getViewStats(){const e={};return this.navigationHistory.forEach(t=>{e[t.view]||(e[t.view]={count:0,lastVisited:null}),e[t.view].count++,e[t.view].lastVisited=t.timestamp}),e}cleanup(){this.navItems.forEach(e=>{e.removeEventListener("click",this.handleNavClick)}),window.removeEventListener("popstate",this.handlePopState),this.viewInitializers.clear(),this.viewCleanupHandlers.clear(),this.navigationHistory=[],this.logger.info("Navigation subsystem cleaned up")}}},{"../utils/browser-logging-service.js":73}],68:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.OperationManagerSubsystem=void 0;var n=e("../utils/browser-logging-service.js");s.OperationManagerSubsystem=class OperationManagerSubsystem{constructor(e,t,s,i){this.logger=e||(0,n.createLogger)({serviceName:"operation-manager-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=s,this.apiClient=i,this.currentOperation=null,this.operationQueue=[],this.operationHistory=[],this.isOperationRunning=!1,this.operationTypes={IMPORT:"import",EXPORT:"export",DELETE:"delete",MODIFY:"modify"},this.validators=new Map,this.preChecks=new Map,this.postChecks=new Map,this.logger.info("Operation Manager subsystem initialized")}async init(){try{this.logger.info("Initializing operation manager subsystem..."),this.registerDefaultValidators(),this.registerDefaultPreChecks(),this.registerDefaultPostChecks(),this.logger.info("Operation Manager subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize operation manager subsystem",{error:e.message}),e}}async startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(this.logger.info("Starting operation",{type:e,options:t}),this.isOperationRunning)throw new Error("Another operation is already running");if(!Object.values(this.operationTypes).includes(e))throw new Error(`Invalid operation type: ${e}`);const s={id:this.generateOperationId(),type:e,options:t,status:"initializing",startTime:Date.now(),endTime:null,progress:{current:0,total:0,percentage:0,message:"Initializing..."},result:null,error:null};this.currentOperation=s,this.isOperationRunning=!0,await this.runPreChecks(s),await this.validateOperation(s);const n=await this.executeOperation(s);return await this.runPostChecks(s),s.status="completed",s.endTime=Date.now(),s.result=n,this.logger.info("Operation completed successfully",{type:e,duration:s.endTime-s.startTime}),n}catch(t){throw this.logger.error("Operation failed",{type:e,error:t.message}),this.currentOperation&&(this.currentOperation.status="failed",this.currentOperation.endTime=Date.now(),this.currentOperation.error=t.message),t}finally{this.finalizeOperation()}}async executeOperation(e){const{type:t,options:s}=e;switch(this.logger.debug("Executing operation",{type:t}),t){case this.operationTypes.IMPORT:return await this.executeImport(e);case this.operationTypes.EXPORT:return await this.executeExport(e);case this.operationTypes.DELETE:return await this.executeDelete(e);case this.operationTypes.MODIFY:return await this.executeModify(e);default:throw new Error(`Unknown operation type: ${t}`)}}async executeImport(e){const{options:t}=e;this.logger.info("Executing import operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting import...");const s={file:t.file,populationId:t.populationId,populationName:t.populationName,skipDuplicates:t.skipDuplicates||!1,updateExisting:t.updateExisting||!1},n=await this.apiClient.post("/api/import",s);if(!n.success)throw new Error(n.error||"Import failed");return await this.trackOperationProgress(e,n.sessionId),{success:!0,sessionId:n.sessionId,message:"Import completed successfully"}}async executeExport(e){const{options:t}=e;this.logger.info("Executing export operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting export...");const s={populationId:t.populationId,populationName:t.populationName,includeDisabled:t.includeDisabled||!1,format:t.format||"csv"},n=await this.apiClient.post("/api/export",s);if(!n.success)throw new Error(n.error||"Export failed");return await this.trackOperationProgress(e,n.sessionId),{success:!0,sessionId:n.sessionId,downloadUrl:n.downloadUrl,message:"Export completed successfully"}}async executeDelete(e){const{options:t}=e;this.logger.info("Executing delete operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting delete...");const s={file:t.file,populationId:t.populationId,populationName:t.populationName,confirmDelete:!0},n=await this.apiClient.post("/api/delete",s);if(!n.success)throw new Error(n.error||"Delete failed");return await this.trackOperationProgress(e,n.sessionId),{success:!0,sessionId:n.sessionId,message:"Delete completed successfully"}}async executeModify(e){const{options:t}=e;this.logger.info("Executing modify operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting modify...");const s={file:t.file,populationId:t.populationId,populationName:t.populationName,updateFields:t.updateFields||[]},n=await this.apiClient.post("/api/modify",s);if(!n.success)throw new Error(n.error||"Modify failed");return await this.trackOperationProgress(e,n.sessionId),{success:!0,sessionId:n.sessionId,message:"Modify completed successfully"}}async trackOperationProgress(e,t){return new Promise((s,n)=>{"undefined"!=typeof EventSource?this.trackProgressViaSSE(e,t,s,n):this.trackProgressViaPolling(e,t,s,n)})}trackProgressViaSSE(e,t,s,n){const i=new EventSource(`/api/progress/${t}`);i.onmessage=t=>{try{const a=JSON.parse(t.data);this.handleProgressUpdate(e,a),"completed"===a.status?(i.close(),s(a)):"failed"===a.status&&(i.close(),n(new Error(a.error||"Operation failed")))}catch(e){this.logger.error("Error parsing SSE data",{error:e.message})}},i.onerror=a=>{this.logger.error("SSE connection error",{error:a}),i.close(),this.trackProgressViaPolling(e,t,s,n)}}async trackProgressViaPolling(e,t,s,n){const poll=async()=>{try{const i=await this.apiClient.get(`/api/progress/${t}`);i.success?(this.handleProgressUpdate(e,i.data),"completed"===i.data.status?s(i.data):"failed"===i.data.status?n(new Error(i.data.error||"Operation failed")):setTimeout(poll,1e3)):n(new Error(i.error||"Failed to get progress"))}catch(e){n(e)}};poll()}handleProgressUpdate(e,t){e.progress={current:t.current||0,total:t.total||0,percentage:t.percentage||0,message:t.message||"Processing..."},this.uiManager&&this.uiManager.updateProgress(e.progress.current,e.progress.total,e.progress.message),this.logger.debug("Progress updated",{type:e.type,progress:e.progress})}updateOperationProgress(e,t,s,n){const i=s>0?Math.round(t/s*100):0;e.progress={current:t,total:s,percentage:i,message:n},this.uiManager&&this.uiManager.updateProgress(t,s,n),this.logger.debug("Operation progress updated",{type:e.type,progress:e.progress})}async runPreChecks(e){const t=this.preChecks.get(e.type);t&&(this.logger.debug("Running pre-checks",{type:e.type}),await t(e))}async validateOperation(e){const t=this.validators.get(e.type);t&&(this.logger.debug("Validating operation",{type:e.type}),await t(e))}async runPostChecks(e){const t=this.postChecks.get(e.type);t&&(this.logger.debug("Running post-checks",{type:e.type}),await t(e))}finalizeOperation(){this.currentOperation&&(this.operationHistory.push({...this.currentOperation}),this.operationHistory.length>100&&(this.operationHistory=this.operationHistory.slice(-100)),this.currentOperation=null),this.isOperationRunning=!1,this.logger.debug("Operation finalized")}registerDefaultValidators(){this.validators.set(this.operationTypes.IMPORT,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for import");if(!t.populationId)throw new Error("No population selected for import")}),this.validators.set(this.operationTypes.EXPORT,async e=>{const{options:t}=e;if(!t.populationId)throw new Error("No population selected for export")}),this.validators.set(this.operationTypes.DELETE,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for delete");if(!t.populationId)throw new Error("No population selected for delete")}),this.validators.set(this.operationTypes.MODIFY,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for modify");if(!t.populationId)throw new Error("No population selected for modify")})}registerDefaultPreChecks(){const commonPreCheck=async e=>{if(window.app&&"function"==typeof window.app.checkTokenAndRedirect){if(!await window.app.checkTokenAndRedirect(e.type))throw new Error("Invalid or expired token")}};Object.values(this.operationTypes).forEach(e=>{this.preChecks.set(e,commonPreCheck)})}registerDefaultPostChecks(){const commonPostCheck=async e=>{this.logger.info("Operation completed",{type:e.type,duration:e.endTime-e.startTime,status:e.status})};Object.values(this.operationTypes).forEach(e=>{this.postChecks.set(e,commonPostCheck)})}generateOperationId(){return`op_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async cancelOperation(){if(this.currentOperation&&this.isOperationRunning){this.logger.info("Cancelling operation",{type:this.currentOperation.type});try{this.currentOperation.sessionId&&await this.apiClient.post(`/api/cancel/${this.currentOperation.sessionId}`),this.currentOperation.status="cancelled",this.currentOperation.endTime=Date.now(),this.logger.info("Operation cancelled successfully")}catch(e){this.logger.error("Failed to cancel operation",{error:e.message})}finally{this.finalizeOperation()}}}getCurrentOperation(){return this.currentOperation?{...this.currentOperation}:null}getOperationHistory(){return[...this.operationHistory]}isRunning(){return this.isOperationRunning}getOperationStats(){const e={total:this.operationHistory.length,byType:{},byStatus:{},averageDuration:0};let t=0;return this.operationHistory.forEach(s=>{e.byType[s.type]||(e.byType[s.type]=0),e.byType[s.type]++,e.byStatus[s.status]||(e.byStatus[s.status]=0),e.byStatus[s.status]++,s.endTime&&s.startTime&&(t+=s.endTime-s.startTime)}),this.operationHistory.length>0&&(e.averageDuration=Math.round(t/this.operationHistory.length)),e}}},{"../utils/browser-logging-service.js":73}],69:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default=class PopulationSubsystem{constructor(e,t,s){if(!e||!t||!s)throw new Error("PopulationSubsystem: logger, localClient, and eventBus are required.");this.logger=e.child({subsystem:"PopulationSubsystem"}),this.localClient=t,this.eventBus=s,this.populations=[],this.isInitialized=!1,this.logger.info("PopulationSubsystem initialized.")}async init(){this.logger.info("Initializing..."),this.eventBus.on("credentials-updated",()=>this.fetchPopulations(!0)),await this.fetchPopulations(),this.isInitialized=!0,this.logger.info("Successfully initialized.")}async fetchPopulations(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.populations.length>0&&!e)return this.logger.debug("Returning cached populations."),this.populations;this.logger.info("Fetching populations from the server...");try{const e=await this.localClient.get("/pingone/populations");return this.populations=e.populations||[],this.logger.info(`Successfully fetched ${this.populations.length} populations.`),this.eventBus.emit("populations-updated",this.populations),this.populations}catch(e){return this.logger.error("Failed to fetch populations:",e),this.populations=[],this.eventBus.emit("populations-updated:error",e),[]}}getPopulations(){return this.populations}getPopulationById(e){return this.populations.find(t=>t.id===e)}}},{}],70:[function(e,t,s){"use strict";function _interopRequireWildcard(e,t){if("function"==typeof WeakMap)var s=new WeakMap,n=new WeakMap;return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var i,a,l={__proto__:null,default:e};if(null===e||"object"!=typeof e&&"function"!=typeof e)return l;if(i=t?n:s){if(i.has(e))return i.get(e);i.set(e,l)}for(const t in e)"default"!==t&&{}.hasOwnProperty.call(e,t)&&((a=(i=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,t))&&(a.get||a.set)?i(l,t,a):l[t]=e[t]);return l})(e,t)}Object.defineProperty(s,"__esModule",{value:!0}),s.RealtimeCommunicationSubsystem=void 0;s.RealtimeCommunicationSubsystem=class RealtimeCommunicationSubsystem{constructor(e,t){this.logger=e,this.uiManager=t,this.socket=null,this.eventSource=null,this.fallbackPolling=null,this.connectionType=null,this.isConnected=!1,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.eventHandlers=new Map,this.logger.info("Real-time Communication Subsystem initialized")}async init(){try{this.setupConnectionMonitoring(),this.logger.info("Real-time Communication Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Real-time Communication Subsystem",e),e}}async establishConnection(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{preferredTransport:s="socketio",enableFallback:n=!0,timeout:i=1e4}=t;this.logger.info("Establishing real-time connection",{sessionId:e,preferredTransport:s,enableFallback:n});try{"socketio"===s?await this.connectSocketIO(e,i):"sse"===s?await this.connectSSE(e,i):"websocket"===s&&await this.connectWebSocket(e,i)}catch(t){if(this.logger.warn("Primary transport failed",{error:t.message}),!n)throw t;await this.tryFallbackConnections(e)}}async connectSocketIO(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise(async(n,i)=>{try{const{io:a}=await Promise.resolve().then(()=>_interopRequireWildcard(e("socket.io-client")));this.socket=a({transports:["polling"],reconnectionAttempts:this.maxReconnectAttempts,reconnectionDelay:this.reconnectDelay,timeout:s,forceNew:!0,autoConnect:!0});const l=setTimeout(()=>{i(new Error("Socket.IO connection timeout"))},s);this.socket.on("connect",()=>{clearTimeout(l),this.connectionType="socketio",this.isConnected=!0,this.reconnectAttempts=0,this.setupSocketIOHandlers(),this.socket.emit("registerSession",t),this.logger.info("Socket.IO connected successfully"),this.uiManager.showSuccess("Real-time connection established (Socket.IO)"),n()}),this.socket.on("connect_error",e=>{clearTimeout(l),this.logger.error("Socket.IO connection error",e),i(e)}),this.setupSocketIOHandlers()}catch(e){this.logger.error("Failed to initialize Socket.IO",e),i(e)}})}async connectSSE(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((s,n)=>{try{const i=`/api/progress/stream/${e}`;this.eventSource=new EventSource(i);const a=setTimeout(()=>{n(new Error("SSE connection timeout"))},t);this.eventSource.onopen=()=>{clearTimeout(a),this.connectionType="sse",this.isConnected=!0,this.reconnectAttempts=0,this.logger.info("SSE connected successfully"),this.uiManager.showSuccess("Real-time connection established (SSE)"),s()},this.eventSource.onerror=e=>{clearTimeout(a),this.logger.error("SSE connection error",e),n(e)},this.setupSSEHandlers()}catch(e){this.logger.error("Failed to initialize SSE",e),n(e)}})}async connectWebSocket(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((s,n)=>{try{const i=`ws://${window.location.host}/ws/${e}`;this.websocket=new WebSocket(i);const a=setTimeout(()=>{n(new Error("WebSocket connection timeout"))},t);this.websocket.onopen=()=>{clearTimeout(a),this.connectionType="websocket",this.isConnected=!0,this.reconnectAttempts=0,this.logger.info("WebSocket connected successfully"),this.uiManager.showSuccess("Real-time connection established (WebSocket)"),s()},this.websocket.onerror=e=>{clearTimeout(a),this.logger.error("WebSocket connection error",e),n(e)},this.setupWebSocketHandlers()}catch(e){this.logger.error("Failed to initialize WebSocket",e),n(e)}})}async tryFallbackConnections(e){const t=["sse","websocket","polling"];for(const s of t)if(s!==this.connectionType)try{return this.logger.info(`Trying fallback transport: ${s}`),void("sse"===s?await this.connectSSE(e):"websocket"===s?await this.connectWebSocket(e):"polling"===s&&await this.setupFallbackPolling(e))}catch(e){this.logger.warn(`Fallback transport ${s} failed`,e)}throw new Error("All connection methods failed")}setupSocketIOHandlers(){this.socket.on("progress",e=>{this.handleProgressEvent(e)}),this.socket.on("completion",e=>{this.handleCompletionEvent(e)}),this.socket.on("error",e=>{this.handleErrorEvent(e)}),this.socket.on("disconnect",e=>{this.handleDisconnection(e)}),this.socket.on("reconnect",()=>{this.handleReconnection()})}setupSSEHandlers(){this.eventSource.addEventListener("progress",e=>{const t=JSON.parse(e.data);this.handleProgressEvent(t)}),this.eventSource.addEventListener("completion",e=>{const t=JSON.parse(e.data);this.handleCompletionEvent(t)}),this.eventSource.addEventListener("error",e=>{const t=JSON.parse(e.data);this.handleErrorEvent(t)})}setupWebSocketHandlers(){this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);switch(t.type){case"progress":this.handleProgressEvent(t.data);break;case"completion":this.handleCompletionEvent(t.data);break;case"error":this.handleErrorEvent(t.data)}}catch(e){this.logger.error("Failed to parse WebSocket message",e)}},this.websocket.onclose=()=>{this.handleDisconnection("WebSocket closed")}}async setupFallbackPolling(e){this.connectionType="polling",this.isConnected=!0,this.fallbackPolling=setInterval(async()=>{try{const t=await fetch(`/api/progress/poll/${e}`),s=await t.json();s.events&&s.events.length>0&&s.events.forEach(e=>{switch(e.type){case"progress":this.handleProgressEvent(e.data);break;case"completion":this.handleCompletionEvent(e.data);break;case"error":this.handleErrorEvent(e.data)}})}catch(e){this.logger.error("Polling request failed",e)}},2e3),this.logger.info("Fallback polling established"),this.uiManager.showInfo("Using polling for updates (limited real-time capability)")}handleProgressEvent(e){this.logger.info("Progress event received",e),this.triggerEvent("progress",e)}handleCompletionEvent(e){this.logger.info("Completion event received",e),this.triggerEvent("completion",e),this.disconnect()}handleErrorEvent(e){this.logger.error("Error event received",e),this.triggerEvent("error",e)}handleDisconnection(e){this.isConnected=!1,this.logger.warn("Connection lost",{reason:e,type:this.connectionType}),this.uiManager.showWarning("Real-time connection lost"),this.attemptReconnection()}handleReconnection(){this.isConnected=!0,this.reconnectAttempts=0,this.logger.info("Connection restored"),this.uiManager.showSuccess("Real-time connection restored")}async attemptReconnection(){if(this.reconnectAttempts>=this.maxReconnectAttempts)return this.logger.error("Max reconnection attempts reached"),void this.uiManager.showError("Connection Lost","Unable to restore real-time connection");this.reconnectAttempts++;const e=this.reconnectDelay*Math.pow(2,this.reconnectAttempts-1);this.logger.info("Attempting reconnection",{attempt:this.reconnectAttempts,delay:e}),setTimeout(async()=>{try{"socketio"===this.connectionType&&this.socket&&this.socket.connect()}catch(e){this.logger.error("Reconnection failed",e),this.attemptReconnection()}},e)}setupConnectionMonitoring(){setInterval(()=>{this.isConnected&&this.checkConnectionHealth()},3e4)}checkConnectionHealth(){"socketio"===this.connectionType&&this.socket?this.socket.connected||this.handleDisconnection("Health check failed"):"sse"===this.connectionType&&this.eventSource?this.eventSource.readyState===EventSource.CLOSED&&this.handleDisconnection("SSE connection closed"):"websocket"===this.connectionType&&this.websocket&&this.websocket.readyState===WebSocket.CLOSED&&this.handleDisconnection("WebSocket connection closed")}on(e,t){this.eventHandlers.has(e)||this.eventHandlers.set(e,[]),this.eventHandlers.get(e).push(t)}off(e,t){if(this.eventHandlers.has(e)){const s=this.eventHandlers.get(e),n=s.indexOf(t);n>-1&&s.splice(n,1)}}triggerEvent(e,t){this.eventHandlers.has(e)&&this.eventHandlers.get(e).forEach(s=>{try{s(t)}catch(t){this.logger.error("Event handler error",{event:e,error:t.message})}})}disconnect(){this.isConnected=!1,this.socket&&(this.socket.disconnect(),this.socket=null),this.eventSource&&(this.eventSource.close(),this.eventSource=null),this.websocket&&(this.websocket.close(),this.websocket=null),this.fallbackPolling&&(clearInterval(this.fallbackPolling),this.fallbackPolling=null),this.connectionType=null,this.logger.info("All real-time connections closed")}getConnectionStatus(){return{isConnected:this.isConnected,connectionType:this.connectionType,reconnectAttempts:this.reconnectAttempts}}}},{"socket.io-client":27}],71:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;e("../../utils/config-standardization-browser.js");s.default=class SettingsSubsystem{constructor(e,t,s,n,i,a){this.logger=e,this.uiManager=t,this.localClient=s,this.settingsManager=n,this.eventBus=i,this.credentialsManager=a,this.isSaving=!1,this.currentSettings=null;(this.logger?.info||this.logger?.log||console.log)("Settings Subsystem initialized"),this.setupCrossSubsystemEvents()}async init(){try{this.setupEventListeners(),await this.loadCurrentSettings();(this.logger?.info||this.logger?.log||console.log)("Settings Subsystem initialized successfully")}catch(e){(this.logger?.error||this.logger?.log||console.error)("Failed to initialize Settings Subsystem",e),this.uiManager.showSettingsActionStatus("Failed to initialize Settings Subsystem: "+e.message,"error")}}setupEventListeners(){const e=this.logger?.info||this.logger?.log||console.log,t=this.logger?.warn||this.logger?.log||console.warn;e("Setting up Settings Subsystem event listeners");const s=document.getElementById("save-settings");s?(e("Found save settings button, attaching event listener"),s.addEventListener("click",async t=>{t.preventDefault(),e("Save settings button clicked"),await this.saveSettings()})):t("Save settings button not found in DOM");const n=document.getElementById("test-connection-btn");n&&n.addEventListener("click",async e=>{e.preventDefault(),await this.testConnection()});const i=document.getElementById("get-token-btn");i&&i.addEventListener("click",async e=>{e.preventDefault(),await this.getToken()});const a=document.getElementById("toggle-api-secret-visibility");a&&a.addEventListener("click",e=>{e.preventDefault(),this.toggleSecretVisibility()}),e("Settings Subsystem event listeners setup complete")}async loadCurrentSettings(){try{try{this.logger.info("🔧 SETTINGS: Loading settings from server API...");const e=await fetch("/api/settings");if(e.ok){const t=await e.json();if(t.success&&t.data)return this.logger.info("🔧 SETTINGS: Server settings loaded successfully",{hasEnvironmentId:!!t.data.pingone_environment_id,hasApiClientId:!!t.data.pingone_client_id,region:t.data.pingone_region}),this.currentSettings=t.data,this.populateSettingsForm(this.currentSettings),void this.logger.info("🔧 SETTINGS: Form fields populated successfully");this.logger.warn("🔧 SETTINGS: Invalid server response format:",t)}else this.logger.warn("🔧 SETTINGS: Server API returned non-OK status:",e.status)}catch(e){this.logger.warn("🔧 SETTINGS: Failed to load from server API, falling back to local storage",{error:e.message})}this.logger.info("🔧 SETTINGS: Loading settings from local storage..."),this.currentSettings=this.settingsManager.getSettings(),this.populateSettingsForm(this.currentSettings),this.logger.info("🔧 SETTINGS: Local settings loaded successfully")}catch(e){throw(this.logger?.error||this.logger?.log||console.error)("Failed to load current settings",e),e}}async saveSettings(){const e=this.logger?.info||this.logger?.log||console.log,t=this.logger?.warn||this.logger?.log||console.warn,s=this.logger?.error||this.logger?.log||console.error,n=this.logger?.debug||this.logger?.log||console.log;if(this.isSaving)t("Settings save already in progress");else try{this.isSaving=!0,e("Starting settings save process"),n("Checking saveSettings dependencies:",{hasUIManager:!!this.uiManager,hasLocalClient:!!this.localClient,hasSettingsManager:!!this.settingsManager,hasCredentialsManager:!!this.credentialsManager,hasEventBus:!!this.eventBus}),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus?(this.uiManager.showSettingsActionStatus("Saving settings...","info"),n("UI feedback shown successfully")):t("UIManager or showSettingsActionStatus method not available");const i=this.getFormData();if(!this.validateSettings(i))throw s("Settings validation failed"),new Error("Settings validation failed");if(this.credentialsManager)try{const t={environmentId:i.pingone_environment_id||"",apiClientId:i.pingone_client_id||"",apiSecret:i.pingone_client_secret||"",populationId:i.pingone_population_id||"",region:i.pingone_region||"NA"},s=this.credentialsManager.validateCredentials(t);if(!s.isValid)throw new Error(`Invalid credentials: ${s.errors.join(", ")}`);this.credentialsManager.saveCredentials(t),e("Credentials saved to localStorage successfully")}catch(e){throw s("Credentials manager error:",e),new Error(`Credentials save failed: ${e.message}`)}else n("No credentials manager available, skipping credentials save");if(!this.localClient||"function"!=typeof this.localClient.post)throw s("LocalClient not available or post method missing"),new Error("LocalClient not available for server communication");try{n("Attempting server save with localClient.post");e("Server save successful:",await this.localClient.post("/api/settings",i))}catch(e){s("Failed to save to server:",e);const t=e.message||"Unknown server error";throw this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Failed to save settings: "+t,"error",{autoHide:!1}),new Error(`Server save failed: ${t}`)}if(this.settingsManager&&"function"==typeof this.settingsManager.updateSettings)try{this.settingsManager.updateSettings(i),this.currentSettings=i,n("Settings manager updated successfully")}catch(e){throw s("Settings manager update error:",e),new Error(`Settings manager update failed: ${e.message}`)}else t("Settings manager not available or updateSettings method missing");this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Settings saved successfully","success",{autoHideDelay:3e3});try{"function"==typeof this.updateConnectionStatus&&this.updateConnectionStatus("✅ Settings saved! Please - Get token","success")}catch(e){t("Connection status update failed:",e)}if(this.eventBus&&"function"==typeof this.eventBus.emit)try{this.eventBus.emit("settingsSaved",{settings:i}),n("Settings saved event emitted successfully")}catch(e){t("Event emission failed:",e)}e("Settings save process completed successfully")}catch(e){throw s("Failed to save settings - detailed error:",{message:e.message,stack:e.stack,name:e.name}),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Failed to save settings: "+e.message,"error",{autoHide:!1}),e}finally{this.isSaving=!1,n("Settings save process finished, isSaving flag reset")}}getFormData(){const e=document.getElementById("settings-form");if(!e)throw new Error("Settings form not found");const t=new FormData(e),s=t.get("region")||"NorthAmerica",n={NorthAmerica:"NA",Europe:"EU",Asia:"AP",Canada:"CA",Australia:"AU",NA:"NA",EU:"EU",AP:"AP",CA:"CA",AU:"AU"}[s]||"NA";return{pingone_environment_id:t.get("pingone_environment_id")||"",pingone_client_id:t.get("pingone_client_id")||"",pingone_client_secret:t.get("pingone_client_secret")||"",pingone_population_id:t.get("pingone_population_id")||"",pingone_region:n,rate_limit:parseInt(t.get("rate-limit"))||90}}validateSettings(e){const t=[];if(e.pingone_environment_id?.trim()||t.push("Environment ID is required"),e.pingone_client_id?.trim()||t.push("API Client ID is required"),e.pingone_client_secret?.trim()||t.push("API Secret is required"),e.pingone_region?.trim()||t.push("Region is required"),t.length>0){return(this.logger?.error||this.logger?.log||console.error)("Settings validation failed",{errors:t}),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Validation failed: "+t.join(", "),"error"),!1}return!0}populateSettingsForm(e){if(!e)return;const t=document.getElementById("settings-form");if(!t)return;const s={NA:"NorthAmerica",EU:"Europe",AP:"Asia",CA:"Canada",AU:"Australia"}[e.pingone_region||"NA"]||"NorthAmerica";const n={pingone_environment_id:e.pingone_environment_id||"",pingone_client_id:e.pingone_client_id||"",pingone_client_secret:e.pingone_client_secret||"",pingone_population_id:e.pingone_population_id||"",region:s,"rate-limit":e.rate_limit||90};Object.entries(n).forEach(e=>{let[s,n]=e;const i=t.querySelector(`[name="${s}"]`);i&&(i.value=n)});(this.logger?.info||this.logger?.log||console.log)("Settings form populated with current values")}async testConnection(){const e=this.logger?.info||this.logger?.log||console.log,t=this.logger?.error||this.logger?.log||console.error;try{e("Testing connection and getting token..."),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Testing connection and getting token...","info");const t=document.getElementById("pingone_environment_id")?.value,s=document.getElementById("pingone_client_id")?.value,n=document.getElementById("pingone_client_secret")?.value,i=document.getElementById("region")?.value;if(!(t&&s&&n&&i)){const e=[];t||e.push("Environment ID"),s||e.push("Client ID"),n||e.push("Client Secret"),i||e.push("Region");const a=`Missing required fields: ${e.join(", ")}`;return this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus(a,"error"),void this.updateConnectionStatus("❌ "+a,"error")}const a=await this.localClient.post("/api/pingone/test-connection",{environmentId:t,clientId:s,clientSecret:n,region:i});if(a.success){e("Connection successful, getting token..."),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Connection successful! Getting token...","info");const a=await this.localClient.post("/token/worker",{environmentId:t,clientId:s,clientSecret:n,region:i});if(a.success){let e="Connection successful! Token obtained";if(a.data&&a.data.expires_in){e+=` (expires in ${Math.floor(a.data.expires_in/60)} minutes)`}this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus(e,"success",{autoHideDelay:8e3}),this.updateConnectionStatus("✅ "+e,"success"),this.eventBus&&"function"==typeof this.eventBus.emit&&(this.eventBus.emit("tokenObtained",{token:a.data}),this.eventBus.emit("token:updated",{token:a.data})),window.app&&window.app.subsystems&&window.app.subsystems.globalTokenManager&&setTimeout(()=>{window.app.subsystems.globalTokenManager.updateGlobalTokenStatus()},100)}else{const e="Connection successful but failed to get token: "+(a.error||"Unknown error");this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus(e,"warning"),this.updateConnectionStatus("⚠️ "+e,"warning")}}else{const e="Connection test failed: "+(a.error||"Unknown error");this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus(e,"error"),this.updateConnectionStatus("❌ Connection failed","error")}}catch(e){t("Connection test failed",e);const s="Connection test failed: "+e.message;this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus(s,"error"),this.updateConnectionStatus("❌ Connection failed","error")}}async getToken(){const e=this.logger?.info||this.logger?.log||console.log,t=this.logger?.error||this.logger?.log||console.error;try{e("Getting token..."),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Getting token...","info");const t=await this.localClient.post("/token/worker");t.success?(this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Token retrieved successfully!","success"),this.updateConnectionStatus("✅ Token obtained","success"),this.eventBus&&"function"==typeof this.eventBus.emit&&this.eventBus.emit("tokenObtained",{token:t.data})):(this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Failed to get token: "+(t.error||"Unknown error"),"error"),this.updateConnectionStatus("❌ Token failed","error"))}catch(e){t("Failed to get token",e),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Failed to get token: "+e.message,"error"),this.updateConnectionStatus("❌ Token failed","error")}}toggleSecretVisibility(){const e=document.getElementById("pingone_client_secret"),t=document.getElementById("toggle-api-secret-visibility"),s=t?.querySelector("i");e&&t&&s&&("password"===e.type?(e.type="text",s.className="fas fa-eye-slash",t.setAttribute("aria-label","Hide password")):(e.type="password",s.className="fas fa-eye",t.setAttribute("aria-label","Show password")))}updateConnectionStatus(e,t){const s=document.getElementById("settings-connection-status");s&&(s.textContent=e,s.className=`connection-status status-${t}`)}setupCrossSubsystemEvents(){if(!this.eventBus){return void(this.logger?.warn||this.logger?.log||console.warn)("EventBus not available for cross-subsystem events")}this.eventBus.on("tokenExpired",e=>{(this.logger?.warn||this.logger?.log||console.warn)("Token expired"),this.updateConnectionStatus("❌ Token expired","error")}),this.eventBus.on("tokenError",e=>{(this.logger?.error||this.logger?.log||console.error)("Token error detected",e),this.updateConnectionStatus("❌ Token error","error")}),this.eventBus.on("tokenRefreshed",e=>{(this.logger?.info||this.logger?.log||console.log)("Token refreshed successfully"),this.updateConnectionStatus("✅ Token refreshed","success")});(this.logger?.debug||this.logger?.log||console.log)("Cross-subsystem event listeners set up for SettingsSubsystem")}getAllSettings(){if(!this.settingsManager){return(this.logger?.warn||this.logger?.log||console.warn)("No settings available, returning empty object"),{}}return this.settingsManager.getSettings()||{}}}},{"../../utils/config-standardization-browser.js":83}],72:[function(e,t,s){(function(e){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ViewManagementSubsystem=void 0;s.ViewManagementSubsystem=class ViewManagementSubsystem{constructor(e,t){this.logger=e,this.uiManager=t,this.currentView="home",this.previousView=null,this.viewHistory=[],this.viewInitializers=new Map,this.logger.info("View Management Subsystem initialized with default home view")}async init(){try{this.setupNavigationListeners(),this.registerViewInitializers(),await this.showInitialView(),this.logger.info("View Management Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize View Management Subsystem",e),e}}setupNavigationListeners(){document.querySelectorAll("[data-view]").forEach(e=>{e.addEventListener("click",async t=>{t.preventDefault();const s=e.getAttribute("data-view");await this.showView(s)})}),window.addEventListener("popstate",e=>{e.state&&e.state.view&&this.showView(e.state.view,!1)}),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&this.handleKeyboardNavigation(e)})}registerViewInitializers(){this.viewInitializers.set("import",async()=>{await this.initializeImportView()}),this.viewInitializers.set("export",async()=>{await this.initializeExportView()}),this.viewInitializers.set("modify",async()=>{await this.initializeModifyView()}),this.viewInitializers.set("delete-csv",async()=>{await this.initializeDeleteView()}),this.viewInitializers.set("settings",async()=>{await this.initializeSettingsView()}),this.viewInitializers.set("logs",async()=>{await this.initializeLogsView()}),this.viewInitializers.set("history",async()=>{await this.initializeHistoryView()}),this.viewInitializers.set("analytics",async()=>{await this.initializeAnalyticsView()})}async showView(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(e&&e!==this.currentView)try{if(this.logger.info("Switching to view",{from:this.currentView,to:e}),!this.isValidView(e))return void(this.uiManager&&"function"==typeof this.uiManager.showError&&this.uiManager.showError("Navigation Error",`Invalid view: ${e}`));this.previousView=this.currentView,this.hideCurrentView(),await this.displayView(e),this.updateNavigationState(e),t&&this.updateBrowserHistory(e),await this.initializeView(e),this.currentView=e,this.viewHistory.push(e),this.updatePageTitle(e),this.triggerViewChangeEvent(e,this.previousView)}catch(t){this.logger.error("Failed to switch view",{view:e,error:t.message}),this.uiManager&&"function"==typeof this.uiManager.showError&&this.uiManager.showError("Navigation Error",`Failed to switch to ${e} view: ${t.message}`)}}hideCurrentView(){const e=document.getElementById(`${this.currentView}-view`);e&&(e.style.display="none",e.classList.remove("active"))}async displayView(e){const t=document.getElementById(`${e}-view`);if(!t)throw new Error(`View element not found: ${e}-view`);t.style.display="block",t.classList.add("active"),t.style.opacity="0",t.style.transition="opacity 0.3s ease-in-out",requestAnimationFrame(()=>{t.style.opacity="1"})}updateNavigationState(e){document.querySelectorAll("[data-view]").forEach(t=>{t.getAttribute("data-view")===e?t.classList.add("active"):t.classList.remove("active")}),this.updatePageTitle(e)}updateBrowserHistory(e){const t={view:e,timestamp:Date.now()},s=this.getViewTitle(e),n=`#${e}`;history.pushState(t,s,n)}async initializeView(e){const t=this.viewInitializers.get(e);if(t)try{await t()}catch(t){this.logger.error("View initialization failed",{view:e,error:t.message})}}async initializeImportView(){window.app&&"function"==typeof window.app.loadPopulations&&await window.app.loadPopulations("import-population-select");const e=document.getElementById("csv-file");e&&(e.value=""),this.resetProgressDisplay()}async initializeExportView(){this.logger.debug("🔄 VIEW: Initializing export view..."),window.app&&window.app.subsystems&&window.app.subsystems.exportManager?(this.logger.debug("🔄 VIEW: Found export manager, loading populations..."),"function"==typeof window.app.subsystems.exportManager.loadPopulations?(await window.app.subsystems.exportManager.loadPopulations(),this.logger.info("🔄 VIEW: Export populations loaded successfully")):this.logger.error("🔄 VIEW: Export manager loadPopulations method not found")):this.logger.error("🔄 VIEW: Export manager not found in app subsystems",{hasApp:!!window.app,hasSubsystems:!(!window.app||!window.app.subsystems),availableSubsystems:window.app&&window.app.subsystems?Object.keys(window.app.subsystems):[]})}async initializeModifyView(){window.app&&"function"==typeof window.app.loadPopulations&&await window.app.loadPopulations("modify-population-select");const e=document.getElementById("modify-csv-file");e&&(e.value="")}async initializeDeleteView(){window.deleteManager&&"function"==typeof window.deleteManager.loadPopulations&&await window.deleteManager.loadPopulations()}async initializeSettingsView(){window.app&&"function"==typeof window.app.loadSettings&&await window.app.loadSettings()}async initializeLogsView(){window.logManager&&"function"==typeof window.logManager.loadLogs&&await window.logManager.loadLogs()}async initializeHistoryView(){try{if(this.app&&this.app.subsystems&&this.app.subsystems.history){this.logger.debug("Initializing history view with HistorySubsystem");document.getElementById("history-view")||this.logger.warn("History view container not found")}else this.logger.warn("HistorySubsystem not available for history view initialization")}catch(e){this.logger.error("Failed to initialize history view:",e)}}async initializeAnalyticsView(){const e="[AnalyticsView]";this.logger.debug(`${e} Starting initialization`);try{this.showLoadingState("Loading analytics dashboard...");const t=document.getElementById("analytics-view");if(!t)throw new Error("Analytics view container (#analytics-view) not found in the DOM");t.innerHTML="",t.style.display="block";const s=document.createElement("div");if(s.id="analytics-dashboard-container",t.appendChild(s),!window.app)throw new Error("App instance not available on window");if(!window.app.subsystems?.analyticsDashboard)throw new Error("Analytics dashboard subsystem not available");if(!window.app.analyticsDashboardUI)try{this.logger.debug(`${e} Initializing AnalyticsDashboardUI...`),window.app.analyticsDashboardUI=new AnalyticsDashboardUI(window.app.eventBus,window.app.subsystems.analyticsDashboard),await window.app.analyticsDashboardUI.init(),"function"==typeof window.app.analyticsDashboardUI.createDashboardHTML&&window.app.analyticsDashboardUI.createDashboardHTML(),this.logger.info(`${e} AnalyticsDashboardUI initialized successfully`)}catch(e){throw new Error(`Failed to initialize Analytics Dashboard UI: ${e.message}`)}setTimeout(async()=>{try{window.app.analyticsDashboardUI&&(await window.app.analyticsDashboardUI.show(),this.logger.info(`${e} Analytics dashboard shown successfully`),this.hideLoadingState())}catch(e){throw new Error(`Failed to show analytics dashboard: ${e.message}`)}},100)}catch(t){const s=`Failed to initialize analytics view: ${t.message}`;this.logger.error(`${e} ${s}`,{error:t});(document.getElementById("analytics-view")||document.body).innerHTML=`\n                <div class="alert alert-danger" style="margin: 20px;">\n                    <h4>Error Loading Analytics Dashboard</h4>\n                    <p>${s}</p>\n                    <p>Please check the browser console for more details.</p>\n                    <button id="retry-analytics" class="btn btn-primary mt-3">\n                        <i class="fas fa-sync-alt"></i> Retry\n                    </button>\n                </div>\n            `;const n=document.getElementById("retry-analytics");n&&n.addEventListener("click",()=>this.initializeAnalyticsView()),this.hideLoadingState()}}showLoadingState(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Loading...";const t=document.getElementById("analytics-view");t&&(t.innerHTML=`\n            <div class="loading-overlay" style="\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100%;\n                padding: 2rem;\n                text-align: center;\n                color: #666;\n            ">\n                <div class="spinner-border text-primary mb-3" role="status" style="width: 3rem; height: 3rem;">\n                    <span class="visually-hidden">Loading...</span>\n                </div>\n                <h4>${e}</h4>\n                <p class="mt-2">Please wait while we load the analytics dashboard</p>\n            </div>\n        `,t.style.display="block")}hideLoadingState(){}showErrorState(t){const s=document.getElementById("analytics-view");if(!s)return;const n="development"===e.env.NODE_ENV?`\n\n${(new Error).stack}`:"";s.innerHTML=`\n            <div class="alert alert-danger" style="margin: 20px;">\n                <h4><i class="fas fa-exclamation-triangle me-2"></i>Error Loading Analytics</h4>\n                <p>${t}</p>\n                <div class="mt-3">\n                    <button class="btn btn-primary" onclick="window.location.reload()">\n                        <i class="fas fa-sync-alt me-2"></i>Refresh Page\n                    </button>\n                </div>\n                ${"development"===e.env.NODE_ENV?`<pre class="mt-3" style="background: #f8f9fa; padding: 10px; border-radius: 4px; overflow: auto;">${t}${n}</pre>`:""}\n            </div>\n        `,s.style.display="block"}async showInitialView(){let e="home";const t=window.location.hash.substring(1);t&&this.isValidView(t)&&(e=t),await this.showView(e,!1)}isValidView(e){return["home","import","export","modify","delete-csv","settings","logs","history","analytics"].includes(e)}getViewTitle(e){return{import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History",analytics:"Analytics Dashboard"}[e]||"PingOne Import Tool"}updatePageTitle(e){const t=this.getViewTitle(e);document.title=`${t} - PingOne Import Tool`}handleKeyboardNavigation(e){const t={1:"import",2:"export",3:"modify",4:"delete-csv",5:"settings",6:"logs",7:"history"}[e.key];t&&(e.preventDefault(),this.showView(t))}resetProgressDisplay(){this.uiManager&&"function"==typeof this.uiManager.hideProgress&&this.uiManager.hideProgress(),this.uiManager&&"function"==typeof this.uiManager.updateProgress&&this.uiManager.updateProgress(0,1,"")}triggerViewChangeEvent(e,t){const s=new CustomEvent("viewChanged",{detail:{newView:e,oldView:t,timestamp:Date.now()}});document.dispatchEvent(s)}async goBack(){this.previousView&&await this.showView(this.previousView)}getCurrentView(){return this.currentView}getViewHistory(){return[...this.viewHistory]}clearViewHistory(){this.viewHistory=[]}}}).call(this)}).call(this,e("_process"))},{_process:25}],73:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BrowserLoggingService=void 0,s.createLogger=createLogger,s.logger=s.default=void 0;class BrowserLoggingService{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.serviceName=e.serviceName||"pingone-import-client",this.environment=e.environment||"development",this.logLevel=e.logLevel||this.getDefaultLogLevel(),this.enableConsole=!1!==e.enableConsole,this.enableServer=!1!==e.enableServer,this.levels={error:0,warn:1,info:2,debug:3},this.correlationId=this.generateCorrelationId(),this.performanceMarks=new Map,this.initializeTransports()}getDefaultLogLevel(){switch(this.environment){case"production":return"info";case"test":return"warn";default:return"debug"}}generateCorrelationId(){return`${this.serviceName}-${Date.now()}-${Math.random().toString(36).substr(2,8)}`}initializeTransports(){this.transports=[],this.enableConsole&&this.transports.push({name:"console",log:this.logToConsole.bind(this)}),this.enableServer&&this.transports.push({name:"server",log:this.logToServer.bind(this)})}shouldLog(e){return this.levels[e]<=this.levels[this.logLevel]}formatLogEntry(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{timestamp:(new Date).toISOString(),level:e.toUpperCase(),message:t,service:this.serviceName,environment:this.environment,correlationId:this.correlationId,source:"client",url:window.location.href,userAgent:navigator.userAgent,...s}}logToConsole(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.shouldLog(e))return;const n=this.formatLogEntry(e,t,s);let i=`[${n.timestamp}] [${n.correlationId.slice(-8)}] [${n.service}] ${e.toUpperCase()}: ${t}`;switch(Object.keys(s).length>0&&(i+=`\n${JSON.stringify(s,null,2)}`),e){case"error":console.error(i);break;case"warn":console.warn(i);break;case"info":console.info(i);break;case"debug":console.debug(i);break;default:console.log(i)}}async logToServer(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const n=this.formatLogEntry(e,t,s);await fetch("/api/logs/client",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})}catch(e){this.enableConsole&&console.warn("Failed to send log to server:",e.message)}}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.shouldLog(e)&&this.transports.forEach(n=>{try{n.log(e,t,s)}catch(e){console.error(`Error in ${n.name} transport:`,e)}})}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}startTimer(e){this.performanceMarks.set(e,performance.now()),this.debug(`Timer started: ${e}`)}endTimer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=this.performanceMarks.get(e);if(!s)return this.warn(`Timer not found: ${e}`),0;const n=performance.now()-s;return this.performanceMarks.delete(e),this.info(`Timer completed: ${e}`,{duration:`${n.toFixed(2)}ms`,...t}),n}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=new BrowserLoggingService({serviceName:this.serviceName,environment:this.environment,logLevel:this.logLevel,enableConsole:this.enableConsole,enableServer:this.enableServer}),s=t.formatLogEntry.bind(t);return t.formatLogEntry=function(t,n){return s(t,n,{...e,...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}})},t}setCorrelationId(e){this.correlationId=e}getCorrelationId(){return this.correlationId}}function createLogger(){return new BrowserLoggingService(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})}s.BrowserLoggingService=BrowserLoggingService;s.logger=createLogger({serviceName:"pingone-import-client"});s.default=BrowserLoggingService},{}],74:[function(e,t,s){"use strict";var n=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.BulletproofAppIntegration=void 0;var i=n(e("./bulletproof-global-handler.js")),a=e("./bulletproof-subsystem-wrapper.js"),l=e("./bulletproof-network-client.js");class BulletproofAppIntegration{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.app=e,this.logger=t||console,this.isInitialized=!1,this.protectionLayers=new Map,this.healthCheckInterval=null,this.stats={startTime:Date.now(),protectionActivations:0,recoveryAttempts:0,criticalErrors:0},this.initialize()}async initialize(){try{this.logger.info("🛡️ BULLETPROOF: Starting bulletproof integration..."),this.protectionLayers.set("global",i.default),await this.initializeBulletproofDOM(),this.protectionLayers.set("network",l.bulletproofNetworkClient),await this.initializeBulletproofSubsystems(),await this.initializeBulletproofUI(),await this.initializeBulletproofState(),await this.initializeBulletproofBundle(),this.startHealthMonitoring(),this.setupEmergencyRecovery(),this.isInitialized=!0,this.logger.info("🛡️ BULLETPROOF: All protection layers initialized successfully")}catch(e){this.logger.error("🛡️ BULLETPROOF: Integration initialization failed",e),this.setupEmergencyFallbacks()}}async initializeBulletproofDOM(){try{if(window.SafeDOM){const e=window.SafeDOM;window.safeDOM=new e(this.logger),this.protectionLayers.set("dom",window.safeDOM),this.logger.debug("🛡️ BULLETPROOF: DOM protection initialized")}}catch(e){this.logger.error("🛡️ BULLETPROOF: DOM protection initialization failed",e)}}async initializeBulletproofSubsystems(){try{if(!this.app.subsystems)return void this.logger.warn("🛡️ BULLETPROOF: No subsystems found to protect");const e={};for(const[t,s]of Object.entries(this.app.subsystems))try{s&&"object"==typeof s&&(e[t]=(0,a.makeBulletproof)(s,t,this.logger),this.logger.debug(`🛡️ BULLETPROOF: Protected subsystem: ${t}`))}catch(n){this.logger.error(`🛡️ BULLETPROOF: Failed to protect subsystem ${t}`,n),e[t]=s}this.app.subsystems=e,this.protectionLayers.set("subsystems",e),this.logger.info(`🛡️ BULLETPROOF: Protected ${Object.keys(e).length} subsystems`)}catch(e){this.logger.error("🛡️ BULLETPROOF: Subsystem protection initialization failed",e)}}async initializeBulletproofUI(){try{this.app.uiManager&&(this.app.uiManager=(0,a.makeBulletproof)(this.app.uiManager,"UIManager",this.logger)),this.setupUIErrorHandlers(),this.protectionLayers.set("ui",!0),this.logger.debug("🛡️ BULLETPROOF: UI protection initialized")}catch(e){this.logger.error("🛡️ BULLETPROOF: UI protection initialization failed",e)}}setupUIErrorHandlers(){try{document.addEventListener("click",e=>{},!0)}catch(e){this.logger.error("🛡️ BULLETPROOF: Failed to set up UI error handlers",e)}}async initializeBulletproofState(){try{this.protectStorage(),this.protectionLayers.set("state",!0),this.logger.debug("🛡️ BULLETPROOF: State protection initialized")}catch(e){this.logger.error("🛡️ BULLETPROOF: State protection initialization failed",e)}}protectStorage(){try{const e=localStorage.setItem;localStorage.setItem=function(t,s){try{return e.call(this,t,s)}catch(e){console.warn("🛡️ BULLETPROOF: localStorage.setItem failed",e)}}}catch(e){this.logger.error("🛡️ BULLETPROOF: Storage protection failed",e)}}async initializeBulletproofBundle(){try{document.addEventListener("error",e=>{"SCRIPT"===e.target.tagName&&this.handleScriptError(e.target.src,e.error)},!0),this.protectionLayers.set("bundle",!0),this.logger.debug("🛡️ BULLETPROOF: Bundle protection initialized")}catch(e){this.logger.error("🛡️ BULLETPROOF: Bundle protection initialization failed",e)}}handleScriptError(e,t){try{this.logger.error("🛡️ BULLETPROOF: Script loading failed",{src:e,error:t}),e&&e.includes("bundle")&&this.showEmergencyUI()}catch(t){this.logger.error("🛡️ BULLETPROOF: Script error handling failed",t)}}startHealthMonitoring(){try{this.healthCheckInterval=setInterval(()=>{this.performHealthCheck()},6e4),this.logger.debug("🛡️ BULLETPROOF: Health monitoring started")}catch(e){this.logger.error("🛡️ BULLETPROOF: Health monitoring setup failed",e)}}performHealthCheck(){try{const e={timestamp:Date.now(),uptime:Date.now()-this.stats.startTime,protectionLayers:this.protectionLayers.size,errors:i.default.getStats()};this.logger.debug("🛡️ BULLETPROOF: Health check",e)}catch(e){this.logger.error("🛡️ BULLETPROOF: Health check failed",e)}}setupEmergencyRecovery(){try{document.addEventListener("keydown",e=>{e.ctrlKey&&e.shiftKey&&"R"===e.key&&(e.preventDefault(),this.showRecoveryUI("Manual trigger"))})}catch(e){this.logger.error("🛡️ BULLETPROOF: Emergency recovery setup failed",e)}}showRecoveryUI(e){try{const t=`\n                <div id="bulletproof-recovery" style="\n                    position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n                    background: rgba(0,0,0,0.8); display: flex; align-items: center; justify-content: center;\n                    font-family: Arial, sans-serif; z-index: 999999; color: white;\n                ">\n                    <div style="background: #2c3e50; padding: 30px; border-radius: 8px; text-align: center; max-width: 500px;">\n                        <h2 style="color: #3498db; margin-bottom: 20px;">🛡️ Recovery Mode</h2>\n                        <p>The application detected an issue and activated recovery mode.</p>\n                        <p><strong>Reason:</strong> ${e}</p>\n                        <div style="margin: 20px 0;">\n                            <button onclick="location.reload()" style="\n                                background: #3498db; color: white; border: none; padding: 10px 20px;\n                                border-radius: 4px; cursor: pointer; margin: 5px;\n                            ">Restart Application</button>\n                            <button onclick="document.getElementById('bulletproof-recovery').remove()" style="\n                                background: #95a5a6; color: white; border: none; padding: 10px 20px;\n                                border-radius: 4px; cursor: pointer; margin: 5px;\n                            ">Continue Anyway</button>\n                        </div>\n                        <small>Press Ctrl+Shift+R to trigger recovery mode manually</small>\n                    </div>\n                </div>\n            `;document.body.insertAdjacentHTML("beforeend",t)}catch(e){this.showEmergencyUI()}}showEmergencyUI(){try{document.body.innerHTML='\n                <div style="\n                    position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n                    background: #e74c3c; display: flex; align-items: center; justify-content: center;\n                    font-family: Arial, sans-serif; color: white;\n                ">\n                    <div style="text-align: center; padding: 20px;">\n                        <h1>🛡️ Emergency Protection</h1>\n                        <p>The application encountered a critical error and activated emergency protection.</p>\n                        <p>Please refresh the page to restart the application.</p>\n                        <button onclick="location.reload()" style="\n                            background: white; color: #e74c3c; border: none; padding: 15px 30px;\n                            border-radius: 4px; cursor: pointer; font-size: 16px; margin-top: 20px;\n                        ">Refresh Page</button>\n                    </div>\n                </div>\n            '}catch(e){setTimeout(()=>location.reload(),5e3)}}setupEmergencyFallbacks(){try{this.logger.warn("🛡️ BULLETPROOF: Setting up emergency fallbacks"),window.addEventListener("error",e=>{console.error("Emergency error handler:",e)}),window.addEventListener("unhandledrejection",e=>{console.error("Emergency promise rejection handler:",e.reason),e.preventDefault()})}catch(e){console.error("Emergency fallback setup failed:",e)}}getStats(){try{return{...this.stats,uptime:Date.now()-this.stats.startTime,isInitialized:this.isInitialized,protectionLayers:Array.from(this.protectionLayers.keys()),globalHandler:i.default.getStats(),networkClient:l.bulletproofNetworkClient.getStats()}}catch(e){return{error:"Stats unavailable"}}}}s.BulletproofAppIntegration=BulletproofAppIntegration;s.default=BulletproofAppIntegration},{"./bulletproof-global-handler.js":75,"./bulletproof-network-client.js":76,"./bulletproof-subsystem-wrapper.js":77,"@babel/runtime/helpers/interopRequireDefault":1}],75:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const n=new class BulletproofGlobalHandler{constructor(){this.errorCount=0,this.maxErrors=100,this.recoveryAttempts=0,this.maxRecoveryAttempts=5,this.isRecovering=!1,this.criticalErrors=[],this.lastErrorTime=0,this.errorThrottleMs=1e3,this.initialize()}initialize(){try{window.addEventListener("error",e=>{this.handleError(e.error||e,"unhandled_error",{filename:e.filename,lineno:e.lineno,colno:e.colno,message:e.message})}),window.addEventListener("unhandledrejection",e=>{this.handleError(e.reason,"unhandled_promise_rejection",{promise:e.promise}),e.preventDefault()}),window.addEventListener("error",e=>{e.target!==window&&this.handleError(new Error(`Resource failed to load: ${e.target.src||e.target.href}`),"resource_error",{element:e.target.tagName,source:e.target.src||e.target.href})},!0),console.log("🛡️ BULLETPROOF: Global error handler initialized")}catch(e){this.emergencyLog("Failed to initialize global error handler",e)}}handleError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const n=Date.now();if(n-this.lastErrorTime<this.errorThrottleMs)return;if(this.lastErrorTime=n,this.errorCount++,this.errorCount>this.maxErrors)return void this.emergencyShutdown();const i=this.createSafeError(e);this.safeLog("error",`🛡️ BULLETPROOF: ${t}`,{error:i,context:s,errorCount:this.errorCount,timestamp:(new Date).toISOString()});const a=this.isCriticalError(i,t);a&&(this.criticalErrors.push({error:i,type:t,context:s,timestamp:(new Date).toISOString()}),this.attemptRecovery(i,t)),this.showUserNotification(i,t,a)}catch(e){this.emergencyLog("Error in error handler",e)}}createSafeError(e){try{return e?{message:String(e.message||e.toString()||"Unknown error"),stack:String(e.stack||"No stack available"),name:String(e.name||"Error"),type:typeof e}:{message:"Unknown error",stack:"No stack available"}}catch(e){return{message:"Error processing error",stack:"No stack available"}}}isCriticalError(e,t){try{const s=["network","fetch","xhr","websocket","bundle","module","import","script","syntax","reference","type"],n=(e.message+" "+e.stack+" "+t).toLowerCase();return s.some(e=>n.includes(e))}catch(e){return!1}}attemptRecovery(e,t){try{if(this.isRecovering||this.recoveryAttempts>=this.maxRecoveryAttempts)return;this.isRecovering=!0,this.recoveryAttempts++,this.safeLog("info","🛡️ BULLETPROOF: Attempting recovery",{attempt:this.recoveryAttempts,errorType:t}),setTimeout(()=>{try{(t.includes("resource")||t.includes("bundle"))&&this.reloadCriticalResources(),(t.includes("subsystem")||t.includes("init"))&&this.reinitializeSubsystems(),(t.includes("cache")||t.includes("storage"))&&this.clearCaches(),this.resetUIState(),this.isRecovering=!1}catch(e){this.emergencyLog("Recovery failed",e),this.isRecovering=!1}},1e3)}catch(e){this.emergencyLog("Recovery attempt failed",e),this.isRecovering=!1}}reloadCriticalResources(){try{document.querySelectorAll('script[src*="bundle"]').forEach(e=>{try{const t=document.createElement("script");t.src=e.src+"?reload="+Date.now(),t.onload=()=>this.safeLog("info","🛡️ BULLETPROOF: Bundle reloaded"),t.onerror=()=>this.safeLog("warn","🛡️ BULLETPROOF: Bundle reload failed"),document.head.appendChild(t)}catch(e){}})}catch(e){this.emergencyLog("Resource reload failed",e)}}reinitializeSubsystems(){try{window.app&&"function"==typeof window.app.initializeSubsystems&&window.app.initializeSubsystems().catch(e=>{this.safeLog("warn","🛡️ BULLETPROOF: Subsystem reinit failed",e)})}catch(e){this.emergencyLog("Subsystem reinit failed",e)}}clearCaches(){try{try{localStorage.clear()}catch(e){}try{sessionStorage.clear()}catch(e){}this.safeLog("info","🛡️ BULLETPROOF: Caches cleared")}catch(e){this.emergencyLog("Cache clear failed",e)}}resetUIState(){try{document.querySelectorAll(".error-modal, .modal").forEach(e=>{try{e.style.display="none"}catch(e){}});document.querySelectorAll(".loading, .spinner").forEach(e=>{try{e.style.display="none"}catch(e){}}),this.safeLog("info","🛡️ BULLETPROOF: UI state reset")}catch(e){this.emergencyLog("UI reset failed",e)}}showUserNotification(e,t,s){try{if(!s)return;const n=this.getUserFriendlyMessage(e,t);this.tryNotificationMethods(n)}catch(e){this.emergencyLog("Notification failed",e)}}getUserFriendlyMessage(e,t){try{const e={network:"Connection issue detected. The app will continue working.",resource_error:"A resource failed to load. The app will recover automatically.",unhandled_promise_rejection:"A background operation encountered an issue.",default:"A minor issue was detected and resolved automatically."};return e[t]||e.default}catch(e){return"The app is working normally."}}tryNotificationMethods(e){try{try{if(window.showToast)return void window.showToast(e,"info")}catch(e){}try{if(window.app&&window.app.uiManager&&window.app.uiManager.showStatusBar)return void window.app.uiManager.showStatusBar(e,"info")}catch(e){}this.safeLog("info","🛡️ BULLETPROOF: "+e)}catch(e){this.emergencyLog("All notification methods failed",e)}}safeLog(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;try{(new Date).toISOString();if(window.logger&&"function"==typeof window.logger[e])return void window.logger[e](t,s);if(console&&"function"==typeof console[e])return void console[e](t,s);console.log(`[${e.toUpperCase()}] ${t}`,s)}catch(e){this.emergencyLog(t,s)}}emergencyLog(e,t){try{const s=(new Date).toISOString(),n=`[${s}] EMERGENCY: ${e}`;console&&(console.error?console.error(n,t):console.log?console.log(n,t):console.warn&&console.warn(n,t)),window.emergencyLogs||(window.emergencyLogs=[]),window.emergencyLogs.push({timestamp:s,message:e,error:t})}catch(e){}}emergencyShutdown(){try{this.safeLog("error","🛡️ BULLETPROOF: Emergency shutdown activated",{errorCount:this.errorCount,maxErrors:this.maxErrors}),this.maxErrors=0;try{document.body.innerHTML='\n                    <div style="\n                        position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n                        background: #f8f9fa; display: flex; align-items: center; justify-content: center;\n                        font-family: Arial, sans-serif; z-index: 999999;\n                    ">\n                        <div style="text-align: center; padding: 20px;">\n                            <h2 style="color: #dc3545;">🛡️ Emergency Protection Activated</h2>\n                            <p>The application detected too many errors and activated emergency protection.</p>\n                            <p>Please refresh the page to restart the application.</p>\n                            <button onclick="location.reload()" style="\n                                background: #007bff; color: white; border: none; padding: 10px 20px;\n                                border-radius: 4px; cursor: pointer; font-size: 16px;\n                            ">Refresh Page</button>\n                        </div>\n                    </div>\n                '}catch(e){setTimeout(()=>location.reload(),5e3)}}catch(e){setTimeout(()=>location.reload(),1e3)}}getStats(){try{return{errorCount:this.errorCount,criticalErrors:this.criticalErrors.length,recoveryAttempts:this.recoveryAttempts,isRecovering:this.isRecovering,lastErrorTime:this.lastErrorTime}}catch(e){return{error:"Stats unavailable"}}}};window.bulletproofHandler=n;s.default=n},{}],76:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.bulletproofNetworkClient=s.BulletproofNetworkClient=void 0;class BulletproofNetworkClient{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=e||console,this.isOnline=navigator.onLine,this.retryAttempts=3,this.retryDelay=1e3,this.maxRetryDelay=1e4,this.requestQueue=[],this.activeRequests=new Map,this.cache=new Map,this.cacheExpiry=3e5,this.stats={requests:0,successes:0,failures:0,retries:0,cacheHits:0},this.initialize()}initialize(){try{window.addEventListener("online",()=>{this.isOnline=!0,this.logger.info("🛡️ BULLETPROOF NETWORK: Back online, processing queued requests"),this.processQueuedRequests()}),window.addEventListener("offline",()=>{this.isOnline=!1,this.logger.warn("🛡️ BULLETPROOF NETWORK: Gone offline, queueing requests")}),setInterval(()=>{this.cleanCache()},6e4),this.logger.debug("🛡️ BULLETPROOF NETWORK: Initialized successfully")}catch(e){this.logger.error("🛡️ BULLETPROOF NETWORK: Initialization failed",e)}}async request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=this.generateRequestId();try{if(this.stats.requests++,!this.validateRequest(e,t))throw new Error("Invalid request parameters");if(!t.method||"GET"===t.method.toUpperCase()){const t=this.getFromCache(e);if(t)return this.stats.cacheHits++,this.logger.debug(`🛡️ BULLETPROOF NETWORK: Cache hit for ${e}`),t}if(!this.isOnline)return this.queueRequest(e,t,s);const n=await this.makeRequestWithRetry(e,t,s);return t.method&&"GET"!==t.method.toUpperCase()||!n.success||this.cacheResponse(e,n),this.stats.successes++,n}catch(n){return this.stats.failures++,this.handleRequestError(e,t,n,s)}}async makeRequestWithRetry(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;try{this.activeRequests.set(s,{url:e,options:t,attempt:n,startTime:Date.now()});const i=t.timeout||3e4,a=new AbortController,l=setTimeout(()=>a.abort(),i),c={...t,signal:a.signal},g=await fetch(e,c);clearTimeout(l);const u=await this.processResponse(g,e,t);return this.activeRequests.delete(s),u}catch(i){if(this.activeRequests.delete(s),n<this.retryAttempts&&this.shouldRetry(i)){this.stats.retries++;const a=this.calculateRetryDelay(n);return this.logger.warn(`🛡️ BULLETPROOF NETWORK: Request failed, retrying in ${a}ms (attempt ${n+1}/${this.retryAttempts})`,{url:e,error:i.message,attempt:n}),await this.delay(a),this.makeRequestWithRetry(e,t,s,n+1)}throw i}}async processResponse(e,t,s){try{const s={success:e.ok,status:e.status,statusText:e.statusText,headers:this.extractHeaders(e.headers),url:t,timestamp:Date.now()};try{const t=e.headers.get("content-type")||"";t.includes("application/json")?s.data=await e.json():t.includes("text/")?s.data=await e.text():s.data=await e.blob()}catch(e){this.logger.warn("🛡️ BULLETPROOF NETWORK: Failed to parse response body",e),s.data=null,s.parseError=e.message}return s}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Failed to process response",e),{success:!1,status:0,statusText:"Processing Error",data:null,error:e.message,timestamp:Date.now()}}}extractHeaders(e){try{const t={};return e&&"function"==typeof e.forEach&&e.forEach((e,s)=>{t[s]=e}),t}catch(e){return{}}}validateRequest(e,t){try{return e&&"string"==typeof e?e.includes("<script")||e.includes("javascript:")?(this.logger.error("🛡️ BULLETPROOF NETWORK: Potentially dangerous URL blocked",{url:e}),!1):!t||"object"==typeof t||(this.logger.error("🛡️ BULLETPROOF NETWORK: Invalid options provided",{options:t}),!1):(this.logger.error("🛡️ BULLETPROOF NETWORK: Invalid URL provided",{url:e}),!1)}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Request validation failed",e),!1}}queueRequest(e,t,s){try{const n={id:s,url:e,options:t,timestamp:Date.now(),attempts:0};return this.requestQueue.push(n),this.logger.info("🛡️ BULLETPROOF NETWORK: Request queued for offline processing",{url:e,queueLength:this.requestQueue.length}),new Promise((e,t)=>{n.resolve=e,n.reject=t,setTimeout(()=>{n.resolve&&n.resolve({success:!1,status:0,statusText:"Request Timeout (Offline)",data:null,error:"Request timed out while offline",queued:!0,timestamp:Date.now()})},3e5)})}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Failed to queue request",e),Promise.resolve({success:!1,status:0,statusText:"Queue Error",data:null,error:e.message,timestamp:Date.now()})}}async processQueuedRequests(){try{const e=[...this.requestQueue];this.requestQueue=[],this.logger.info(`🛡️ BULLETPROOF NETWORK: Processing ${e.length} queued requests`);for(const t of e)try{const e=await this.makeRequestWithRetry(t.url,t.options,t.id);t.resolve&&t.resolve(e)}catch(e){t.reject&&t.reject(e)}}catch(e){this.logger.error("🛡️ BULLETPROOF NETWORK: Failed to process queued requests",e)}}handleRequestError(e,t,s,n){try{if(this.logger.error("🛡️ BULLETPROOF NETWORK: Request failed",{url:e,error:s.message,requestId:n}),!t.method||"GET"===t.method.toUpperCase()){const t=this.getFromCache(e,!0);if(t)return this.logger.info("🛡️ BULLETPROOF NETWORK: Using expired cache as fallback"),{...t,fromExpiredCache:!0,originalError:s.message}}return{success:!1,status:0,statusText:"Network Error",data:null,error:s.message,timestamp:Date.now(),requestId:n}}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Error handler failed",e),{success:!1,status:0,statusText:"Handler Error",data:null,error:"Error handler failed",timestamp:Date.now()}}}shouldRetry(e){try{const t=["NetworkError","TimeoutError","AbortError","fetch","network","timeout","connection"],s=e.message.toLowerCase();return t.some(e=>s.includes(e))}catch(e){return!0}}calculateRetryDelay(e){try{const t=this.retryDelay*Math.pow(2,e-1);return Math.min(t,this.maxRetryDelay)}catch(e){return this.retryDelay}}cacheResponse(e,t){try{if(this.cache.set(e,{...t,cachedAt:Date.now()}),this.cache.size>100){const e=this.cache.keys().next().value;this.cache.delete(e)}}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Failed to cache response",e)}}getFromCache(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{const s=this.cache.get(e);if(!s)return null;const n=Date.now()-s.cachedAt;return!t&&n>this.cacheExpiry?(this.cache.delete(e),null):{...s,fromCache:!0,cacheAge:n}}catch(e){return null}}cleanCache(){try{const e=Date.now(),t=[];for(const[s,n]of this.cache.entries())e-n.cachedAt>this.cacheExpiry&&t.push(s);t.forEach(e=>this.cache.delete(e)),t.length>0&&this.logger.debug(`🛡️ BULLETPROOF NETWORK: Cleaned ${t.length} expired cache entries`)}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Cache cleaning failed",e)}}generateRequestId(){try{return`req_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}catch(e){return`req_${Date.now()}`}}delay(e){return new Promise(t=>{try{setTimeout(t,e)}catch(e){t()}})}getStats(){try{return{...this.stats,isOnline:this.isOnline,queueLength:this.requestQueue.length,activeRequests:this.activeRequests.size,cacheSize:this.cache.size,successRate:this.stats.requests>0?(this.stats.successes/this.stats.requests*100).toFixed(2)+"%":"0%"}}catch(e){return{error:"Stats unavailable"}}}clearCache(){try{this.cache.clear(),this.logger.info("🛡️ BULLETPROOF NETWORK: Cache cleared")}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Failed to clear cache",e)}}cancelAllRequests(){try{this.activeRequests.clear(),this.requestQueue=[],this.logger.info("🛡️ BULLETPROOF NETWORK: All requests cancelled")}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Failed to cancel requests",e)}}}s.BulletproofNetworkClient=BulletproofNetworkClient;s.bulletproofNetworkClient=new BulletproofNetworkClient;s.default=BulletproofNetworkClient},{}],77:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BulletproofSubsystemWrapper=void 0,s.createBulletproofSubsystemWrapper=function createBulletproofSubsystemWrapper(e,t){try{return new BulletproofSubsystemWrapper(e,e?.name||e?.constructor?.name||"UnknownSubsystem",t)}catch(t){return console.error("🛡️ BULLETPROOF: Failed to create wrapper",t),e}},s.makeBulletproof=function makeBulletproof(e,t,s){try{return new BulletproofSubsystemWrapper(e,t,s)}catch(t){return console.error("Failed to create bulletproof wrapper",t),e}};class BulletproofSubsystemWrapper{constructor(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return this.originalSubsystem=e,this.name=t||"UnknownSubsystem",this.logger=s||console,this.isEnabled=!0,this.errorCount=0,this.maxErrors=10,this.methodStats=new Map,this.lastError=null,this.recoveryAttempts=0,this.maxRecoveryAttempts=3,this.createBulletproofProxy()}createBulletproofProxy(){try{const e=this;return new Proxy(this.originalSubsystem,{get(t,s,n){try{const i=Reflect.get(t,s,n);return"function"!=typeof i?e.safePropertyAccess(s,i):e.createBulletproofMethod(s,i,t)}catch(t){return e.handleProxyError("get",s,t),e.createFallbackMethod(s)}},set(t,s,n,i){try{return Reflect.set(t,s,n,i)}catch(t){return e.handleProxyError("set",s,t),!0}},has(t,s){try{return Reflect.has(t,s)}catch(t){return e.handleProxyError("has",s,t),!1}}})}catch(e){return this.logger.error(`🛡️ BULLETPROOF: Failed to create proxy for ${this.name}`,e),this.createFallbackSubsystem()}}safePropertyAccess(e,t){try{return t}catch(t){return this.logger.warn(`🛡️ BULLETPROOF: Property access failed for ${this.name}.${e}`,t),null}}createBulletproofMethod(e,t,s){const n=this;return function(){for(var i=arguments.length,a=new Array(i),l=0;l<i;l++)a[l]=arguments[l];return n.executeMethodSafely(e,t,s,a)}}executeMethodSafely(e,t,s,n){if(!this.isEnabled)return this.logger.debug(`🛡️ BULLETPROOF: ${this.name}.${e} skipped (subsystem disabled)`),this.getFallbackResult(e);try{this.trackMethodCall(e);const i=this.executeWithTimeout(t,s,n,3e4);return this.trackMethodSuccess(e),i}catch(t){return this.handleMethodError(e,t,n)}}executeWithTimeout(e,t,s,n){try{const i=e.apply(t,s);return i&&"function"==typeof i.then?Promise.race([i,new Promise((e,t)=>{setTimeout(()=>{t(new Error(`Method timeout after ${n}ms`))},n)})]):i}catch(e){throw e}}handleMethodError(e,t,s){try{return this.errorCount++,this.lastError={methodName:e,error:t,args:s,timestamp:Date.now()},this.trackMethodFailure(e,t),this.logger.error(`🛡️ BULLETPROOF: ${this.name}.${e} failed`,{error:t.message,args:s.length,errorCount:this.errorCount}),this.errorCount>=this.maxErrors&&this.disableSubsystem(),this.isCriticalMethod(e)?this.attemptMethodRecovery(e,s,t):this.getFallbackResult(e)}catch(t){return this.logger.error(`🛡️ BULLETPROOF: Error handler failed for ${this.name}.${e}`,t),this.getFallbackResult(e)}}getFallbackResult(e){try{return e.includes("get")||e.includes("fetch")||e.includes("load")?{data:[],success:!1,fallback:!0}:e.includes("save")||e.includes("update")||e.includes("delete")?{success:!1,fallback:!0}:!(e.includes("validate")||e.includes("check")||e.includes("test"))&&(!!(e.includes("init")||e.includes("start")||e.includes("connect"))||null)}catch(e){return null}}trackMethodCall(e){try{this.methodStats.has(e)||this.methodStats.set(e,{calls:0,successes:0,failures:0,lastCall:null,lastError:null});const t=this.methodStats.get(e);t.calls++,t.lastCall=Date.now()}catch(e){}}trackMethodSuccess(e){try{const t=this.methodStats.get(e);t&&t.successes++}catch(e){}}trackMethodFailure(e,t){try{const s=this.methodStats.get(e);s&&(s.failures++,s.lastError=t.message)}catch(e){}}isCriticalMethod(e){try{return["init","initialize","start","connect","authenticate","load","save","process"].some(t=>e.toLowerCase().includes(t.toLowerCase()))}catch(e){return!1}}attemptMethodRecovery(e,t,s){try{return this.recoveryAttempts>=this.maxRecoveryAttempts?(this.logger.warn(`🛡️ BULLETPROOF: Max recovery attempts reached for ${this.name}.${e}`),this.getFallbackResult(e)):(this.recoveryAttempts++,this.logger.info(`🛡️ BULLETPROOF: Attempting recovery for ${this.name}.${e} (attempt ${this.recoveryAttempts})`),e.includes("init")?this.recoverInitialization(e,t):e.includes("connect")?this.recoverConnection(e,t):e.includes("load")?this.recoverDataLoading(e,t):this.genericRecovery(e,t))}catch(t){return this.logger.error(`🛡️ BULLETPROOF: Recovery failed for ${this.name}.${e}`,t),this.getFallbackResult(e)}}recoverInitialization(e,t){try{return this.originalSubsystem.reset&&"function"==typeof this.originalSubsystem.reset&&this.originalSubsystem.reset(),setTimeout(()=>{try{this.originalSubsystem[e]()}catch(t){this.logger.debug(`🛡️ BULLETPROOF: Delayed recovery failed for ${e}`)}},1e3),!0}catch(e){return!1}}recoverConnection(e,t){try{return this.logger.info(`🛡️ BULLETPROOF: Attempting connection recovery for ${e}`),new Promise(t=>{setTimeout(()=>{t({recovered:!0,method:e})},2e3)})}catch(e){return{recovered:!1,error:e.message}}}recoverDataLoading(e,t){try{return{data:[],success:!0,recovered:!0,message:"Data recovered with empty result"}}catch(e){return{data:[],success:!1,error:e.message}}}genericRecovery(e,t){try{return this.logger.info(`🛡️ BULLETPROOF: Generic recovery for ${this.name}.${e}`),this.getFallbackResult(e)}catch(e){return null}}disableSubsystem(){try{this.isEnabled=!1,this.logger.warn(`🛡️ BULLETPROOF: Subsystem ${this.name} disabled due to excessive errors (${this.errorCount}/${this.maxErrors})`),setTimeout(()=>{this.enableSubsystem()},6e4)}catch(e){console.error("Failed to disable subsystem",e)}}enableSubsystem(){try{this.isEnabled=!0,this.errorCount=0,this.recoveryAttempts=0,this.logger.info(`🛡️ BULLETPROOF: Subsystem ${this.name} re-enabled`)}catch(e){console.error("Failed to enable subsystem",e)}}handleProxyError(e,t,s){try{this.logger.error(`🛡️ BULLETPROOF: Proxy ${e} failed for ${this.name}.${t}`,s)}catch(e){console.error("Proxy error handler failed",e)}}createFallbackMethod(e){var t=this;return function(){return t.logger.debug(`🛡️ BULLETPROOF: Using fallback method for ${t.name}.${e}`),t.getFallbackResult(e)}}createFallbackSubsystem(){try{const e={name:this.name+"_FALLBACK",isEnabled:!1,init:()=>Promise.resolve(!0),start:()=>Promise.resolve(!0),stop:()=>Promise.resolve(!0),reset:()=>Promise.resolve(!0)};return this.logger.warn(`🛡️ BULLETPROOF: Using fallback subsystem for ${this.name}`),e}catch(e){return{}}}getStats(){try{const e=Array.from(this.methodStats.entries()).map(e=>{let[t,s]=e;return{method:t,...s,successRate:s.calls>0?(s.successes/s.calls*100).toFixed(2)+"%":"0%"}});return{subsystemName:this.name,isEnabled:this.isEnabled,errorCount:this.errorCount,maxErrors:this.maxErrors,recoveryAttempts:this.recoveryAttempts,lastError:this.lastError,methodStats:e}}catch(e){return{error:"Stats unavailable",subsystemName:this.name}}}}s.BulletproofSubsystemWrapper=BulletproofSubsystemWrapper},{}],78:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BulletproofTokenManager=void 0,s.createBulletproofTokenManager=function createBulletproofTokenManager(e){try{return new BulletproofTokenManager(e)}catch(e){return console.error("Failed to create bulletproof token manager",e),null}},s.default=void 0;var n=e("./bulletproof-subsystem-wrapper.js");class BulletproofTokenManager{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=e||console,this.isInitialized=!1,this.originalTokenManager=null,this.bulletproofTokenManager=null,this.fallbackTimer=null,this.lastKnownTokenInfo=null,this.emergencyMode=!1,this.domCache={statusBox:null,icon:null,text:null,countdown:null,getTokenBtn:null},this.emergencyTokenData={hasToken:!1,timeLeft:0,isValid:!1,lastUpdate:Date.now()},this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Created")}async initialize(e){try{return this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Initializing..."),this.originalTokenManager=e,this.bulletproofTokenManager=(0,n.makeBulletproof)(e,"GlobalTokenManagerSubsystem",this.logger),this.setupBulletproofDOMMonitoring(),this.setupEmergencyFallbackTimer(),this.setupBulletproofTokenUpdates(),this.isInitialized=!0,this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Initialized successfully"),this.bulletproofTokenManager}catch(e){return this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Initialization failed",e),this.createEmergencyTokenManager()}}setupBulletproofDOMMonitoring(){try{this.cacheDOMElements(),this.setupDOMObserver(),setInterval(()=>{this.validateDOMElements()},5e3)}catch(e){this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: DOM monitoring setup failed",e)}}cacheDOMElements(){try{this.domCache.statusBox=this.safeGetElement("global-token-status"),this.domCache.icon=this.safeGetElement(".global-token-icon",this.domCache.statusBox),this.domCache.text=this.safeGetElement(".global-token-text",this.domCache.statusBox),this.domCache.countdown=this.safeGetElement(".global-token-countdown",this.domCache.statusBox),this.domCache.getTokenBtn=this.safeGetElement("global-get-token"),this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM elements cached",{statusBox:!!this.domCache.statusBox,icon:!!this.domCache.icon,text:!!this.domCache.text,countdown:!!this.domCache.countdown,getTokenBtn:!!this.domCache.getTokenBtn})}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM caching failed",e)}}safeGetElement(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;try{return e?(t||(t=document),e.startsWith("#")||e.startsWith(".")?t.querySelector(e):document.getElementById(e)):null}catch(e){return null}}setupDOMObserver(){try{if(!window.MutationObserver)return;this.domObserver=new MutationObserver(e=>{try{let t=!1;e.forEach(e=>{"childList"===e.type&&e.removedNodes.forEach(e=>{e.nodeType===Node.ELEMENT_NODE&&("global-token-status"===e.id||e.querySelector&&e.querySelector("#global-token-status"))&&(t=!0)})}),t&&(this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM changed, recaching elements"),setTimeout(()=>this.cacheDOMElements(),100))}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM observer error",e)}}),this.domObserver.observe(document.body,{childList:!0,subtree:!0})}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM observer setup failed",e)}}validateDOMElements(){try{let e=!1;this.domCache.statusBox&&!document.contains(this.domCache.statusBox)&&(e=!0),e&&(this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM elements invalid, recaching"),this.cacheDOMElements())}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM validation failed",e)}}setupEmergencyFallbackTimer(){try{this.fallbackTimer=setInterval(()=>{this.emergencyTokenStatusUpdate()},1e3),this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency fallback timer started")}catch(e){this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Fallback timer setup failed",e)}}setupBulletproofTokenUpdates(){try{if(this.originalTokenManager&&this.originalTokenManager.updateGlobalTokenStatus){const e=this.originalTokenManager.updateGlobalTokenStatus.bind(this.originalTokenManager);this.originalTokenManager.updateGlobalTokenStatus=()=>{this.bulletproofUpdateTokenStatus(e)},this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Token update method wrapped")}}catch(e){this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Token update setup failed",e)}}bulletproofUpdateTokenStatus(e){try{if(e&&"function"==typeof e)return e(),void this.updateTokenInfoCache()}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Original update failed, using fallback",e)}this.emergencyTokenStatusUpdate()}emergencyTokenStatusUpdate(){try{const e=this.getBulletproofTokenInfo();this.safeUpdateTokenDisplay(e),this.lastKnownTokenInfo=e}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency update failed",e),this.displayEmergencyStatus()}}getBulletproofTokenInfo(){try{let e=null;if(this.originalTokenManager&&this.originalTokenManager.getTokenInfoSync)try{e=this.originalTokenManager.getTokenInfoSync()}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Original getTokenInfoSync failed")}if(!e&&window.app&&window.app.tokenManager)try{const t=window.app.tokenManager.getTokenInfo();t&&(e={hasToken:!!t.token,timeLeft:t.expiresIn||0,isValid:!!t.token&&t.expiresIn>0})}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: App token manager failed")}if(!e)try{const t=localStorage.getItem("pingone_token"),s=localStorage.getItem("pingone_token_expiry");if(t&&s){const t=parseInt(s),n=Date.now(),i=Math.max(0,Math.floor((t-n)/1e3));e={hasToken:!0,timeLeft:i,isValid:i>0}}}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Local storage access failed")}if(!e&&this.lastKnownTokenInfo){const t=Date.now()-(this.lastKnownTokenInfo.lastUpdate||0);t<6e4&&(e={...this.lastKnownTokenInfo},e.timeLeft=Math.max(0,e.timeLeft-Math.floor(t/1e3)))}return e||(e={hasToken:!1,timeLeft:0,isValid:!1,fallback:!0}),e.lastUpdate=Date.now(),e}catch(e){return this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: All token info sources failed",e),{hasToken:!1,timeLeft:0,isValid:!1,error:!0,lastUpdate:Date.now()}}}safeUpdateTokenDisplay(e){try{this.domCache.statusBox||this.cacheDOMElements();const t=this.domCache.statusBox,s=this.domCache.icon,n=this.domCache.text,i=this.domCache.countdown,a=this.domCache.getTokenBtn;if(!t)return this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Status box not found, creating emergency display"),void this.createEmergencyTokenDisplay(e);if(e.hasToken&&e.isValid){const l=this.formatTime(e.timeLeft),c="bundle-1753964067",g="6.5.2.3",u="Bulletproof token system with comprehensive status display";this.safeSetAttribute(t,"className","global-token-status valid comprehensive"),this.safeSetTextContent(s,"✅");const d=`🟢 TOKEN OBTAINED | Time Left: ${l} | Build: ${c} | Version: ${g} | Last Change: ${u}`;this.safeSetTextContent(n,d),this.safeSetTextContent(i,l),this.safeSetStyle(a,"display","none")}else if(e.hasToken&&e.timeLeft<=300){const l=this.formatTime(e.timeLeft);this.safeSetAttribute(t,"className","global-token-status expiring"),this.safeSetTextContent(s,"⚠️"),this.safeSetTextContent(n,`Expires in ${l}`),this.safeSetTextContent(i,l),this.safeSetStyle(a,"display","none")}else e.hasToken&&e.timeLeft<=0?(this.safeSetAttribute(t,"className","global-token-status expired"),this.safeSetTextContent(s,"❌"),this.safeSetTextContent(n,"Token expired"),this.safeSetTextContent(i,"Expired"),this.safeSetStyle(a,"display","inline-block")):(this.safeSetAttribute(t,"className","global-token-status missing"),this.safeSetTextContent(s,"❌"),this.safeSetTextContent(n,"No valid token"),this.safeSetTextContent(i,"No Token"),this.safeSetStyle(a,"display","inline-block"))}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Safe update failed",e),this.displayEmergencyStatus()}}safeSetAttribute(e,t,s){try{e&&void 0!==e[t]&&(e[t]=s)}catch(e){}}safeSetTextContent(e,t){try{e&&(e.textContent=t)}catch(e){}}safeSetStyle(e,t,s){try{e&&e.style&&(e.style[t]=s)}catch(e){}}formatTime(e){try{if(!e||e<=0)return"0s";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),n=e%60;return t>0?`${t}h ${s}m`:s>0?`${s}m ${n}s`:`${n}s`}catch(e){return"0s"}}createEmergencyTokenDisplay(e){try{const t=document.querySelector(".sidebar")||document.querySelector("nav")||document.body;if(!t)return;let s=document.getElementById("emergency-token-status");s||(s=document.createElement("div"),s.id="emergency-token-status",s.style.cssText="\n                    background: #f0f0f0;\n                    border: 1px solid #ccc;\n                    padding: 10px;\n                    margin: 10px;\n                    border-radius: 5px;\n                    font-size: 12px;\n                    color: #333;\n                ",t.appendChild(s));const n=e.isValid?`Token: ${this.formatTime(e.timeLeft)} left`:"Token: Not available";s.textContent=`🛡️ ${n}`}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency display creation failed",e)}}displayEmergencyStatus(){try{this.emergencyMode=!0;const e=document.getElementById("global-token-status");e&&(e.className="global-token-status error",e.innerHTML='<span class="global-token-icon">🛡️</span><span class="global-token-text">Token status protected</span>'),this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency mode activated")}catch(e){console.log("🛡️ BULLETPROOF TOKEN MANAGER: Emergency status display")}}updateTokenInfoCache(){try{this.originalTokenManager&&this.originalTokenManager.getTokenInfoSync&&(this.lastKnownTokenInfo=this.originalTokenManager.getTokenInfoSync(),this.lastKnownTokenInfo.lastUpdate=Date.now())}catch(e){}}createEmergencyTokenManager(){try{const e={name:"EmergencyTokenManager",isInitialized:!0,updateGlobalTokenStatus:()=>this.emergencyTokenStatusUpdate(),getTokenInfoSync:()=>this.getBulletproofTokenInfo(),init:()=>Promise.resolve(!0),destroy:()=>Promise.resolve(!0)};return this.logger.warn("🛡️ BULLETPROOF TOKEN MANAGER: Using emergency token manager"),e}catch(e){return this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Emergency manager creation failed",e),{}}}destroy(){try{this.fallbackTimer&&(clearInterval(this.fallbackTimer),this.fallbackTimer=null),this.domObserver&&(this.domObserver.disconnect(),this.domObserver=null),this.isInitialized=!1,this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Destroyed")}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Destruction failed",e)}}getStatus(){try{return{name:"BulletproofTokenManager",initialized:this.isInitialized,emergencyMode:this.emergencyMode,hasOriginalManager:!!this.originalTokenManager,hasBulletproofManager:!!this.bulletproofTokenManager,lastKnownTokenInfo:this.lastKnownTokenInfo,domCacheStatus:{statusBox:!!this.domCache.statusBox,icon:!!this.domCache.icon,text:!!this.domCache.text,countdown:!!this.domCache.countdown,getTokenBtn:!!this.domCache.getTokenBtn}}}catch(e){return{error:"Status unavailable"}}}}s.BulletproofTokenManager=BulletproofTokenManager;s.default=BulletproofTokenManager},{"./bulletproof-subsystem-wrapper.js":77}],79:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.debugLog=void 0,s.getClientDebugLogger=getClientDebugLogger;class ClientDebugLogger{constructor(){this.sessionId=this.generateSessionId(),this.isClient=!0,this.log("SESSION_START","Client debug logging session started",{timestamp:(new Date).toISOString(),sessionId:this.sessionId,userAgent:navigator.userAgent,url:window.location.href})}generateSessionId(){return"client_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}formatLogEntry(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const i=(new Date).toISOString();this.sessionId,e.toUpperCase(),t.toUpperCase(),window.location.href;return`[${i}] [${this.sessionId}] [CLIENT] [${e.toUpperCase()}] [${t.toUpperCase()}] ${s}`+(Object.keys(n).length>0?`\n  Data: ${JSON.stringify(n,null,2)}`:"")+"\n"+"-".repeat(80)+"\n"}async sendToServer(e){try{await fetch("/api/debug-log",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({entry:e})})}catch(e){console.error("Failed to send debug log to server:",e)}}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=this.formatLogEntry("info",e,t,s);this.sendToServer(n),console.log(`🐛 [${e.toUpperCase()}] ${t}`,s)}error(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const n={...arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},error:s?{message:s.message,stack:s.stack,name:s.name}:null},i=this.formatLogEntry("error",e,t,n);this.sendToServer(i),console.error(`🚨 [${e.toUpperCase()}] ${t}`,n)}warn(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=this.formatLogEntry("warn",e,t,s);this.sendToServer(n),console.warn(`⚠️ [${e.toUpperCase()}] ${t}`,s)}debug(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=this.formatLogEntry("debug",e,t,s);this.sendToServer(n),console.debug(`🔍 [${e.toUpperCase()}] ${t}`,s)}event(e,t){const s={eventName:t,...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}},n=this.formatLogEntry("event",e,`Event: ${t}`,s);this.sendToServer(n),console.log(`📊 [${e.toUpperCase()}] Event: ${t}`,s)}performance(e,t,s){const n={operation:t,duration:`${s}ms`,...arguments.length>3&&void 0!==arguments[3]?arguments[3]:{}},i=this.formatLogEntry("perf",e,`Performance: ${t}`,n);this.sendToServer(i),console.log(`⚡ [${e.toUpperCase()}] Performance: ${t} (${s}ms)`,n)}navigation(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.event("navigation","view_change",{from:e,to:t,...s})}api(e,t,s,n){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.event("api","request",{method:e,url:t,status:s,duration:`${n}ms`,...i})}userAction(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.event("user",e,{element:t,...s})}systemState(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.log("system",`${e} state: ${t}`,s)}featureFlag(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.log("feature",`Feature flag ${e}: ${t?"enabled":"disabled"}`,s)}subsystem(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.log("subsystem",`${e}: ${t}`,s)}}let n=null;function getClientDebugLogger(){return n||(n=new ClientDebugLogger),n}const i=s.debugLog={log:(e,t,s)=>getClientDebugLogger().log(e,t,s),error:(e,t,s,n)=>getClientDebugLogger().error(e,t,s,n),warn:(e,t,s)=>getClientDebugLogger().warn(e,t,s),debug:(e,t,s)=>getClientDebugLogger().debug(e,t,s),event:(e,t,s)=>getClientDebugLogger().event(e,t,s),performance:(e,t,s,n)=>getClientDebugLogger().performance(e,t,s,n),navigation:(e,t,s)=>getClientDebugLogger().navigation(e,t,s),api:(e,t,s,n,i)=>getClientDebugLogger().api(e,t,s,n,i),userAction:(e,t,s)=>getClientDebugLogger().userAction(e,t,s),systemState:(e,t,s)=>getClientDebugLogger().systemState(e,t,s),featureFlag:(e,t,s)=>getClientDebugLogger().featureFlag(e,t,s),subsystem:(e,t,s)=>getClientDebugLogger().subsystem(e,t,s)};s.default=i},{}],80:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default=class LocalApiClient{constructor(e,t){if(!e)throw new Error("LocalApiClient: baseURL is required.");if(!t)throw new Error("LocalApiClient: logger is required.");this.baseURL=e,this.defaultHeaders={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.logger=t,this.logger.info(`Local API Client initialized for base URL: ${e}`)}async _makeRequest(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=`${this.baseURL}${e}`,n={headers:{...this.defaultHeaders,...t.headers},...t};try{const e=await fetch(s,n);if(!e.ok){const t=new Error(`HTTP ${e.status}: ${e.statusText}`);throw t.response={status:e.status,statusText:e.statusText,data:await e.text()},t}return await e.json()}catch(e){throw this.logger.error("API request failed:",{message:e.message,url:s,method:n.method||"GET",response:e.response||"No response received"}),e}}async get(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.debug(`Making GET request to: ${e}`);try{return await this._makeRequest(e,{method:"GET",...t})}catch(t){throw this.logger.error(`GET request to ${e} failed.`),t}}async post(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.logger.debug(`Making POST request to: ${e}`);try{return await this._makeRequest(e,{method:"POST",body:JSON.stringify(t),...s})}catch(t){throw this.logger.error(`POST request to ${e} failed.`),t}}async put(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.logger.debug(`Making PUT request to: ${e}`);try{return await this._makeRequest(e,{method:"PUT",body:JSON.stringify(t),...s})}catch(t){throw this.logger.error(`PUT request to ${e} failed.`),t}}async delete(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.debug(`Making DELETE request to: ${e}`);try{return await this._makeRequest(e,{method:"DELETE",...t})}catch(t){throw this.logger.error(`DELETE request to ${e} failed.`),t}}}},{}],81:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default=class PingOneClient{constructor(e,t){if(!e||!t)throw new Error("PingOneClient: localClient and logger are required.");this.localClient=e,this.logger=t.child({client:"PingOneClient"}),this.logger.info("PingOneClient initialized.")}async getAccessToken(){this.logger.debug("Requesting new access token...");try{const e=await this.localClient.get("/pingone/get-token");return this.logger.info("Successfully retrieved access token."),e}catch(e){throw this.logger.error("Failed to get access token.",e),e}}async testConnection(){this.logger.debug("Testing PingOne API connection...");try{const e=await this.localClient.get("/pingone/test-connection");return this.logger.info("Connection test completed."),e}catch(e){throw this.logger.error("Connection test failed.",e),e}}}},{}],82:[function(e,t,s){(function(e){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.LOG_LEVELS=void 0,s.createSafeLogger=createSafeLogger,s.safeConsoleLogger=void 0;const t=s.LOG_LEVELS={ERROR:0,WARN:1,INFO:2,DEBUG:3,TRACE:4},n="production"===e.env.NODE_ENV?"INFO":"DEBUG",i="production"===e.env.NODE_ENV,a="test"===e.env.NODE_ENV;function createSafeLogger(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{level:i=n,defaultMeta:l={},disableInTest:c=!0}=s,g="string"==typeof i?t[i.toUpperCase()]??t.INFO:i;if(a&&c)return createNoopLogger();const u={error:function(s,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(g<t.ERROR)return;const a=createLogData("ERROR",s,n,{...l,...i});try{e?.error?e.error(a.message,a):console.error(formatConsoleLog("ERROR",a))}catch(e){console.error(`[SAFE-LOGGER] [ERROR] ${s}`,n||"")}},warn:function(s,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(g<t.WARN)return;const a=createLogData("WARN",s,n,{...l,...i});try{e?.warn?e.warn(a.message,a):console.warn(formatConsoleLog("WARN",a))}catch(e){console.warn(`[SAFE-LOGGER] [WARN] ${s}`,n||"")}},info:function(s,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(g<t.INFO)return;const a=createLogData("INFO",s,n,{...l,...i});try{e?.info?e.info(a.message,a):console.info(formatConsoleLog("INFO",a))}catch(e){console.log(`[SAFE-LOGGER] [INFO] ${s}`,n||"")}},debug:function(s,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(g<t.DEBUG)return;const a=createLogData("DEBUG",s,n,{...l,...i});try{e?.debug?e.debug(a.message,a):console.debug(formatConsoleLog("DEBUG",a))}catch(e){console.debug(`[SAFE-LOGGER] [DEBUG] ${s}`,n||"")}},trace:function(s,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(g<t.TRACE)return;const a=createLogData("TRACE",s,n,{...l,...i});try{e?.trace?e.trace(a.message,a):e?.debug?e.debug(`[TRACE] ${a.message}`,a):console.debug(formatConsoleLog("TRACE",a))}catch(e){console.debug(`[SAFE-LOGGER] [TRACE] ${s}`,n||"")}},child:t=>{try{return createSafeLogger(e?.child?e.child(t):e,{level:g,defaultMeta:{...l,...t}})}catch(e){return console.warn("[SAFE-LOGGER] Failed to create child logger",e),u}},...e||{}};return u}function createNoopLogger(){const noop=()=>{};return{error:noop,warn:noop,info:noop,debug:noop,trace:noop,child:()=>createNoopLogger()}}function createLogData(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const i=(new Date).toISOString(),a=s instanceof Error;return{...n,level:e,message:"string"==typeof t?t:JSON.stringify(t),timestamp:i,...a?{error:{name:s.name,message:s.message,stack:s.stack,...s.code&&{code:s.code},...s.statusCode&&{statusCode:s.statusCode}}}:{data:s}}}function formatConsoleLog(e,t){const{message:s,timestamp:n,...a}=t;let l=`[${new Date(n).toISOString().replace("T"," ").replace(/\..+/,"")}] [${e}] ${s}`;if(Object.keys(a).length>0)try{l+="\n"+JSON.stringify(a,null,i?0:2)}catch(e){l+=" [Additional data could not be stringified]"}return l}const l=s.safeConsoleLogger=createSafeLogger(console);if("undefined"!=typeof window)try{const t=window.logger||console;window.safeLogger=createSafeLogger(t,{level:e.env.LOG_LEVEL||n,defaultMeta:{env:e.env.NODE_ENV||"development",app:"pingone-import-tool"}})}catch(e){console.warn("Failed to create safe global logger",e),window.safeLogger=l}}).call(this)}).call(this,e("_process"))},{_process:25}],83:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.STANDARD_KEYS=s.LEGACY_KEY_MAPPINGS=void 0,s.createBackwardCompatibleConfig=function createBackwardCompatibleConfig(e){if(!e||"object"!=typeof e)return e;const t={...e},s={[n.ENVIRONMENT_ID]:"environmentId",[n.CLIENT_ID]:"apiClientId",[n.CLIENT_SECRET]:"apiSecret",[n.REGION]:"region",[n.POPULATION_ID]:"populationId"};for(const[n,i]of Object.entries(s))e[n]&&(t[i]=e[n]);return t},s.getConfigValue=function getConfigValue(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(!e||"object"!=typeof e)return n;if(void 0!==e[t])return e[t];const i=Array.isArray(s)?s:[s];for(const t of i)if(void 0!==e[t])return e[t];return n},s.standardizeConfigKeys=function standardizeConfigKeys(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{logLegacyUsage:s=!1,preserveLegacyKeys:a=!1,logger:l=console}=t;if(!e||"object"!=typeof e)return e;const c=a?{...e}:{},g=[];for(const[t,s]of Object.entries(e)){const e=i[t];e?(c[e]=s,g.push({legacy:t,standard:e}),a||delete c[t]):(Object.values(n).includes(t),c[t]=s)}if(s&&g.length>0){const e=l?.info||l?.log||console.log;e("🔄 Legacy configuration keys detected and standardized:"),g.forEach(t=>{let{legacy:s,standard:n}=t;e(`   ${s} → ${n}`)})}return c};const n=s.STANDARD_KEYS={ENVIRONMENT_ID:"pingone_environment_id",CLIENT_ID:"pingone_client_id",CLIENT_SECRET:"pingone_client_secret",REGION:"pingone_region",POPULATION_ID:"pingone_population_id"},i=s.LEGACY_KEY_MAPPINGS={"environment-id":"pingone_environment_id",environmentId:"pingone_environment_id",environment_id:"pingone_environment_id",envId:"pingone_environment_id","env-id":"pingone_environment_id",env_id:"pingone_environment_id","api-client-id":"pingone_client_id",apiClientId:"pingone_client_id",api_client_id:"pingone_client_id",clientId:"pingone_client_id","client-id":"pingone_client_id",client_id:"pingone_client_id","api-secret":"pingone_client_secret",apiSecret:"pingone_client_secret",api_secret:"pingone_client_secret",clientSecret:"pingone_client_secret","client-secret":"pingone_client_secret",client_secret:"pingone_client_secret",region:"pingone_region","pingone-region":"pingone_region",pingone_region:"pingone_region","population-id":"pingone_population_id",populationId:"pingone_population_id",population_id:"pingone_population_id",popId:"pingone_population_id","pop-id":"pingone_population_id",pop_id:"pingone_population_id"}},{}],84:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.VALID_REGIONS=s.REGION_MAPPINGS=s.LEGACY_REGIONS=s.DEFAULT_REGION=void 0,s.clearRegionFromStorage=function clearRegionFromStorage(){try{localStorage.removeItem("pingone_region"),console.log("✅ Region cleared from localStorage")}catch(e){console.warn("⚠️ Cannot clear region from localStorage:",e.message)}},s.getApiDomain=function getApiDomain(e){const t=normalizeRegion(e);return n[t]?.apiDomain||n[i].apiDomain},s.getAuthDomain=function getAuthDomain(e){const t=normalizeRegion(e);return n[t]?.authDomain||n[i].authDomain},s.getRegionConfig=function getRegionConfig(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{settings:t={},envRegion:s,storageRegion:a}=e;let l=s||a||t.region||i;l=normalizeRegion(l);const c=validateRegion(l);c||(console.warn(`⚠️ Invalid region '${l}', using default '${i}'`),l=i);const g=n[l];return{region:g.code,name:g.name,authDomain:g.authDomain,apiDomain:g.apiDomain,isValid:c,source:getRegionSource(e),precedence:{env:s,localStorage:a,settings:t.region,default:i}}},s.getRegionFromStorage=function getRegionFromStorage(){try{return localStorage.getItem("pingone_region")}catch(e){return console.warn("⚠️ Cannot access localStorage for region:",e.message),null}},s.logRegionConfig=function logRegionConfig(e){console.log("🌍 Region Configuration:",{region:e.region,name:e.name,source:e.source,authDomain:e.authDomain,apiDomain:e.apiDomain,precedence:e.precedence}),"environment"!==e.source&&console.warn(`⚠️ Region not set in .env file, using ${e.source} source`);const{precedence:t}=e,s=[t.env,t.localStorage,t.settings].filter(Boolean);[...new Set(s.map(normalizeRegion))].length>1&&console.warn("⚠️ Region mismatch detected across sources:",t)},s.normalizeRegion=normalizeRegion,s.setRegionInStorage=function setRegionInStorage(e){const t=normalizeRegion(e);validateRegion(t)?(localStorage.setItem("pingone_region",t),console.log(`✅ Region '${t}' saved to localStorage`)):console.error(`❌ Cannot save invalid region '${e}' to localStorage`)},s.validateRegion=validateRegion;const n=s.REGION_MAPPINGS={NA:{code:"NA",name:"North America",authDomain:"auth.pingone.com",apiDomain:"api.pingone.com"},EU:{code:"EU",name:"Europe",authDomain:"auth.pingone.eu",apiDomain:"api.pingone.eu"},AP:{code:"AP",name:"Asia Pacific",authDomain:"auth.pingone.asia",apiDomain:"api.pingone.asia"},CA:{code:"CA",name:"Canada",authDomain:"auth.pingone.ca",apiDomain:"api.pingone.ca"},NorthAmerica:{code:"NA",name:"North America",authDomain:"auth.pingone.com",apiDomain:"api.pingone.com"},Europe:{code:"EU",name:"Europe",authDomain:"auth.pingone.eu",apiDomain:"api.pingone.eu"},AsiaPacific:{code:"AP",name:"Asia Pacific",authDomain:"auth.pingone.asia",apiDomain:"api.pingone.asia"},Canada:{code:"CA",name:"Canada",authDomain:"auth.pingone.ca",apiDomain:"api.pingone.ca"}},i=s.DEFAULT_REGION="NA",a=s.VALID_REGIONS=["NA","EU","AP","CA"],l=s.LEGACY_REGIONS=["NorthAmerica","Europe","AsiaPacific","Canada"];function normalizeRegion(e){if(!e)return i;if(a.includes(e))return e;const t=n[e];return t?t.code:i}function validateRegion(e){return a.includes(e)||l.includes(e)}function getRegionSource(e){const{settings:t={},envRegion:s,storageRegion:n}=e;return s?"environment":n?"localStorage":t.region?"settings.json":"default"}},{}]},{},[58]);