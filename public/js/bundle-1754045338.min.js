!function r(e,t,s){function o(n,a){if(!t[n]){if(!e[n]){var l="function"==typeof require&&require;if(!a&&l)return l(n,!0);if(i)return i(n,!0);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}var d=t[n]={exports:{}};e[n][0].call(d.exports,function(t){return o(e[n][1][t]||t)},d,d.exports,r,e,t,s)}return t[n].exports}for(var i="function"==typeof require&&require,n=0;n<s.length;n++)o(s[n]);return o}({1:[function(e,t,s){var i=e("./toPropertyKey.js");t.exports=function _defineProperty(e,t,s){return(t=i(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e},t.exports.__esModule=!0,t.exports.default=t.exports},{"./toPropertyKey.js":4}],2:[function(e,t,s){t.exports=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}},t.exports.__esModule=!0,t.exports.default=t.exports},{}],3:[function(e,t,s){var i=e("./typeof.js").default;t.exports=function toPrimitive(e,t){if("object"!=i(e)||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var n=s.call(e,t||"default");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)},t.exports.__esModule=!0,t.exports.default=t.exports},{"./typeof.js":5}],4:[function(e,t,s){var i=e("./typeof.js").default,n=e("./toPrimitive.js");t.exports=function toPropertyKey(e){var t=n(e,"string");return"symbol"==i(t)?t:t+""},t.exports.__esModule=!0,t.exports.default=t.exports},{"./toPrimitive.js":3,"./typeof.js":5}],5:[function(e,t,s){function _typeof(e){return t.exports=_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t.exports.__esModule=!0,t.exports.default=t.exports,_typeof(e)}t.exports=_typeof,t.exports.__esModule=!0,t.exports.default=t.exports},{}],6:[function(e,t,s){function Emitter(e){if(e)return function mixin(e){for(var t in Emitter.prototype)e[t]=Emitter.prototype[t];return e}(e)}s.Emitter=Emitter,Emitter.prototype.on=Emitter.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},Emitter.prototype.once=function(e,t){function on(){this.off(e,on),t.apply(this,arguments)}return on.fn=t,this.on(e,on),this},Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var s,i=this._callbacks["$"+e];if(!i)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var n=0;n<i.length;n++)if((s=i[n])===t||s.fn===t){i.splice(n,1);break}return 0===i.length&&delete this._callbacks["$"+e],this},Emitter.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),s=this._callbacks["$"+e],i=1;i<arguments.length;i++)t[i-1]=arguments[i];if(s){i=0;for(var n=(s=s.slice(0)).length;i<n;++i)s[i].apply(this,t)}return this},Emitter.prototype.emitReserved=Emitter.prototype.emit,Emitter.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},Emitter.prototype.hasListeners=function(e){return!!this.listeners(e).length}},{}],7:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.hasCORS=void 0;let i=!1;try{i="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(e){}s.hasCORS=i},{}],8:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.encode=function encode(e){let t="";for(let s in e)e.hasOwnProperty(s)&&(t.length&&(t+="&"),t+=encodeURIComponent(s)+"="+encodeURIComponent(e[s]));return t},s.decode=function decode(e){let t={},s=e.split("&");for(let e=0,i=s.length;e<i;e++){let i=s[e].split("=");t[decodeURIComponent(i[0])]=decodeURIComponent(i[1])}return t}},{}],9:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.parse=function parse(e){if(e.length>8e3)throw"URI too long";const t=e,s=e.indexOf("["),a=e.indexOf("]");-1!=s&&-1!=a&&(e=e.substring(0,s)+e.substring(s,a).replace(/:/g,";")+e.substring(a,e.length));let l=i.exec(e||""),c={},d=14;for(;d--;)c[n[d]]=l[d]||"";-1!=s&&-1!=a&&(c.source=t,c.host=c.host.substring(1,c.host.length-1).replace(/;/g,":"),c.authority=c.authority.replace("[","").replace("]","").replace(/;/g,":"),c.ipv6uri=!0);return c.pathNames=function pathNames(e,t){const s=t.replace(/\/{2,9}/g,"/").split("/");"/"!=t.slice(0,1)&&0!==t.length||s.splice(0,1);"/"==t.slice(-1)&&s.splice(s.length-1,1);return s}(0,c.path),c.queryKey=function queryKey(e,t){const s={};return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,function(e,t,i){t&&(s[t]=i)}),s}(0,c.query),c};const i=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,n=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"]},{}],10:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.defaultBinaryType=s.globalThisShim=s.nextTick=void 0,s.createCookieJar=function createCookieJar(){},s.nextTick="function"==typeof Promise&&"function"==typeof Promise.resolve?e=>Promise.resolve().then(e):(e,t)=>t(e,0),s.globalThisShim="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")(),s.defaultBinaryType="arraybuffer"},{}],11:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.WebTransport=s.WebSocket=s.NodeWebSocket=s.XHR=s.NodeXHR=s.Fetch=s.nextTick=s.parse=s.installTimerFunctions=s.transports=s.TransportError=s.Transport=s.protocol=s.SocketWithUpgrade=s.SocketWithoutUpgrade=s.Socket=void 0;const i=e("./socket.js");Object.defineProperty(s,"Socket",{enumerable:!0,get:function(){return i.Socket}});var n=e("./socket.js");Object.defineProperty(s,"SocketWithoutUpgrade",{enumerable:!0,get:function(){return n.SocketWithoutUpgrade}}),Object.defineProperty(s,"SocketWithUpgrade",{enumerable:!0,get:function(){return n.SocketWithUpgrade}}),s.protocol=i.Socket.protocol;var a=e("./transport.js");Object.defineProperty(s,"Transport",{enumerable:!0,get:function(){return a.Transport}}),Object.defineProperty(s,"TransportError",{enumerable:!0,get:function(){return a.TransportError}});var l=e("./transports/index.js");Object.defineProperty(s,"transports",{enumerable:!0,get:function(){return l.transports}});var c=e("./util.js");Object.defineProperty(s,"installTimerFunctions",{enumerable:!0,get:function(){return c.installTimerFunctions}});var d=e("./contrib/parseuri.js");Object.defineProperty(s,"parse",{enumerable:!0,get:function(){return d.parse}});var g=e("./globals.node.js");Object.defineProperty(s,"nextTick",{enumerable:!0,get:function(){return g.nextTick}});var u=e("./transports/polling-fetch.js");Object.defineProperty(s,"Fetch",{enumerable:!0,get:function(){return u.Fetch}});var h=e("./transports/polling-xhr.node.js");Object.defineProperty(s,"NodeXHR",{enumerable:!0,get:function(){return h.XHR}});var p=e("./transports/polling-xhr.js");Object.defineProperty(s,"XHR",{enumerable:!0,get:function(){return p.XHR}});var m=e("./transports/websocket.node.js");Object.defineProperty(s,"NodeWebSocket",{enumerable:!0,get:function(){return m.WS}});var f=e("./transports/websocket.js");Object.defineProperty(s,"WebSocket",{enumerable:!0,get:function(){return f.WS}});var y=e("./transports/webtransport.js");Object.defineProperty(s,"WebTransport",{enumerable:!0,get:function(){return y.WT}})},{"./contrib/parseuri.js":9,"./globals.node.js":10,"./socket.js":12,"./transport.js":13,"./transports/index.js":14,"./transports/polling-fetch.js":15,"./transports/polling-xhr.js":16,"./transports/polling-xhr.node.js":16,"./transports/websocket.js":18,"./transports/websocket.node.js":18,"./transports/webtransport.js":19,"./util.js":20}],12:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Socket=s.SocketWithUpgrade=s.SocketWithoutUpgrade=void 0;const n=e("./transports/index.js"),a=e("./util.js"),l=e("./contrib/parseqs.js"),c=e("./contrib/parseuri.js"),d=e("@socket.io/component-emitter"),g=e("engine.io-parser"),u=e("./globals.node.js"),h=(0,i(e("debug")).default)("engine.io-client:socket"),p="function"==typeof addEventListener&&"function"==typeof removeEventListener,m=[];p&&addEventListener("offline",()=>{h("closing %d connection(s) because the network was lost",m.length),m.forEach(e=>e())},!1);class SocketWithoutUpgrade extends d.Emitter{constructor(e,t){if(super(),this.binaryType=u.defaultBinaryType,this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,e&&"object"==typeof e&&(t=e,e=null),e){const s=(0,c.parse)(e);t.hostname=s.host,t.secure="https"===s.protocol||"wss"===s.protocol,t.port=s.port,s.query&&(t.query=s.query)}else t.host&&(t.hostname=(0,c.parse)(t.host).host);(0,a.installTimerFunctions)(this,t),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},t.transports.forEach(e=>{const t=e.prototype.name;this.transports.push(t),this._transportsByName[t]=e}),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},t),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=(0,l.decode)(this.opts.query)),p&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(h("adding listener for the 'offline' event"),this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},m.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=(0,u.createCookieJar)()),this._open()}createTransport(e){h('creating transport "%s"',e);const t=Object.assign({},this.opts.query);t.EIO=g.protocol,t.transport=e,this.id&&(t.sid=this.id);const s=Object.assign({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return h("options: %j",s),new this._transportsByName[e](s)}_open(){if(0===this.transports.length)return void this.setTimeoutFn(()=>{this.emitReserved("error","No transports available")},0);const e=this.opts.rememberUpgrade&&SocketWithoutUpgrade.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket")?"websocket":this.transports[0];this.readyState="opening";const t=this.createTransport(e);t.open(),this.setTransport(t)}setTransport(e){h("setting transport %s",e.name),this.transport&&(h("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",e=>this._onClose("transport close",e))}onOpen(){h("socket open"),this.readyState="open",SocketWithoutUpgrade.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush()}_onPacket(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(h('socket receive: type "%s", data "%s"',e.type,e.data),this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const t=new Error("server error");t.code=e.data,this._onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}else h('packet received with socket readyState "%s"',this.readyState)}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this._pingInterval=e.pingInterval,this._pingTimeout=e.pingTimeout,this._maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const e=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+e,this._pingTimeoutTimer=this.setTimeoutFn(()=>{this._onClose("ping timeout")},e),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this._getWritablePackets();h("flushing %d packets in socket",e.length),this.transport.send(e),this._prevBufferLen=e.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let t=0;t<this.writeBuffer.length;t++){const s=this.writeBuffer[t].data;if(s&&(e+=(0,a.byteLength)(s)),t>0&&e>this._maxPayload)return h("only send %d out of %d packets",t,this.writeBuffer.length),this.writeBuffer.slice(0,t);e+=2}return h("payload size is %d (max: %d)",e,this._maxPayload),this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const e=Date.now()>this._pingTimeoutTime;return e&&(h("throttled timer detected, scheduling connection close"),this._pingTimeoutTime=0,(0,u.nextTick)(()=>{this._onClose("ping timeout")},this.setTimeoutFn)),e}write(e,t,s){return this._sendPacket("message",e,t,s),this}send(e,t,s){return this._sendPacket("message",e,t,s),this}_sendPacket(e,t,s,i){if("function"==typeof t&&(i=t,t=void 0),"function"==typeof s&&(i=s,s=null),"closing"===this.readyState||"closed"===this.readyState)return;(s=s||{}).compress=!1!==s.compress;const n={type:e,data:t,options:s};this.emitReserved("packetCreate",n),this.writeBuffer.push(n),i&&this.once("flush",i),this.flush()}close(){const close=()=>{this._onClose("forced close"),h("socket closing - telling transport to close"),this.transport.close()},cleanupAndClose=()=>{this.off("upgrade",cleanupAndClose),this.off("upgradeError",cleanupAndClose),close()},waitForUpgrade=()=>{this.once("upgrade",cleanupAndClose),this.once("upgradeError",cleanupAndClose)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",()=>{this.upgrading?waitForUpgrade():close()}):this.upgrading?waitForUpgrade():close()),this}_onError(e){if(h("socket error %j",e),SocketWithoutUpgrade.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&"opening"===this.readyState)return h("trying next transport"),this.transports.shift(),this._open();this.emitReserved("error",e),this._onClose("transport error",e)}_onClose(e,t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){if(h('socket close with reason: "%s"',e),this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),p&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const e=m.indexOf(this._offlineEventListener);-1!==e&&(h("removing listener for the 'offline' event"),m.splice(e,1))}this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this._prevBufferLen=0}}}s.SocketWithoutUpgrade=SocketWithoutUpgrade,SocketWithoutUpgrade.protocol=g.protocol;class SocketWithUpgrade extends SocketWithoutUpgrade{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),"open"===this.readyState&&this.opts.upgrade){h("starting upgrade probes");for(let e=0;e<this._upgrades.length;e++)this._probe(this._upgrades[e])}}_probe(e){h('probing transport "%s"',e);let t=this.createTransport(e),s=!1;SocketWithoutUpgrade.priorWebsocketSuccess=!1;const onTransportOpen=()=>{s||(h('probe transport "%s" opened',e),t.send([{type:"ping",data:"probe"}]),t.once("packet",i=>{if(!s)if("pong"===i.type&&"probe"===i.data){if(h('probe transport "%s" pong',e),this.upgrading=!0,this.emitReserved("upgrading",t),!t)return;SocketWithoutUpgrade.priorWebsocketSuccess="websocket"===t.name,h('pausing current transport "%s"',this.transport.name),this.transport.pause(()=>{s||"closed"!==this.readyState&&(h("changing transport and sending upgrade packet"),cleanup(),this.setTransport(t),t.send([{type:"upgrade"}]),this.emitReserved("upgrade",t),t=null,this.upgrading=!1,this.flush())})}else{h('probe transport "%s" failed',e);const s=new Error("probe error");s.transport=t.name,this.emitReserved("upgradeError",s)}}))};function freezeTransport(){s||(s=!0,cleanup(),t.close(),t=null)}const onerror=s=>{const i=new Error("probe error: "+s);i.transport=t.name,freezeTransport(),h('probe transport "%s" failed because of error: %s',e,s),this.emitReserved("upgradeError",i)};function onTransportClose(){onerror("transport closed")}function onclose(){onerror("socket closed")}function onupgrade(e){t&&e.name!==t.name&&(h('"%s" works - aborting "%s"',e.name,t.name),freezeTransport())}const cleanup=()=>{t.removeListener("open",onTransportOpen),t.removeListener("error",onerror),t.removeListener("close",onTransportClose),this.off("close",onclose),this.off("upgrading",onupgrade)};t.once("open",onTransportOpen),t.once("error",onerror),t.once("close",onTransportClose),this.once("close",onclose),this.once("upgrading",onupgrade),-1!==this._upgrades.indexOf("webtransport")&&"webtransport"!==e?this.setTimeoutFn(()=>{s||t.open()},200):t.open()}onHandshake(e){this._upgrades=this._filterUpgrades(e.upgrades),super.onHandshake(e)}_filterUpgrades(e){const t=[];for(let s=0;s<e.length;s++)~this.transports.indexOf(e[s])&&t.push(e[s]);return t}}s.SocketWithUpgrade=SocketWithUpgrade;s.Socket=class Socket extends SocketWithUpgrade{constructor(e,t={}){const s="object"==typeof e?e:t;(!s.transports||s.transports&&"string"==typeof s.transports[0])&&(s.transports=(s.transports||["polling","websocket","webtransport"]).map(e=>n.transports[e]).filter(e=>!!e)),super(e,s)}}},{"./contrib/parseqs.js":8,"./contrib/parseuri.js":9,"./globals.node.js":10,"./transports/index.js":14,"./util.js":20,"@socket.io/component-emitter":6,debug:21,"engine.io-parser":27}],13:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Transport=s.TransportError=void 0;const n=e("engine.io-parser"),a=e("@socket.io/component-emitter"),l=e("./util.js"),c=e("./contrib/parseqs.js"),d=(0,i(e("debug")).default)("engine.io-client:transport");class TransportError extends Error{constructor(e,t,s){super(e),this.description=t,this.context=s,this.type="TransportError"}}s.TransportError=TransportError;class Transport extends a.Emitter{constructor(e){super(),this.writable=!1,(0,l.installTimerFunctions)(this,e),this.opts=e,this.query=e.query,this.socket=e.socket,this.supportsBinary=!e.forceBase64}onError(e,t,s){return super.emitReserved("error",new TransportError(e,t,s)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(e){"open"===this.readyState?this.write(e):d("transport is not open, discarding packets")}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const t=(0,n.decodePacket)(e,this.socket.binaryType);this.onPacket(t)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,t={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}_hostname(){const e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(e){const t=(0,c.encode)(e);return t.length?"?"+t:""}}s.Transport=Transport},{"./contrib/parseqs.js":8,"./util.js":20,"@socket.io/component-emitter":6,debug:21,"engine.io-parser":27}],14:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.transports=void 0;const i=e("./polling-xhr.node.js"),n=e("./websocket.node.js"),a=e("./webtransport.js");s.transports={websocket:n.WS,webtransport:a.WT,polling:i.XHR}},{"./polling-xhr.node.js":16,"./websocket.node.js":18,"./webtransport.js":19}],15:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Fetch=void 0;const i=e("./polling.js");class Fetch extends i.Polling{doPoll(){this._fetch().then(e=>{if(!e.ok)return this.onError("fetch read error",e.status,e);e.text().then(e=>this.onData(e))}).catch(e=>{this.onError("fetch read error",e)})}doWrite(e,t){this._fetch(e).then(e=>{if(!e.ok)return this.onError("fetch write error",e.status,e);t()}).catch(e=>{this.onError("fetch write error",e)})}_fetch(e){var t;const s=void 0!==e,i=new Headers(this.opts.extraHeaders);return s&&i.set("content-type","text/plain;charset=UTF-8"),null===(t=this.socket._cookieJar)||void 0===t||t.appendCookies(i),fetch(this.uri(),{method:s?"POST":"GET",body:s?e:null,headers:i,credentials:this.opts.withCredentials?"include":"omit"}).then(e=>{var t;return null===(t=this.socket._cookieJar)||void 0===t||t.parseCookies(e.headers.getSetCookie()),e})}}s.Fetch=Fetch},{"./polling.js":17}],16:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.XHR=s.Request=s.BaseXHR=void 0;const n=e("./polling.js"),a=e("@socket.io/component-emitter"),l=e("../util.js"),c=e("../globals.node.js"),d=e("../contrib/has-cors.js"),g=(0,i(e("debug")).default)("engine.io-client:polling");function empty(){}class BaseXHR extends n.Polling{constructor(e){if(super(e),"undefined"!=typeof location){const t="https:"===location.protocol;let s=location.port;s||(s=t?"443":"80"),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||s!==e.port}}doWrite(e,t){const s=this.request({method:"POST",data:e});s.on("success",t),s.on("error",(e,t)=>{this.onError("xhr post error",e,t)})}doPoll(){g("xhr poll");const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",(e,t)=>{this.onError("xhr poll error",e,t)}),this.pollXhr=e}}s.BaseXHR=BaseXHR;class Request extends a.Emitter{constructor(e,t,s){super(),this.createRequest=e,(0,l.installTimerFunctions)(this,s),this._opts=s,this._method=s.method||"GET",this._uri=t,this._data=void 0!==s.data?s.data:null,this._create()}_create(){var e;const t=(0,l.pick)(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");t.xdomain=!!this._opts.xd;const s=this._xhr=this.createRequest(t);try{g("xhr open %s: %s",this._method,this._uri),s.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){s.setDisableHeaderCheck&&s.setDisableHeaderCheck(!0);for(let e in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(e)&&s.setRequestHeader(e,this._opts.extraHeaders[e])}}catch(e){}if("POST"===this._method)try{s.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{s.setRequestHeader("Accept","*/*")}catch(e){}null===(e=this._opts.cookieJar)||void 0===e||e.addCookies(s),"withCredentials"in s&&(s.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(s.timeout=this._opts.requestTimeout),s.onreadystatechange=()=>{var e;3===s.readyState&&(null===(e=this._opts.cookieJar)||void 0===e||e.parseCookies(s.getResponseHeader("set-cookie"))),4===s.readyState&&(200===s.status||1223===s.status?this._onLoad():this.setTimeoutFn(()=>{this._onError("number"==typeof s.status?s.status:0)},0))},g("xhr data %s",this._data),s.send(this._data)}catch(e){return void this.setTimeoutFn(()=>{this._onError(e)},0)}"undefined"!=typeof document&&(this._index=Request.requestsCount++,Request.requests[this._index]=this)}_onError(e){this.emitReserved("error",e,this._xhr),this._cleanup(!0)}_cleanup(e){if(void 0!==this._xhr&&null!==this._xhr){if(this._xhr.onreadystatechange=empty,e)try{this._xhr.abort()}catch(e){}"undefined"!=typeof document&&delete Request.requests[this._index],this._xhr=null}}_onLoad(){const e=this._xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}if(s.Request=Request,Request.requestsCount=0,Request.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",unloadHandler);else if("function"==typeof addEventListener){const e="onpagehide"in c.globalThisShim?"pagehide":"unload";addEventListener(e,unloadHandler,!1)}function unloadHandler(){for(let e in Request.requests)Request.requests.hasOwnProperty(e)&&Request.requests[e].abort()}const u=function(){const e=newRequest({xdomain:!1});return e&&null!==e.responseType}();function newRequest(e){const t=e.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!t||d.hasCORS))return new XMLHttpRequest}catch(e){}if(!t)try{return new(c.globalThisShim[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}s.XHR=class XHR extends BaseXHR{constructor(e){super(e);const t=e&&e.forceBase64;this.supportsBinary=u&&!t}request(e={}){return Object.assign(e,{xd:this.xd},this.opts),new Request(newRequest,this.uri(),e)}}},{"../contrib/has-cors.js":7,"../globals.node.js":10,"../util.js":20,"./polling.js":17,"@socket.io/component-emitter":6,debug:21}],17:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Polling=void 0;const n=e("../transport.js"),a=e("../util.js"),l=e("engine.io-parser"),c=(0,i(e("debug")).default)("engine.io-client:polling");class Polling extends n.Transport{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(e){this.readyState="pausing";const pause=()=>{c("paused"),this.readyState="paused",e()};if(this._polling||!this.writable){let e=0;this._polling&&(c("we are currently polling - waiting to pause"),e++,this.once("pollComplete",function(){c("pre-pause polling complete"),--e||pause()})),this.writable||(c("we are currently writing - waiting to pause"),e++,this.once("drain",function(){c("pre-pause writing complete"),--e||pause()}))}else pause()}_poll(){c("polling"),this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){c("polling got data %s",e);(0,l.decodePayload)(e,this.socket.binaryType).forEach(e=>{if("opening"===this.readyState&&"open"===e.type&&this.onOpen(),"close"===e.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(e)}),"closed"!==this.readyState&&(this._polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState?this._poll():c('ignoring poll - transport state "%s"',this.readyState))}doClose(){const close=()=>{c("writing close packet"),this.write([{type:"close"}])};"open"===this.readyState?(c("transport open - closing"),close()):(c("transport not open - deferring close"),this.once("open",close))}write(e){this.writable=!1,(0,l.encodePayload)(e,e=>{this.doWrite(e,()=>{this.writable=!0,this.emitReserved("drain")})})}uri(){const e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,a.randomString)()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}}s.Polling=Polling},{"../transport.js":13,"../util.js":20,debug:21,"engine.io-parser":27}],18:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.WS=s.BaseWS=void 0;const n=e("../transport.js"),a=e("../util.js"),l=e("engine.io-parser"),c=e("../globals.node.js"),d=(0,i(e("debug")).default)("engine.io-client:websocket"),g="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class BaseWS extends n.Transport{get name(){return"websocket"}doOpen(){const e=this.uri(),t=this.opts.protocols,s=g?{}:(0,a.pick)(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(s.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(e,t,s)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const s=e[t],i=t===e.length-1;(0,l.encodePacket)(s,this.supportsBinary,e=>{try{this.doWrite(s,e)}catch(e){d("websocket closed before onclose event")}i&&(0,c.nextTick)(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){void 0!==this.ws&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,a.randomString)()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}}s.BaseWS=BaseWS;const u=c.globalThisShim.WebSocket||c.globalThisShim.MozWebSocket;s.WS=class WS extends BaseWS{createSocket(e,t,s){return g?new u(e,t,s):t?new u(e,t):new u(e)}doWrite(e,t){this.ws.send(t)}}},{"../globals.node.js":10,"../transport.js":13,"../util.js":20,debug:21,"engine.io-parser":27}],19:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.WT=void 0;const n=e("../transport.js"),a=e("../globals.node.js"),l=e("engine.io-parser"),c=(0,i(e("debug")).default)("engine.io-client:webtransport");class WT extends n.Transport{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(e){return this.emitReserved("error",e)}this._transport.closed.then(()=>{c("transport closed gracefully"),this.onClose()}).catch(e=>{c("transport closed due to %s",e),this.onError("webtransport error",e)}),this._transport.ready.then(()=>{this._transport.createBidirectionalStream().then(e=>{const t=(0,l.createPacketDecoderStream)(Number.MAX_SAFE_INTEGER,this.socket.binaryType),s=e.readable.pipeThrough(t).getReader(),i=(0,l.createPacketEncoderStream)();i.readable.pipeTo(e.writable),this._writer=i.writable.getWriter();const read=()=>{s.read().then(({done:e,value:t})=>{e?c("session is closed"):(c("received chunk: %o",t),this.onPacket(t),read())}).catch(e=>{c("an error occurred while reading: %s",e)})};read();const n={type:"open"};this.query.sid&&(n.data=`{"sid":"${this.query.sid}"}`),this._writer.write(n).then(()=>this.onOpen())})})}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const s=e[t],i=t===e.length-1;this._writer.write(s).then(()=>{i&&(0,a.nextTick)(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){var e;null===(e=this._transport)||void 0===e||e.close()}}s.WT=WT},{"../globals.node.js":10,"../transport.js":13,debug:21,"engine.io-parser":27}],20:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.pick=function pick(e,...t){return t.reduce((t,s)=>(e.hasOwnProperty(s)&&(t[s]=e[s]),t),{})},s.installTimerFunctions=function installTimerFunctions(e,t){t.useNativeTimers?(e.setTimeoutFn=n.bind(i.globalThisShim),e.clearTimeoutFn=a.bind(i.globalThisShim)):(e.setTimeoutFn=i.globalThisShim.setTimeout.bind(i.globalThisShim),e.clearTimeoutFn=i.globalThisShim.clearTimeout.bind(i.globalThisShim))},s.byteLength=function byteLength(e){if("string"==typeof e)return function utf8Length(e){let t=0,s=0;for(let i=0,n=e.length;i<n;i++)t=e.charCodeAt(i),t<128?s+=1:t<2048?s+=2:t<55296||t>=57344?s+=3:(i++,s+=4);return s}(e);return Math.ceil((e.byteLength||e.size)*l)},s.randomString=function randomString(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)};const i=e("./globals.node.js");const n=i.globalThisShim.setTimeout,a=i.globalThisShim.clearTimeout;const l=1.33},{"./globals.node.js":10}],21:[function(e,t,s){(function(i){(function(){s.formatArgs=function formatArgs(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),!this.useColors)return;const s="color: "+this.color;e.splice(1,0,s,"color: inherit");let i=0,n=0;e[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(i++,"%c"===e&&(n=i))}),e.splice(n,0,s)},s.save=function save(e){try{e?s.storage.setItem("debug",e):s.storage.removeItem("debug")}catch(e){}},s.load=function load(){let e;try{e=s.storage.getItem("debug")}catch(e){}!e&&void 0!==i&&"env"in i&&(e=i.env.DEBUG);return e},s.useColors=function useColors(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},s.storage=function localstorage(){try{return localStorage}catch(e){}}(),s.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),s.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],s.log=console.debug||console.log||(()=>{}),t.exports=e("./common")(s);const{formatters:n}=t.exports;n.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}).call(this)}).call(this,e("_process"))},{"./common":22,_process:29}],22:[function(e,t,s){t.exports=function setup(t){function createDebug(e){let t,s,i,n=null;function debug(...e){if(!debug.enabled)return;const s=debug,i=Number(new Date),n=i-(t||i);s.diff=n,s.prev=t,s.curr=i,t=i,e[0]=createDebug.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(t,i)=>{if("%%"===t)return"%";a++;const n=createDebug.formatters[i];if("function"==typeof n){const i=e[a];t=n.call(s,i),e.splice(a,1),a--}return t}),createDebug.formatArgs.call(s,e);(s.log||createDebug.log).apply(s,e)}return debug.namespace=e,debug.useColors=createDebug.useColors(),debug.color=createDebug.selectColor(e),debug.extend=extend,debug.destroy=createDebug.destroy,Object.defineProperty(debug,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==n?n:(s!==createDebug.namespaces&&(s=createDebug.namespaces,i=createDebug.enabled(e)),i),set:e=>{n=e}}),"function"==typeof createDebug.init&&createDebug.init(debug),debug}function extend(e,t){const s=createDebug(this.namespace+(void 0===t?":":t)+e);return s.log=this.log,s}function toNamespace(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return createDebug.debug=createDebug,createDebug.default=createDebug,createDebug.coerce=function coerce(e){if(e instanceof Error)return e.stack||e.message;return e},createDebug.disable=function disable(){const e=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map(e=>"-"+e)].join(",");return createDebug.enable(""),e},createDebug.enable=function enable(e){let t;createDebug.save(e),createDebug.namespaces=e,createDebug.names=[],createDebug.skips=[];const s=("string"==typeof e?e:"").split(/[\s,]+/),i=s.length;for(t=0;t<i;t++)s[t]&&("-"===(e=s[t].replace(/\*/g,".*?"))[0]?createDebug.skips.push(new RegExp("^"+e.slice(1)+"$")):createDebug.names.push(new RegExp("^"+e+"$")))},createDebug.enabled=function enabled(e){if("*"===e[e.length-1])return!0;let t,s;for(t=0,s=createDebug.skips.length;t<s;t++)if(createDebug.skips[t].test(e))return!1;for(t=0,s=createDebug.names.length;t<s;t++)if(createDebug.names[t].test(e))return!0;return!1},createDebug.humanize=e("ms"),createDebug.destroy=function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(t).forEach(e=>{createDebug[e]=t[e]}),createDebug.names=[],createDebug.skips=[],createDebug.formatters={},createDebug.selectColor=function selectColor(e){let t=0;for(let s=0;s<e.length;s++)t=(t<<5)-t+e.charCodeAt(s),t|=0;return createDebug.colors[Math.abs(t)%createDebug.colors.length]},createDebug.enable(createDebug.load()),createDebug}},{ms:28}],23:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ERROR_PACKET=s.PACKET_TYPES_REVERSE=s.PACKET_TYPES=void 0;const i=Object.create(null);s.PACKET_TYPES=i,i.open="0",i.close="1",i.ping="2",i.pong="3",i.message="4",i.upgrade="5",i.noop="6";const n=Object.create(null);s.PACKET_TYPES_REVERSE=n,Object.keys(i).forEach(e=>{n[i[e]]=e});s.ERROR_PACKET={type:"error",data:"parser error"}},{}],24:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.decode=s.encode=void 0;const i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let e=0;e<64;e++)n[i.charCodeAt(e)]=e;s.encode=e=>{let t,s=new Uint8Array(e),n=s.length,a="";for(t=0;t<n;t+=3)a+=i[s[t]>>2],a+=i[(3&s[t])<<4|s[t+1]>>4],a+=i[(15&s[t+1])<<2|s[t+2]>>6],a+=i[63&s[t+2]];return n%3==2?a=a.substring(0,a.length-1)+"=":n%3==1&&(a=a.substring(0,a.length-2)+"=="),a};s.decode=e=>{let t,s,i,a,l,c=.75*e.length,d=e.length,g=0;"="===e[e.length-1]&&(c--,"="===e[e.length-2]&&c--);const u=new ArrayBuffer(c),h=new Uint8Array(u);for(t=0;t<d;t+=4)s=n[e.charCodeAt(t)],i=n[e.charCodeAt(t+1)],a=n[e.charCodeAt(t+2)],l=n[e.charCodeAt(t+3)],h[g++]=s<<2|i>>4,h[g++]=(15&i)<<4|a>>2,h[g++]=(3&a)<<6|63&l;return u}},{}],25:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.decodePacket=void 0;const i=e("./commons.js"),n=e("./contrib/base64-arraybuffer.js"),a="function"==typeof ArrayBuffer;s.decodePacket=(e,t)=>{if("string"!=typeof e)return{type:"message",data:mapBinary(e,t)};const s=e.charAt(0);if("b"===s)return{type:"message",data:decodeBase64Packet(e.substring(1),t)};return i.PACKET_TYPES_REVERSE[s]?e.length>1?{type:i.PACKET_TYPES_REVERSE[s],data:e.substring(1)}:{type:i.PACKET_TYPES_REVERSE[s]}:i.ERROR_PACKET};const decodeBase64Packet=(e,t)=>{if(a){const s=(0,n.decode)(e);return mapBinary(s,t)}return{base64:!0,data:e}},mapBinary=(e,t)=>"blob"===t?e instanceof Blob?e:new Blob([e]):e instanceof ArrayBuffer?e:e.buffer},{"./commons.js":23,"./contrib/base64-arraybuffer.js":24}],26:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.encodePacket=void 0,s.encodePacketToBinary=function encodePacketToBinary(e,t){if(n&&e.data instanceof Blob)return e.data.arrayBuffer().then(toArray).then(t);if(a&&(e.data instanceof ArrayBuffer||isView(e.data)))return t(toArray(e.data));encodePacket(e,!1,e=>{l||(l=new TextEncoder),t(l.encode(e))})};const i=e("./commons.js"),n="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),a="function"==typeof ArrayBuffer,isView=e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer instanceof ArrayBuffer,encodePacket=({type:e,data:t},s,l)=>n&&t instanceof Blob?s?l(t):encodeBlobAsBase64(t,l):a&&(t instanceof ArrayBuffer||isView(t))?s?l(t):encodeBlobAsBase64(new Blob([t]),l):l(i.PACKET_TYPES[e]+(t||""));s.encodePacket=encodePacket;const encodeBlobAsBase64=(e,t)=>{const s=new FileReader;return s.onload=function(){const e=s.result.split(",")[1];t("b"+(e||""))},s.readAsDataURL(e)};function toArray(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}let l},{"./commons.js":23}],27:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.decodePayload=s.decodePacket=s.encodePayload=s.encodePacket=s.protocol=void 0,s.createPacketEncoderStream=function createPacketEncoderStream(){return new TransformStream({transform(e,t){(0,i.encodePacketToBinary)(e,s=>{const i=s.length;let n;if(i<126)n=new Uint8Array(1),new DataView(n.buffer).setUint8(0,i);else if(i<65536){n=new Uint8Array(3);const e=new DataView(n.buffer);e.setUint8(0,126),e.setUint16(1,i)}else{n=new Uint8Array(9);const e=new DataView(n.buffer);e.setUint8(0,127),e.setBigUint64(1,BigInt(i))}e.data&&"string"!=typeof e.data&&(n[0]|=128),t.enqueue(n),t.enqueue(s)})}})},s.createPacketDecoderStream=function createPacketDecoderStream(e,t){c||(c=new TextDecoder);const s=[];let i=0,l=-1,d=!1;return new TransformStream({transform(g,u){for(s.push(g);;){if(0===i){if(totalLength(s)<1)break;const e=concatChunks(s,1);d=!(128&~e[0]),l=127&e[0],i=l<126?3:126===l?1:2}else if(1===i){if(totalLength(s)<2)break;const e=concatChunks(s,2);l=new DataView(e.buffer,e.byteOffset,e.length).getUint16(0),i=3}else if(2===i){if(totalLength(s)<8)break;const e=concatChunks(s,8),t=new DataView(e.buffer,e.byteOffset,e.length),n=t.getUint32(0);if(n>Math.pow(2,21)-1){u.enqueue(a.ERROR_PACKET);break}l=n*Math.pow(2,32)+t.getUint32(4),i=3}else{if(totalLength(s)<l)break;const e=concatChunks(s,l);u.enqueue((0,n.decodePacket)(d?e:c.decode(e),t)),i=0}if(0===l||l>e){u.enqueue(a.ERROR_PACKET);break}}}})};const i=e("./encodePacket.js");Object.defineProperty(s,"encodePacket",{enumerable:!0,get:function(){return i.encodePacket}});const n=e("./decodePacket.js");Object.defineProperty(s,"decodePacket",{enumerable:!0,get:function(){return n.decodePacket}});const a=e("./commons.js"),l=String.fromCharCode(30);s.encodePayload=(e,t)=>{const s=e.length,n=new Array(s);let a=0;e.forEach((e,c)=>{(0,i.encodePacket)(e,!1,e=>{n[c]=e,++a===s&&t(n.join(l))})})};let c;function totalLength(e){return e.reduce((e,t)=>e+t.length,0)}function concatChunks(e,t){if(e[0].length===t)return e.shift();const s=new Uint8Array(t);let i=0;for(let n=0;n<t;n++)s[n]=e[0][i++],i===e[0].length&&(e.shift(),i=0);return e.length&&i<e[0].length&&(e[0]=e[0].slice(i)),s}s.decodePayload=(e,t)=>{const s=e.split(l),i=[];for(let e=0;e<s.length;e++){const a=(0,n.decodePacket)(s[e],t);if(i.push(a),"error"===a.type)break}return i},s.protocol=4},{"./commons.js":23,"./decodePacket.js":25,"./encodePacket.js":26}],28:[function(e,t,s){var i=1e3,n=60*i,a=60*n,l=24*a,c=7*l,d=365.25*l;function plural(e,t,s,i){var n=t>=1.5*s;return Math.round(e/s)+" "+i+(n?"s":"")}t.exports=function(e,t){t=t||{};var s=typeof e;if("string"===s&&e.length>0)return function parse(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var s=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*d;case"weeks":case"week":case"w":return s*c;case"days":case"day":case"d":return s*l;case"hours":case"hour":case"hrs":case"hr":case"h":return s*a;case"minutes":case"minute":case"mins":case"min":case"m":return s*n;case"seconds":case"second":case"secs":case"sec":case"s":return s*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(e);if("number"===s&&isFinite(e))return t.long?function fmtLong(e){var t=Math.abs(e);if(t>=l)return plural(e,t,l,"day");if(t>=a)return plural(e,t,a,"hour");if(t>=n)return plural(e,t,n,"minute");if(t>=i)return plural(e,t,i,"second");return e+" ms"}(e):function fmtShort(e){var t=Math.abs(e);if(t>=l)return Math.round(e/l)+"d";if(t>=a)return Math.round(e/a)+"h";if(t>=n)return Math.round(e/n)+"m";if(t>=i)return Math.round(e/i)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},{}],29:[function(e,t,s){var i,n,a=t.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(e){if(i===setTimeout)return setTimeout(e,0);if((i===defaultSetTimout||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){i=defaultSetTimout}try{n="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){n=defaultClearTimeout}}();var l,c=[],d=!1,g=-1;function cleanUpNextTick(){d&&l&&(d=!1,l.length?c=l.concat(c):g=-1,c.length&&drainQueue())}function drainQueue(){if(!d){var e=runTimeout(cleanUpNextTick);d=!0;for(var t=c.length;t;){for(l=c,c=[];++g<t;)l&&l[g].run();g=-1,t=c.length}l=null,d=!1,function runClearTimeout(e){if(n===clearTimeout)return clearTimeout(e);if((n===defaultClearTimeout||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)t[s-1]=arguments[s];c.push(new Item(e,t)),1!==c.length||d||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=noop,a.addListener=noop,a.once=noop,a.off=noop,a.removeListener=noop,a.removeAllListeners=noop,a.emit=noop,a.prependListener=noop,a.prependOnceListener=noop,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],30:[function(e,t,s){"use strict";function Backoff(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}Object.defineProperty(s,"__esModule",{value:!0}),s.Backoff=Backoff,Backoff.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),s=Math.floor(t*this.jitter*e);e=1&Math.floor(10*t)?e+s:e-s}return 0|Math.min(e,this.max)},Backoff.prototype.reset=function(){this.attempts=0},Backoff.prototype.setMin=function(e){this.ms=e},Backoff.prototype.setMax=function(e){this.max=e},Backoff.prototype.setJitter=function(e){this.jitter=e}},{}],31:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.WebTransport=s.WebSocket=s.NodeWebSocket=s.XHR=s.NodeXHR=s.Fetch=s.Socket=s.Manager=s.protocol=void 0,s.io=lookup,s.connect=lookup,s.default=lookup;const n=e("./url.js"),a=e("./manager.js");Object.defineProperty(s,"Manager",{enumerable:!0,get:function(){return a.Manager}});const l=e("./socket.js");Object.defineProperty(s,"Socket",{enumerable:!0,get:function(){return l.Socket}});const c=(0,i(e("debug")).default)("socket.io-client"),d={};function lookup(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};const s=(0,n.url)(e,t.path||"/socket.io"),i=s.source,l=s.id,g=s.path,u=d[l]&&g in d[l].nsps;let h;return t.forceNew||t["force new connection"]||!1===t.multiplex||u?(c("ignoring socket cache for %s",i),h=new a.Manager(i,t)):(d[l]||(c("new io instance for %s",i),d[l]=new a.Manager(i,t)),h=d[l]),s.query&&!t.query&&(t.query=s.queryKey),h.socket(s.path,t)}Object.assign(lookup,{Manager:a.Manager,Socket:l.Socket,io:lookup,connect:lookup});var g=e("socket.io-parser");Object.defineProperty(s,"protocol",{enumerable:!0,get:function(){return g.protocol}});var u=e("engine.io-client");Object.defineProperty(s,"Fetch",{enumerable:!0,get:function(){return u.Fetch}}),Object.defineProperty(s,"NodeXHR",{enumerable:!0,get:function(){return u.NodeXHR}}),Object.defineProperty(s,"XHR",{enumerable:!0,get:function(){return u.XHR}}),Object.defineProperty(s,"NodeWebSocket",{enumerable:!0,get:function(){return u.NodeWebSocket}}),Object.defineProperty(s,"WebSocket",{enumerable:!0,get:function(){return u.WebSocket}}),Object.defineProperty(s,"WebTransport",{enumerable:!0,get:function(){return u.WebTransport}}),t.exports=lookup},{"./manager.js":32,"./socket.js":34,"./url.js":35,debug:36,"engine.io-client":11,"socket.io-parser":39}],32:[function(e,t,s){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,s,i){void 0===i&&(i=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,i,n)}:function(e,t,s,i){void 0===i&&(i=s),e[i]=t[s]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&i(t,e,s);return n(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Manager=void 0;const c=e("engine.io-client"),d=e("./socket.js"),g=a(e("socket.io-parser")),u=e("./on.js"),h=e("./contrib/backo2.js"),p=e("@socket.io/component-emitter"),m=(0,l(e("debug")).default)("socket.io-client:manager");class Manager extends p.Emitter{constructor(e,t){var s;super(),this.nsps={},this.subs=[],e&&"object"==typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||"/socket.io",this.opts=t,(0,c.installTimerFunctions)(this,t),this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(s=t.randomizationFactor)&&void 0!==s?s:.5),this.backoff=new h.Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this._readyState="closed",this.uri=e;const i=t.parser||g;this.encoder=new i.Encoder,this.decoder=new i.Decoder,this._autoConnect=!1!==t.autoConnect,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,e||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}randomizationFactor(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}reconnectionDelayMax(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(e){if(m("readyState %s",this._readyState),~this._readyState.indexOf("open"))return this;m("opening %s",this.uri),this.engine=new c.Socket(this.uri,this.opts);const t=this.engine,s=this;this._readyState="opening",this.skipReconnect=!1;const i=(0,u.on)(t,"open",function(){s.onopen(),e&&e()}),onError=t=>{m("error"),this.cleanup(),this._readyState="closed",this.emitReserved("error",t),e?e(t):this.maybeReconnectOnOpen()},n=(0,u.on)(t,"error",onError);if(!1!==this._timeout){const e=this._timeout;m("connect attempt will timeout after %d",e);const s=this.setTimeoutFn(()=>{m("connect attempt timed out after %d",e),i(),onError(new Error("timeout")),t.close()},e);this.opts.autoUnref&&s.unref(),this.subs.push(()=>{this.clearTimeoutFn(s)})}return this.subs.push(i),this.subs.push(n),this}connect(e){return this.open(e)}onopen(){m("open"),this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push((0,u.on)(e,"ping",this.onping.bind(this)),(0,u.on)(e,"data",this.ondata.bind(this)),(0,u.on)(e,"error",this.onerror.bind(this)),(0,u.on)(e,"close",this.onclose.bind(this)),(0,u.on)(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}ondecoded(e){(0,c.nextTick)(()=>{this.emitReserved("packet",e)},this.setTimeoutFn)}onerror(e){m("error",e),this.emitReserved("error",e)}socket(e,t){let s=this.nsps[e];return s?this._autoConnect&&!s.active&&s.connect():(s=new d.Socket(this,e,t),this.nsps[e]=s),s}_destroy(e){const t=Object.keys(this.nsps);for(const e of t){if(this.nsps[e].active)return void m("socket %s is still active, skipping close",e)}this._close()}_packet(e){m("writing packet %j",e);const t=this.encoder.encode(e);for(let s=0;s<t.length;s++)this.engine.write(t[s],e.options)}cleanup(){m("cleanup"),this.subs.forEach(e=>e()),this.subs.length=0,this.decoder.destroy()}_close(){m("disconnect"),this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(e,t){var s;m("closed due to %s",e),this.cleanup(),null===(s=this.engine)||void 0===s||s.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)m("reconnect failed"),this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const t=this.backoff.duration();m("will wait %dms before reconnect attempt",t),this._reconnecting=!0;const s=this.setTimeoutFn(()=>{e.skipReconnect||(m("attempting reconnect"),this.emitReserved("reconnect_attempt",e.backoff.attempts),e.skipReconnect||e.open(t=>{t?(m("reconnect attempt error"),e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",t)):(m("reconnect success"),e.onreconnect())}))},t);this.opts.autoUnref&&s.unref(),this.subs.push(()=>{this.clearTimeoutFn(s)})}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}s.Manager=Manager},{"./contrib/backo2.js":30,"./on.js":33,"./socket.js":34,"@socket.io/component-emitter":6,debug:36,"engine.io-client":11,"socket.io-parser":39}],33:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.on=function on(e,t,s){return e.on(t,s),function subDestroy(){e.off(t,s)}}},{}],34:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Socket=void 0;const n=e("socket.io-parser"),a=e("./on.js"),l=e("@socket.io/component-emitter"),c=(0,i(e("debug")).default)("socket.io-client:socket"),d=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class Socket extends l.Emitter{constructor(e,t,s){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=t,s&&s.auth&&(this.auth=s.auth),this._opts=Object.assign({},s),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[(0,a.on)(e,"open",this.onopen.bind(this)),(0,a.on)(e,"packet",this.onpacket.bind(this)),(0,a.on)(e,"error",this.onerror.bind(this)),(0,a.on)(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...t){var s,i,a;if(d.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(t.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(t),this;const l={type:n.PacketType.EVENT,data:t,options:{}};if(l.options.compress=!1!==this.flags.compress,"function"==typeof t[t.length-1]){const e=this.ids++;c("emitting packet with ack id %d",e);const s=t.pop();this._registerAckCallback(e,s),l.id=e}const g=null===(i=null===(s=this.io.engine)||void 0===s?void 0:s.transport)||void 0===i?void 0:i.writable,u=this.connected&&!(null===(a=this.io.engine)||void 0===a?void 0:a._hasPingExpired());return this.flags.volatile&&!g?c("discard packet as the transport is not currently writable"):u?(this.notifyOutgoingListeners(l),this.packet(l)):this.sendBuffer.push(l),this.flags={},this}_registerAckCallback(e,t){var s;const i=null!==(s=this.flags.timeout)&&void 0!==s?s:this._opts.ackTimeout;if(void 0===i)return void(this.acks[e]=t);const n=this.io.setTimeoutFn(()=>{delete this.acks[e];for(let t=0;t<this.sendBuffer.length;t++)this.sendBuffer[t].id===e&&(c("removing packet with ack id %d from the buffer",e),this.sendBuffer.splice(t,1));c("event with ack id %d has timed out after %d ms",e,i),t.call(this,new Error("operation has timed out"))},i),fn=(...e)=>{this.io.clearTimeoutFn(n),t.apply(this,e)};fn.withError=!0,this.acks[e]=fn}emitWithAck(e,...t){return new Promise((s,i)=>{const fn=(e,t)=>e?i(e):s(t);fn.withError=!0,t.push(fn),this.emit(e,...t)})}_addToQueue(e){let t;"function"==typeof e[e.length-1]&&(t=e.pop());const s={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push((e,...i)=>{if(s!==this._queue[0])return;return null!==e?s.tryCount>this._opts.retries&&(c("packet [%d] is discarded after %d tries",s.id,s.tryCount),this._queue.shift(),t&&t(e)):(c("packet [%d] was successfully sent",s.id),this._queue.shift(),t&&t(null,...i)),s.pending=!1,this._drainQueue()}),this._queue.push(s),this._drainQueue()}_drainQueue(e=!1){if(c("draining queue"),!this.connected||0===this._queue.length)return;const t=this._queue[0];!t.pending||e?(t.pending=!0,t.tryCount++,c("sending packet [%d] (try n°%d)",t.id,t.tryCount),this.flags=t.flags,this.emit.apply(this,t.args)):c("packet [%d] has already been sent and is waiting for an ack",t.id)}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){c("transport is open - connecting"),"function"==typeof this.auth?this.auth(e=>{this._sendConnectPacket(e)}):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:n.PacketType.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,t){c("close (%s)",e),this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach(e=>{if(!this.sendBuffer.some(t=>String(t.id)===e)){const t=this.acks[e];delete this.acks[e],t.withError&&t.call(this,new Error("socket has been disconnected"))}})}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case n.PacketType.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case n.PacketType.EVENT:case n.PacketType.BINARY_EVENT:this.onevent(e);break;case n.PacketType.ACK:case n.PacketType.BINARY_ACK:this.onack(e);break;case n.PacketType.DISCONNECT:this.ondisconnect();break;case n.PacketType.CONNECT_ERROR:this.destroy();const t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}onevent(e){const t=e.data||[];c("emitting event %j",t),null!=e.id&&(c("attaching ack callback to event"),t.push(this.ack(e.id))),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const t=this._anyListeners.slice();for(const s of t)s.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}ack(e){const t=this;let s=!1;return function(...i){s||(s=!0,c("sending ack %j",i),t.packet({type:n.PacketType.ACK,id:e,data:i}))}}onack(e){const t=this.acks[e.id];"function"==typeof t?(delete this.acks[e.id],c("calling ack %s with %j",e.id,e.data),t.withError&&e.data.unshift(null),t.apply(this,e.data)):c("bad ack %s",e.id)}onconnect(e,t){c("socket connected with id %s",e),this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach(e=>this.emitEvent(e)),this.receiveBuffer=[],this.sendBuffer.forEach(e=>{this.notifyOutgoingListeners(e),this.packet(e)}),this.sendBuffer=[]}ondisconnect(){c("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach(e=>e()),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&(c("performing disconnect (%s)",this.nsp),this.packet({type:n.PacketType.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const t=this._anyListeners;for(let s=0;s<t.length;s++)if(e===t[s])return t.splice(s,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const t=this._anyOutgoingListeners;for(let s=0;s<t.length;s++)if(e===t[s])return t.splice(s,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const t=this._anyOutgoingListeners.slice();for(const s of t)s.apply(this,e.data)}}}s.Socket=Socket},{"./on.js":33,"@socket.io/component-emitter":6,debug:36,"socket.io-parser":39}],35:[function(e,t,s){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.url=function url(e,t="",s){let i=e;s=s||"undefined"!=typeof location&&location,null==e&&(e=s.protocol+"//"+s.host);"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?s.protocol+e:s.host+e),/^(https?|wss?):\/\//.test(e)||(a("protocol-less url %s",e),e=void 0!==s?s.protocol+"//"+e:"https://"+e),a("parse %s",e),i=(0,n.parse)(e));i.port||(/^(http|ws)$/.test(i.protocol)?i.port="80":/^(http|ws)s$/.test(i.protocol)&&(i.port="443"));i.path=i.path||"/";const l=-1!==i.host.indexOf(":")?"["+i.host+"]":i.host;return i.id=i.protocol+"://"+l+":"+i.port+t,i.href=i.protocol+"://"+l+(s&&s.port===i.port?"":":"+i.port),i};const n=e("engine.io-client"),a=(0,i(e("debug")).default)("socket.io-client:url")},{debug:36,"engine.io-client":11}],36:[function(e,t,s){arguments[4][21][0].apply(s,arguments)},{"./common":37,_process:29,dup:21}],37:[function(e,t,s){arguments[4][22][0].apply(s,arguments)},{dup:22,ms:28}],38:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.reconstructPacket=s.deconstructPacket=void 0;const i=e("./is-binary.js");function _deconstructPacket(e,t){if(!e)return e;if((0,i.isBinary)(e)){const s={_placeholder:!0,num:t.length};return t.push(e),s}if(Array.isArray(e)){const s=new Array(e.length);for(let i=0;i<e.length;i++)s[i]=_deconstructPacket(e[i],t);return s}if("object"==typeof e&&!(e instanceof Date)){const s={};for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&(s[i]=_deconstructPacket(e[i],t));return s}return e}function _reconstructPacket(e,t){if(!e)return e;if(e&&!0===e._placeholder){if("number"==typeof e.num&&e.num>=0&&e.num<t.length)return t[e.num];throw new Error("illegal attachments")}if(Array.isArray(e))for(let s=0;s<e.length;s++)e[s]=_reconstructPacket(e[s],t);else if("object"==typeof e)for(const s in e)Object.prototype.hasOwnProperty.call(e,s)&&(e[s]=_reconstructPacket(e[s],t));return e}s.deconstructPacket=function deconstructPacket(e){const t=[],s=e.data,i=e;return i.data=_deconstructPacket(s,t),i.attachments=t.length,{packet:i,buffers:t}},s.reconstructPacket=function reconstructPacket(e,t){return e.data=_reconstructPacket(e.data,t),delete e.attachments,e}},{"./is-binary.js":40}],39:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Decoder=s.Encoder=s.PacketType=s.protocol=void 0;const i=e("@socket.io/component-emitter"),n=e("./binary.js"),a=e("./is-binary.js"),l=(0,e("debug").default)("socket.io-parser"),c=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];var d;s.protocol=5,function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(d=s.PacketType||(s.PacketType={}));function isObject(e){return"[object Object]"===Object.prototype.toString.call(e)}s.Encoder=class Encoder{constructor(e){this.replacer=e}encode(e){return l("encoding packet %j",e),e.type!==d.EVENT&&e.type!==d.ACK||!(0,a.hasBinary)(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===d.EVENT?d.BINARY_EVENT:d.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}encodeAsString(e){let t=""+e.type;return e.type!==d.BINARY_EVENT&&e.type!==d.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),l("encoded %j as %s",e,t),t}encodeAsBinary(e){const t=(0,n.deconstructPacket)(e),s=this.encodeAsString(t.packet),i=t.buffers;return i.unshift(s),i}};class Decoder extends i.Emitter{constructor(e){super(),this.reviver=e}add(e){let t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");t=this.decodeString(e);const s=t.type===d.BINARY_EVENT;s||t.type===d.BINARY_ACK?(t.type=s?d.EVENT:d.ACK,this.reconstructor=new BinaryReconstructor(t),0===t.attachments&&super.emitReserved("decoded",t)):super.emitReserved("decoded",t)}else{if(!(0,a.isBinary)(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");t=this.reconstructor.takeBinaryData(e),t&&(this.reconstructor=null,super.emitReserved("decoded",t))}}decodeString(e){let t=0;const s={type:Number(e.charAt(0))};if(void 0===d[s.type])throw new Error("unknown packet type "+s.type);if(s.type===d.BINARY_EVENT||s.type===d.BINARY_ACK){const i=t+1;for(;"-"!==e.charAt(++t)&&t!=e.length;);const n=e.substring(i,t);if(n!=Number(n)||"-"!==e.charAt(t))throw new Error("Illegal attachments");s.attachments=Number(n)}if("/"===e.charAt(t+1)){const i=t+1;for(;++t;){if(","===e.charAt(t))break;if(t===e.length)break}s.nsp=e.substring(i,t)}else s.nsp="/";const i=e.charAt(t+1);if(""!==i&&Number(i)==i){const i=t+1;for(;++t;){const s=e.charAt(t);if(null==s||Number(s)!=s){--t;break}if(t===e.length)break}s.id=Number(e.substring(i,t+1))}if(e.charAt(++t)){const i=this.tryParse(e.substr(t));if(!Decoder.isPayloadValid(s.type,i))throw new Error("invalid payload");s.data=i}return l("decoded %s as %j",e,s),s}tryParse(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}static isPayloadValid(e,t){switch(e){case d.CONNECT:return isObject(t);case d.DISCONNECT:return void 0===t;case d.CONNECT_ERROR:return"string"==typeof t||isObject(t);case d.EVENT:case d.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===c.indexOf(t[0]));case d.ACK:case d.BINARY_ACK:return Array.isArray(t)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}s.Decoder=Decoder;class BinaryReconstructor{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const e=(0,n.reconstructPacket)(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}},{"./binary.js":38,"./is-binary.js":40,"@socket.io/component-emitter":6,debug:41}],40:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.hasBinary=s.isBinary=void 0;const i="function"==typeof ArrayBuffer,n=Object.prototype.toString,a="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===n.call(Blob),l="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===n.call(File);function isBinary(e){return i&&(e instanceof ArrayBuffer||(e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer)(e))||a&&e instanceof Blob||l&&e instanceof File}s.isBinary=isBinary,s.hasBinary=function hasBinary(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e)){for(let t=0,s=e.length;t<s;t++)if(hasBinary(e[t]))return!0;return!1}if(isBinary(e))return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return hasBinary(e.toJSON(),!0);for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&hasBinary(e[t]))return!0;return!1}},{}],41:[function(e,t,s){arguments[4][21][0].apply(s,arguments)},{"./common":42,_process:29,dup:21}],42:[function(e,t,s){arguments[4][22][0].apply(s,arguments)},{dup:22,ms:28}],43:[function(e,t,s){"use strict";window.bulletproofTokenBannerSystem=new class BulletproofTokenBannerSystem{constructor(){this.isInitialized=!1,this.tokenCheckInterval=null,this.currentBuild="bundle-1754042411",this.version="6.5.2.4",this.lastChange="Bulletproof token banner system with comprehensive status display",this.init()}init(){window.bulletproofTokenBannerSystem&&window.bulletproofTokenBannerSystem.isInitialized?console.log("🛡️ Bulletproof Token Banner System already running"):(this.disableAllOtherSystems(),this.createBannerContainers(),this.startTokenMonitoring(),this.isInitialized=!0,console.log("🛡️ Bulletproof Token Banner System initialized"),window.bulletproofTokenBannerSystem=this)}disableAllOtherSystems(){console.log("🚫 Disabling all other banner systems...");for(let e=1;e<99999;e++)try{clearInterval(e)}catch(e){}if(document.querySelectorAll([".token-notification",".bulletproof-red-banner",".bulletproof-green-banner",".primary-red-banner",".primary-green-banner",".single-red-banner",".single-green-banner",'[class*="token-notification"]','[id*="notification-area"]'].join(", ")).forEach(e=>{e&&e.parentNode&&e.parentNode.removeChild(e)}),window.singleTokenBannerSystem){try{window.singleTokenBannerSystem.destroy()}catch(e){}window.singleTokenBannerSystem=null}if(window.primaryTokenBannerManager){try{window.primaryTokenBannerManager.destroy()}catch(e){}window.primaryTokenBannerManager=null}}createBannerContainers(){document.querySelectorAll(["#bulletproof-red-banner-container","#bulletproof-green-banner-container"].join(", ")).forEach(e=>{e&&e.parentNode&&e.parentNode.removeChild(e)});const e=document.createElement("div");e.id="bulletproof-red-banner-container",e.className="bulletproof-banner-container";const t=document.querySelector(".main-content");t&&t.insertBefore(e,t.firstChild);const s=document.createElement("div");s.id="bulletproof-green-banner-container",s.className="bulletproof-banner-container";const i=document.getElementById("global-token-status");i&&i.parentNode?i.parentNode.insertBefore(s,i.nextSibling):t&&t.insertBefore(s,e.nextSibling)}startTokenMonitoring(){this.tokenCheckInterval&&clearInterval(this.tokenCheckInterval),this.tokenCheckInterval=setInterval(()=>{this.updateBanners()},2e3),this.updateBanners()}updateBanners(){const e=this.getTokenInfo();this.updateRedBanner(e),this.updateGreenBanner(e)}getTokenInfo(){try{const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,isValid:!1};const s=parseInt(t,10),i=s-Math.floor(Date.now()/1e3);return{hasToken:!0,timeLeft:Math.max(0,i),isValid:i>0,token:e.substring(0,20)+"..."}}catch(e){return console.error("Error getting token info:",e),{hasToken:!1,timeLeft:0,isValid:!1}}}updateRedBanner(e){const t=document.getElementById("bulletproof-red-banner-container");if(t)if(e.hasToken&&e.isValid)t.innerHTML="";else{const s=`\n                <div class="bulletproof-red-banner">\n                    <div class="banner-content">\n                        <span class="banner-icon">🔒</span>\n                        <span class="banner-text">\n                            <strong>Authentication Required</strong> - ${e.hasToken?"Token expired":"No token found"}. Most functionality is disabled until you authenticate.\n                        </span>\n                    </div>\n                    <div class="banner-actions">\n                        <button class="banner-btn" onclick="document.querySelector('[data-view=settings]')?.click()">\n                            Go to Settings\n                        </button>\n                        <button class="banner-btn" onclick="this.parentElement.parentElement.parentElement.style.display='none'">\n                            Dismiss\n                        </button>\n                    </div>\n                </div>\n            `;t.innerHTML=s}}updateGreenBanner(e){const t=document.getElementById("bulletproof-green-banner-container");if(t)if(e.hasToken&&e.isValid){const s=e.timeLeft<=300,i=`\n                <div class="bulletproof-green-banner ${s?"expiring":""}">\n                    <div class="banner-content">\n                        <span class="banner-icon">${s?"⚠️":"✅"}</span>\n                        <span class="banner-text">\n                            <strong>TOKEN ACTIVE</strong> | Time Left: ${this.formatTime(e.timeLeft)} | Build: ${this.currentBuild} | v${this.version} | ${this.lastChange}\n                        </span>\n                    </div>\n                    <div class="banner-info">\n                        ${s?"Expiring Soon":"Valid & Active"}\n                    </div>\n                </div>\n            `;t.innerHTML=i}else t.innerHTML=""}formatTime(e){if(e<=0)return"00:00";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),i=e%60;return t>0?`${t.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}`:`${s.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}`}checkTokenNow(){console.log("🔍 Manual token check triggered"),this.updateBanners()}simulateToken(){const e=Math.floor(Date.now()/1e3)+3600;localStorage.setItem("pingone_token","test_token_"+Date.now()),localStorage.setItem("pingone_token_expiry",e.toString()),console.log("🧪 Test token created"),this.updateBanners()}destroy(){this.tokenCheckInterval&&clearInterval(this.tokenCheckInterval),this.isInitialized=!1}},window.checkTokenNow=()=>window.bulletproofTokenBannerSystem?.checkTokenNow(),window.simulateToken=()=>window.bulletproofTokenBannerSystem?.simulateToken()},{}],44:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.createCircularProgress=function createCircularProgress(){let{value:e=0,label:t="",state:s="",id:i=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=80,a=2*Math.PI*36,l=Math.max(0,Math.min(100,e)),c=a-l/100*a,d=i||`circular-progress-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,g=document.createElement("div");return g.className="circular-progress"+(s?" "+s:""),g.id=d,g.setAttribute("role","progressbar"),g.setAttribute("aria-valuenow",l),g.setAttribute("aria-valuemin",0),g.setAttribute("aria-valuemax",100),g.setAttribute("aria-label",t?`${t} ${l}%`:`${l}%`),g.setAttribute("data-percent",l),g.setAttribute("data-state",s),g.setAttribute("data-created",(new Date).toISOString()),g.innerHTML=`\n    <svg width="80" height="80" viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg">\n      \x3c!-- Background circle --\x3e\n      <circle \n        class="circular-bg" \n        cx="40" \n        cy="40" \n        r="36" \n        fill="none"\n        stroke="#e0e0e0"\n        stroke-width="8"\n      />\n      \x3c!-- Foreground progress circle --\x3e\n      <circle \n        class="circular-fg" \n        cx="40" \n        cy="40" \n        r="36" \n        fill="none"\n        stroke="var(--brand-color, #7c3aed)"\n        stroke-width="8"\n        stroke-linecap="round"\n        stroke-dasharray="${a}"\n        stroke-dashoffset="${c}"\n        transform="rotate(-90 40 40)"\n      />\n    </svg>\n    \x3c!-- Percentage label --\x3e\n    <span class="circular-label">${Math.round(l)}%</span>\n    ${t?`<span class="circular-status">${t}</span>`:""}\n  `,console.debug("Circular Progress Created:",{id:d,percent:l,state:s,size:n,stroke:8,radius:36,circumference:a,dashOffset:c,label:t}),g}},{}],45:[function(e,t,s){"use strict";class CredentialsModal{constructor(){this.isActive=!1,this.focusableElements=[],this.firstFocusableElement=null,this.lastFocusableElement=null,this.previousActiveElement=null,this.credentials=null,this.init()}async init(){await this.loadCredentials(),this.createModal(),this.bindEvents(),this.showModal()}async loadCredentials(){try{const e=await fetch("/api/settings");if(e.ok){const t=await e.json(),s=t.data||t.settings||{};this.credentials={environmentId:s.environmentId||s["environment-id"]||"",clientId:s.apiClientId||s["api-client-id"]||"",clientSecret:s.apiSecret||s["api-secret"]||"",region:s.region||"NorthAmerica",populationId:s.populationId||s["population-id"]||"",rateLimit:s.rateLimit||s["rate-limit"]||90},console.log("Credentials loaded from server:",{hasEnvironmentId:!!this.credentials.environmentId,hasClientId:!!this.credentials.clientId,hasClientSecret:!!this.credentials.clientSecret,region:this.credentials.region})}else console.warn("Failed to load credentials from settings"),this.credentials=null}catch(e){console.error("Error loading credentials:",e),this.credentials=null}}createModal(){const e=document.createElement("div");e.className="credentials-modal-overlay",e.setAttribute("role","dialog"),e.setAttribute("aria-modal","true"),e.setAttribute("aria-labelledby","credentials-title"),e.setAttribute("aria-describedby","credentials-content");const t=this.credentials&&this.credentials.environmentId&&this.credentials.clientId;e.innerHTML=`\n            <div class="credentials-modal" tabindex="-1">\n                <div class="credentials-modal-body">\n                    <div id="credentials-content" class="credentials-content">\n                        ${t?this.createCredentialsContent():this.createNoCredentialsContent()}\n                    </div>\n                </div>\n                \n                <div class="credentials-modal-footer">\n                    <div class="credentials-actions">\n                        ${t?this.createCredentialsActions():this.createNoCredentialsActions()}\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(e),this.overlay=e,this.modal=e.querySelector(".credentials-modal"),this.useCredentialsBtn=e.querySelector("#use-credentials-btn"),this.configureBtn=e.querySelector("#configure-credentials-btn"),this.skipBtn=e.querySelector("#skip-credentials-btn")}createCredentialsContent(){return`\n            <h3>🔐 PingOne Credentials Found</h3>\n            <p>The following PingOne credentials are available. Would you like to use them or configure new ones?</p>\n            \n            <div class="credentials-display">\n                <div class="credential-item">\n                    <label>Environment ID:</label>\n                    <div class="credential-value">\n                        <code class="credential-visible">${this.credentials.environmentId}</code>\n                        <button class="btn btn-sm btn-outline-secondary copy-btn" data-value="${this.credentials.environmentId}" title="Copy Environment ID">\n                            <i class="fas fa-copy"></i>\n                        </button>\n                    </div>\n                </div>\n                \n                <div class="credential-item">\n                    <label>Client ID:</label>\n                    <div class="credential-value">\n                        <code class="credential-visible">${this.credentials.clientId}</code>\n                        <button class="btn btn-sm btn-outline-secondary copy-btn" data-value="${this.credentials.clientId}" title="Copy Client ID">\n                            <i class="fas fa-copy"></i>\n                        </button>\n                    </div>\n                </div>\n                \n                <div class="credential-item">\n                    <label>Client Secret:</label>\n                    <div class="credential-value">\n                        <code class="credential-masked">${this.credentials.clientSecret?this.credentials.clientSecret.substring(0,5)+"•".repeat(Math.max(0,15)):"••••••••••••••••••••"}</code>\n                        <span class="credential-status">✅ Configured</span>\n                    </div>\n                </div>\n                \n                <div class="credential-item">\n                    <label>Region:</label>\n                    <div class="credential-value">\n                        <code class="credential-visible">${this.credentials.region}</code>\n                    </div>\n                </div>\n            </div>\n            \n            <div class="credentials-info">\n                <h4>💡 What would you like to do?</h4>\n                <ul>\n                    <li><strong>Use These Credentials:</strong> Continue with the stored credentials</li>\n                    <li><strong>Go to Settings:</strong> Configure new or different credentials</li>\n                </ul>\n            </div>\n        `}createNoCredentialsContent(){return'\n            <h3>🔧 No Credentials Found</h3>\n            <p>No PingOne credentials were found in your settings. You\'ll need to configure them to use this tool.</p>\n            \n            <div class="credentials-info">\n                <h4>📋 Required Information:</h4>\n                <ul>\n                    <li><strong>Environment ID:</strong> Your PingOne environment identifier</li>\n                    <li><strong>Client ID:</strong> Your PingOne API client identifier</li>\n                    <li><strong>Client Secret:</strong> Your PingOne API client secret</li>\n                    <li><strong>Region:</strong> Your PingOne environment region</li>\n                </ul>\n            </div>\n            \n            <div class="credentials-help">\n                <h4>💡 How to Get Credentials:</h4>\n                <ol>\n                    <li>Log into your PingOne Admin Console</li>\n                    <li>Navigate to Applications → Applications</li>\n                    <li>Create a new application or use an existing one</li>\n                    <li>Copy the Environment ID, Client ID, and Client Secret</li>\n                    <li>Configure them in the Settings page</li>\n                </ol>\n            </div>\n        '}createCredentialsActions(){return'\n            <button type="button" class="credentials-btn credentials-btn-primary" id="use-credentials-btn">\n                <i class="fas fa-play"></i>\n                Use These Credentials\n            </button>\n            <button type="button" class="credentials-btn credentials-btn-secondary" id="configure-credentials-btn">\n                <i class="fas fa-cog"></i>\n                Go to Settings\n            </button>\n            <button type="button" class="credentials-btn credentials-btn-outline" id="skip-credentials-btn">\n                <i class="fas fa-times"></i>\n                Skip for Now\n            </button>\n        '}createNoCredentialsActions(){return'\n            <button type="button" class="credentials-btn credentials-btn-primary" id="configure-credentials-btn">\n                <i class="fas fa-cog"></i>\n                Go to Settings\n            </button>\n            <button type="button" class="credentials-btn credentials-btn-secondary" id="skip-credentials-btn">\n                <i class="fas fa-times"></i>\n                Skip for Now\n            </button>\n        '}maskCredential(e){return e?e.length<=8?e:e.substring(0,8)+"..."+e.substring(e.length-4):"Not set"}bindEvents(){this.useCredentialsBtn&&this.useCredentialsBtn.addEventListener("click",async()=>{await this.useCurrentCredentials()}),this.configureBtn&&this.configureBtn.addEventListener("click",()=>{this.goToSettings()}),this.skipBtn&&this.skipBtn.addEventListener("click",()=>{this.skipCredentials()}),this.modal.querySelectorAll(".copy-btn").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.closest(".copy-btn").dataset.value;this.copyToClipboard(t,e.target.closest(".copy-btn"))})}),this.overlay.addEventListener("keydown",e=>{this.handleKeyboardNavigation(e)}),this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.logEvent("credentials_outside_click_prevented")}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isActive&&(e.preventDefault(),this.skipCredentials())})}handleKeyboardNavigation(e){if(!this.isActive)return;const t=this.getFocusableElements(),s=t[0],i=t[t.length-1];"Tab"===e.key&&(e.shiftKey?document.activeElement===s&&(e.preventDefault(),i.focus()):document.activeElement===i&&(e.preventDefault(),s.focus()))}getFocusableElements(){return Array.from(this.modal.querySelectorAll(["button:not([disabled])","input:not([disabled])","select:not([disabled])","textarea:not([disabled])","a[href]",'[tabindex]:not([tabindex="-1"])'].join(", ")))}showModal(){this.isActive=!0,this.previousActiveElement=document.activeElement,document.body.classList.add("credentials-modal-open");const e=document.querySelector(".app-container");e&&e.classList.add("credentials-modal-active"),this.overlay.classList.add("active"),this.modal.focus(),this.setupFocusTrap(),this.logEvent("credentials_modal_shown"),this.announceToScreenReader("Credentials configuration modal opened. Please review your PingOne credentials and choose an action.")}setupFocusTrap(){this.focusableElements=this.getFocusableElements(),this.firstFocusableElement=this.focusableElements[0],this.lastFocusableElement=this.focusableElements[this.focusableElements.length-1]}async useCurrentCredentials(){this.logEvent("credentials_used",{hasCredentials:!!this.credentials,environmentId:this.credentials?.environmentId?"set":"not_set",clientId:this.credentials?.clientId?"set":"not_set"});const e=document.getElementById("use-credentials-btn");e&&(e.disabled=!0,e.innerHTML='<i class="fas fa-spinner fa-spin"></i> Validating Credentials...');try{await this.saveCredentialsOnly(),CredentialsModal.setCredentialsModalShown(),this.hideModal(),this.enableApplication(),this.updateTokenStatusAfterCredentialsUse(),this.showSuccessMessage("Credentials saved successfully!")}catch(e){const t=document.getElementById("use-credentials-btn");t&&(t.disabled=!1,t.innerHTML='<i class="fas fa-play"></i> Use These Credentials'),console.error("Error using credentials:",e);let s="",i="Credentials Error";e.message.includes("PingOne client not available")?(i="Authentication System Not Ready",s="The PingOne authentication system is not fully initialized. Please refresh the page and try again, or go to Settings to configure credentials manually."):e.message.includes("Missing required credentials")?(i="Incomplete Credentials",s="Some required credential fields are missing. Please go to Settings to complete your PingOne configuration."):e.message.includes("Failed to get token")?(i="Authentication Failed",s="Unable to authenticate with PingOne using these credentials. Please verify your credentials in Settings."):e.message.includes("Failed to save credentials")?(i="Save Failed",s="Unable to save credentials to the server. Please try again or go to Settings to configure manually."):(i="Credentials Error",s="There was a problem using these credentials. Please go to Settings to verify your PingOne configuration."),this.showModalError(i,s)}}async saveCredentialsAndGetToken(){if(!this.credentials)throw new Error("No credentials available to save");const e={environmentId:this.credentials.environmentId,apiClientId:this.credentials.clientId,apiSecret:this.credentials.clientSecret,populationId:this.credentials.populationId||"",region:this.credentials.region||"NorthAmerica",rateLimit:this.credentials.rateLimit||90};if(!e.environmentId||!e.apiClientId||!e.apiSecret)throw new Error("Missing required credentials: Environment ID, Client ID, and Client Secret are required");try{console.log("Saving credentials to server...",{hasEnvironmentId:!!e.environmentId,hasApiClientId:!!e.apiClientId,hasApiSecret:!!e.apiSecret,region:e.region});const t=await fetch("/api/settings",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){const e=await t.json().catch(()=>({}));throw new Error(`Failed to save credentials to server: ${e.error||t.statusText}`)}const s=await t.json();console.log("Credentials saved to server successfully:",s);const i=await fetch("/api/settings");if(i.ok){const e=await i.json(),t=e.data||e.settings||{};console.log("Verified credentials saved to server:",{hasEnvironmentId:!!t.environmentId,hasApiClientId:!!t.apiClientId,hasApiSecret:!!t.apiSecret})}}catch(e){throw console.error("Failed to save credentials to server:",e),new Error(`Failed to save credentials: ${e.message}`)}if(window.credentialsManager)try{window.credentialsManager.saveCredentials(e),console.log("Credentials saved to credentials manager")}catch(e){console.warn("Failed to save to credentials manager:",e)}try{localStorage.setItem("pingone_credentials",JSON.stringify(e)),console.log("Credentials saved to localStorage as backup")}catch(e){console.warn("Failed to save to localStorage:",e)}if(window.app&&window.app.populateSettingsForm)try{window.app.populateSettingsForm(e),console.log("Settings form updated with credentials")}catch(e){console.warn("Failed to update settings form:",e)}let t=null,s=null;await new Promise(e=>setTimeout(e,1e3));for(let i=1;i<=3;i++){console.log(`Token acquisition attempt ${i}/3`);try{console.log("Trying direct API call approach...");const e=await fetch("/api/pingone/token",{method:"POST",headers:{"Content-Type":"application/json"}});if(e.ok){const s=await e.json();if(s.access_token){console.log("Token acquired via direct API call"),t=s.access_token;break}}else{const t=await e.json().catch(()=>({}));s=new Error(t.error||"Failed to get token from API"),console.error(`Direct API approach failed (attempt ${i}):`,s.message)}}catch(e){console.error(`Direct API approach failed (attempt ${i}):`,e),s=e}if(!t&&window.app&&window.app.pingOneClient)try{console.log("Trying PingOne client approach as fallback..."),"function"==typeof window.app.pingOneClient.updateCredentials&&window.app.pingOneClient.updateCredentials(e);const s=await window.app.pingOneClient.getAccessToken();console.log("New token acquired with saved credentials via PingOne client"),t=s;break}catch(e){console.error(`PingOne client approach failed (attempt ${i}):`,e),s=e}else t||console.log("PingOne client not available, skipping client approach");if(!t)try{console.log("Trying enhanced server auth approach...");const n=await fetch("/api/v1/auth/token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({environmentId:e.environmentId,clientId:e.apiClientId,clientSecret:e.apiSecret,region:e.region})});if(n.ok){const e=await n.json();if(e.access_token||e.token){console.log("Token acquired via enhanced server auth"),t=e.access_token||e.token;break}}else{const e=await n.json().catch(()=>({}));s=new Error(e.error||"Failed to get token from enhanced auth"),console.error(`Enhanced server auth approach failed (attempt ${i}):`,s.message)}}catch(e){console.error(`Enhanced server auth approach failed (attempt ${i}):`,e),s=e}if(i<3&&!t){const e=1e3*i;console.log(`Waiting ${e}ms before retry...`),await new Promise(t=>setTimeout(t,e))}}if(!t){console.error("All token acquisition attempts failed");let e="Unable to acquire PingOne access token after multiple attempts.";throw s&&(e=s.message.includes("401")||s.message.includes("unauthorized")?"Invalid credentials. Please verify your PingOne Client ID and Secret are correct.":s.message.includes("404")||s.message.includes("not found")?"PingOne environment not found. Please verify your Environment ID is correct.":s.message.includes("network")||s.message.includes("fetch")?"Network error connecting to PingOne. Please check your internet connection.":s.message.includes("PingOne client not available")?"PingOne authentication system is not properly initialized. Please refresh the page and try again.":`Authentication failed: ${s.message}`),new Error(e)}return console.log("Token acquisition successful"),t}async saveCredentialsOnly(){if(!this.credentials)throw new Error("No credentials available to save");const e={environmentId:this.credentials.environmentId,apiClientId:this.credentials.clientId,apiSecret:this.credentials.clientSecret,populationId:this.credentials.populationId||"",region:this.credentials.region||"NorthAmerica",rateLimit:this.credentials.rateLimit||90};if(!e.environmentId||!e.apiClientId||!e.apiSecret)throw new Error("Missing required credentials: Environment ID, Client ID, and Client Secret are required");try{console.log("Saving credentials to server...",{hasEnvironmentId:!!e.environmentId,hasApiClientId:!!e.apiClientId,hasApiSecret:!!e.apiSecret,region:e.region});const t=await fetch("/api/settings",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){const e=await t.json().catch(()=>({}));throw new Error(`Failed to save credentials to server: ${e.error||t.statusText}`)}const s=await t.json();console.log("Credentials saved to server successfully:",s)}catch(e){throw console.error("Failed to save credentials to server:",e),new Error(`Failed to save credentials: ${e.message}`)}if(window.credentialsManager)try{window.credentialsManager.saveCredentials(e),console.log("Credentials saved to credentials manager")}catch(e){console.warn("Failed to save to credentials manager:",e)}try{localStorage.setItem("pingone_credentials",JSON.stringify(e)),console.log("Credentials saved to localStorage as backup")}catch(e){console.warn("Failed to save to localStorage:",e)}if(window.app&&window.app.populateSettingsForm)try{window.app.populateSettingsForm(e),console.log("Settings form updated with credentials")}catch(e){console.warn("Failed to update settings form:",e)}return console.log("Credentials saved successfully without token acquisition"),!0}showError(e,t){const s=document.createElement("div");s.className="notification notification-error",s.innerHTML=`\n            <i class="fas fa-exclamation-circle"></i>\n            <span><strong>${e}:</strong> ${t}</span>\n        `;const i=document.getElementById("notification-area");i&&(i.appendChild(s),setTimeout(()=>{s.remove()},8e3))}showModalError(e,t){const s=document.querySelector(".credentials-modal");if(!s)return;const i=s.querySelector(".credentials-error-message");i&&i.remove();const n=document.createElement("div");n.className="credentials-error-message",n.innerHTML=`\n            <div class="error-content">\n                <i class="fas fa-exclamation-triangle error-icon"></i>\n                <div class="error-text">\n                    <h4>${e}</h4>\n                    <p>${t}</p>\n                </div>\n            </div>\n            <div class="error-actions">\n                <button type="button" class="btn btn-primary" onclick="this.closest('.credentials-modal-overlay').querySelector('#configure-credentials-btn').click()">\n                    <i class="fas fa-cog"></i> Go to Settings\n                </button>\n                <button type="button" class="btn btn-secondary" onclick="this.closest('.credentials-error-message').remove()">\n                    <i class="fas fa-times"></i> Dismiss\n                </button>\n            </div>\n        `;const a=s.querySelector(".credentials-modal-body");a&&a.insertAdjacentElement("afterend",n),this.showError(e,t)}updateTokenStatusAfterCredentialsUse(){try{console.log("Credentials Modal: Updating token status after credentials use"),window.app&&window.app.pingOneClient&&(window.app.pingOneClient.clearToken(),window.app.pingOneClient.getAccessToken().then(e=>{console.log("Credentials Modal: Fresh token acquired"),"function"==typeof window.app.updateUniversalTokenStatus&&window.app.updateUniversalTokenStatus()}).catch(e=>{console.warn("Credentials Modal: Could not get fresh token:",e)})),window.app&&"function"==typeof window.app.updateUniversalTokenStatus&&setTimeout(()=>{window.app.updateUniversalTokenStatus()},1e3)}catch(e){console.error("Credentials Modal: Error updating token status:",e)}}goToSettings(){this.logEvent("credentials_configure_clicked"),this.hideModal(),this.enableApplication(),setTimeout(()=>{const e=document.querySelector('[data-view="settings"]');e&&e.click()},100)}skipCredentials(){this.logEvent("credentials_skipped"),this.hideModal(),this.enableApplication(),this.showInfoMessage("You can configure credentials later in the Settings page.")}hideModal(){this.isActive=!1,document.body.classList.remove("credentials-modal-open");const e=document.querySelector(".app-container");e&&e.classList.remove("credentials-modal-active"),this.overlay.classList.remove("active"),this.previousActiveElement&&this.previousActiveElement.focus(),setTimeout(()=>{this.overlay&&this.overlay.parentNode&&this.overlay.parentNode.removeChild(this.overlay)},300),this.logEvent("credentials_modal_hidden")}enableApplication(){const e=document.querySelector(".app-container");e&&e.classList.remove("credentials-modal-active"),this.logEvent("application_enabled_after_credentials")}copyToClipboard(e,t){navigator.clipboard.writeText(e).then(()=>{const e=t.innerHTML;t.innerHTML='<i class="fas fa-check"></i>',t.classList.add("copied"),setTimeout(()=>{t.innerHTML=e,t.classList.remove("copied")},2e3),this.logEvent("credential_copied")}).catch(e=>{console.error("Failed to copy to clipboard:",e),this.logEvent("credential_copy_failed",{error:e.message})})}showSuccessMessage(e){const t=document.createElement("div");t.className="notification notification-success",t.innerHTML=`\n            <i class="fas fa-check-circle"></i>\n            <span>${e}</span>\n        `;const s=document.getElementById("notification-area");s&&(s.appendChild(t),setTimeout(()=>{t.remove()},5e3))}showInfoMessage(e){const t=document.createElement("div");t.className="notification notification-info",t.innerHTML=`\n            <i class="fas fa-info-circle"></i>\n            <span>${e}</span>\n        `;const s=document.getElementById("notification-area");s&&(s.appendChild(t),setTimeout(()=>{t.remove()},5e3))}announceToScreenReader(e){const t=document.createElement("div");t.setAttribute("aria-live","polite"),t.setAttribute("aria-atomic","true"),t.style.position="absolute",t.style.left="-10000px",t.style.width="1px",t.style.height="1px",t.style.overflow="hidden",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{document.body.removeChild(t)},1e3)}logEvent(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s={event:e,timestamp:(new Date).toISOString(),hasCredentials:!!this.credentials,environmentId:this.credentials?.environmentId?"set":"not_set",clientId:this.credentials?.clientId?"set":"not_set",...t};console.log("Credentials Modal Event:",s)}static async areCredentialsSaved(){try{const e=await fetch("/api/settings");if(!e.ok)return!1;const t=await e.json(),s=t.data||t.settings||{};if(!(s.environmentId&&s.apiClientId&&s.apiSecret))return!1;if(window.app&&window.app.pingOneClient)try{return!!await window.app.pingOneClient.getAccessToken()}catch(e){return console.warn("Credentials exist but token acquisition failed:",e),!1}return!0}catch(e){return console.error("Error checking if credentials are saved:",e),!1}}static async shouldShowCredentialsModal(){return console.log("DEBUGGING: Disabling credentials modal for import UI testing"),!1}static setCredentialsModalShown(){sessionStorage.setItem("credentials_modal_shown","true"),console.log("Credentials modal marked as shown for this session")}static resetCredentialsModal(){sessionStorage.removeItem("credentials_modal_shown"),console.log("Credentials modal state reset")}static hasValidToken(){try{const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return!1;const s=parseInt(t,10),i=Date.now();return s-i>0}catch(e){return console.error("Error checking token validity:",e),!1}}}document.addEventListener("DOMContentLoaded",async()=>{if(console.log("Credentials Modal: DOMContentLoaded event fired"),console.log("Disclaimer accepted:",DisclaimerModal.isDisclaimerAccepted()),console.log("Credentials modal shown:",sessionStorage.getItem("credentials_modal_shown")),DisclaimerModal.isDisclaimerAccepted()){const e=await CredentialsModal.shouldShowCredentialsModal();console.log("Should show credentials modal:",e),e&&(console.log("Credentials Modal: Showing modal for returning user"),setTimeout(()=>{new CredentialsModal,CredentialsModal.setCredentialsModalShown()},1e3))}}),document.addEventListener("disclaimerAccepted",async e=>{console.log("Credentials Modal: Disclaimer accepted event received",e.detail),setTimeout(async()=>{console.log("Credentials Modal: Checking if should show after disclaimer");const e=await CredentialsModal.shouldShowCredentialsModal();console.log("Should show credentials modal:",e),e&&(console.log("Credentials Modal: Creating modal after disclaimer acceptance"),new CredentialsModal,CredentialsModal.setCredentialsModalShown())},1500)}),document.addEventListener("token-updated",async e=>{console.log("Credentials Modal: Token updated event received",e.detail),setTimeout(async()=>{const e=await CredentialsModal.shouldShowCredentialsModal();console.log("Should show credentials modal after token update:",e),e&&(console.log("Credentials Modal: Creating modal after token update"),new CredentialsModal,CredentialsModal.setCredentialsModalShown())},1e3)}),setInterval(async()=>{if(DisclaimerModal.isDisclaimerAccepted()){await CredentialsModal.shouldShowCredentialsModal()&&(console.log("Credentials Modal: Periodic check - showing modal"),new CredentialsModal,CredentialsModal.setCredentialsModalShown())}},3e5),void 0!==t&&t.exports&&(t.exports=CredentialsModal)},{}],46:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.cryptoUtils=s.CryptoUtils=void 0;class CryptoUtils{static async generateKey(e){const t=new TextEncoder,s=await window.crypto.subtle.importKey("raw",t.encode(e),"PBKDF2",!1,["deriveBits","deriveKey"]);return window.crypto.subtle.deriveKey({name:"PBKDF2",salt:(new TextEncoder).encode("PingOneImportSalt"),iterations:1e5,hash:"SHA-256"},s,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}static async encrypt(e,t){const s=(new TextEncoder).encode(e),i=window.crypto.getRandomValues(new Uint8Array(12)),n=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:i},t,s),a=new Uint8Array(i.length+n.byteLength);return a.set(i,0),a.set(new Uint8Array(n),i.length),btoa(String.fromCharCode(...a))}static async decrypt(e,t){try{const s=Uint8Array.from(atob(e),e=>e.charCodeAt(0)),i=s.slice(0,12),n=s.slice(12),a=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:i},t,n);return(new TextDecoder).decode(a)}catch(e){throw e}}}s.CryptoUtils=CryptoUtils;s.cryptoUtils=new CryptoUtils},{}],47:[function(e,t,s){"use strict";var i=e("@babel/runtime/helpers/defineProperty");class DisclaimerModal{constructor(){this.isActive=!1,this.focusableElements=[],this.firstFocusableElement=null,this.lastFocusableElement=null,this.previousActiveElement=null,this.init()}init(){this.createModal(),this.bindEvents(),this.showModal()}createModal(){const e=document.createElement("div");e.className="disclaimer-modal-overlay",e.setAttribute("role","dialog"),e.setAttribute("aria-modal","true"),e.setAttribute("aria-labelledby","disclaimer-title"),e.setAttribute("aria-describedby","disclaimer-content"),e.innerHTML='\n            <div class="disclaimer-modal" tabindex="-1">\n                <div class="disclaimer-modal-header">\n                    <h2 id="disclaimer-title">\n                        <span class="warning-icon" aria-hidden="true">⚠️</span>\n                        <span>Important Disclaimer</span>\n                    </h2>\n                </div>\n                \n                <div class="disclaimer-modal-body">\n                    <div id="disclaimer-content" class="disclaimer-content">\n                        <h3>🚨 UNSUPPORTED TOOL WARNING</h3>\n                        <p>\n                            <strong>This tool is NOT an official Ping Identity product</strong> and is provided \n                            <span class="highlight">without any warranty or support</span>. Use at your own risk.\n                        </p>\n                        \n                        <h3>⚠️ CRITICAL DISCLAIMERS:</h3>\n                        <ul>\n                            <li><strong>No technical support</strong> is available from Ping Identity</li>\n                            <li><strong>No updates or bug fixes</strong> are guaranteed</li>\n                            <li><strong>No compatibility</strong> with future PingOne versions is assured</li>\n                            <li><strong>No documentation or training</strong> is provided by Ping Identity</li>\n                            <li>This tool may <strong>stop working at any time</strong> without notice</li>\n                            <li>Use of this tool is <strong>not recommended for production environments</strong></li>\n                            <li>You are <strong>responsible for testing and validating</strong> all operations</li>\n                            <li><strong>Backup your PingOne account</strong> before using this tool</li>\n                            <li><strong>Test in non-production environments</strong> only</li>\n                        </ul>\n                        \n                        <p>\n                            <strong>By continuing, you acknowledge that:</strong>\n                        </p>\n                        <ul>\n                            <li>You understand this tool is unsupported and use it at your own risk</li>\n                            <li>You have backed up your PingOne account data</li>\n                            <li>You will test operations in non-production environments first</li>\n                            <li>You accept full responsibility for any data loss or issues</li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class="disclaimer-modal-footer">\n                    <div class="disclaimer-agreement">\n                        <div class="disclaimer-checkbox">\n                            <input type="checkbox" id="disclaimer-agreement-checkbox" required>\n                            <label for="disclaimer-agreement-checkbox">\n                                <span class="required-indicator">*</span>\n                                I acknowledge and accept the above disclaimer. I understand this tool is unsupported and I use it at my own risk.\n                            </label>\n                        </div>\n                    </div>\n                    \n                    <div class="disclaimer-actions">\n                        <button type="button" class="disclaimer-btn disclaimer-btn-secondary" id="disclaimer-cancel">\n                            Cancel\n                        </button>\n                        <button type="button" class="disclaimer-btn disclaimer-btn-primary" id="disclaimer-continue" disabled>\n                            Continue\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ',document.body.appendChild(e),this.overlay=e,this.modal=e.querySelector(".disclaimer-modal"),this.checkbox=e.querySelector("#disclaimer-agreement-checkbox"),this.continueBtn=e.querySelector("#disclaimer-continue"),this.cancelBtn=e.querySelector("#disclaimer-cancel")}bindEvents(){this.checkbox.addEventListener("change",e=>{this.continueBtn.disabled=!e.target.checked,this.logEvent("disclaimer_checkbox_changed",{checked:e.target.checked})}),this.continueBtn.addEventListener("click",()=>{this.acceptDisclaimer()}),this.cancelBtn.addEventListener("click",()=>{this.cancelDisclaimer()}),this.overlay.addEventListener("keydown",e=>{this.handleKeyboardNavigation(e)}),this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.logEvent("disclaimer_outside_click_prevented")}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isActive&&(e.preventDefault(),this.cancelDisclaimer())})}handleKeyboardNavigation(e){if(!this.isActive)return;const t=this.getFocusableElements(),s=t[0],i=t[t.length-1];"Tab"===e.key&&(e.shiftKey?document.activeElement===s&&(e.preventDefault(),i.focus()):document.activeElement===i&&(e.preventDefault(),s.focus()))}getFocusableElements(){return Array.from(this.modal.querySelectorAll(["button:not([disabled])","input:not([disabled])","select:not([disabled])","textarea:not([disabled])","a[href]",'[tabindex]:not([tabindex="-1"])'].join(", ")))}showModal(){this.isActive=!0,this.previousActiveElement=document.activeElement,document.body.classList.add("disclaimer-modal-open");const e=document.querySelector(".app-container");e&&e.classList.add("disclaimer-modal-active"),this.overlay.classList.add("active"),this.modal.focus(),this.setupFocusTrap(),this.logEvent("disclaimer_modal_shown"),this.announceToScreenReader("Disclaimer modal opened. You must read and accept the disclaimer to continue.")}setupFocusTrap(){this.focusableElements=this.getFocusableElements(),this.firstFocusableElement=this.focusableElements[0],this.lastFocusableElement=this.focusableElements[this.focusableElements.length-1]}acceptDisclaimer(){this.checkbox.checked?(this.logEvent("disclaimer_accepted"),this.hideModal(),this.enableApplication(),"function"==typeof window.enableToolAfterDisclaimer?(console.log("[STARTUP] [DEBUG] Disclaimer accepted, calling enableToolAfterDisclaimer"),window.enableToolAfterDisclaimer()):console.warn("[STARTUP] [DEBUG] enableToolAfterDisclaimer function not found"),document.dispatchEvent(new CustomEvent("disclaimerAccepted",{detail:{timestamp:(new Date).toISOString()}})),this.announceToScreenReader("Disclaimer accepted. Application is now enabled.")):this.logEvent("disclaimer_acceptance_attempted_without_checkbox")}cancelDisclaimer(){this.logEvent("disclaimer_cancelled"),this.hideModal(),this.showCancellationWarning()}hideModal(){this.isActive=!1,document.body.classList.remove("disclaimer-modal-open");const e=document.querySelector(".app-container");e&&e.classList.remove("disclaimer-modal-active"),this.overlay.classList.remove("active"),this.previousActiveElement&&this.previousActiveElement.focus(),this.announceToScreenReader("Disclaimer modal closed.")}enableApplication(){document.querySelectorAll("[disabled]").forEach(e=>{e.classList.contains("disclaimer-disabled")&&(e.disabled=!1,e.classList.remove("disclaimer-disabled"))});document.querySelectorAll(".nav-item").forEach(e=>{e.style.pointerEvents="auto",e.style.opacity="1"});document.querySelectorAll(".feature-card").forEach(e=>{e.style.pointerEvents="auto",e.style.opacity="1"}),DisclaimerModal.setDisclaimerAccepted(),this.logEvent("application_enabled_after_disclaimer")}showCancellationWarning(){const e=document.createElement("div");e.className="alert alert-warning alert-dismissible fade show",e.style.position="fixed",e.style.top="20px",e.style.left="50%",e.style.transform="translateX(-50%)",e.style.zIndex="10000",e.style.maxWidth="500px",e.innerHTML='\n            <strong>⚠️ Disclaimer Required</strong>\n            <br>You must accept the disclaimer to use this tool. The application will remain disabled until you acknowledge the terms.\n            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n        ',document.body.appendChild(e),setTimeout(()=>{e.parentNode&&e.remove()},1e4),this.logEvent("disclaimer_cancellation_warning_shown")}announceToScreenReader(e){const t=document.createElement("div");t.setAttribute("aria-live","polite"),t.setAttribute("aria-atomic","true"),t.className="sr-only",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.remove()},1e3)}logEvent(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};console.log(`[DisclaimerModal] ${e}:`,t);try{window.logManager&&"function"==typeof window.logManager.log?window.logManager.log("info",`Disclaimer modal: ${e}`,{source:"disclaimer-modal",type:"ui",...t}):window.logManager?"function"!=typeof window.logManager.log&&(window.logManager.log=function(e,t,s){const i=`[${(new Date).toISOString()}] [${e.toUpperCase()}] ${t}`;s?console.log(i,s):console.log(i)},window.logManager.log("info",`Disclaimer modal: ${e}`,{source:"disclaimer-modal",type:"ui",...t})):(window.logManager={log:function(e,t,s){const i=`[${(new Date).toISOString()}] [${e.toUpperCase()}] ${t}`;s?console.log(i,s):console.log(i)}},window.logManager.log("info",`Disclaimer modal: ${e}`,{source:"disclaimer-modal",type:"ui",...t}))}catch(e){console.warn("[DisclaimerModal] Logging failed:",e)}}static isDisclaimerAccepted(){return!0}static setDisclaimerAccepted(){DisclaimerModal.DISCLAIMER_SESSION_ONLY?sessionStorage.setItem("disclaimerAccepted","true"):(localStorage.setItem("disclaimerAccepted","true"),localStorage.setItem("disclaimerAcceptedAt",(new Date).toISOString()))}static resetDisclaimerAcceptance(){DisclaimerModal.DISCLAIMER_SESSION_ONLY?sessionStorage.removeItem("disclaimerAccepted"):(localStorage.removeItem("disclaimerAccepted"),localStorage.removeItem("disclaimerAcceptedAt"))}}i(DisclaimerModal,"DISCLAIMER_SESSION_ONLY",!1),function(){console.log("[DISCLAIMER DEBUG] Modal initialization starting immediately");let e=!1;const initializeDisclaimer=()=>{if(console.log("[DISCLAIMER DEBUG] initializeDisclaimer called, disclaimerInitialized:",e),e)return;window.logManager||(console.log("[DISCLAIMER DEBUG] Creating logManager"),window.logManager={log:function(e,t,s){const i=`[${(new Date).toISOString()}] [${e.toUpperCase()}] ${t}`;s?console.log(i,s):console.log(i)}});const t=DisclaimerModal.isDisclaimerAccepted();console.log("[DISCLAIMER DEBUG] isDisclaimerAccepted():",t),t?(console.log("[DISCLAIMER DEBUG] Disclaimer previously accepted, not showing modal"),"function"==typeof window.enableToolAfterDisclaimer?(console.log("[STARTUP] [DEBUG] Disclaimer previously accepted, calling enableToolAfterDisclaimer"),window.enableToolAfterDisclaimer()):console.warn("[STARTUP] [DEBUG] enableToolAfterDisclaimer function not found"),e=!0):(console.log("[DISCLAIMER DEBUG] Creating new DisclaimerModal"),new DisclaimerModal,e=!0)};initializeDisclaimer(),setTimeout(initializeDisclaimer,100),setTimeout(initializeDisclaimer,1e3),setTimeout(initializeDisclaimer,2e3)}(),window.DisclaimerModal=DisclaimerModal},{"@babel/runtime/helpers/defineProperty":1}],48:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ElementRegistry=void 0;const i={};function getElement(e,t){let s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e||"string"!=typeof e)return console.error(`[ElementRegistry] Invalid selector provided: ${e}`),null;if(e.includes("<")||e.includes(">")||e.includes('"')&&!e.includes("[")&&!e.includes("]")||e.includes("'")&&!e.includes("[")&&!e.includes("]"))return console.error(`[ElementRegistry] Potentially unsafe selector detected: ${e}`),null;if(i[e])return i[e];try{const n=document.querySelector(e);if(!n&&s)console.warn(`[ElementRegistry] Missing required element: ${t} (${e})`);else if(n){if(!document.contains(n))return console.warn(`[ElementRegistry] Element found but not in DOM: ${t} (${e})`),i[e]=null,null}else console.info(`[ElementRegistry] Optional element not found: ${t} (${e})`);return i[e]=n,n}catch(s){return console.error(`[ElementRegistry] Error finding element: ${t} (${e})`,s),i[e]=null,null}}const n=s.ElementRegistry={importButton:()=>getElement("#import-btn","Import Button"),fileInput:()=>getElement("#csv-file","File Input"),dashboardTab:()=>getElement("#dashboard-tab","Dashboard Tab"),dragDropArea:()=>getElement("#drag-drop-area","Drag-and-Drop Area",!1),notificationContainer:()=>getElement("#notification-area","Notification Container"),statusBar:()=>getElement("#global-status-bar","Global Status Bar"),progressContainer:()=>getElement("#import-progress-container","Import Progress Container",!1)||getElement("#delete-progress-container","Delete Progress Container",!1)||getElement("#modify-progress-container","Modify Progress Container",!1)||getElement("#export-progress-container","Export Progress Container",!1)||getElement("#progress-container","Progress Container",!1)||getElement(".progress-container","Progress Container (class)",!1),tokenStatus:()=>getElement("#token-status-indicator","Token Status"),connectionStatus:()=>getElement("#connection-status","Connection Status"),currentTokenStatus:()=>getElement("#current-token-status","Current Token Status"),homeTokenStatus:()=>getElement("#home-token-status","Home Token Status"),fileInfo:()=>getElement("#file-info","File Info"),previewContainer:()=>getElement("#dashboard-preview","Preview Container"),fileInputLabel:()=>getElement('label[for="csv-file"]',"File Input Label"),deleteFileInput:()=>getElement("#delete-csv-file","Delete File Input"),deleteFileInputLabel:()=>getElement('label[for="delete-csv-file"]',"Delete File Input Label"),modifyFileInput:()=>getElement("#modify-csv-file","Modify File Input"),modifyFileInputLabel:()=>getElement('label[for="modify-csv-file"]',"Modify File Input Label"),importPopulationSelect:()=>getElement("#import-population-select","Import Population Select"),deletePopulationSelect:()=>getElement("#delete-population-select","Delete Population Select"),modifyPopulationSelect:()=>getElement("#modify-population-select","Modify Population Select"),dashboardPopulationSelect:()=>getElement("#dashboard-population-select","Dashboard Population Select"),startImportBtn:()=>getElement("#start-import","Start Import Button"),startImportBtnBottom:()=>getElement("#bottom-start-import","Bottom Start Import Button"),settingsSaveStatus:()=>getElement("#settings-save-status","Settings Save Status"),importStatus:()=>getElement("#import-status","Import Status"),useDefaultPopulationCheckbox:()=>getElement("#use-default-population","Use Default Population Checkbox"),useCsvPopulationIdCheckbox:()=>getElement("#use-csv-population-id","Use CSV Population ID Checkbox"),getTokenBtn:()=>getElement("#get-token-quick","Get Token Button"),populationIdField:()=>getElement("#population-id","Population ID Field")};"undefined"!=typeof window&&(window.getElement=getElement,window.elementCache=i,window.ElementRegistry=n,console.log("✅ Element registry global exports initialized"))},{}],49:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ErrorTypes=s.ErrorSeverity=s.ErrorMetadata=s.ErrorMessages=s.ErrorCodes=void 0,s.createError=function createError(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=new Error(t||l[e]||"An unknown error occurred");i.type=e,i.code=s.code||a[e]||0,i.details=s,i.timestamp=(new Date).toISOString();const n=c[e];n&&(i.severity=n.severity,i.isRecoverable=n.isRecoverable,i.userMessage=n.userMessage);return i},s.getDefaultMessage=function getDefaultMessage(e){return l[e]||"An unknown error occurred"},s.getDefaultSeverity=function getDefaultSeverity(e){const t=c[e];return t?t.severity:n.ERROR},s.isErrorType=function isErrorType(e,t){return e&&e.type===t};const i=s.ErrorTypes=Object.freeze({VALIDATION:"VALIDATION",AUTHENTICATION:"AUTHENTICATION",AUTHORIZATION:"AUTHORIZATION",NETWORK:"NETWORK",TIMEOUT:"TIMEOUT",SERVER:"SERVER",SERVICE_UNAVAILABLE:"SERVICE_UNAVAILABLE",NOT_FOUND:"NOT_FOUND",CONFLICT:"CONFLICT",CONFIGURATION:"CONFIGURATION",INTEGRATION:"INTEGRATION",UNKNOWN:"UNKNOWN"}),n=s.ErrorSeverity=Object.freeze({FATAL:"FATAL",ERROR:"ERROR",WARNING:"WARNING",INFO:"INFO",DEBUG:"DEBUG"}),a=s.ErrorCodes=Object.freeze({INVALID_CREDENTIALS:1001,SESSION_EXPIRED:1002,INVALID_TOKEN:1003,INVALID_INPUT:2001,MISSING_REQUIRED_FIELD:2002,INVALID_FORMAT:2003,PERMISSION_DENIED:3001,INSUFFICIENT_PERMISSIONS:3002,NETWORK_ERROR:4001,REQUEST_TIMEOUT:4002,INTERNAL_SERVER_ERROR:5001,SERVICE_UNAVAILABLE:5002,DUPLICATE_ENTRY:6001,RESOURCE_NOT_FOUND:6002,EXTERNAL_SERVICE_ERROR:7001,API_RATE_LIMIT_EXCEEDED:7002}),l=s.ErrorMessages=Object.freeze({[i.VALIDATION]:"Validation failed",[i.AUTHENTICATION]:"Authentication required",[i.AUTHORIZATION]:"Permission denied",[i.NETWORK]:"Network error occurred",[i.TIMEOUT]:"Request timed out",[i.SERVER]:"Internal server error",[i.SERVICE_UNAVAILABLE]:"Service unavailable",[i.NOT_FOUND]:"Resource not found",[i.CONFLICT]:"Resource conflict",[i.CONFIGURATION]:"Configuration error",[i.INTEGRATION]:"Integration error",[i.UNKNOWN]:"An unexpected error occurred"}),c=s.ErrorMetadata=Object.freeze({[i.VALIDATION]:{severity:n.WARNING,isRecoverable:!0,userMessage:"Please check your input and try again."},[i.AUTHENTICATION]:{severity:n.ERROR,isRecoverable:!0,userMessage:"Your session has expired. Please log in again."},[i.AUTHORIZATION]:{severity:n.ERROR,isRecoverable:!1,userMessage:"You do not have permission to perform this action."},[i.NETWORK]:{severity:n.WARNING,isRecoverable:!0,userMessage:"Unable to connect to the server. Please check your internet connection."},[i.SERVER]:{severity:n.ERROR,isRecoverable:!1,userMessage:"An unexpected server error occurred. Please try again later."},[i.UNKNOWN]:{severity:n.ERROR,isRecoverable:!1,userMessage:"An unexpected error occurred. Please try again."}})},{}],50:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.eventBus=s.default=s.EventBus=void 0;class EventBus{constructor(){this.events={}}on(e,t){(this.events[e]=this.events[e]||[]).push(t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(e=>e!==t))}emit(e,t){(this.events[e]||[]).forEach(e=>e(t))}}s.EventBus=EventBus;const i=s.eventBus=new EventBus;s.default=i;"undefined"!=typeof window&&(window.EventBus=EventBus,window.eventBus=i)},{}],51:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.FileHandler=void 0;var i=e("./element-registry.js");s.FileHandler=class FileHandler{constructor(e,t){if(!e)throw new Error("Logger is required for FileHandler");this.logger=e,this.uiManager=t,this.requiredFields=["username"],this.validationResults={total:0,valid:0,errors:0,warnings:0},this.lastParsedUsers=[],this.currentFile=null,this.fileInput=i.ElementRegistry.fileInput?i.ElementRegistry.fileInput():null,this.fileInfo=i.ElementRegistry.fileInfo?i.ElementRegistry.fileInfo():null,this.previewContainer=i.ElementRegistry.previewContainer?i.ElementRegistry.previewContainer():null,this.lastFileInfo=this.loadLastFileInfo(),this.initializeFileInput()}loadLastFileInfo(){try{const e=localStorage.getItem("lastSelectedFile");return e?JSON.parse(e):null}catch(e){return this.logger.error("Error loading last file info:",e),null}}getCurrentFile(){return this.currentFile}async setFile(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"import";if(!e)throw new Error("File is required for setFile operation");try{return this.logger.info("Setting file",{fileName:e.name,fileSize:e.size,operationType:t}),this.currentFile=e,await this._handleFileInternal(e,null,t),{success:!0,file:e}}catch(s){throw this.logger.error("Failed to set file",{error:s.message,fileName:e.name,operationType:t}),s}}getUsers(){return this.lastParsedUsers||[]}getTotalUsers(){const e=this.validationResults.total||0;return console.log("[CSV] getTotalUsers() called, returning:",e,"validationResults:",this.validationResults),e}readFileAsText(e){if(!e)throw new Error("File is required for reading");return new Promise((t,s)=>{const i=new FileReader;i.onload=e=>t(e.target.result),i.onerror=()=>s(new Error("Failed to read file")),i.readAsText(e)})}saveLastFolderPath(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"import";if(e)try{let s=null;if(e.webkitRelativePath){const t=e.webkitRelativePath.split("/");t.length>1&&(s=t.slice(0,-1).join("/"))}else if(e.name){const t=e.name,i=t.lastIndexOf("/");-1!==i&&(s=t.substring(0,i))}if(s){const e=`lastFolderPath_${t}`;localStorage.setItem(e,s),this.logger.info(`Saved last folder path for ${t}:`,s)}s&&localStorage.setItem("lastFolderPath",s)}catch(e){this.logger.warn("Could not save folder path:",e.message)}}getLastFolderPath(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"import";try{const t=`lastFolderPath_${e}`;let s=localStorage.getItem(t);return s||(s=localStorage.getItem("lastFolderPath")),s}catch(e){return this.logger.warn("Could not get last folder path:",e.message),null}}updateFileLabel(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"import";try{let t=null,s=null;switch(e){case"import":t=i.ElementRegistry.fileInputLabel?i.ElementRegistry.fileInputLabel():null,s=i.ElementRegistry.fileInput?i.ElementRegistry.fileInput():null;break;case"delete":t=i.ElementRegistry.deleteFileInputLabel?i.ElementRegistry.deleteFileInputLabel():null,s=i.ElementRegistry.deleteFileInput?i.ElementRegistry.deleteFileInput():null;break;case"modify":t=i.ElementRegistry.modifyFileInputLabel?i.ElementRegistry.modifyFileInputLabel():null,s=i.ElementRegistry.modifyFileInput?i.ElementRegistry.modifyFileInput():null;break;default:t=i.ElementRegistry.fileInputLabel?i.ElementRegistry.fileInputLabel():null}if(t){const s=this.getLastFolderPath(e);if(s){const e=this.shortenPath(s);t.textContent=`Choose CSV File (Last: ${e})`,t.title=`Last used folder: ${s}`}else t.textContent="Choose CSV File",t.title="Select a CSV file to process"}}catch(e){this.logger.warn("Could not update file label:",e.message)}}shortenPath(e){if(!e)return"";if(e.length<=30)return e;const t=e.split("/");if(t.length<=2)return e.length>30?"..."+e.slice(-27):e;const s=t[0],i=t[t.length-1];let n=s;return t.slice(1,-1).length>0?n+="/.../"+i:n+="/"+i,n.length>30?"..."+n.slice(-27):n}saveFileInfo(e){if(e)try{const t={name:e.name,size:e.size,lastModified:e.lastModified,type:e.type};localStorage.setItem("lastSelectedFile",JSON.stringify(t)),this.lastFileInfo=t}catch(e){this.logger.error("Error saving file info:",e)}}clearFileInfo(){try{localStorage.removeItem("lastSelectedFile"),this.lastFileInfo=null,this.fileInfo&&(this.fileInfo.innerHTML="No file selected")}catch(e){this.logger.error("Error clearing file info:",e)}}clearLastFolderPath(){try{localStorage.removeItem("lastFolderPath"),this.updateFileLabel(),this.logger.info("Cleared last folder path")}catch(e){this.logger.warn("Could not clear last folder path:",e.message)}}initializeFileInput(){if(!this.fileInput)return;const e=this.fileInput.cloneNode(!0);this.fileInput.parentNode.replaceChild(e,this.fileInput),this.fileInput=e,this.fileInput.addEventListener("change",e=>this.handleFileSelect(e)),this.updateFileLabel()}async handleFileObject(e){if(!e)throw new Error("File is required for handleFileObject");await this._handleFileInternal(e)}async handleFileSelect(e){if(!e||!e.target)return void this.logger.warn("Invalid file selection event");const t=e.target.files[0];t?(this.saveLastFolderPath(t,"import"),await this._handleFileInternal(t,e)):this.logger.warn("No file selected")}async _handleFileInternal(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"import";if(!e)throw new Error("File is required for internal file handling");console.log("[CSV] _handleFileInternal called with file:",e.name,"size:",e.size,"operationType:",s);try{this.logger.info("Processing file",{fileName:e.name,fileSize:e.size,operationType:s});const t=e.name||"",i=this.getFileExtension(t).toLowerCase();if(i&&["exe","js","png","jpg","jpeg","gif","pdf","zip","tar","gz"].includes(i)){const e=`Unsupported file type: ${i}. Please upload a CSV or text file.`;throw this.logger.error(e,{fileName:t,fileExt:i}),new Error(e)}const n=10485760;if(e.size>n)throw new Error("File too large. Please select a file smaller than 10MB.");const a=await this.readFileAsText(e);console.log("[CSV] _handleFileInternal: About to parse CSV content, length:",a.length);const l=this.parseCSV(a);console.log("[CSV] _handleFileInternal: parseCSV completed, parseResults:",l),this.parsedUsers=l.users,this.lastParsedUsers=[...l.users],this.validationResults={total:l.users.length,valid:l.validUsers||l.users.length,errors:l.errors.length,warnings:l.warnings.length},console.log("[CSV] File parsed successfully:",{totalUsers:this.validationResults.total,validUsers:this.validationResults.valid,errors:this.validationResults.errors,warnings:this.validationResults.warnings});const c=`File processed: ${l.validUsers} valid users, ${l.invalidRows} invalid rows`;this.uiManager.showNotification(c,l.invalidRows>0?"warning":"success");const d="modify"===s?"modify-file-info":"file-info";this.updateFileInfoForElement(e,d,l.validUsers),this.updateFileLabel(s),l.errors.length>0&&this.logger.warn("CSV parsing errors",{errorCount:l.errors.length,errors:l.errors.slice(0,10)}),window.app&&("modify"===s&&window.app.updateModifyButtonState?window.app.updateModifyButtonState():"import"===s&&window.app.updateImportButtonState&&window.app.updateImportButtonState())}catch(i){this.logger.error("Failed to process CSV file",{error:i.message,fileName:e.name,operationType:s}),console.error("Error in _handleFileInternal:",i);let n="Failed to process CSV file. ";i.message.includes("Missing required headers")?n=`CSV file is missing required columns. ${i.message} Please ensure your CSV file has a 'username' column.`:i.message.includes("Invalid file type")?n+="Please select a valid CSV file.":i.message.includes("File too large")?n+="Please select a smaller file (max 10MB).":n+=i.message,this.uiManager.showNotification(n,"error"),t&&t.target&&t.target.value&&(t.target.value="")}}async processCSV(e){if(this.logger.log("Processing file object:","debug",e),!e)throw this.logger.error("No file provided to processCSV"),new Error("No file selected");if(0===e.size)throw this.logger.error("Empty file provided",{fileName:e.name,size:e.size}),new Error("File is empty");const t=e.name||"",s=this.getFileExtension(t).toLowerCase();if(s&&["exe","js","png","jpg","jpeg","gif","pdf","zip","tar","gz"].includes(s)){const e=`Unsupported file type: ${s}. Please upload a CSV or text file.`;throw this.logger.error(e,{fileName:t,fileExt:s}),new Error(e)}const i=10485760;if(e.size>i)throw new Error(`File is too large. Maximum size is ${this.formatFileSize(i)}`);return this.saveFileInfo(e),this.updateFileInfo(e),this.currentFile=e,new Promise((t,s)=>{const i=new FileReader;i.onload=e=>{try{const s=e.target.result;if(!s||""===s.trim())throw new Error("File is empty or contains no text");console.log("[CSV] About to parse CSV text, length:",s.length);const{headers:i,rows:n}=this.parseCSV(s);console.log("[CSV] parseCSV completed, headers:",i,"rows count:",n.length);const a=this.requiredFields.filter(e=>!i.includes(e));if(a.length>0)throw new Error(`Missing required columns: ${a.join(", ")}`);this.lastParsedUsers=n.map(e=>{const t={};return i.forEach((s,i)=>{t[s]=e[s]||""}),t}),this.parsedUsers=this.lastParsedUsers,this.validationResults={total:this.lastParsedUsers.length,valid:this.lastParsedUsers.length,errors:0,warnings:0},console.log("[CSV] File parsed successfully (processCSV):",{totalUsers:this.validationResults.total,validUsers:this.validationResults.valid,errors:this.validationResults.errors,warnings:this.validationResults.warnings}),t({success:!0,headers:i,rows:this.lastParsedUsers,userCount:this.lastParsedUsers.length})}catch(e){s(e)}},i.onerror=()=>{s(new Error("Error reading file"))},i.readAsText(e)})}parseCSV(e){const t=e.split("\n").filter(e=>e.trim());if(t.length<2)throw new Error("CSV file must have at least a header row and one data row");const s=this.parseCSVLine(t[0]),i=["username"],n=["firstName","lastName","email"];console.log("[CSV] All headers:",s),console.log("[CSV] Required headers:",i),console.log("[CSV] Recommended headers:",n);const a=i.filter(e=>{const t=s.some(t=>{const s=t.toLowerCase(),i=this.getHeaderMapping(s),n=s===e.toLowerCase()||i===e;return console.log(`[CSV] Checking header "${t}" (${s}) -> "${i}" for required "${e}": ${n}`),n});return console.log(`[CSV] Required header "${e}" found: ${t}`),!t}),l=n.filter(e=>{const t=s.some(t=>{const s=t.toLowerCase(),i=this.getHeaderMapping(s),n=s===e.toLowerCase()||i===e;return console.log(`[CSV] Checking header "${t}" (${s}) -> "${i}" for recommended "${e}": ${n}`),n});return console.log(`[CSV] Recommended header "${e}" found: ${t}`),!t});if(a.length>0){const e=`Missing required headers: ${a.join(", ")}. At minimum, you need a 'username' column.`;throw this.logger.error("CSV validation failed - missing required headers",{missingRequired:a,availableHeaders:s,errorMsg:e}),new Error(e)}if(l.length>0){const e=`Missing recommended headers: ${l.join(", ")}. These are not required but recommended for better user data.`;this.logger.warn("CSV validation warning - missing recommended headers",{missingRecommended:l,availableHeaders:s,warningMsg:e}),window.app&&window.app.uiManager&&window.app.uiManager.showNotification(e,"warning")}const c=[],d=[],g=[];let u=1;for(let e=1;e<t.length;e++){u=e+1;const i=t[e].trim();if(i)try{const e=this.parseUserRow(i,s,u),t=this.validateUserData(e,u);t.isValid?c.push(e):(d.push({row:u,user:e,errors:t.errors,warnings:t.warnings}),g.push(...t.warnings.map(e=>({row:u,...e}))))}catch(e){d.push({row:u,error:e.message,line:i})}}const h={totalRows:t.length-1,validUsers:c.length,invalidRows:d.length,warnings:g.length,missingRequiredHeaders:a,missingRecommendedHeaders:l,availableHeaders:s};if(this.logger.info("CSV parsing completed",h),d.length>0){const e=d.map(e=>({row:e.row,errors:e.errors||[e.error],warnings:e.warnings||[]}));this.logger.warn("CSV validation issues found",{totalErrors:d.length,errorDetails:e.slice(0,10)})}return this.showValidationSummary(h,d,g),{users:c,errors:d,warnings:g,totalRows:t.length-1,validUsers:c.length,invalidRows:d.length,headerCount:s.length,availableHeaders:s}}parseCSVLine(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";const s=[];let i="",n=!1;for(let a=0;a<e.length;a++){const l=e[a],c=e[a+1];'"'===l?'"'===c?(i+='"',a++):n=!n:l!==t||n?i+=l:(s.push(i),i="")}return s.push(i),s.map(e=>e.trim())}parseUserRow(e,t,s){const i=this.parseCSVLine(e);if(i.length!==t.length)throw new Error(`Row ${s}: Number of columns (${i.length}) doesn't match headers (${t.length})`);const n={};for(let e=0;e<t.length;e++){const a=t[e].toLowerCase().trim();let l=i[e].trim();if("enabled"===a){const e=l.toLowerCase();if("true"===e||"1"===l)l=!0;else if("false"===e||"0"===l)l=!1;else{if(""!==l)throw new Error(`Row ${s}: Invalid enabled value '${l}'. Must be true/false or 1/0`);l=!0}}const c=this.getHeaderMapping(a);console.log(`[CSV] Mapping header: "${a}" -> "${c}"`),n[c]=l}return!n.username&&n.email&&(n.username=n.email),n}validateUserData(e,t){const s=[],i=[];return e.username&&""!==e.username.trim()||s.push("Username is required and cannot be empty"),e.firstName&&""!==e.firstName.trim()||i.push("firstName is recommended for better user data"),e.lastName&&""!==e.lastName.trim()||i.push("lastName is recommended for better user data"),e.email&&""!==e.email.trim()||i.push("email is recommended for better user data"),e.email&&""!==e.email.trim()&&!this.isValidEmail(e.email)&&s.push("Invalid email format"),e.username&&!this.isValidUsername(e.username)&&s.push("Username contains invalid characters (no spaces or special characters allowed)"),{isValid:0===s.length,errors:s,warnings:i}}showValidationSummary(e,t,s){let i="",n="success";if(e.invalidRows>0){if(n="error",i="File validation failed!\n\n",i+=`• Total rows: ${e.totalRows}\n`,i+=`• Valid users: ${e.validUsers}\n`,i+=`• Invalid rows: ${e.invalidRows}\n`,i+=`• Warnings: ${s.length}\n\n`,e.missingRequiredHeaders.length>0&&(i+=`❌ Missing required headers: ${e.missingRequiredHeaders.join(", ")}\n`),t.length>0){i+=`❌ Data errors found in ${t.length} row(s)\n`;t.slice(0,3).forEach(e=>{e.errors?i+=`  Row ${e.row}: ${e.errors.join(", ")}\n`:e.error&&(i+=`  Row ${e.row}: ${e.error}\n`)}),t.length>3&&(i+=`  ... and ${t.length-3} more errors\n`)}}else if(s.length>0){n="warning",i="File loaded with warnings:\n\n",i+=`• Total rows: ${e.totalRows}\n`,i+=`• Valid users: ${e.validUsers}\n`,i+=`• Warnings: ${s.length}\n\n`,e.missingRecommendedHeaders.length>0&&(i+=`⚠️ Missing recommended headers: ${e.missingRecommendedHeaders.join(", ")}\n`);s.slice(0,3).forEach(e=>{i+=`  Row ${e.row}: ${e.message||e}\n`}),s.length>3&&(i+=`  ... and ${s.length-3} more warnings\n`)}else i="File loaded successfully!\n\n",i+=`• Total rows: ${e.totalRows}\n`,i+=`• Valid users: ${e.validUsers}\n`,i+=`• Headers found: ${e.availableHeaders.join(", ")}`;window.app&&window.app.uiManager&&window.app.uiManager.showNotification(i,n),this.logger.info("CSV validation summary shown to user",{summary:e,message:i,type:n})}getHeaderMapping(e){return{firstname:"firstName",first_name:"firstName",givenname:"firstName",given_name:"firstName",lastname:"lastName",last_name:"lastName",familyname:"lastName",family_name:"lastName",surname:"lastName",emailaddress:"email",email_address:"email",userid:"username",user_id:"username",login:"username",user:"username",populationid:"populationId",population_id:"populationId",popid:"populationId",pop_id:"populationId"}[e]||e}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}isValidUsername(e){return/^[a-zA-Z0-9._-]+$/.test(e)}updateFileInfoForElement(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const i=document.getElementById(t);if(console.log("updateFileInfoForElement called:",{containerId:t,container:!!i,file:!!e,recordCount:s}),!i||!e)return void console.warn("updateFileInfoForElement: container or file is null",{containerId:t,hasContainer:!!i,hasFile:!!e});const n=this.formatFileSize(e.size),a=new Date(e.lastModified).toLocaleString(),l=e.type||this.getFileExtension(e.name),c=this.getFileExtension(e.name);let d="Unknown";if(e.webkitRelativePath)d=e.webkitRelativePath;else if(e.name){const t=e.name.split(/[\/\\]/);d=t.length>1?t.slice(0,-1).join("/"):"Current Directory"}const g="csv"===c||"txt"===c||"text/csv"===l||"text/plain"===l,u=Math.round(e.size/1024),h=Math.round(e.size/1024/1024*100)/100;let p="";g&&null!==s&&"number"==typeof s&&(p=s>0?`<div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;"><strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong><span style="color: #0073C8; font-size: 0.8rem; font-weight: bold;">${s}</span></div>`:'<div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;"><strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong><span style="color: #dc3545; font-size: 0.8rem; font-weight: bold;">No user records found</span></div>');const m=`\n            <div class="file-info-details" style="background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 6px; padding: 12px; margin: 8px 0; box-shadow: 0 1px 4px rgba(0,0,0,0.08);">\n                \n                \x3c!-- Compact File Name Section --\x3e\n                <div class="file-name-section" style="text-align: center; margin-bottom: 12px; padding: 8px; background: #e6f4ff; border-radius: 4px; color: #1a237e; font-weight: bold; font-size: 1.1rem;">\n                    <div style="font-size: 1.3rem; font-weight: 600; margin-bottom: 3px; color: #1a237e; text-shadow: none; word-break: break-word; overflow-wrap: break-word;">\n                        <i class="fas fa-file-csv" style="margin-right: 6px; font-size: 1.2rem; color: #1976d2;"></i>\n                        ${e.name}\n                    </div>\n                    <div style="font-size: 0.85rem; opacity: 0.9; font-weight: 500; color: #1976d2;">\n                        File Selected Successfully\n                    </div>\n                </div>\n                \n                \x3c!-- Compact File Information Grid --\x3e\n                <div class="file-info-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 8px; font-size: 0.8em; margin-bottom: 10px;">\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📊 File Size</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${n} (${u} KB, ${h} MB)</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📂 Directory</strong>\n                        <span style="color: #6c757d; word-break: break-all; font-size: 0.8rem;">${d}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📅 Last Modified</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${a}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🔤 File Type</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${l||"Unknown"}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📄 Extension</strong>\n                        <span style="color: ${g?"#28a745":"#dc3545"}; font-weight: bold; font-size: 0.8rem;">\n                            ${c?"."+c:"None"}\n                        </span>\n                    </div>\n                    ${p}\n                </div>\n                \n                \x3c!-- Compact File Status Section --\x3e\n                <div class="file-info-status" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: ${g?"#d4edda":"#f8d7da"}; border: 1px solid ${g?"#c3e6cb":"#f5c6cb"}; display: flex; align-items: center; gap: 6px;">\n                    <i class="fas ${g?"fa-check-circle":"fa-exclamation-triangle"}" style="color: ${g?"#155724":"#721c24"}; font-size: 1rem;"></i>\n                    <span style="color: ${g?"#155724":"#721c24"}; font-weight: bold; font-size: 0.85rem;">\n                        ${g?"✅ File type is supported and ready for processing":"⚠️ Warning: File type may not be optimal for import"}\n                    </span>\n                </div>\n                \n                ${e.size>5242880?'\n                <div class="file-info-warning" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: #fff3cd; border: 1px solid #ffeaa7; display: flex; align-items: center; gap: 6px;">\n                    <i class="fas fa-exclamation-triangle" style="color: #856404; font-size: 1rem;"></i>\n                    <span style="color: #856404; font-weight: bold; font-size: 0.85rem;">Large file detected - processing may take longer than usual</span>\n                </div>\n                ':""}\n                \n                \x3c!-- Responsive Design --\x3e\n                <style>\n                    @media (max-width: 768px) {\n                        .file-info-details .file-name-section div:first-child {\n                            font-size: 1.1rem !important;\n                        }\n                        .file-info-grid {\n                            grid-template-columns: 1fr !important;\n                            gap: 6px !important;\n                        }\n                        .file-info-item {\n                            padding: 6px !important;\n                        }\n                    }\n                    @media (max-width: 480px) {\n                        .file-info-details .file-name-section div:first-child {\n                            font-size: 0.95rem !important;\n                        }\n                        .file-info-details {\n                            padding: 8px !important;\n                        }\n                    }\n                </style>\n            </div>\n        `;i.innerHTML=m}updateFileInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.updateFileInfoForElement(e,"file-info",t)}showPreview(e){if(!this.previewContainer)return;if(!e||0===e.length){this.previewContainer.innerHTML='<div class="alert alert-info">No data to display</div>';const e=i.ElementRegistry.startImportBtnBottom?i.ElementRegistry.startImportBtnBottom():null;return void(e&&(e.disabled=!0))}const t=Object.keys(e[0]),s=e.slice(0,5);let n=`\n            <div class="table-responsive">\n                <table class="table table-sm table-striped">\n                    <thead>\n                        <tr>\n                            ${t.map(e=>`<th>${e}</th>`).join("")}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${s.map(e=>`\n                            <tr>\n                                ${t.map(t=>`<td>${e[t]||""}</td>`).join("")}\n                            </tr>\n                        `).join("")}\n                    </tbody>\n                </table>\n                ${e.length>5?`<small class="text-muted">Showing 5 of ${e.length} rows</small>`:""}\n            </div>\n        `;this.previewContainer.innerHTML=n;const a=this.checkPopulationChoice(),l=i.ElementRegistry.startImportBtnBottom?i.ElementRegistry.startImportBtnBottom():null;l?(l.disabled=!a,this.logger.log("Import button "+(a?"enabled":"disabled"),"debug")):this.logger.warn("Could not find import button to enable","warn")}checkPopulationChoice(){const e=i.ElementRegistry.importPopulationSelect&&i.ElementRegistry.importPopulationSelect().value||"",t=i.ElementRegistry.useDefaultPopulationCheckbox&&i.ElementRegistry.useDefaultPopulationCheckbox().checked||!1,s=i.ElementRegistry.useCsvPopulationIdCheckbox&&i.ElementRegistry.useCsvPopulationIdCheckbox().checked||!1;return e&&""!==e.trim()||t||s}getFileExtension(e){if(!e||"string"!=typeof e)return"";const t=e.lastIndexOf("."),s=Math.max(e.lastIndexOf("/"),e.lastIndexOf("\\"));return-1===t||s>t?"":e.slice(t+1).toLowerCase().trim()}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}generateTemporaryPassword(){const e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]\\:;?><,./-";let t="";t+="ABCDEFGHIJKLMNOPQRSTUVWXYZ"[Math.floor(26*Math.random())],t+="abcdefghijklmnopqrstuvwxyz"[Math.floor(26*Math.random())],t+="0123456789"[Math.floor(10*Math.random())],t+="!@#$%^&*"[Math.floor(8*Math.random())];for(let s=t.length;s<16;s++)t+=e[Math.floor(91*Math.random())];return t.split("").sort(()=>Math.random()-.5).join("")}getParsedUsers(){return this.logger.info("getParsedUsers called",{hasParsedUsers:!!this.parsedUsers,parsedUsersType:typeof this.parsedUsers,parsedUsersLength:this.parsedUsers?this.parsedUsers.length:0,hasLastParsedUsers:!!this.lastParsedUsers,lastParsedUsersType:typeof this.lastParsedUsers,lastParsedUsersLength:this.lastParsedUsers?this.lastParsedUsers.length:0}),this.parsedUsers&&Array.isArray(this.parsedUsers)?(this.logger.info("Retrieving parsed users for import",{userCount:this.parsedUsers.length,hasUsers:this.parsedUsers.length>0}),this.parsedUsers):(this.logger.warn("No parsed users available"),this.uiManager&&this.uiManager.showNotification&&this.uiManager.showNotification("No CSV file has been uploaded yet. Please upload a CSV file first.","info"),[])}getParseResults(){return this.parseResults||null}initializeDropZone(e){e&&(e.removeEventListener("dragenter",this._onDragEnter),e.removeEventListener("dragover",this._onDragOver),e.removeEventListener("dragleave",this._onDragLeave),e.removeEventListener("drop",this._onDrop),this._onDragEnter=t=>{t.preventDefault(),t.stopPropagation(),e.classList.add("drag-over")},this._onDragOver=t=>{t.preventDefault(),t.stopPropagation(),e.classList.add("drag-over")},this._onDragLeave=t=>{t.preventDefault(),t.stopPropagation(),e.classList.remove("drag-over")},this._onDrop=async t=>{t.preventDefault(),t.stopPropagation(),e.classList.remove("drag-over");const s=t.dataTransfer.files;if(s&&s.length>0)try{await this.setFile(s[0])}catch(e){this.logger.error("Drag-and-drop file error",{error:e.message}),this.uiManager.showNotification("Failed to process dropped file: "+e.message,"error")}},e.addEventListener("dragenter",this._onDragEnter),e.addEventListener("dragover",this._onDragOver),e.addEventListener("dragleave",this._onDragLeave),e.addEventListener("drop",this._onDrop))}initializeGlobalDragAndDrop(){const preventDefaultDragEvents=e=>{e.preventDefault(),e.stopPropagation()},handleGlobalDrop=async e=>{e.preventDefault(),e.stopPropagation(),document.body.classList.remove("drag-over");const t=e.dataTransfer.files;if(t&&t.length>0){const e=t[0],s=e.name||"",i=this.getFileExtension(s).toLowerCase();if(i&&["exe","js","png","jpg","jpeg","gif","pdf","zip","tar","gz"].includes(i))return void this.uiManager.showNotification(`Unsupported file type: ${i}. Please upload a CSV or text file.`,"error");const n=this.getCurrentView();let a=null;switch(n){case"import":default:a=document.getElementById("import-drop-zone");break;case"modify":a=document.getElementById("modify-drop-zone");break;case"import-dashboard":a=document.getElementById("upload-zone")}a&&(a.classList.add("drag-over"),setTimeout(()=>{a.classList.remove("drag-over")},2e3));try{await this.setFile(e),this.uiManager.showNotification(`File "${e.name}" processed successfully`,"success")}catch(e){this.logger.error("Global drag-and-drop file error",{error:e.message}),this.uiManager.showNotification("Failed to process dropped file: "+e.message,"error")}}},handleGlobalDragEnter=e=>{e.preventDefault(),e.stopPropagation(),e.dataTransfer.types.includes("Files")&&document.body.classList.add("drag-over")},handleGlobalDragLeave=e=>{e.preventDefault(),e.stopPropagation(),e.target!==document&&e.target!==document.body||document.body.classList.remove("drag-over")};document.addEventListener("dragover",preventDefaultDragEvents),document.addEventListener("dragenter",handleGlobalDragEnter),document.addEventListener("dragleave",handleGlobalDragLeave),document.addEventListener("drop",handleGlobalDrop),this._globalDragHandlers={preventDefaultDragEvents:preventDefaultDragEvents,handleGlobalDragEnter:handleGlobalDragEnter,handleGlobalDragLeave:handleGlobalDragLeave,handleGlobalDrop:handleGlobalDrop},this.logger.info("Global drag-and-drop prevention initialized")}cleanupGlobalDragAndDrop(){this._globalDragHandlers&&(document.removeEventListener("dragover",this._globalDragHandlers.preventDefaultDragEvents),document.removeEventListener("dragenter",this._globalDragHandlers.handleGlobalDragEnter),document.removeEventListener("dragleave",this._globalDragHandlers.handleGlobalDragLeave),document.removeEventListener("drop",this._globalDragHandlers.handleGlobalDrop),this._globalDragHandlers=null),document.body.classList.remove("drag-over")}getCurrentView(){const e=document.querySelector('.view[style*="block"]')||document.querySelector('.view:not([style*="none"])');if(!e)return"import";const t=e.id;return"import-dashboard-view"===t?"import-dashboard":"modify-csv-view"===t?"modify":"delete-csv-view"===t?"delete":"export-view"===t?"export":"settings-view"===t?"settings":"logs-view"===t?"logs":"import"}}},{"./element-registry.js":48}],52:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.FileLogger=void 0;s.FileLogger=class FileLogger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"client.log";this.filename=e,this.fileHandle=null,this.writableStream=null,this.initialized=!1,this.logQueue=[],this.initializationPromise=null}async _initialize(){return!!this.initialized||(this.initializationPromise||(this.initializationPromise=(async()=>{try{if(!window.isSecureContext||!window.showSaveFilePicker)throw new Error("File System Access API not available in this context");if(!window.__fileLoggerUserGesture){window.addEventListener("online",()=>this.handleOnline()),window.addEventListener("offline",()=>this.handleOffline());const handleUserGesture=()=>{window.__fileLoggerUserGesture=!0,window.removeEventListener("click",handleUserGesture),window.removeEventListener("keydown",handleUserGesture),this.fileLogger&&!this.fileLogger._initialized&&null===this.fileLogger._logger&&this.fileLogger._ensureInitialized().catch(console.warn)};throw window.addEventListener("click",handleUserGesture,{once:!0,passive:!0}),window.addEventListener("keydown",handleUserGesture,{once:!0,passive:!0}),new Error("Waiting for user gesture to initialize file logger")}try{return this.fileHandle=await window.showSaveFilePicker({suggestedName:this.filename,types:[{description:"Log File",accept:{"text/plain":[".log"]}}],excludeAcceptAllOption:!0}),this.writableStream=await this.fileHandle.createWritable({keepExistingData:!0}),this.initialized=!0,await this._processQueue(),!0}catch(e){return console.warn("File System Access API not available:",e),this.initialized=!1,!1}}catch(e){return console.warn("File logger initialization deferred:",e.message),this.initialized=!1,!1}})()),this.initializationPromise)}async _processQueue(){if(0===this.logQueue.length)return;const e=[...this.logQueue];this.logQueue=[];for(const{level:t,message:s,timestamp:i}of e)await this._writeLog(t,s,i)}async _writeLog(e,t,s){this.initialized||await this._initialize();const i=`[${s}] [${e.toUpperCase()}] ${t}\n`;if(this.writableStream)try{await this.writableStream.write(i)}catch(e){console.error("Error writing to log file:",e),this.initialized=!1,await this._initialize(),await this.writableStream.write(i)}else console[e](`[FileLogger] ${i}`)}async log(e,t){const s=(new Date).toISOString();this.initialized?await this._writeLog(e,t,s):(this.logQueue.push({level:e,message:t,timestamp:s}),await this._initialize())}info(e){return this.log("info",e)}warn(e){return this.log("warn",e)}error(e){return this.log("error",e)}debug(e){return this.log("debug",e)}async close(){if(this.writableStream)try{await this.writableStream.close()}catch(e){console.error("Error closing log file:",e)}finally{this.initialized=!1,this.writableStream=null,this.fileHandle=null}}}},{}],53:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.HistorySubsystem=void 0;class HistorySubsystem{constructor(e,t,s){this.eventBus=e,this.settingsSubsystem=t,this.loggingSubsystem=s,this.history=[],this.maxHistorySize=500,this.categories={IMPORT:"import",EXPORT:"export",DELETE:"delete",MODIFY:"modify",SETTINGS:"settings",AUTH:"auth",SYSTEM:"system"},this.statusTypes={STARTED:"started",IN_PROGRESS:"in_progress",COMPLETED:"completed",FAILED:"failed",CANCELLED:"cancelled",PARTIAL:"partial"},this.currentFilter={category:null,status:null,dateRange:null,search:null},this.init(),this.loggingSubsystem&&this.loggingSubsystem.info("HistorySubsystem initialized successfully",{},"system")}async init(){try{await this.loadSettings(),this.setupEventListeners(),await this.loadHistoryFromStorage(),this.loggingSubsystem&&this.loggingSubsystem.info("HistorySubsystem initialization complete",{historyCount:this.history.length},"system")}catch(e){throw this.loggingSubsystem&&this.loggingSubsystem.error("Failed to initialize HistorySubsystem",e,"system"),e}}async loadSettings(){try{if(this.settingsSubsystem){const e=this.settingsSubsystem.currentSettings;e&&e.maxHistorySize&&(this.maxHistorySize=e.maxHistorySize)}}catch(e){this.loggingSubsystem&&this.loggingSubsystem.warn("Could not load history settings, using defaults",e,"system")}}setupEventListeners(){this.eventBus&&(this.eventBus.on("importStarted",e=>{this.addHistoryEntry("import","Import operation started","started",e)}),this.eventBus.on("importCompleted",e=>{this.updateHistoryEntry(e.sessionId,"completed","Import operation completed",e)}),this.eventBus.on("importFailed",e=>{this.updateHistoryEntry(e.sessionId,"failed","Import operation failed",e)}),this.eventBus.on("exportStarted",e=>{this.addHistoryEntry("export","Export operation started","started",e)}),this.eventBus.on("exportCompleted",e=>{this.updateHistoryEntry(e.sessionId,"completed","Export operation completed",e)}),this.eventBus.on("exportFailed",e=>{this.updateHistoryEntry(e.sessionId,"failed","Export operation failed",e)}),this.eventBus.on("deleteOperationStarted",e=>{this.addHistoryEntry("delete","Delete operation started","started",e)}),this.eventBus.on("deleteOperationCompleted",e=>{this.updateHistoryEntry(e.sessionId,"completed","Delete operation completed",e)}),this.eventBus.on("deleteOperationFailed",e=>{this.updateHistoryEntry(e.sessionId,"failed","Delete operation failed",e)}),this.eventBus.on("modifyOperationStarted",e=>{this.addHistoryEntry("modify","Modify operation started","started",e)}),this.eventBus.on("modifyOperationCompleted",e=>{this.updateHistoryEntry(e.sessionId,"completed","Modify operation completed",e)}),this.eventBus.on("modifyOperationFailed",e=>{this.updateHistoryEntry(e.sessionId,"failed","Modify operation failed",e)}),this.eventBus.on("clearHistory",()=>{this.clearHistory()}),this.eventBus.on("exportHistory",e=>{this.exportHistory(e.options)}),this.eventBus.on("filterHistory",e=>{this.setFilter(e.filter)}))}addHistoryEntry(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n={id:this.generateHistoryId(),timestamp:(new Date).toISOString(),category:e,description:t,status:s,data:this.sanitizeHistoryData(i),sessionId:i.sessionId||this.generateSessionId(),duration:null,startTime:(new Date).toISOString()};return this.history.unshift(n),this.history.length>this.maxHistorySize&&(this.history=this.history.slice(0,this.maxHistorySize)),this.saveHistoryToStorage(),this.loggingSubsystem&&this.loggingSubsystem.info("History entry added",{category:e,description:t,status:s,sessionId:n.sessionId},"system"),this.eventBus&&this.eventBus.emit("historyEntryAdded",n),n.id}updateHistoryEntry(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n=this.history.find(t=>t.sessionId===e);return n?(n.status=t,n.timestamp=(new Date).toISOString(),s&&(n.description=s),["completed","failed","cancelled"].includes(t)&&n.startTime&&(n.duration=new Date-new Date(n.startTime)),i&&Object.keys(i).length>0&&(n.data={...n.data,...this.sanitizeHistoryData(i)}),this.saveHistoryToStorage(),this.loggingSubsystem&&this.loggingSubsystem.info("History entry updated",{sessionId:e,status:t,description:s,duration:n.duration},"system"),this.eventBus&&this.eventBus.emit("historyEntryUpdated",n),!0):(this.loggingSubsystem&&this.loggingSubsystem.warn("History entry not found for update",{sessionId:e},"system"),!1)}async getHistory(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const{limit:t=50,offset:s=0,category:i=null,status:n=null,search:a=null,startDate:l=null,endDate:c=null,sortBy:d="timestamp",sortOrder:g="desc"}=e;let u=[...this.history];if(i&&(u=u.filter(e=>e.category===i)),n&&(u=u.filter(e=>e.status===n)),a){const e=a.toLowerCase();u=u.filter(t=>t.description.toLowerCase().includes(e)||JSON.stringify(t.data).toLowerCase().includes(e))}l&&(u=u.filter(e=>new Date(e.timestamp)>=new Date(l))),c&&(u=u.filter(e=>new Date(e.timestamp)<=new Date(c))),u.sort((e,t)=>{const s=e[d],i=t[d];return"asc"===g?s<i?-1:s>i?1:0:s>i?-1:s<i?1:0});const h=u.slice(s,s+t),p={history:h,total:u.length,hasMore:s+t<u.length,stats:this.getHistoryStats(u)};return this.loggingSubsystem&&this.loggingSubsystem.debug("History retrieved",{requested:t,returned:h.length,total:p.total,filters:{category:i,status:n,search:a}},"system"),p}catch(e){throw this.loggingSubsystem&&this.loggingSubsystem.error("Failed to get history",e,"system"),e}}getHistoryStats(){const e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:null)||this.history,t={total:e.length,categories:{},statuses:{},recentActivity:e.slice(0,5),averageDuration:0,totalDuration:0};let s=0,i=0;return e.forEach(e=>{t.categories[e.category]=(t.categories[e.category]||0)+1,t.statuses[e.status]=(t.statuses[e.status]||0)+1,e.duration&&(i+=e.duration,s++)}),s>0&&(t.averageDuration=i/s,t.totalDuration=i),t}setFilter(e){this.currentFilter={...this.currentFilter,...e},this.loggingSubsystem&&this.loggingSubsystem.debug("History filter updated",this.currentFilter,"system"),this.eventBus&&this.eventBus.emit("historyFilterChanged",this.currentFilter)}clearHistory(){const e=this.history.length;this.history=[],this.saveHistoryToStorage(),this.loggingSubsystem&&this.loggingSubsystem.info("History cleared",{previousCount:e},"system"),this.eventBus&&this.eventBus.emit("historyCleared",{previousCount:e})}async exportHistory(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const{format:t="json",filename:s=`history_${(new Date).toISOString().slice(0,19).replace(/:/g,"-")}`,includeData:i=!0}=e,n=await this.getHistory({limit:this.maxHistorySize});let a,l,c;const d=n.history.map(e=>({id:e.id,timestamp:e.timestamp,category:e.category,description:e.description,status:e.status,duration:e.duration,...i&&{data:e.data}}));switch(t.toLowerCase()){case"csv":a=this.convertHistoryToCSV(d),l="text/csv",c="csv";break;case"txt":a=this.convertHistoryToText(d),l="text/plain",c="txt";break;default:a=JSON.stringify({exportDate:(new Date).toISOString(),stats:n.stats,history:d},null,2),l="application/json",c="json"}const g=new Blob([a],{type:l}),u=URL.createObjectURL(g),h=document.createElement("a");h.href=u,h.download=`${s}.${c}`,h.style.display="none",document.body.appendChild(h),h.click(),document.body.removeChild(h),URL.revokeObjectURL(u),this.loggingSubsystem&&this.loggingSubsystem.info("History exported successfully",{format:t,filename:`${s}.${c}`,entryCount:d.length},"system")}catch(e){throw this.loggingSubsystem&&this.loggingSubsystem.error("Failed to export history",e,"system"),e}}convertHistoryToCSV(e){const t=[["ID","Timestamp","Category","Description","Status","Duration"].join(",")];return e.forEach(e=>{const s=[e.id,e.timestamp,e.category,`"${e.description.replace(/"/g,'""')}"`,e.status,e.duration||""];t.push(s.join(","))}),t.join("\n")}convertHistoryToText(e){return e.map(e=>{const t=e.duration?` (${Math.round(e.duration/1e3)}s)`:"";return`[${e.timestamp}] ${e.category.toUpperCase()} [${e.status.toUpperCase()}] ${e.description}${t}`}).join("\n")}async loadHistoryFromStorage(){try{const e=localStorage.getItem("pingone-import-history");if(e){const t=JSON.parse(e);Array.isArray(t)&&(this.history=t,this.loggingSubsystem&&this.loggingSubsystem.info("History loaded from storage",{entryCount:this.history.length},"system"))}}catch(e){this.loggingSubsystem&&this.loggingSubsystem.warn("Failed to load history from storage",e,"system")}}saveHistoryToStorage(){try{localStorage.setItem("pingone-import-history",JSON.stringify(this.history))}catch(e){this.loggingSubsystem&&this.loggingSubsystem.warn("Failed to save history to storage",e,"system")}}sanitizeHistoryData(e){if(!e||"object"!=typeof e)return e;try{return JSON.parse(JSON.stringify(e,(e,t)=>{if(["password","token","secret","key","apiKey","clientSecret"].some(t=>e.toLowerCase().includes(t)))return"[REDACTED]";if("object"==typeof t&&null!==t){if(t.constructor&&"HTMLElement"===t.constructor.name)return"[HTMLElement]";if(t instanceof Error)return{name:t.name,message:t.message}}return t}))}catch(t){return{error:"Failed to sanitize history data",original:String(e)}}}generateHistoryId(){return`hist_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}getHistoryEntry(e){return this.history.find(t=>t.id===e)}deleteHistoryEntry(e){const t=this.history.findIndex(t=>t.id===e);if(-1!==t){const s=this.history.splice(t,1)[0];return this.saveHistoryToStorage(),this.loggingSubsystem&&this.loggingSubsystem.info("History entry deleted",{id:e,description:s.description},"system"),this.eventBus&&this.eventBus.emit("historyEntryDeleted",{id:e,entry:s}),!0}return!1}}s.HistorySubsystem=HistorySubsystem;s.default=HistorySubsystem},{}],54:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.localAPIClient=s.LocalAPIClient=void 0;class LocalAPIClient{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.logger=e||console,this.baseUrl=t,this.serverHealth={lastCheck:0,isHealthy:!0,consecutiveFailures:0,maxConsecutiveFailures:3},this.healthCheckInterval=3e4}async _checkServerHealth(){const e=Date.now();if(e-this.serverHealth.lastCheck<this.healthCheckInterval)return this.serverHealth.isHealthy;try{const e=await fetch(`${this.baseUrl}/api/health`,{method:"GET",headers:{Accept:"application/json"},signal:AbortSignal.timeout(5e3)});e.ok?(this.serverHealth.isHealthy=!0,this.serverHealth.consecutiveFailures=0,this.logger.debug("✅ Server health check passed")):(this.serverHealth.isHealthy=!1,this.serverHealth.consecutiveFailures++,this.logger.warn("⚠️ Server health check failed",{status:e.status}))}catch(e){this.serverHealth.isHealthy=!1,this.serverHealth.consecutiveFailures++,this.logger.warn("⚠️ Server health check error",{error:e.message})}return this.serverHealth.lastCheck=e,this.serverHealth.isHealthy}_calculateBackoffDelay(e,t,s){const i=t*Math.pow(2,e-1),n=.1*Math.random()*i;return Math.min(i+n,s)}_shouldRetry(e,t,s){return!(t>=s)&&(!e.status||(e.status>=500||(429===e.status||408===e.status)))}async request(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n=`${this.baseUrl}${t}`,a=Date.now(),l={...i,retries:i.retries||3,retryDelay:i.retryDelay||1e3,maxRetryDelay:i.maxRetryDelay||3e4,healthCheck:!1!==i.healthCheck,timeout:i.timeout||1e4};if(l.healthCheck&&"/api/health"!==t){if(!await this._checkServerHealth()&&this.serverHealth.consecutiveFailures>=this.serverHealth.maxConsecutiveFailures)throw new Error("Server is unhealthy and unavailable for requests")}const c={"Content-Type":"application/json",Accept:"application/json"};this.accessToken&&(c.Authorization=`Bearer ${this.accessToken}`);let d=null;s&&"GET"!==e&&(d=JSON.stringify(s));const g={type:"api_request",method:e,url:n,timestamp:(new Date).toISOString(),source:"local-api-client"};this.logger.debug("🔄 Local API Request:",g);let u=null;for(let t=1;t<=l.retries;t++)try{const s=new AbortController,i=setTimeout(()=>s.abort(),l.timeout),g=await fetch(n,{method:e,headers:c,body:d,signal:s.signal});clearTimeout(i);const u=await this._handleResponse(g),h={type:"api_response",status:g.status,method:e,duration:Date.now()-a,attempt:t,source:"local-api-client"};return this.logger.debug("✅ Local API Response:",h),l.healthCheck&&(this.serverHealth.isHealthy=!0,this.serverHealth.consecutiveFailures=0),u}catch(e){u=e,"AbortError"===e.name&&(e.message="Request timeout",e.status=408),this.logger.error(`Local API Error (attempt ${t}/${l.retries}):`,e);const s=e.friendlyMessage||e.message,i=429===e.status;if(!this._shouldRetry(e,t,l.retries))throw e;const n=i?2*l.retryDelay:l.retryDelay,a=this._calculateBackoffDelay(t,n,l.maxRetryDelay);if(window.app&&window.app.uiManager&&(i?t<l.retries?window.app.uiManager.showRateLimitWarning(s,{isRetrying:!0,retryAttempt:t,maxRetries:l.retries,retryDelay:a}):window.app.uiManager.showError(s):t===l.retries&&window.app.uiManager.showError(s)),l.healthCheck&&(this.serverHealth.isHealthy=!1,this.serverHealth.consecutiveFailures++),t===l.retries)throw e;this.logger.info(`Retrying request in ${a}ms... (attempt ${t+1}/${l.retries})`),await new Promise(e=>setTimeout(e,a))}throw u}async _handleResponse(e){const t=e.headers.get("content-type");let s;if(s=t&&t.includes("application/json")?await e.json():await e.text(),!e.ok){let t;switch(e.status){case 400:t=this._getBadRequestMessage(s,e.url);break;case 401:t=this._getUnauthorizedMessage();break;case 403:t=this._getForbiddenMessage(s,e.url);break;case 404:t=this._getNotFoundMessage(s,e.url);break;case 429:t=this._getRateLimitMessage();break;case 500:case 501:case 502:case 503:case 504:t=this._getServerErrorMessage(e.status);break;default:t=s.message||`Request failed with status ${e.status}`}const i=new Error(t);throw i.status=e.status,i.details=s,i.friendlyMessage=t,i}return s}_getBadRequestMessage(e,t){return t.includes("/import")?e&&e.error?e.error:e&&e.message?e.message:"🔍 Import failed. Please check your CSV file and settings.":t.includes("/users/")&&t.includes("PUT")?"🔍 User data validation failed. Please check the user information and try again.":t.includes("/users")&&t.includes("POST")?"🔍 User creation failed due to invalid data. Please check required fields and try again.":t.includes("/populations")?"🔍 Population data is invalid. Please check your population settings.":"🔍 Request data is invalid. Please check your input and try again."}_getUnauthorizedMessage(){return"🔑 Authentication failed. Please check your PingOne API credentials in the Settings page."}_getForbiddenMessage(e,t){return t.includes("/users/")&&t.includes("PUT")?"🚫 Permission denied. Your PingOne application may not have permission to modify users.":t.includes("/users")&&t.includes("POST")?"🚫 Permission denied. Your PingOne application may not have permission to create users.":t.includes("/users/")&&t.includes("DELETE")?"🚫 Permission denied. Your PingOne application may not have permission to delete users.":"🚫 Access denied. Your PingOne application may not have the required permissions for this operation."}_getNotFoundMessage(e,t){return t.includes("/users/")?"🔍 User not found. The user may have been deleted or the ID is incorrect.":t.includes("/populations")?"🔍 Population not found. Please check your population settings.":t.includes("/environments/")?"🔍 PingOne environment not found. Please check your environment ID.":"🔍 Resource not found. Please check the ID or settings and try again."}_getRateLimitMessage(){return"⏰ You are sending requests too quickly. Please wait a moment and try again."}_getServerErrorMessage(e){return e>=500?"🔧 Server error. Please check your PingOne API credentials in the Settings page.":"🔧 An unexpected error occurred. Please try again."}get(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.request("GET",e,null,t)}post(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.request("POST",e,t,s)}async postFormData(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=`${this.baseUrl}${e}`,n=Date.now(),a={...s,retries:s.retries||3,retryDelay:s.retryDelay||1e3},l={Accept:"application/json"};this.accessToken&&(l.Authorization=`Bearer ${this.accessToken}`);const c={type:"api_request",method:"POST",url:i,timestamp:(new Date).toISOString(),source:"local-api-client",contentType:"multipart/form-data"};this.logger.debug("🔄 Local API FormData Request:",c);let d=null;for(let e=1;e<=a.retries;e++)try{const s=await fetch(i,{method:"POST",headers:l,body:t}),a=await this._handleResponse(s),c={type:"api_response",status:s.status,method:"POST",duration:Date.now()-n,attempt:e,source:"local-api-client"};return this.logger.debug("✅ Local API FormData Response:",c),a}catch(t){d=t,this.logger.error(`Local API FormData Error (attempt ${e}/${a.retries}):`,t);const s=t.friendlyMessage||t.message,i=429===t.status,n=(i?2*a.retryDelay:a.retryDelay)*Math.pow(2,e-1);if(window.app&&window.app.uiManager&&(i?e<a.retries?window.app.uiManager.showRateLimitWarning(s,{isRetrying:!0,retryAttempt:e,maxRetries:a.retries,retryDelay:n}):window.app.uiManager.showError(s):e===a.retries&&window.app.uiManager.showError(s)),e===a.retries)throw t;if(!(i||t.status>=500||!t.status))throw t;this.logger.info(`Retrying FormData request in ${n}ms... (attempt ${e+1}/${a.retries})`),await new Promise(e=>setTimeout(e,n))}throw d}put(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.request("PUT",e,t,s)}delete(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.request("DELETE",e,null,t)}async getWorkerToken(){this.logger.debug("🔐 Retrieving PingOne worker token...");try{const e=await this.post("/api/auth/worker-token",{},{timeout:15e3,retries:2});return this.logger.debug("✅ Worker token retrieved successfully"),e}catch(e){throw this.logger.error("❌ Failed to retrieve worker token:",e),new Error(`Token retrieval failed: ${e.message}`)}}async refreshWorkerToken(e){if(this.logger.debug("🔄 Refreshing PingOne worker token..."),!e)throw new Error("Current token is required for refresh");try{const t=await this.post("/api/auth/refresh-token",{},{headers:{Authorization:`Bearer ${e}`},timeout:1e4,retries:1});return this.logger.debug("✅ Worker token refreshed successfully"),t}catch(e){throw this.logger.error("❌ Failed to refresh worker token:",e),new Error(`Token refresh failed: ${e.message}`)}}async getTokenStatus(){this.logger.debug("🔍 Checking worker token status...");try{const e=await this.get("/api/auth/token-status",{timeout:5e3,retries:1});return this.logger.debug("✅ Token status retrieved successfully"),e}catch(e){return this.logger.debug("ℹ️ Could not retrieve token status:",e.message),{success:!1,hasToken:!1,error:e.message}}}async clearWorkerToken(){this.logger.debug("🗑️ Clearing worker token...");try{const e=await this.delete("/api/auth/worker-token",{timeout:5e3,retries:1});return this.logger.debug("✅ Worker token cleared successfully"),e}catch(e){throw this.logger.error("❌ Failed to clear worker token:",e),new Error(`Token clear failed: ${e.message}`)}}async validateToken(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{const t=e?{token:e}:{},s=await this.post("/api/auth/validate-credentials",t,{timeout:5e3,retries:1});return{success:!0,valid:s.valid||!1,details:s.details||{},message:s.message||"Token validation completed"}}catch(e){return{success:!1,valid:!1,error:e.message,message:"Token validation failed"}}}async testConnection(){try{const e=await this.get("/api/pingone/test-connection",{timeout:1e4,retries:1});return{success:!0,connected:!0,details:e.details||{},message:e.message||"Connection successful"}}catch(e){return{success:!1,connected:!1,error:e.message,message:"Connection test failed"}}}}s.LocalAPIClient=LocalAPIClient;s.localAPIClient=new LocalAPIClient(console)},{}],55:[function(e,t,s){(function(t){(function(){"use strict";var i=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.Logger=void 0;var n=e("./winston-logger.js"),a=i(e("./message-formatter.js"));e("./ui-manager.js");function _interopRequireWildcard(e,t){if("function"==typeof WeakMap)var s=new WeakMap,i=new WeakMap;return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var n,a,l={__proto__:null,default:e};if(null===e||"object"!=typeof e&&"function"!=typeof e)return l;if(n=t?i:s){if(n.has(e))return n.get(e);n.set(e,l)}for(const t in e)"default"!==t&&{}.hasOwnProperty.call(e,t)&&((a=(n=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,t))&&(a.get||a.set)?n(l,t,a):l[t]=e[t]);return l})(e,t)}const l=window.app&&window.app.uiManager;class Logger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if("string"==typeof e)try{const t=document.getElementById(e)||document.querySelector(e);this.logElement=t,t||console.debug(`[LOGGER] DOM element not found for '${e}', using UI-less logging`)}catch(t){console.debug(`[LOGGER] Error finding DOM element for '${e}':`,t.message),this.logElement=null}else e&&e.nodeType===Node.ELEMENT_NODE?this.logElement=e:e&&"object"==typeof e&&void 0!==e.length?(this.logElement=e.length>0?e[0]:null,e.length>1&&console.debug("[LOGGER] Multiple elements found, using first element")):this.logElement=null;this.logs=[],this.validCount=0,this.errorCount=0,this.initialized=!1,this.serverLoggingEnabled=!0,this.isLoadingLogs=!1,this.offlineLogs=[],this.winstonLogger=(0,n.createWinstonLogger)({service:"pingone-import-frontend",environment:(void 0!==t&&t.env?t.env.NODE_ENV:null)||"development",enableServerLogging:!0,enableConsoleLogging:!0}),this.initialize()}initialize(){try{this.winstonLogger.info("Logger initialized successfully"),this.initialized=!0}catch(e){console.error("Failed to initialize logger:",e)}}disableServerLogging(){this.serverLoggingEnabled=!1,this.winstonLogger.setServerLogging(!1),this.winstonLogger.debug("Server logging disabled")}enableServerLogging(){this.serverLoggingEnabled=!0,this.winstonLogger.setServerLogging(!0),this.winstonLogger.debug("Server logging enabled")}setLoadingLogs(e){this.isLoadingLogs=e,this.winstonLogger.debug(`Loading logs flag set to: ${e}`)}_createSafeFileLogger(){return{_initialized:!1,_logger:null,_queue:[],_initializing:!1,async init(){if(!this._initialized&&!this._initializing){this._initializing=!0;try{const{FileLogger:t}=await Promise.resolve().then(()=>_interopRequireWildcard(e("./file-logger.js")));this._logger=new t("client.log"),this._initialized=!0,this._processQueue()}catch(e){console.warn("Failed to initialize file logger, falling back to console:",e.message),this._logger={log:(e,t,s)=>{console[e]||console.log(`[${e.toUpperCase()}] ${t}`,s)}},this._initialized=!0,this._processQueue()}finally{this._initializing=!1}}},_processQueue(){for(;this._queue.length>0;){const{level:e,message:t,data:s}=this._queue.shift();this._logger&&"function"==typeof this._logger.log&&this._logger.log(e,t,s)}},log(e,t,s){this._initialized&&this._logger?this._logger.log(e,t,s):(this._queue.push({level:e,message:t,data:s}),this._initializing||this.init())}}}_parseLogArgs(e){let t="Log message",s=null,i=null;return e.length>0&&("string"==typeof e[0]?(t=e[0],e.length>1&&"object"==typeof e[1]&&(s=e[1],e.length>2&&"object"==typeof e[2]&&(i=e[2]))):"object"==typeof e[0]&&(s=e[0],t="Log data",e.length>1&&"object"==typeof e[1]&&(i=e[1]))),[t,s,i]}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{if("string"==typeof e&&"string"==typeof t)this._logToWinston(e,t,s);else{const[t,s,i]=this._parseLogArgs(arguments);this._logToWinston(e||"info",t,{...s,...i})}this._updateLogUI({level:e,message:t,data:s,timestamp:new Date})}catch(e){console.error("Error in logger.log:",e)}}_logToWinston(e,t){const s={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},component:"frontend-logger",timestamp:(new Date).toISOString()};this.winstonLogger.log(e,t,s)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t),l&&l.showStatusBar(e,"error",{autoDismiss:!1}),this.errorCount++,this.updateSummary()}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}success(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,{...t,type:"success"}),this.validCount++,this.updateSummary()}errorWithStack(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.winstonLogger.errorWithStack(e,t,s),this.errorCount++,this.updateSummary()}_updateLogUI(e){if(this.logElement)try{const t=document.createElement("div");t.className=`log-entry ${e.level}`;const s=document.createElement("span");s.className="log-timestamp",s.textContent=new Date(e.timestamp).toLocaleTimeString(),t.appendChild(s);const i=document.createElement("span");i.className="log-level",i.textContent=e.level.toUpperCase(),t.appendChild(i);const n=document.createElement("span");n.className="log-message";let l=e.message;if(e.data&&e.data.type)switch(e.data.type){case"progress":l=a.default.formatProgressMessage(e.data.operation||"import",e.data.current||0,e.data.total||0,e.message,e.data.counts||{});break;case"error":l=a.default.formatErrorMessage(e.data.operation||"import",e.message,e.data);break;case"completion":l=a.default.formatCompletionMessage(e.data.operation||"import",e.data);break;default:l=e.message}if(n.textContent=l,t.appendChild(n),e.data&&Object.keys(e.data).length>0){const s=document.createElement("div");s.className="log-details";const i=document.createElement("h4");i.textContent="Details",s.appendChild(i);const n=document.createElement("pre");n.className="log-detail-json",n.textContent=JSON.stringify(e.data,null,2),s.appendChild(n),t.appendChild(s)}this.logElement.firstChild?this.logElement.insertBefore(t,this.logElement.firstChild):this.logElement.appendChild(t),this.logElement.scrollTop=0;const c=100;for(;this.logElement.children.length>c;)this.logElement.removeChild(this.logElement.lastChild)}catch(e){console.error("Error updating log UI:",e)}}async _sendToServer(e){if(this.serverLoggingEnabled&&!this.isLoadingLogs)try{await fetch("/api/logs/ui",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e.level,message:e.message,data:e.data})})}catch(t){this.winstonLogger.warn("Failed to send log to server",{error:t.message}),this.offlineLogs.push(e)}}renderLogs(){this.logElement&&(this.logElement.innerHTML="",this.logs.forEach(e=>this._updateLogUI(e)),this.logElement.scrollTop=this.logElement.scrollHeight)}clearLogs(){this.logs=[],this.logElement&&(this.logElement.innerHTML=""),this.winstonLogger.info("Logs cleared")}getLogs(){return[...this.logs]}updateSummary(){this.winstonLogger.debug("Summary updated",{validCount:this.validCount,errorCount:this.errorCount})}clearSummary(){this.validCount=0,this.errorCount=0,this.winstonLogger.debug("Summary cleared")}startTimer(e){this.timers||(this.timers=new Map),this.timers.set(e,Date.now()),this.debug(`Timer started: ${e}`)}endTimer(e){if(!this.timers||!this.timers.has(e))return this.warn(`Timer '${e}' not found`),0;const t=this.timers.get(e),s=Date.now()-t;return this.timers.delete(e),this.info(`Timer completed: ${e}`,{duration:`${s}ms`}),s}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};console.log("🔥 [LOGGER DEBUG] Creating child logger with options:",e);const t=Object.create(this);t.context={...this.context,...e};return["info","warn","error","debug"].forEach(e=>{const s=this[e].bind(this);t[e]=function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n={...t.context,...i};return s(e,n)}}),console.log("🔥 [LOGGER DEBUG] Child logger created successfully"),t}}s.Logger=Logger;const c=new Logger;s.default=c}).call(this)}).call(this,e("_process"))},{"./file-logger.js":52,"./message-formatter.js":57,"./ui-manager.js":69,"./winston-logger.js":71,"@babel/runtime/helpers/interopRequireDefault":2,_process:29}],56:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.LoggingSubsystem=void 0;var i=e("./winston-logger.js");class LoggingSubsystem{constructor(e,s){this.eventBus=e,this.settingsSubsystem=s,this.logger=(0,i.createWinstonLogger)({service:"logging-subsystem",environment:(void 0!==t&&t.env?t.env.NODE_ENV:null)||"development"}),this.logHistory=[],this.maxHistorySize=1e3,this.levels={ERROR:0,WARN:1,INFO:2,DEBUG:3,TRACE:4},this.currentLevel=this.levels.INFO,this.categories={SYSTEM:"system",AUTH:"auth",IMPORT:"import",EXPORT:"export",DELETE:"delete",MODIFY:"modify",UI:"ui",API:"api",ERROR:"error"},this.init(),this.logger.info("LoggingSubsystem initialized successfully")}async init(){try{await this.loadSettings(),this.setupEventListeners(),this.replaceGlobalLogManager(),this.logger.info("LoggingSubsystem initialization complete")}catch(e){throw this.logger.error("Failed to initialize LoggingSubsystem",e),e}}async loadSettings(){try{if(this.settingsSubsystem){await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;e.logLevel&&this.setLogLevel(e.logLevel),e.maxLogHistory&&(this.maxHistorySize=e.maxLogHistory)}}catch(e){this.logger.warn("Could not load logging settings, using defaults",e)}}setupEventListeners(){this.eventBus&&(this.eventBus.on("loggingLevelChanged",e=>{this.setLogLevel(e.level)}),this.eventBus.on("clearLogs",()=>{this.clearLogs()}),this.eventBus.on("exportLogs",e=>{this.exportLogs(e.options)}))}replaceGlobalLogManager(){window.logManager={log:(e,t,s)=>this.log(e,t,s),error:(e,t)=>this.error(e,t),warn:(e,t)=>this.warn(e,t),info:(e,t)=>this.info(e,t),debug:(e,t)=>this.debug(e,t),loadLogs:()=>this.loadLogs(),clearLogs:()=>this.clearLogs(),exportLogs:e=>this.exportLogs(e),getLogger:e=>this.getLogger(e)},this.logger.info("Global logManager replaced with LoggingSubsystem compatibility layer")}log(e,s){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.categories.SYSTEM;if(("string"==typeof e?this.levels[e.toUpperCase()]:e)>this.currentLevel)return;const a={timestamp:(new Date).toISOString(),level:e.toLowerCase(),message:s,data:this.sanitizeLogData(i),category:n,sessionId:this.generateSessionId()};this.addToHistory(a),this.logger[e.toLowerCase()](s,{data:a.data,category:n,sessionId:a.sessionId}),this.eventBus&&this.eventBus.emit("logEntry",a),"development"===(void 0!==t&&t.env?t.env.NODE_ENV:"development")&&this.consoleLog(a)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.categories.ERROR;this.log("ERROR",e,t,s)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.categories.SYSTEM;this.log("WARN",e,t,s)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.categories.SYSTEM;this.log("INFO",e,t,s)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.categories.SYSTEM;this.log("DEBUG",e,t,s)}trace(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.categories.SYSTEM;this.log("TRACE",e,t,s)}getLogger(e){return{error:(t,s)=>this.error(`[${e}] ${t}`,s),warn:(t,s)=>this.warn(`[${e}] ${t}`,s),info:(t,s)=>this.info(`[${e}] ${t}`,s),debug:(t,s)=>this.debug(`[${e}] ${t}`,s),trace:(t,s)=>this.trace(`[${e}] ${t}`,s)}}setLogLevel(e){this.currentLevel="string"==typeof e?this.levels[e.toUpperCase()]||this.levels.INFO:e,this.logger.info("Log level changed",{newLevel:this.currentLevel}),this.eventBus&&this.eventBus.emit("logLevelChanged",{level:this.currentLevel})}addToHistory(e){this.logHistory.unshift(e),this.logHistory.length>this.maxHistorySize&&(this.logHistory=this.logHistory.slice(0,this.maxHistorySize))}async loadLogs(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const{limit:t=100,offset:s=0,level:i=null,category:n=null,search:a=null,startDate:l=null,endDate:c=null}=e;let d=[...this.logHistory];if(i&&(d=d.filter(e=>e.level===i.toLowerCase())),n&&(d=d.filter(e=>e.category===n)),a){const e=a.toLowerCase();d=d.filter(t=>t.message.toLowerCase().includes(e)||JSON.stringify(t.data).toLowerCase().includes(e))}l&&(d=d.filter(e=>new Date(e.timestamp)>=new Date(l))),c&&(d=d.filter(e=>new Date(e.timestamp)<=new Date(c)));const g=d.slice(s,s+t),u={logs:g,total:d.length,hasMore:s+t<d.length};return this.logger.debug("Logs loaded",{requested:t,returned:g.length,total:u.total}),u}catch(e){throw this.logger.error("Failed to load logs",e),e}}clearLogs(){const e=this.logHistory.length;this.logHistory=[],this.logger.info("Logs cleared",{previousCount:e}),this.eventBus&&this.eventBus.emit("logsCleared",{previousCount:e})}async exportLogs(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const{format:t="json",filename:s=`logs_${(new Date).toISOString().slice(0,19).replace(/:/g,"-")}`}=e,i=await this.loadLogs({limit:this.maxHistorySize});let n,a,l;switch(t.toLowerCase()){case"csv":n=this.convertLogsToCSV(i.logs),a="text/csv",l="csv";break;case"txt":n=this.convertLogsToText(i.logs),a="text/plain",l="txt";break;default:n=JSON.stringify(i.logs,null,2),a="application/json",l="json"}const c=new Blob([n],{type:a}),d=URL.createObjectURL(c),g=document.createElement("a");g.href=d,g.download=`${s}.${l}`,g.style.display="none",document.body.appendChild(g),g.click(),document.body.removeChild(g),URL.revokeObjectURL(d),this.logger.info("Logs exported successfully",{format:t,filename:`${s}.${l}`,logCount:i.logs.length})}catch(e){throw this.logger.error("Failed to export logs",e),e}}convertLogsToCSV(e){const t=[["Timestamp","Level","Category","Message","Data"].join(",")];return e.forEach(e=>{const s=[e.timestamp,e.level,e.category,`"${e.message.replace(/"/g,'""')}"`,`"${JSON.stringify(e.data).replace(/"/g,'""')}"`];t.push(s.join(","))}),t.join("\n")}convertLogsToText(e){return e.map(e=>{const t=Object.keys(e.data).length>0?` | Data: ${JSON.stringify(e.data)}`:"";return`[${e.timestamp}] ${e.level.toUpperCase()} [${e.category}] ${e.message}${t}`}).join("\n")}consoleLog(e){const{level:t,message:s,data:i,category:n,timestamp:a}=e,l=`[${a}] [${n}]`;switch(t){case"error":console.error(l,s,i);break;case"warn":console.warn(l,s,i);break;case"debug":console.debug(l,s,i);break;case"trace":console.trace(l,s,i);break;default:console.log(l,s,i)}}sanitizeLogData(e){if(!e||"object"!=typeof e)return e;try{return JSON.parse(JSON.stringify(e,(e,t)=>{if(["password","token","secret","key","apiKey","clientSecret"].some(t=>e.toLowerCase().includes(t)))return"[REDACTED]";if("object"==typeof t&&null!==t){if(t.constructor&&"HTMLElement"===t.constructor.name)return"[HTMLElement]";if(t instanceof Error)return{name:t.name,message:t.message,stack:t.stack}}return t}))}catch(t){return{error:"Failed to sanitize log data",original:String(e)}}}generateSessionId(){return`log_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}getStats(){const e={totalLogs:this.logHistory.length,levelCounts:{},categoryCounts:{},recentActivity:this.logHistory.slice(0,10)};return this.logHistory.forEach(t=>{e.levelCounts[t.level]=(e.levelCounts[t.level]||0)+1,e.categoryCounts[t.category]=(e.categoryCounts[t.category]||0)+1}),e}}s.LoggingSubsystem=LoggingSubsystem;s.default=LoggingSubsystem}).call(this)}).call(this,e("_process"))},{"./winston-logger.js":71,_process:29}],57:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.MessageFormatter=void 0;var i=e("./winston-logger.js");class MessageFormatter{constructor(){const e="undefined"!=typeof window&&"localhost"===window.location?.hostname?"development":"production";this.logger=(0,i.createWinstonLogger)({service:"pingone-message-formatter",environment:e}),this.formattingOptions={showTimestamps:!0,showEventMarkers:!0,showSeparators:!0,maxMessageLength:200,separatorChar:"*",separatorLength:50},this.eventTypes={import:{start:"IMPORT STARTED",end:"IMPORT COMPLETED",error:"IMPORT ERROR",color:"#3498db"},export:{start:"EXPORT STARTED",end:"EXPORT COMPLETED",error:"EXPORT ERROR",color:"#27ae60"},modify:{start:"MODIFY STARTED",end:"MODIFY COMPLETED",error:"MODIFY ERROR",color:"#f39c12"},delete:{start:"DELETE STARTED",end:"DELETE COMPLETED",error:"DELETE ERROR",color:"#e74c3c"},validation:{start:"VALIDATION STARTED",end:"VALIDATION COMPLETED",error:"VALIDATION ERROR",color:"#9b59b6"},connection:{start:"CONNECTION ESTABLISHED",end:"CONNECTION CLOSED",error:"CONNECTION ERROR",color:"#1abc9c"}}}formatMessageBlock(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{const n=this.eventTypes[e]||this.eventTypes.import,a=this.formatTimestamp(new Date),l=this.createSeparator();let c="";if(this.formattingOptions.showSeparators&&(c+=l+"\n"),this.formattingOptions.showEventMarkers){c+=`${this.getEventMarker(n,t)}\n`}return this.formattingOptions.showTimestamps&&(c+=`[${a}] `),c+=s+"\n",i&&Object.keys(i).length>0&&(c+=this.formatDetails(i)),this.formattingOptions.showSeparators&&(c+=l+"\n"),this.logger.debug("Message block formatted",{eventType:e,eventStage:t,messageLength:s.length}),c}catch(e){return this.logger.error("Error formatting message block",{error:e.message}),s}}formatProgressMessage(e,t,s,i){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};try{const e=this.formatTimestamp(new Date),a=s>0?Math.round(t/s*100):0;let l="";return this.formattingOptions.showTimestamps&&(l+=`[${e}] `),l+=`PROGRESS: ${t}/${s} (${a}%)`,i&&(l+=` - ${i}`),n&&Object.keys(n).length>0&&(l+="\n"+this.formatProgressStats(n)),l}catch(e){return this.logger.error("Error formatting progress message",{error:e.message}),i||`Progress: ${t}/${s}`}}formatErrorMessage(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const i=this.eventTypes[e]||this.eventTypes.import,n=this.formatTimestamp(new Date),a=this.createSeparator();let l="";return this.formattingOptions.showSeparators&&(l+=a+"\n"),l+=`${i.error}\n`,this.formattingOptions.showTimestamps&&(l+=`[${n}] `),l+=`ERROR: ${t}\n`,s&&Object.keys(s).length>0&&(l+=this.formatErrorDetails(s)),this.formattingOptions.showSeparators&&(l+=a+"\n"),l}catch(e){return this.logger.error("Error formatting error message",{error:e.message}),`ERROR: ${t}`}}formatCompletionMessage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const s=this.eventTypes[e]||this.eventTypes.import,i=this.formatTimestamp(new Date),n=this.createSeparator();let a="";return this.formattingOptions.showSeparators&&(a+=n+"\n"),a+=`${s.end}\n`,this.formattingOptions.showTimestamps&&(a+=`[${i}] `),a+="Operation completed successfully\n",t&&Object.keys(t).length>0&&(a+=this.formatResults(t)),this.formattingOptions.showSeparators&&(a+=n+"\n"),a}catch(e){return this.logger.error("Error formatting completion message",{error:e.message}),"Operation completed successfully"}}formatSSEEvent(e){try{const{type:t,message:s,current:i,total:n,counts:a,error:l}=e,c=this.formatTimestamp(new Date);let d="";switch(this.formattingOptions.showTimestamps&&(d+=`[${c}] `),t){case"progress":d+=this.formatProgressMessage("import",i,n,s,a);break;case"completion":d+=this.formatCompletionMessage("import",e);break;case"error":d+=this.formatErrorMessage("import",s,e);break;default:d+=`SSE EVENT [${t.toUpperCase()}]: ${s||"No message"}`}return d}catch(t){return this.logger.error("Error formatting SSE event",{error:t.message}),e.message||"SSE event received"}}createSeparator(){const e=this.formattingOptions.separatorChar,t=this.formattingOptions.separatorLength;return e.repeat(t)}getEventMarker(e,t){switch(t){case"start":default:return e.start;case"end":return e.end;case"error":return e.error}}formatTimestamp(e){return e.toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"})}formatDetails(e){try{let t="";for(const[s,i]of Object.entries(e))null!=i&&(t+=`  ${s}: ${i}\n`);return t}catch(e){return this.logger.error("Error formatting details",{error:e.message}),""}}formatProgressStats(e){try{let t="  Statistics:\n";const s={processed:"Processed",success:"Success",failed:"Failed",skipped:"Skipped",duplicates:"Duplicates"};for(const[i,n]of Object.entries(e))null!=n&&s[i]&&(t+=`    ${s[i]}: ${n}\n`);return t}catch(e){return this.logger.error("Error formatting progress stats",{error:e.message}),""}}formatErrorDetails(e){try{let t="  Error Details:\n";for(const[s,i]of Object.entries(e))null!=i&&(t+=`    ${s}: ${i}\n`);return t}catch(e){return this.logger.error("Error formatting error details",{error:e.message}),""}}formatResults(e){try{let t="  Results:\n";const s={total:"Total Records",success:"Successful",failed:"Failed",skipped:"Skipped",duplicates:"Duplicates",duration:"Duration"};for(const[i,n]of Object.entries(e))if(null!=n&&s[i]){let e=n;"duration"===i&&"number"==typeof n&&(e=this.formatDuration(n)),t+=`    ${s[i]}: ${e}\n`}return t}catch(e){return this.logger.error("Error formatting results",{error:e.message}),""}}formatDuration(e){try{const t=Math.floor(e/1e3),s=Math.floor(t/60),i=Math.floor(s/60);return i>0?`${i}h ${s%60}m ${t%60}s`:s>0?`${s}m ${t%60}s`:`${t}s`}catch(t){return this.logger.error("Error formatting duration",{error:t.message}),`${e}ms`}}updateFormattingOptions(e){try{this.formattingOptions={...this.formattingOptions,...e},this.logger.debug("Formatting options updated",{options:e})}catch(e){this.logger.error("Error updating formatting options",{error:e.message})}}getFormattingOptions(){return{...this.formattingOptions}}}s.MessageFormatter=MessageFormatter;s.default=new MessageFormatter},{"./winston-logger.js":71}],58:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.pingOneClient=s.PingOneClient=void 0;e("./winston-logger.js"),e("./ui-manager.js");window.app&&window.app.uiManager;class PingOneClient{constructor(){this.logger={info:(e,t)=>console.log(`[PingOneClient] ${e}`,t||""),debug:(e,t)=>console.debug(`[PingOneClient] ${e}`,t||""),warn:(e,t)=>console.warn(`[PingOneClient] ${e}`,t||""),error:(e,t)=>console.error(`[PingOneClient] ${e}`,t||"")},this.accessToken=null,this.tokenExpiry=null,this.baseUrl="/api/pingone",this.initialize()}initialize(){try{this.loadTokenFromStorage(),this.logger.info("PingOne client initialized successfully")}catch(e){this.logger.error("Failed to initialize PingOne client",{error:e.message})}}loadTokenFromStorage(){try{if("undefined"!=typeof localStorage){const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(e&&t){const s=parseInt(t,10);s>Date.now()?(this.accessToken=e,this.tokenExpiry=s,this.logger.info("Token loaded from storage",{hasToken:!!this.accessToken,expiryTime:new Date(this.tokenExpiry).toISOString()})):(this.logger.warn("Stored token has expired"),this.clearToken())}else this.logger.debug("No stored token found")}else this.logger.warn("localStorage is not available")}catch(e){this.logger.error("Error loading token from storage",{error:e.message})}}saveTokenToStorage(e,t){try{if("undefined"!=typeof localStorage){const s=Date.now()+1e3*t;return localStorage.setItem("pingone_token",e),localStorage.setItem("pingone_token_expiry",s.toString()),this.accessToken=e,this.tokenExpiry=s,this.logger.info("Token saved to storage",{tokenLength:e.length,expiresIn:t,expiryTime:new Date(s).toISOString()}),!0}return this.logger.warn("localStorage is not available, cannot save token"),!1}catch(e){return this.logger.error("Error saving token to storage",{error:e.message}),!1}}clearToken(){try{"undefined"!=typeof localStorage&&(localStorage.removeItem("pingone_token"),localStorage.removeItem("pingone_token_expiry")),this.accessToken=null,this.tokenExpiry=null,this.logger.info("Token cleared from storage")}catch(e){this.logger.error("Error clearing token from storage",{error:e.message})}}updateCredentials(e){try{this.logger.info("Updating PingOne client credentials"),this.clearToken(),"undefined"!=typeof localStorage&&(localStorage.setItem("pingone_credentials",JSON.stringify(e)),this.logger.info("Credentials updated in localStorage")),window.dispatchEvent(new CustomEvent("credentials-updated",{detail:{credentials:e}})),this.logger.info("Credentials updated successfully")}catch(e){throw this.logger.error("Error updating credentials",{error:e.message}),e}}getCachedToken(){try{if(!this.accessToken||"string"!=typeof this.accessToken)return this.logger.debug("No valid cached token available"),null;if(!this.tokenExpiry||"number"!=typeof this.tokenExpiry)return this.logger.warn("Invalid token expiry timestamp"),this.clearToken(),null;const e=Date.now(),t=this.tokenExpiry<=e,s=3e5,i=this.tokenExpiry-e<=s;return t?(this.logger.debug("Cached token is expired"),this.clearToken(),null):(i&&this.logger.warn("Token is near expiry, consider refreshing"),this.accessToken.includes(".")&&3===this.accessToken.split(".").length?(this.logger.debug("Returning valid cached token"),this.accessToken):(this.logger.error("Invalid token format detected"),this.clearToken(),null))}catch(e){return this.logger.error("Error getting cached token",{error:e.message,stack:e.stack,tokenLength:this.accessToken?this.accessToken.length:0}),null}}getCurrentTokenTimeRemaining(){try{if(!this.accessToken||!this.tokenExpiry)return{token:null,timeRemaining:null,isExpired:!0};const e=Date.now(),t=Math.max(0,this.tokenExpiry-e),s=0===t,i=this.formatDuration(Math.floor(t/1e3)),n=this.lastTokenTimeLog||0;return e-n>=3e5&&(this.logger.debug("Token time remaining calculated",{timeRemaining:i,isExpired:s}),this.lastTokenTimeLog=e),{token:this.accessToken,timeRemaining:i,isExpired:s}}catch(e){return this.logger.error("Error getting token time remaining",{error:e.message}),{token:null,timeRemaining:null,isExpired:!0}}}formatDuration(e){if(e<=0)return"Expired";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),i=e%60;return t>0?`${t}h ${s}m ${i}s`:s>0?`${s}m ${i}s`:`${i}s`}async getAccessToken(){try{this.logger.debug("getAccessToken called");const e=this.getCurrentTokenTimeRemaining();if(e.token&&!e.isExpired)return this.logger.debug("Using cached token",{tokenPreview:e.token.substring(0,8)+"...",timeRemaining:e.timeRemaining}),e.token;this.logger.debug("Fetching token from /api/pingone/get-token");const t=await fetch("/api/pingone/get-token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({})});if(this.logger.debug("Fetch response",{status:t.status,ok:t.ok}),!t.ok){const e=await t.text();throw this.logger.error("Fetch error",{status:t.status,error:e}),new Error(`Failed to get token: ${t.status} ${e}`)}const s=await t.json();if(this.logger.debug("Data received from server",{hasAccessToken:!!s.access_token,expiresIn:s.expires_in,success:s.success}),!s.success)throw this.logger.warn("Server returned error",{data:s}),new Error(s.error||"Failed to get token from server");if(!s.access_token)throw this.logger.warn("No access_token in server response",{data:s}),new Error("No access token received from server");return this.saveTokenToStorage(s.access_token,s.expires_in||3600)?this.logger.debug("Token saved to localStorage",{tokenLength:s.access_token.length,expiresIn:s.expires_in||3600}):this.logger.warn("Failed to store token in localStorage"),s.access_token}catch(e){throw this.logger.error("Error in getAccessToken",{error:e.message}),e}}async makeRequest(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3;try{const n=await this.getAccessToken();for(let a=1;a<=i;a++)try{this.logger.debug(`Making API request (attempt ${a})`,{method:e,url:t,hasData:!!s});const l={method:e,headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"}};s&&(l.body=JSON.stringify(s));const c=await fetch(`${this.baseUrl}${t}`,l);if(this.logger.debug(`API request completed (attempt ${a})`,{status:c.status,ok:c.ok}),c.ok){return await c.json()}{const e=await c.text();if(this.logger.warn(`API request failed (attempt ${a})`,{status:c.status,error:e}),a===i)throw new Error(`API request failed: ${c.status} ${e}`)}}catch(e){if(this.logger.error(`API request error (attempt ${a})`,{error:e.message}),a===i)throw e;await new Promise(e=>setTimeout(e,1e3*a))}}catch(e){throw this.logger.error("All API request attempts failed",{error:e.message}),e}}async getPopulations(){try{this.logger.info("Getting populations from PingOne API");const e="/api/pingone/populations",t=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`Failed to fetch populations: ${t.status} ${t.statusText}`);return t}catch(e){throw this.logger.error("Failed to get populations",{error:e.message}),e}}async importUsers(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{this.logger.info("importUsers method called",{userCount:e.length,options:Object.keys(t)});const{populationId:s=null,batchSize:i=10,retryAttempts:n=3,enableUsers:a=!0,skipDuplicatesByEmail:l=!1,skipDuplicatesByUsername:c=!1}=t;if(this.logger.debug("Initial setup completed",{batchSize:i,retryAttempts:n,enableUsers:a,skipDuplicatesByEmail:l,skipDuplicatesByUsername:c}),!e||!Array.isArray(e)||0===e.length)throw new Error("Invalid CSV data: must be a non-empty array");this.logger.debug("Input validation completed");let d=s;if(!d){const e=document.getElementById("import-population-select");if(e&&e.value)d=e.value,this.logger.debug("Using selected population from dropdown",{fallbackPopulationId:d});else{d=JSON.parse(localStorage.getItem("pingone-import-settings")||"{}").populationId,this.logger.debug("Using default population from settings",{fallbackPopulationId:d})}}const g=new Set,u=new Set,h=e.length,p={success:!0,processed:0,created:0,skipped:0,failed:0,errors:[]};this.logger.debug("Starting user processing loop...");for(let t=0;t<h;t+=i){const s=e.slice(t,t+i);this.logger.debug(`Processing batch ${Math.floor(t/i)+1}`,{users:`${t+1}-${Math.min(t+i,h)}`,batchSize:s.length});for(const e of s)try{const t=e.populationId||d;if(!t){const t=`Missing population – user not processed. Username: ${e.email||e.username}`;p.errors.push(t),p.skipped++;continue}if(l&&e.email){if(g.has(e.email.toLowerCase())){this.logger.info(`Skipping duplicate user by email: ${e.email}`),p.skipped++;continue}g.add(e.email.toLowerCase())}if(c&&e.username){if(u.has(e.username.toLowerCase())){this.logger.info(`Skipping duplicate user by username: ${e.username}`),p.skipped++;continue}u.add(e.username.toLowerCase())}const s={username:e.username||e.email,email:e.email,name:{given:e.firstName||e.givenName||"",family:e.lastName||e.familyName||""},enabled:a,population:{id:t}};e.phoneNumber&&(s.phoneNumber=e.phoneNumber),e.company&&(s.company=e.company);const i=await this.createUser(s,n);if(i.success){if(p.created++,!a&&i.userId){this.logger.debug(`Disabling user ${i.userId} after creation`);try{await this.makeRequest("PATCH",`/environments/current/users/${i.userId}`,{enabled:!1}),this.logger.debug(`Successfully disabled user ${i.userId}`)}catch(e){this.logger.warn(`Failed to disable user ${i.userId}`,{error:e.message})}}}else p.failed++,p.errors.push(i.error);p.processed++}catch(e){p.failed++,p.errors.push(e.message)}}return this.logger.info("Batch import summary",{total:h,processed:p.processed,created:p.created,skipped:p.skipped,failed:p.failed}),p}catch(e){throw this.logger.error("Import users failed",{error:e.message}),e}}async createUser(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;try{for(let s=1;s<=t;s++)try{this.logger.debug(`Making API request for user ${e.email||e.username} (attempt ${s}/${t})`);const i=await this.makeRequest("POST","/environments/current/users",e);if(this.logger.debug(`API request completed for user ${e.email||e.username}`),i.id){const t=`Successfully created user: ${e.username||e.email}`;return this.logger.info(t,{userId:i.id,populationId:e.population.id}),{success:!0,userId:i.id,user:i}}return this.logger.warn("Invalid response structure - no ID found",{result:i}),{success:!1,error:"Invalid response structure"}}catch(i){if(i.message.includes("already exists"))return this.logger.debug(`User already exists: ${e.email||e.username}`),{success:!0,userId:null,user:null,message:"User already exists"};if(this.logger.error(`API request failed for user ${e.email||e.username} (attempt ${s})`,{error:i.message}),s===t)return{success:!1,error:i.message};await new Promise(e=>setTimeout(e,1e3*s))}}catch(t){return this.logger.error("Create user failed",{error:t.message,userData:e}),{success:!1,error:t.message}}}}s.PingOneClient=PingOneClient;s.pingOneClient=new PingOneClient},{"./ui-manager.js":69,"./winston-logger.js":71}],59:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.PopulationSubsystem=void 0;class PopulationSubsystem{constructor(e,t,s,i){this.eventBus=e,this.settingsSubsystem=t,this.loggingSubsystem=s,this.apiClient=i,this.populationCache=new Map,this.cacheExpiry=3e5,this.lastCacheUpdate=null,this.isLoading=!1,this.loadingPromise=null,this.managedDropdowns=new Set,this.dropdownConfigs=new Map,this.init(),this.loggingSubsystem&&this.loggingSubsystem.info("PopulationSubsystem initialized successfully",{},"system")}async init(){try{this.setupEventListeners(),this.loadCachedPopulations(),this.loggingSubsystem&&this.loggingSubsystem.info("PopulationSubsystem initialization complete",{cachedPopulations:this.populationCache.size},"system")}catch(e){throw this.loggingSubsystem&&this.loggingSubsystem.error("Failed to initialize PopulationSubsystem",e,"system"),e}}setupEventListeners(){this.eventBus&&(this.eventBus.on("settingsChanged",()=>{this.invalidateCache()}),this.eventBus.on("authenticationSuccess",()=>{this.refreshPopulations()}),this.eventBus.on("authenticationFailed",()=>{this.clearCache()}),this.eventBus.on("refreshPopulations",e=>{this.refreshPopulations(e.force)}),this.eventBus.on("registerDropdown",e=>{this.registerDropdown(e.dropdownId,e.config)}))}async loadPopulations(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{force:t=!1,useCache:s=!0}=e;try{if(!t&&s&&this.isCacheValid()){const e=this.getCachedPopulations();if(e&&e.length>0)return this.loggingSubsystem&&this.loggingSubsystem.debug("Returning cached populations",{count:e.length},"system"),e}if(this.isLoading&&this.loadingPromise)return await this.loadingPromise;this.isLoading=!0,this.loadingPromise=this.performPopulationLoad();const e=await this.loadingPromise;return this.cachePopulations(e),this.eventBus&&this.eventBus.emit("populationsLoaded",{populations:e,count:e.length,cached:!1}),this.loggingSubsystem&&this.loggingSubsystem.info("Populations loaded successfully",{count:e.length},"system"),e}catch(e){throw this.loggingSubsystem&&this.loggingSubsystem.error("Failed to load populations",e,"system"),this.eventBus&&this.eventBus.emit("populationsLoadFailed",{error:e.message}),e}finally{this.isLoading=!1,this.loadingPromise=null}}async performPopulationLoad(){if(this.loggingSubsystem&&this.loggingSubsystem.debug("Starting performPopulationLoad",{},"system"),!this.apiClient){const e="API client not available for population loading";throw this.loggingSubsystem&&this.loggingSubsystem.error(e,{},"system"),new Error(e)}if("function"!=typeof this.apiClient.get){const e="API client does not support HTTP GET requests";throw this.loggingSubsystem&&this.loggingSubsystem.error(e,{apiClientType:typeof this.apiClient},"system"),new Error(e)}this.loggingSubsystem&&this.loggingSubsystem.debug("Making API call to /api/populations",{},"system");try{const e=await this.apiClient.get("/api/populations");if(this.loggingSubsystem&&this.loggingSubsystem.debug("API response received",{hasResponse:!!e,hasPopulations:!(!e||!e.populations),populationsIsArray:!(!e||!Array.isArray(e.populations)),populationCount:e&&e.populations?e.populations.length:0},"system"),!e||!Array.isArray(e.populations)){const t="Invalid populations response from API";throw this.loggingSubsystem&&this.loggingSubsystem.error(t,{response:e},"system"),new Error(t)}return this.loggingSubsystem&&this.loggingSubsystem.info(`Successfully loaded ${e.populations.length} populations from API`,{},"system"),e.populations}catch(e){throw this.loggingSubsystem&&this.loggingSubsystem.error("API call to /api/populations failed",{error:e.message,stack:e.stack},"system"),e}}async populateDropdown(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{this.loggingSubsystem&&this.loggingSubsystem.debug(`Starting population dropdown population for: ${e}`,t,"system");const{includeEmpty:s=!0,emptyText:i="Select a population",emptyValue:n="",filter:a=null,sortBy:l="name",sortOrder:c="asc"}=t;this.registerDropdown(e,t);const d=document.getElementById(e);if(!d){const t=`Dropdown element not found: ${e}`;throw this.loggingSubsystem&&this.loggingSubsystem.error(t,{},"system"),new Error(t)}this.loggingSubsystem&&this.loggingSubsystem.debug(`Dropdown element found, showing loading state for: ${e}`,{},"system"),this.showDropdownLoading(d),this.loggingSubsystem&&this.loggingSubsystem.debug(`Loading populations for dropdown: ${e}`,{},"system");const g=await this.loadPopulations();let u=g;if(a&&"function"==typeof a&&(u=g.filter(a)),u=this.sortPopulations(u,l,c),d.innerHTML="",s){const e=document.createElement("option");e.value=n,e.textContent=i,d.appendChild(e)}return u.forEach(e=>{const t=document.createElement("option");t.value=e.id,t.textContent=e.name,t.dataset.populationId=e.id,t.dataset.populationName=e.name,d.appendChild(t)}),this.hideDropdownLoading(d),this.eventBus&&this.eventBus.emit("dropdownPopulated",{dropdownId:e,populationCount:u.length}),this.loggingSubsystem&&this.loggingSubsystem.debug("Dropdown populated successfully",{dropdownId:e,populationCount:u.length},"system"),!0}catch(t){return this.loggingSubsystem&&this.loggingSubsystem.error("Failed to populate dropdown",{dropdownId:e,error:t.message},"system"),this.showDropdownError(e,t.message),this.eventBus&&this.eventBus.emit("dropdownPopulationFailed",{dropdownId:e,error:t.message}),!1}}registerDropdown(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.managedDropdowns.add(e),this.dropdownConfigs.set(e,t),this.loggingSubsystem&&this.loggingSubsystem.debug("Dropdown registered",{dropdownId:e},"system")}async refreshAllDropdowns(){try{const e=Array.from(this.managedDropdowns).map(e=>{const t=this.dropdownConfigs.get(e)||{};return this.populateDropdown(e,t)});await Promise.all(e),this.loggingSubsystem&&this.loggingSubsystem.info("All dropdowns refreshed",{count:this.managedDropdowns.size},"system")}catch(e){this.loggingSubsystem&&this.loggingSubsystem.error("Failed to refresh all dropdowns",e,"system")}}async refreshPopulations(){try{await this.loadPopulations({force:!0}),await this.refreshAllDropdowns(),this.loggingSubsystem&&this.loggingSubsystem.info("Populations refreshed successfully",{},"system")}catch(e){this.loggingSubsystem&&this.loggingSubsystem.error("Failed to refresh populations",e,"system")}}sortPopulations(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"name",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"asc";return e.sort((e,i)=>{let n=e[t],a=i[t];"string"==typeof n&&"string"==typeof a&&(n=n.toLowerCase(),a=a.toLowerCase());let l=0;return n<a?l=-1:n>a&&(l=1),"desc"===s?-l:l})}showDropdownLoading(e){e.innerHTML='<option value="">Loading populations...</option>',e.disabled=!0,e.classList.add("loading")}hideDropdownLoading(e){e.disabled=!1,e.classList.remove("loading")}showDropdownError(e,t){const s=document.getElementById(e);s&&(s.innerHTML=`<option value="">Error: ${t}</option>`,s.disabled=!1,s.classList.add("error"))}cachePopulations(e){this.populationCache.set("populations",e),this.lastCacheUpdate=Date.now();try{localStorage.setItem("pingone-populations-cache",JSON.stringify({populations:e,timestamp:this.lastCacheUpdate}))}catch(e){this.loggingSubsystem&&this.loggingSubsystem.warn("Failed to save populations to localStorage",e,"system")}}getCachedPopulations(){return this.populationCache.get("populations")||[]}isCacheValid(){if(!this.lastCacheUpdate)return!1;return Date.now()-this.lastCacheUpdate<this.cacheExpiry}loadCachedPopulations(){try{const e=localStorage.getItem("pingone-populations-cache");if(e){const{populations:t,timestamp:s}=JSON.parse(e),i=Date.now()-s;i<this.cacheExpiry&&(this.populationCache.set("populations",t),this.lastCacheUpdate=s,this.loggingSubsystem&&this.loggingSubsystem.debug("Loaded populations from localStorage cache",{count:t.length,age:Math.round(i/1e3)},"system"))}}catch(e){this.loggingSubsystem&&this.loggingSubsystem.warn("Failed to load populations from localStorage",e,"system")}}invalidateCache(){this.populationCache.clear(),this.lastCacheUpdate=null;try{localStorage.removeItem("pingone-populations-cache")}catch(e){}this.loggingSubsystem&&this.loggingSubsystem.debug("Population cache invalidated",{},"system")}clearCache(){this.invalidateCache(),this.loggingSubsystem&&this.loggingSubsystem.debug("Population cache cleared",{},"system")}async getPopulationById(e){try{return(await this.loadPopulations()).find(t=>t.id===e)||null}catch(t){return this.loggingSubsystem&&this.loggingSubsystem.error("Failed to get population by ID",{populationId:e,error:t.message},"system"),null}}async searchPopulations(e){try{const t=await this.loadPopulations(),s=e.toLowerCase();return t.filter(e=>e.name.toLowerCase().includes(s)||e.description&&e.description.toLowerCase().includes(s))}catch(t){return this.loggingSubsystem&&this.loggingSubsystem.error("Failed to search populations",{searchTerm:e,error:t.message},"system"),[]}}getCacheStats(){return{isValid:this.isCacheValid(),lastUpdate:this.lastCacheUpdate,age:this.lastCacheUpdate?Date.now()-this.lastCacheUpdate:null,populationCount:this.getCachedPopulations().length,managedDropdowns:this.managedDropdowns.size}}}s.PopulationSubsystem=PopulationSubsystem;s.default=PopulationSubsystem},{}],60:[function(e,t,s){(function(t){(function(){"use strict";var i=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.ProgressManager=void 0;var n=e("./winston-logger.js");e("./element-registry.js"),e("./session-manager.js"),i(e("./message-formatter.js"));const a="production"!==(void 0!==t&&t.env?t.env.NODE_ENV:"development");class ProgressManager{constructor(){this.logger=(0,n.createWinstonLogger)("pingone-progress"),this.isEnabled=!0,this.currentOperation=null,this.currentSessionId=null,this.isActive=!1,this.startTime=null,this.timingInterval=null,this.progressCallback=null,this.completeCallback=null,this.cancelCallback=null,this.duplicateHandlingMode="skip",this.socket=null,this.websocket=null,this.connectionType=null,this.connectionRetries=0,this.maxRetries=3,this.stats={processed:0,success:0,failed:0,skipped:0,total:0},this.logger.debug("ProgressManager initialized")}initialize(){try{this.setupElements(),this.setupEventListeners(),this.logger.info("Enhanced progress manager initialized successfully")}catch(e){this.logger.error("Failed to initialize progress manager",{error:e.message})}}setupElements(){try{this.progressContainer=document.getElementById("progress-container"),this.progressContainer||(this.logger.info("Main progress container not found - will use operation-specific containers"),this.isEnabled=!0),this.logger.info("Progress container found",{id:this.progressContainer.id,className:this.progressContainer.className,display:this.progressContainer.style.display,visibility:this.progressContainer.style.visibility,offsetParent:null!==this.progressContainer.offsetParent}),this.progressContainer.innerHTML='\n                <div class="progress-overlay">\n                    <div class="progress-modal">\n                        <div class="progress-header">\n                            <div class="operation-info">\n                                <h3 class="operation-title">\n                                    <i class="fas fa-cog fa-spin"></i>\n                                    <span class="title-text">Operation in Progress</span>\n                                </h3>\n                                <div class="operation-subtitle">Processing your request...</div>\n                            </div>\n                            <button class="cancel-operation" type="button" aria-label="Cancel operation">\n                                <i class="fas fa-times"></i>\n                                <span>Cancel</span>\n                            </button>\n                        </div>\n                        \n                        <div class="progress-content">\n                            <div class="progress-steps">\n                                <div class="step active" data-step="init">\n                                    <div class="step-icon">\n                                        <i class="fas fa-play"></i>\n                                    </div>\n                                    <div class="step-label">Initializing</div>\n                                </div>\n                                <div class="step" data-step="validate">\n                                    <div class="step-icon">\n                                        <i class="fas fa-check"></i>\n                                    </div>\n                                    <div class="step-label">Validating</div>\n                                </div>\n                                <div class="step" data-step="process">\n                                    <div class="step-icon">\n                                        <i class="fas fa-cogs"></i>\n                                    </div>\n                                    <div class="step-label">Processing</div>\n                                </div>\n                                <div class="step" data-step="complete">\n                                    <div class="step-icon">\n                                        <i class="fas fa-check-circle"></i>\n                                    </div>\n                                    <div class="step-label">Complete</div>\n                                </div>\n                            </div>\n                            \n                            <div class="progress-main">\n                                <div class="progress-bar-container">\n                                    <div class="progress-bar">\n                                        <div class="progress-bar-fill"></div>\n                                        <div class="progress-bar-glow"></div>\n                                    </div>\n                                    <div class="progress-percentage">0%</div>\n                                </div>\n                                \n                                <div class="progress-text">Preparing operation...</div>\n                                \n                                <div class="progress-stats">\n                                    <div class="stat-item">\n                                        <span class="stat-label">Processed:</span>\n                                        <span class="stat-value processed">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Success:</span>\n                                        <span class="stat-value success">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Failed:</span>\n                                        <span class="stat-value failed">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Skipped:</span>\n                                        <span class="stat-value skipped">0</span>\n                                    </div>\n                                </div>\n                                \n                                <div class="progress-timing">\n                                    <div class="time-elapsed">\n                                        <i class="fas fa-clock"></i>\n                                        <span>Time: <span class="elapsed-value">00:00</span></span>\n                                    </div>\n                                    <div class="time-remaining">\n                                        <i class="fas fa-hourglass-half"></i>\n                                        <span>ETA: <span class="eta-value">Calculating...</span></span>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div class="progress-details">\n                                <div class="details-header">\n                                    <h4><i class="fas fa-info-circle"></i> Operation Details</h4>\n                                </div>\n                                <div class="details-content">\n                                    <div class="detail-item">\n                                        <span class="detail-label">Operation Type:</span>\n                                        <span class="detail-value operation-type">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Session ID:</span>\n                                        <span class="detail-value session-id">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Population:</span>\n                                        <span class="detail-value population-info">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Connection:</span>\n                                        <span class="detail-value connection-type">-</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ',this.logger.debug("Progress elements setup completed")}catch(e){this.logger.error("Error setting up progress elements",{error:e.message}),this.isEnabled=!1}}setupEventListeners(){if(this.isEnabled)try{const e=this.progressContainer.querySelector(".cancel-operation");e&&e.addEventListener("click",()=>this.cancelOperation());const t=this.progressContainer.querySelector(".close-progress-btn");t&&t.addEventListener("click",()=>this.hideProgress()),this.logger.debug("Progress event listeners setup completed")}catch(e){this.logger.error("Error setting up progress event listeners",{error:e.message})}else this.logger.warn("Progress manager not enabled - skipping event listener setup")}startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.isEnabled?(this.currentOperation=e,this.isActive=!0,this.startTime=Date.now(),this.resetOperationStats(),this.selectProgressContainer(e),this.progressContainer||this.createFallbackProgressContainer(e),this.progressContainer?(this.initializeProgressContainer(),this.updateOperationTitle(e),this.updateOperationDetails(t),this.showProgress(),this.startTimingUpdates(),this.logger.info("Operation started",{operationType:e,options:t})):this.logger.error("No progress container available for operation",{operationType:e})):this.logger.warn("Progress manager not enabled - cannot start operation")}selectProgressContainer(e){if(this.progressContainer&&this.progressContainer.parentNode)return;const t={import:"progress-container",delete:"progress-container-delete",modify:"progress-container-modify",export:"progress-container-export"}[e]||"progress-container";this.progressContainer=document.getElementById(t),this.progressContainer||(this.progressContainer=document.getElementById("progress-container")),this.progressContainer?this.logger.info("Selected progress container",{id:this.progressContainer.id,operationType:e}):this.logger.warn("No progress container found for operation",{operationType:e})}createFallbackProgressContainer(e){try{const t=document.createElement("div");t.id="progress-container-fallback",t.className="progress-container visible",t.style.cssText="\n                display: block !important;\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0,0,0,0.7);\n                z-index: 10000;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            ",document.body.appendChild(t),this.progressContainer=t,this.logger.info("Created fallback progress container",{operationType:e})}catch(e){this.logger.error("Failed to create fallback progress container",{error:e.message})}}initializeProgressContainer(){this.progressContainer&&!this.progressContainer.querySelector(".progress-overlay")&&(this.setupElements(),this.setupEventListeners())}initializeRealTimeConnection(e){e?(this.currentSessionId=e,this.connectionRetries=0,this.trySocketIOConnection(e)):this.logger.warn("No session ID provided for real-time connection")}trySocketIOConnection(e){try{if("undefined"!=typeof io)this.logger.info("Using global Socket.IO client"),this.connectWithSocketIO(io,e);else{this.logger.info("Loading Socket.IO client dynamically");const t=document.createElement("script");t.src="/socket.io/socket.io.js",t.async=!0,t.onload=()=>{this.logger.info("Socket.IO client loaded successfully"),"undefined"!=typeof io?this.connectWithSocketIO(io,e):(this.logger.warn("Socket.IO loaded but io is undefined, trying WebSocket"),this.tryWebSocketConnection(e))},t.onerror=t=>{this.logger.warn("Failed to load Socket.IO client script",{error:t.message}),this.tryWebSocketConnection(e)},document.head.appendChild(t)}}catch(t){this.logger.warn("Socket.IO connection setup failed, trying WebSocket",{error:t.message}),this.tryWebSocketConnection(e)}}reconnectSocketIO(e){this.isReconnecting||(this.isReconnecting=!0,this.logger.info("Attempting to reconnect Socket.IO",{sessionId:e}),console.log("🔄 [PROGRESS] Attempting to reconnect Socket.IO"),this.socket&&(this.socket.close(),this.socket=null),setTimeout(()=>{this.trySocketIOConnection(e),this.isReconnecting=!1},1e3))}connectWithSocketIO(e,t){try{this.socket=e("/",{transports:["websocket","polling"],timeout:5e3,forceNew:!0}),this.socket.on("connect",()=>{this.connectionType="socketio",this.updateConnectionType("Socket.IO"),this.logger.info("Socket.IO connected",{sessionId:t,socketId:this.socket.id}),console.log(`🔌 [PROGRESS] Socket.IO connected (ID: ${this.socket.id})`),this.socket.emit("registerSession",t),this.socket.emit("join-session",{sessionId:t})}),this.socket.on("progress",e=>{console.log("🔄 [PROGRESS] Received progress event:",e),this.handleProgressEvent(e)}),this.socket.on("completion",e=>{console.log("✅ [PROGRESS] Received completion event:",e),this.handleCompletionEvent(e)}),this.socket.on("complete",e=>{console.log("✅ [PROGRESS] Received complete event:",e),this.handleCompletionEvent(e)}),this.socket.on("error",e=>{console.log("❌ [PROGRESS] Received error event:",e),this.handleErrorEvent(e)}),this.socket.on("disconnect",()=>{console.log("🔌 [PROGRESS] Socket.IO disconnected"),this.logger.warn("Socket.IO disconnected"),this.handleConnectionFailure()}),this.socket.on("connect_error",e=>{console.log("❌ [PROGRESS] Socket.IO connection error:",e.message),this.logger.warn("Socket.IO connection error",{error:e.message}),this.handleConnectionFailure()})}catch(e){this.logger.warn("Socket.IO connection failed, trying WebSocket",{error:e.message}),this.tryWebSocketConnection(t)}}tryWebSocketConnection(e){try{const t=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.host}/ws`;this.websocket=new WebSocket(t),this.websocket.onopen=()=>{this.connectionType="websocket",this.updateConnectionType("WebSocket"),this.logger.info("WebSocket connected",{sessionId:e}),this.websocket.send(JSON.stringify({type:"join-session",sessionId:e}))},this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);switch(t.type){case"progress":this.handleProgressEvent(t);break;case"complete":this.handleCompletionEvent(t);break;case"error":this.handleErrorEvent(t)}}catch(e){this.logger.error("Error parsing WebSocket message",{error:e.message})}},this.websocket.onclose=e=>{this.logger.warn("WebSocket closed",{code:e.code,reason:e.reason}),this.handleConnectionFailure()},this.websocket.onerror=e=>{this.logger.error("WebSocket error",{error:e.message}),this.handleConnectionFailure()}}catch(e){this.logger.error("WebSocket connection failed",{error:e.message}),this.handleConnectionFailure()}}handleConnectionFailure(){this.connectionRetries++,this.connectionRetries<=this.maxRetries?(this.logger.info("Retrying connection",{attempt:this.connectionRetries,maxRetries:this.maxRetries}),setTimeout(()=>{this.currentSessionId&&this.initializeRealTimeConnection(this.currentSessionId)},1e3*this.connectionRetries)):(this.logger.warn("Max connection retries reached, falling back to polling"),this.updateConnectionType("Polling (Fallback)"))}closeConnections(){this.socket&&(this.socket.disconnect(),this.socket=null),this.websocket&&(this.websocket.close(1e3,"Operation completed"),this.websocket=null),this.connectionType=null,this.logger.debug("Real-time connections closed")}updateSessionId(e){if(!e)return void this.logger.warn("No session ID provided for update");this.currentSessionId=e;const t=this.progressContainer.querySelector(".detail-value.session-id");t&&(t.textContent=e),this.logger.info("Session ID updated",{sessionId:e})}handleProgressEvent(e){if(!e)return void this.logger.warn("No progress data received");const{current:t,total:s,message:i,counts:n}=e;this.updateProgress(t,s,i,n),this.logger.debug("Progress event handled",{current:t,total:s,message:i})}handleCompletionEvent(e){this.completeOperation(e),this.logger.info("Completion event handled",{data:e})}handleErrorEvent(e){const{message:t,details:s}=e;this.handleOperationError(t,s),this.logger.error("Error event handled",{message:t,details:s})}updateProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this.isEnabled||!this.progressContainer)return void this.logger.warn("Progress manager not enabled or container not found");const n=this.progressContainer.querySelector(".progress-bar-fill");if(n){const s=t>0?Math.min(100,Math.round(e/t*100)):0;n.style.width=`${s}%`}const a=this.progressContainer.querySelector(".progress-percentage");if(a){const s=t>0?Math.min(100,Math.round(e/t*100)):0;a.textContent=`${s}%`}const l=this.progressContainer.querySelector(".progress-text");if(l&&s&&(l.textContent=s),t>0){const s=e/t*100;this.updateStepIndicatorBasedOnProgress(s)}i&&"object"==typeof i&&(this.stats={...this.stats,...i},this.updateStatsDisplay()),this.logger.debug("Progress updated",{current:e,total:t,message:s,details:i})}updateStatsDisplay(){this.progressContainer&&(Object.entries(this.stats).forEach(e=>{let[t,s]=e;const i=this.progressContainer.querySelector(`.stat-value.${t}`);i&&(i.textContent=s||0)}),this.logger.debug("Statistics display updated",{stats:this.stats}))}updateStepIndicatorBasedOnProgress(e){let t="init";e>=100?t="complete":e>=75?t="process":e>=25&&(t="validate"),this.updateStepIndicator(t)}updateStepIndicator(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelectorAll(".step");t.forEach(e=>{e.classList.remove("active","completed")});const s=this.progressContainer.querySelector(`[data-step="${e}"]`);s&&s.classList.add("active");const i=this.getStepOrder(e);t.forEach(e=>{const t=e.getAttribute("data-step");this.getStepOrder(t)<i&&e.classList.add("completed")}),this.logger.debug("Step indicator updated",{step:e})}getStepOrder(e){return{init:0,validate:1,process:2,complete:3}[e]||0}startTimingUpdates(){this.timingInterval&&clearInterval(this.timingInterval),this.timingInterval=setInterval(()=>{this.updateTiming()},1e3),this.logger.debug("Timing updates started")}updateTiming(){if(!this.startTime||!this.progressContainer)return;const e=Date.now()-this.startTime,t=this.progressContainer.querySelector(".elapsed-value");if(t&&(t.textContent=this.formatDuration(e)),this.stats.total>0&&this.stats.processed>0){const t=this.stats.processed/this.stats.total;if(t>0){const s=e/t-e,i=this.progressContainer.querySelector(".eta-value");i&&(i.textContent=this.formatDuration(s))}}this.logger.debug("Timing updated",{elapsed:e})}completeOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.isEnabled)return void this.logger.warn("Progress manager not enabled - cannot complete operation");this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections();const{processed:t,success:s,failed:i,skipped:n}=e;this.updateProgress(t||0,t||0,"Operation completed"),this.stats={...this.stats,...e},this.updateStatsDisplay(),this.updateStepIndicator("complete"),this.completeCallback&&"function"==typeof this.completeCallback&&this.completeCallback(e),this.isActive=!1,this.logger.info("Operation completed",{results:e})}handleOperationError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isEnabled)return void this.logger.warn("Progress manager not enabled - cannot handle error");this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections();const s=this.progressContainer.querySelector(".progress-text");s&&(s.textContent=`Error: ${e}`,s.classList.add("error")),this.isActive=!1,this.logger.error("Operation error",{message:e,details:t})}cancelOperation(){this.isEnabled&&this.isActive?(this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections(),this.cancelCallback&&"function"==typeof this.cancelCallback&&this.cancelCallback(),this.isActive=!1,this.hideProgress(),this.logger.info("Operation cancelled")):this.logger.warn("No active operation to cancel")}showProgress(){if(!this.isEnabled||!this.progressContainer)return void this.logger.warn("Progress manager not enabled or container not found");this.progressContainer.style.display="block",this.progressContainer.classList.add("visible"),this.progressContainer.setAttribute("style","display: block !important; visibility: visible !important;");const e=this.progressContainer.querySelector(".cancel-operation");e&&e.focus(),this.logger.debug("Progress display shown",{containerId:this.progressContainer.id}),console.log(`🔍 [PROGRESS] Showing progress container: ${this.progressContainer.id}`)}hideProgress(){this.progressContainer&&(this.logger.debug("Hiding progress display",{containerId:this.progressContainer.id}),console.log(`🔍 [PROGRESS] Hiding progress container: ${this.progressContainer.id}`),this.progressContainer.classList.remove("visible"),this.progressContainer.style.display="none",this.logger.debug("Progress display hidden"))}updateOperationTitle(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelector(".title-text");if(t){const s={import:"Import Users",export:"Export Users",delete:"Delete Users",modify:"Modify Users"};t.textContent=s[e]||"Operation in Progress"}this.logger.debug("Operation title updated",{operationType:e})}updateOperationDetails(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.progressContainer)return;const{populationName:t,populationId:s,totalUsers:i}=e,n=this.progressContainer.querySelector(".detail-value.operation-type");n&&(n.textContent=this.currentOperation||"Unknown");const a=this.progressContainer.querySelector(".detail-value.population-info");a&&(a.textContent=t||s||"Unknown"),i&&(this.stats.total=i,this.updateStatsDisplay()),this.logger.debug("Operation details updated",{options:e})}updateOperationStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(!this.progressContainer)return;const s=this.progressContainer.querySelector(".operation-subtitle");s&&(s.textContent=t||e),this.logger.debug("Operation status updated",{status:e,message:t})}updateConnectionType(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelector(".detail-value.connection-type");t&&(t.textContent=e),this.logger.debug("Connection type updated",{type:e})}resetOperationStats(){this.stats={processed:0,success:0,failed:0,skipped:0,total:0},this.updateStatsDisplay(),this.logger.debug("Operation statistics reset")}formatDuration(e){const t=Math.floor(e/1e3),s=Math.floor(t/60),i=Math.floor(s/60);return i>0?`${i}:${String(s%60).padStart(2,"0")}:${String(t%60).padStart(2,"0")}`:s>0?`${s}:${String(t%60).padStart(2,"0")}`:`${t}s`}setProgressCallback(e){this.progressCallback=e,this.logger.debug("Progress callback set")}setCompleteCallback(e){this.completeCallback=e,this.logger.debug("Completion callback set")}setCancelCallback(e){this.cancelCallback=e,this.logger.debug("Cancel callback set")}debugLog(e,t){a&&this.logger.debug(`[${e}] ${t}`)}destroy(){this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections(),this.progressCallback=null,this.completeCallback=null,this.cancelCallback=null,this.isActive=!1,this.currentOperation=null,this.currentSessionId=null,this.logger.info("Progress manager destroyed")}}s.ProgressManager=ProgressManager;const l=new ProgressManager;s.default=l}).call(this)}).call(this,e("_process"))},{"./element-registry.js":48,"./message-formatter.js":57,"./session-manager.js":62,"./winston-logger.js":71,"@babel/runtime/helpers/interopRequireDefault":2,_process:29}],61:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.ProgressSubsystem=void 0;class ProgressSubsystem{constructor(e,t,s,i){this.logger=e,this.uiManager=t,this.eventBus=s,this.realtimeComm=i,this.currentOperation=null,this.isActive=!1,this.stats={processed:0,successful:0,failed:0,total:0,errors:[]},this.progressContainer=null,this.progressBar=null,this.statusText=null,this.detailsContainer=null,this.setupEventListeners(),this.logger.info("Progress Subsystem initialized")}async init(){try{this.initializeProgressElements(),this.setupRealtimeListeners(),this.logger.info("Progress Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Progress Subsystem",e),e}}initializeProgressElements(){this.progressContainer=document.getElementById("progress-container"),this.progressBar=document.querySelector(".progress-bar"),this.statusText=document.querySelector(".progress-status"),this.detailsContainer=document.querySelector(".progress-details"),this.progressContainer||(this.logger.warn("Progress container not found, creating dynamic elements"),this.createProgressElements())}createProgressElements(){const e=document.createElement("div");e.id="progress-container",e.className="progress-container",e.style.display="none",e.innerHTML='\n            <div class="progress-header">\n                <h3 class="progress-title">Operation Progress</h3>\n                <button class="progress-close" aria-label="Close progress">×</button>\n            </div>\n            <div class="progress-content">\n                <div class="progress-bar-container">\n                    <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">\n                        <div class="progress-fill"></div>\n                    </div>\n                    <div class="progress-percentage">0%</div>\n                </div>\n                <div class="progress-status">Ready</div>\n                <div class="progress-details">\n                    <div class="progress-stats">\n                        <span class="stat-item">Processed: <span class="stat-processed">0</span></span>\n                        <span class="stat-item">Successful: <span class="stat-successful">0</span></span>\n                        <span class="stat-item">Failed: <span class="stat-failed">0</span></span>\n                        <span class="stat-item">Total: <span class="stat-total">0</span></span>\n                    </div>\n                    <div class="progress-errors" style="display: none;">\n                        <h4>Errors:</h4>\n                        <ul class="error-list"></ul>\n                    </div>\n                </div>\n            </div>\n        ',document.body.appendChild(e),this.progressContainer=e,this.progressBar=e.querySelector(".progress-bar"),this.statusText=e.querySelector(".progress-status"),this.detailsContainer=e.querySelector(".progress-details");const t=e.querySelector(".progress-close");t?.addEventListener("click",()=>this.hide())}setupEventListeners(){this.eventBus.on("operation:started",e=>{this.startOperation(e.type,e.options)}),this.eventBus.on("operation:progress",e=>{this.updateProgress(e)}),this.eventBus.on("operation:completed",e=>{this.completeOperation(e)}),this.eventBus.on("operation:error",e=>{this.handleError(e)})}setupRealtimeListeners(){this.realtimeComm&&(this.realtimeComm.on("progress",e=>{this.updateProgress(e)}),this.realtimeComm.on("operation-complete",e=>{this.completeOperation(e)}),this.realtimeComm.on("operation-error",e=>{this.handleError(e)}))}startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.currentOperation=e,this.isActive=!0,this.stats={processed:0,successful:0,failed:0,total:t.total||0,errors:[]},this.show(),this.updateOperationDetails(t),this.updateStatus(`Starting ${e} operation...`),this.updateProgressBar(0),this.logger.info("Operation started",{type:e,options:t}),this.eventBus.emit("progress:operation-started",{type:e,options:t})}updateProgress(e){this.isActive&&(void 0!==e.processed&&(this.stats.processed=e.processed),void 0!==e.successful&&(this.stats.successful=e.successful),void 0!==e.failed&&(this.stats.failed=e.failed),void 0!==e.total&&(this.stats.total=e.total),e.error&&this.stats.errors.push(e.error),this.updateProgressBar(),this.updateStatsDisplay(),e.message&&this.updateStatus(e.message),this.logger.debug("Progress updated",{stats:this.stats,message:e.message}),this.eventBus.emit("progress:updated",{stats:this.stats,data:e}))}updateProgressBar(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(!this.progressBar)return;let t=e;if(null===t&&this.stats.total>0&&(t=Math.round(this.stats.processed/this.stats.total*100)),null!==t){const e=this.progressBar.querySelector(".progress-fill"),s=this.progressContainer?.querySelector(".progress-percentage");e&&(e.style.width=`${t}%`),s&&(s.textContent=`${t}%`),this.progressBar.setAttribute("aria-valuenow",t.toString())}}updateStatsDisplay(){if(!this.detailsContainer)return;const e={processed:this.detailsContainer.querySelector(".stat-processed"),successful:this.detailsContainer.querySelector(".stat-successful"),failed:this.detailsContainer.querySelector(".stat-failed"),total:this.detailsContainer.querySelector(".stat-total")};Object.keys(e).forEach(t=>{e[t]&&(e[t].textContent=this.stats[t].toString())}),this.stats.errors.length>0&&this.updateErrorsDisplay()}updateErrorsDisplay(){const e=this.detailsContainer?.querySelector(".progress-errors"),t=this.detailsContainer?.querySelector(".error-list");e&&t&&(e.style.display="block",t.innerHTML="",this.stats.errors.slice(-5).forEach(e=>{const s=document.createElement("li");s.textContent=e.message||e.toString(),s.className="error-item",t.appendChild(s)}))}updateOperationDetails(e){const t=this.progressContainer?.querySelector(".progress-title");t&&(t.textContent=`${this.currentOperation} Operation Progress`),e.populationName&&this.updateStatus(`Processing population: ${e.populationName}`)}updateStatus(e){this.statusText&&(this.statusText.textContent=e),this.logger.debug("Status updated",{message:e})}completeOperation(e){this.isActive=!1;const t=0===this.stats.failed,s=t?`${this.currentOperation} completed successfully! Processed ${this.stats.processed} items.`:`${this.currentOperation} completed with ${this.stats.failed} errors. Processed ${this.stats.processed} items.`;this.updateStatus(s),this.updateProgressBar(100),t&&setTimeout(()=>this.hide(),3e3),this.logger.info("Operation completed",{type:this.currentOperation,stats:this.stats,success:t}),this.eventBus.emit("progress:operation-completed",{type:this.currentOperation,stats:this.stats,success:t,data:e})}handleError(e){this.stats.errors.push(e),this.stats.failed++,this.updateStatsDisplay(),this.updateStatus(`Error: ${e.message||e.toString()}`),this.logger.error("Operation error",e),this.eventBus.emit("progress:error",{error:e,stats:this.stats})}show(){this.progressContainer&&(this.progressContainer.style.display="block",this.progressContainer.classList.add("active")),this.eventBus.emit("progress:shown")}hide(){this.progressContainer&&(this.progressContainer.style.display="none",this.progressContainer.classList.remove("active")),this.isActive=!1,this.eventBus.emit("progress:hidden")}reset(){this.currentOperation=null,this.isActive=!1,this.stats={processed:0,successful:0,failed:0,total:0,errors:[]},this.updateProgressBar(0),this.updateStatsDisplay(),this.updateStatus("Ready"),this.logger.info("Progress subsystem reset"),this.eventBus.emit("progress:reset")}getState(){return{currentOperation:this.currentOperation,isActive:this.isActive,stats:{...this.stats}}}destroy(){this.hide(),this.isActive=!1,this.progressContainer&&this.progressContainer.parentNode&&this.progressContainer.parentNode.removeChild(this.progressContainer),this.logger.info("Progress Subsystem destroyed"),this.eventBus.emit("progress:destroyed")}}s.ProgressSubsystem=ProgressSubsystem;s.default=ProgressSubsystem},{}],62:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.sessionManager=s.default=void 0;var i=e("./winston-logger.js");const n=s.sessionManager=new class SessionManager{constructor(){this.logger=(0,i.createWinstonLogger)({service:"pingone-import-session",environment:t.env.NODE_ENV||"development"}),this.activeSessions=new Map,this.sessionCounter=0}generateSessionId(){try{const e=Date.now(),t=Math.random().toString(36).substring(2,15),s=`session_${e}_${t}_${++this.sessionCounter}`;return this.logger.debug("Session ID generated",{sessionId:s}),s}catch(e){return this.logger.error("Error generating session ID",{error:e.message}),`session_${Date.now()}_${Math.random().toString(36).substring(2,8)}`}}validateSessionId(e){try{if(!e||"string"!=typeof e)return this.logger.warn("Session ID validation failed: null/undefined/non-string",{sessionId:e,type:typeof e}),!1;if(""===e.trim())return this.logger.warn("Session ID validation failed: empty string"),!1;if(e.length<8)return this.logger.warn("Session ID validation failed: too short",{length:e.length}),!1;return/^[a-zA-Z0-9_-]+$/.test(e)?(this.logger.debug("Session ID validation passed",{sessionId:e}),!0):(this.logger.warn("Session ID validation failed: invalid characters",{sessionId:e}),!1)}catch(t){return this.logger.error("Error validating session ID",{error:t.message,sessionId:e}),!1}}registerSession(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{if(!this.validateSessionId(e))return this.logger.error("Cannot register invalid session ID",{sessionId:e,operationType:t}),!1;const i={sessionId:e,operationType:t,createdAt:Date.now(),lastActivity:Date.now(),metadata:s};return this.activeSessions.set(e,i),this.logger.info("Session registered",{sessionId:e,operationType:t,metadata:s}),!0}catch(s){return this.logger.error("Error registering session",{error:s.message,sessionId:e,operationType:t}),!1}}updateSessionActivity(e){try{const t=this.activeSessions.get(e);t?(t.lastActivity=Date.now(),this.logger.debug("Session activity updated",{sessionId:e})):this.logger.warn("Session not found for activity update",{sessionId:e})}catch(t){this.logger.error("Error updating session activity",{error:t.message,sessionId:e})}}unregisterSession(e){try{const t=this.activeSessions.get(e);t?(this.activeSessions.delete(e),this.logger.info("Session unregistered",{sessionId:e,operationType:t.operationType})):this.logger.warn("Session not found for unregistration",{sessionId:e})}catch(t){this.logger.error("Error unregistering session",{error:t.message,sessionId:e})}}getSession(e){try{return this.activeSessions.get(e)||null}catch(t){return this.logger.error("Error getting session",{error:t.message,sessionId:e}),null}}getActiveSessions(){try{return Array.from(this.activeSessions.values())}catch(e){return this.logger.error("Error getting active sessions",{error:e.message}),[]}}cleanupExpiredSessions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:36e5;try{const t=Date.now(),s=[];for(const[i,n]of this.activeSessions.entries())t-n.lastActivity>e&&s.push(i);s.forEach(e=>{this.unregisterSession(e)}),s.length>0&&this.logger.info("Cleaned up expired sessions",{count:s.length})}catch(e){this.logger.error("Error cleaning up expired sessions",{error:e.message})}}getSessionStats(){try{const e=this.getActiveSessions(),t={total:e.length,byOperation:{},oldest:null,newest:null};return e.forEach(e=>{t.byOperation[e.operationType]=(t.byOperation[e.operationType]||0)+1,(!t.oldest||e.createdAt<t.oldest.createdAt)&&(t.oldest=e),(!t.newest||e.createdAt>t.newest.createdAt)&&(t.newest=e)}),t}catch(e){return this.logger.error("Error getting session stats",{error:e.message}),{total:0,byOperation:{},oldest:null,newest:null}}}};s.default=n}).call(this)}).call(this,e("_process"))},{"./winston-logger.js":71,_process:29}],63:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.SessionSubsystem=void 0;class SessionSubsystem{constructor(e,t,s){this.logger=e,this.settingsSubsystem=t,this.eventBus=s,this.currentSession=null,this.activeSessions=new Map,this.sessionTimeout=18e5,this.cleanupInterval=null,this.activityTimer=null,this.config={maxSessions:10,sessionTimeout:18e5,activityCheckInterval:6e4,autoCleanup:!0},this.setupEventListeners(),this.logger.info("Session Subsystem initialized")}async init(){try{await this.loadConfiguration(),this.startActivityMonitoring(),this.startCleanupProcess(),await this.createSession(),this.logger.info("Session Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Session Subsystem",e),e}}async loadConfiguration(){try{await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;e.session&&(this.config={...this.config,...e.session},this.sessionTimeout=this.config.sessionTimeout)}catch(e){this.logger.warn("Failed to load session configuration, using defaults",e)}}setupEventListeners(){this.eventBus.on("user:activity",()=>{this.updateActivity()}),this.eventBus.on("auth:login",e=>{this.handleLogin(e)}),this.eventBus.on("auth:logout",()=>{this.handleLogout()}),this.eventBus.on("settings:updated",e=>{e.session&&this.updateConfiguration(e.session)}),window.addEventListener("beforeunload",()=>{this.handleBeforeUnload()}),window.addEventListener("focus",()=>{this.updateActivity()});["mousedown","mousemove","keypress","scroll","touchstart","click"].forEach(e=>{document.addEventListener(e,()=>{this.updateActivity()},{passive:!0})})}async createSession(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const t=this.generateSessionId(),s={id:t,userId:e,createdAt:Date.now(),lastActivity:Date.now(),expiresAt:Date.now()+this.sessionTimeout,isActive:!0,metadata:{userAgent:navigator.userAgent,timestamp:(new Date).toISOString(),url:window.location.href}};return this.activeSessions.set(t,s),this.currentSession=s,this.activeSessions.size>this.config.maxSessions&&this.cleanupOldSessions(),this.logger.info("Session created",{sessionId:t,userId:e,totalSessions:this.activeSessions.size}),this.eventBus.emit("session:created",{session:s}),s}updateActivity(){if(!this.currentSession)return;const e=Date.now();this.currentSession.lastActivity=e,this.currentSession.expiresAt=e+this.sessionTimeout,this.activeSessions.set(this.currentSession.id,this.currentSession),this.logger.debug("Session activity updated",{sessionId:this.currentSession.id,lastActivity:new Date(e).toISOString()}),this.eventBus.emit("session:activity",{sessionId:this.currentSession.id,timestamp:e})}async handleLogin(e){this.currentSession?(this.currentSession.userId=e.userId,this.currentSession.lastActivity=Date.now(),this.activeSessions.set(this.currentSession.id,this.currentSession)):await this.createSession(e.userId),this.logger.info("User logged in",{userId:e.userId,sessionId:this.currentSession?.id}),this.eventBus.emit("session:login",{userId:e.userId,sessionId:this.currentSession?.id})}handleLogout(){this.currentSession&&this.endSession(this.currentSession.id),this.logger.info("User logged out"),this.eventBus.emit("session:logout")}endSession(e){const t=this.activeSessions.get(e);t&&(t.isActive=!1,t.endedAt=Date.now(),this.activeSessions.delete(e),this.currentSession&&this.currentSession.id===e&&(this.currentSession=null),this.logger.info("Session ended",{sessionId:e}),this.eventBus.emit("session:ended",{sessionId:e,session:t}))}startActivityMonitoring(){this.activityTimer&&clearInterval(this.activityTimer),this.activityTimer=setInterval(()=>{this.checkSessionExpiry()},this.config.activityCheckInterval),this.logger.debug("Activity monitoring started")}checkSessionExpiry(){const e=Date.now(),t=[];this.activeSessions.forEach((s,i)=>{s.expiresAt<e&&t.push(i)}),t.forEach(e=>{this.logger.info("Session expired",{sessionId:e}),this.endSession(e),this.eventBus.emit("session:expired",{sessionId:e})}),t.length>0&&this.logger.info("Expired sessions cleaned up",{count:t.length})}startCleanupProcess(){this.config.autoCleanup&&(this.cleanupInterval&&clearInterval(this.cleanupInterval),this.cleanupInterval=setInterval(()=>{this.cleanupOldSessions()},3e5),this.logger.debug("Cleanup process started"))}cleanupOldSessions(){const e=Array.from(this.activeSessions.values()).sort((e,t)=>t.lastActivity-e.lastActivity).slice(this.config.maxSessions);e.forEach(e=>{this.endSession(e.id)}),e.length>0&&this.logger.info("Old sessions cleaned up",{count:e.length})}updateConfiguration(e){this.config={...this.config,...e},this.sessionTimeout=this.config.sessionTimeout,this.startActivityMonitoring(),this.startCleanupProcess(),this.logger.info("Session configuration updated",this.config),this.eventBus.emit("session:config-updated",this.config)}handleBeforeUnload(){this.currentSession&&this.eventBus.emit("session:before-unload",{sessionId:this.currentSession.id})}generateSessionId(){return`session_${Date.now().toString(36)}_${Math.random().toString(36).substr(2,9)}`}getCurrentSession(){return this.currentSession}getSession(e){return this.activeSessions.get(e)}getActiveSessions(){return Array.from(this.activeSessions.values())}getActiveSessionCount(){return this.activeSessions.size}getSessionStats(){const e=this.getActiveSessions(),t=Date.now();return{totalSessions:e.length,activeSessions:e.filter(e=>e.isActive).length,expiredSessions:e.filter(e=>e.expiresAt<t).length,averageSessionDuration:this.calculateAverageSessionDuration(e),oldestSession:e.reduce((e,t)=>!e||t.createdAt<e.createdAt?t:e,null),newestSession:e.reduce((e,t)=>!e||t.createdAt>e.createdAt?t:e,null)}}calculateAverageSessionDuration(e){if(0===e.length)return 0;const t=e.reduce((e,t)=>e+((t.endedAt||Date.now())-t.createdAt),0);return Math.round(t/e.length)}exportSessionData(){const e=this.getActiveSessions(),t=this.getSessionStats();return{currentSession:this.currentSession,sessions:e.map(e=>({...e,duration:(e.endedAt||Date.now())-e.createdAt})),statistics:t,configuration:this.config,exportedAt:(new Date).toISOString()}}destroy(){this.activityTimer&&(clearInterval(this.activityTimer),this.activityTimer=null),this.cleanupInterval&&(clearInterval(this.cleanupInterval),this.cleanupInterval=null),this.activeSessions.forEach((e,t)=>{this.endSession(t)}),this.currentSession=null,this.activeSessions.clear(),this.logger.info("Session Subsystem destroyed"),this.eventBus.emit("session:destroyed")}}s.SessionSubsystem=SessionSubsystem;s.default=SessionSubsystem},{}],64:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SettingsManager=void 0;var i=e("./winston-logger.js"),n=e("./crypto-utils.js");s.SettingsManager=class SettingsManager{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.settings=this.getDefaultSettings(),this.storageKey="pingone-import-settings",this.encryptionKey=null,this.initializeLogger(e),this.encryptionInitialized=!1}async init(){try{await this.initializeEncryption(),this.encryptionInitialized=!0,this.logger.info("Settings manager initialized successfully")}catch(e){throw this.logger.error("Failed to initialize settings manager",{error:e.message}),e}}initializeLogger(e){e&&"function"==typeof e.child?this.logger=e.child({component:"settings-manager"}):this.logger=(0,i.createWinstonLogger)({service:"pingone-import-settings",environment:t.env.NODE_ENV||"development"})}createDefaultLogger(){var e=this;return{log:function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";return e.logger.log(s,`[Settings] ${t}`)},info:e=>this.logger.info(`[Settings] ${e}`),warn:e=>this.logger.warn(`[Settings] ${e}`),error:e=>this.logger.error(`[Settings] ${e}`),debug:e=>this.logger.debug(`[Settings] ${e}`)}}static getRegionInfo(e){if(!e)return{code:"NA",tld:"com",label:"North America (excluding Canada)"};const t={NA:{code:"NA",tld:"com",label:"North America (excluding Canada)"},CA:{code:"CA",tld:"ca",label:"Canada"},EU:{code:"EU",tld:"eu",label:"European Union"},AU:{code:"AU",tld:"com.au",label:"Australia"},SG:{code:"SG",tld:"sg",label:"Singapore"},AP:{code:"AP",tld:"asia",label:"Asia-Pacific"}};return t[e]||t.NA}getDefaultSettings(){return{environmentId:"",region:"NA",apiClientId:"",populationId:"",rateLimit:50,connectionStatus:"disconnected",connectionMessage:"Not connected",lastConnectionTest:null,autoSave:!0,lastUsedDirectory:"",theme:"light",pageSize:50,showNotifications:!0}}normalizeSettingsFields(e){if(!e||"object"!=typeof e)return e;const t={...e},s={"environment-id":"environmentId","api-client-id":"apiClientId","client-id":"apiClientId","api-secret":"apiSecret","client-secret":"apiSecret","population-id":"populationId","rate-limit":"rateLimit"};for(const[e,i]of Object.entries(s))e in t&&(t[i]=t[e],delete t[e],this.logger.debug(`Normalized field: ${e} -> ${i}`));return t.clientId&&!t.apiClientId&&(t.apiClientId=t.clientId,delete t.clientId,this.logger.debug("Normalized field: clientId -> apiClientId")),t.clientSecret&&!t.apiSecret&&(t.apiSecret=t.clientSecret,delete t.clientSecret,this.logger.debug("Normalized field: clientSecret -> apiSecret")),t}async loadSettings(){try{const e=localStorage.getItem(this.storageKey);if(!e)return this.logger.info("No stored settings found, using defaults"),this.settings;try{const t=JSON.parse(e),s=this.normalizeSettingsFields(t);return this.settings={...this.getDefaultSettings(),...s},this.logger.info("Settings loaded successfully (unencrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),this.settings}catch(t){if(!this.encryptionInitialized)return this.logger.warn("Encryption not initialized and JSON parsing failed, using defaults"),this.settings;try{const t=await n.CryptoUtils.decrypt(e,this.encryptionKey),s=JSON.parse(t),i=this.normalizeSettingsFields(s);return this.settings={...this.getDefaultSettings(),...i},this.logger.info("Settings loaded successfully (encrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),this.settings}catch(e){return this.logger.error("Failed to decrypt settings",{error:e.message}),this.settings}}}catch(e){return this.logger.error("Failed to load settings",{error:e.message}),this.settings}}async saveSettings(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{e&&(this.settings={...this.settings,...e});const t=JSON.stringify(this.settings);if(!this.encryptionInitialized)return this.logger.warn("Encryption not initialized, saving settings without encryption"),localStorage.setItem(this.storageKey,t),this.logger.info("Settings saved successfully (unencrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),void window.dispatchEvent(new CustomEvent("settings:save-success",{detail:{message:"Settings saved successfully (unencrypted)."}}));try{const e=await n.CryptoUtils.encrypt(t,this.encryptionKey);localStorage.setItem(this.storageKey,e),this.logger.info("Settings saved successfully (encrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),window.dispatchEvent(new CustomEvent("settings:save-success",{detail:{message:"Settings saved successfully."}}))}catch(e){this.logger.warn("Encryption failed, saving settings without encryption",{error:e.message}),localStorage.setItem(this.storageKey,t),this.logger.info("Settings saved successfully (unencrypted fallback)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),window.dispatchEvent(new CustomEvent("settings:save-success",{detail:{message:"Settings saved successfully (encryption failed, used fallback)."}}))}}catch(e){throw this.logger.error("Failed to save settings",{error:e.message}),window.dispatchEvent(new CustomEvent("settings:save-error",{detail:{message:`Failed to save settings: ${e.message}`}})),e}}getSetting(e){if(!e)throw new Error("Setting key is required");return this.settings[e]}async setSetting(e,t){if(!e)throw new Error("Setting key is required");try{this.settings[e]=t,await this.saveSettings(),this.logger.debug("Setting updated",{key:e,value:"string"==typeof t?t:"[object]"})}catch(t){throw this.logger.error("Failed to update setting",{key:e,error:t.message}),t}}getAllSettings(){return{...this.settings}}async updateSettings(e){if(!e||"object"!=typeof e)throw new Error("New settings object is required");try{this.settings={...this.settings,...e},await this.saveSettings(),this.logger.info("Multiple settings updated",{updatedKeys:Object.keys(e),hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId})}catch(e){throw this.logger.error("Failed to update settings",{error:e.message}),e}}async resetSettings(){try{this.settings=this.getDefaultSettings(),await this.saveSettings(),this.logger.info("Settings reset to defaults")}catch(e){throw this.logger.error("Failed to reset settings",{error:e.message}),e}}async clearSettings(){try{localStorage.removeItem(this.storageKey),this.settings=this.getDefaultSettings(),this.logger.info("Settings cleared")}catch(e){throw this.logger.error("Failed to clear settings",{error:e.message}),e}}async initializeEncryption(){try{let e=await this.getDeviceId();"string"!=typeof e&&(e=String(e||"")),e||(e="fallback-device-id"),this.encryptionKey=await n.CryptoUtils.generateKey(e),this.logger.debug("Encryption initialized successfully")}catch(e){this.logger.error("Failed to initialize encryption",{error:e.message}),this.encryptionKey=await n.CryptoUtils.generateKey("fallback-encryption-key"),this.logger.warn("Using fallback encryption key")}}async getDeviceId(){try{if(this.isLocalStorageAvailable()){const e=localStorage.getItem("pingone-device-id");if(e&&"string"==typeof e)return e}const e={userAgent:navigator.userAgent,platform:navigator.platform,hardwareConcurrency:navigator.hardwareConcurrency,deviceMemory:navigator.deviceMemory,maxTouchPoints:navigator.maxTouchPoints},t=(new TextEncoder).encode(JSON.stringify(e)),s=await crypto.subtle.digest("SHA-256",t),i=Array.from(new Uint8Array(s)).map(e=>e.toString(16).padStart(2,"0")).join("");return"string"==typeof i&&i?i:"fallback-device-id"}catch(e){return this.logger.error("Failed to generate device ID:",e),"fallback-"+Math.random().toString(36).substring(2,15)}}isLocalStorageAvailable(){try{const e="test";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return this.logger.warn("localStorage not available",{error:e.message}),!1}}async exportSettings(){try{const e={settings:this.settings,exportDate:(new Date).toISOString(),version:"1.0"};return this.logger.info("Settings exported",{exportDate:e.exportDate}),e}catch(e){throw this.logger.error("Failed to export settings",{error:e.message}),e}}async importSettings(e){if(!e)throw new Error("Import data is required");if(!e.settings)throw new Error("Invalid import data: missing settings");try{this.settings={...this.getDefaultSettings(),...e.settings},await this.saveSettings(),this.logger.info("Settings imported successfully",{importDate:e.exportDate,hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId})}catch(e){throw this.logger.error("Failed to import settings",{error:e.message}),e}}debugLocalStorage(){try{const e=localStorage.getItem(this.storageKey);if(!e)return this.logger.info("No data found in localStorage",{key:this.storageKey}),null;this.logger.info("localStorage contents found",{key:this.storageKey,length:e.length,preview:e.substring(0,100)+(e.length>100?"...":"")});try{const t=JSON.parse(e);return this.logger.info("Data is valid JSON",{keys:Object.keys(t),hasEnvironmentId:!!t.environmentId,hasApiClientId:!!t.apiClientId}),t}catch(e){return this.logger.info("Data is not valid JSON, likely encrypted",{error:e.message}),"encrypted"}}catch(e){return this.logger.error("Failed to debug localStorage",{error:e.message}),null}}}}).call(this)}).call(this,e("_process"))},{"./crypto-utils.js":46,"./winston-logger.js":71,_process:29}],65:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SettingsSubsystem=void 0;s.SettingsSubsystem=class SettingsSubsystem{constructor(e,t,s,i,n,a){this.logger=e,this.uiManager=t,this.localClient=s,this.settingsManager=i,this.eventBus=n,this.credentialsManager=a,this.isSaving=!1,this.currentSettings=null,this.logger.info("Settings Subsystem initialized"),this.setupCrossSubsystemEvents()}async init(){try{this.setupEventListeners(),await this.loadCurrentSettings(),this.logger.info("Settings Subsystem initialized successfully")}catch(e){this.logger.error("Failed to initialize Settings Subsystem",e),this.uiManager.showSettingsActionStatus("Failed to initialize Settings Subsystem: "+e.message,"error")}}setupEventListeners(){this.logger.info("Setting up Settings Subsystem event listeners");const e=document.getElementById("save-settings");e?(this.logger.info("Found save settings button, attaching event listener"),e.addEventListener("click",async e=>{e.preventDefault(),this.logger.info("Save settings button clicked"),await this.saveSettings()})):this.logger.warn("Save settings button not found in DOM");const t=document.getElementById("test-connection-btn");t&&t.addEventListener("click",async e=>{e.preventDefault(),await this.testConnection()});const s=document.getElementById("get-token-btn");s&&s.addEventListener("click",async e=>{e.preventDefault(),await this.getToken()});const i=document.getElementById("toggle-api-secret-visibility");i&&i.addEventListener("click",e=>{e.preventDefault(),this.toggleSecretVisibility()}),this.logger.info("Settings Subsystem event listeners setup complete")}async loadCurrentSettings(){try{if(!this.settingsManager)return this.logger.warn("Settings manager not available, using default settings"),void(this.currentSettings=this.getDefaultSettings());if("function"!=typeof this.settingsManager.getAllSettings)return this.logger.warn("Settings manager getAllSettings method not available, using default settings"),void(this.currentSettings=this.getDefaultSettings());this.currentSettings=this.settingsManager.getAllSettings(),this.currentSettings&&0!==Object.keys(this.currentSettings).length||(this.logger.info("No existing settings found, using defaults"),this.currentSettings=this.getDefaultSettings()),this.populateSettingsForm(this.currentSettings),this.logger.info("Current settings loaded successfully")}catch(e){this.logger.warn("Failed to load current settings, using defaults:",e.message),this.currentSettings=this.getDefaultSettings()}}getDefaultSettings(){return{environmentId:"",apiClientId:"",apiSecret:"",region:"NorthAmerica",rateLimit:50,populationId:""}}async saveSettings(){if(this.isSaving)this.logger.warn("Settings save already in progress");else try{this.isSaving=!0,this.logger.info("Starting settings save process"),this.uiManager.showSettingsActionStatus("Saving settings...","info");const e=this.getFormData();if(this.logger.info("Form data extracted:",e),!this.validateSettings(e))return;if(this.credentialsManager){const t={environmentId:e.environmentId||"",apiClientId:e.apiClientId||"",apiSecret:e.apiSecret||"",populationId:e.populationId||"",region:e.region||"NorthAmerica"},s=this.credentialsManager.validateCredentials(t);if(!s.isValid)throw new Error(`Invalid credentials: ${s.errors.join(", ")}`);this.credentialsManager.saveCredentials(t),this.logger.info("Credentials saved to localStorage")}try{await this.localClient.post("/api/settings",e);this.logger.info("Settings saved to server successfully")}catch(e){this.logger.warn("Failed to save to server, but credentials saved to localStorage:",e.message)}this.settingsManager.updateSettings(e),this.currentSettings=e,this.uiManager.showSettingsActionStatus("Settings saved successfully","success",{autoHideDelay:3e3}),this.updateConnectionStatus("✅ Settings saved! Please - Get token","success"),this.eventBus&&this.eventBus.emit("settingsSaved",{settings:e});const t=new CustomEvent("credentials-updated",{detail:{settings:e,timestamp:Date.now()}});document.dispatchEvent(t),this.logger.info("Credentials-updated event dispatched for population dropdown system"),this.logger.info("Settings save process completed successfully")}catch(e){this.logger.error("Failed to save settings",e),this.uiManager.showSettingsActionStatus("Failed to save settings: "+e.message,"error",{autoHide:!1})}finally{this.isSaving=!1}}getFormData(){const e=document.getElementById("settings-form");if(!e)throw new Error("Settings form not found");new FormData(e);return{environmentId:document.getElementById("environment-id")?.value||"",apiClientId:document.getElementById("api-client-id")?.value||"",apiSecret:document.getElementById("api-secret")?.value||"",region:document.getElementById("region")?.value||"NorthAmerica",rateLimit:parseInt(document.getElementById("rate-limit")?.value)||50,populationId:document.getElementById("population-id")?.value||""}}validateSettings(e){const t=[];if(e.environmentId?.trim()||t.push("Environment ID is required"),e.apiClientId?.trim()||t.push("API Client ID is required"),e.apiSecret?.trim()||t.push("API Secret is required"),e.region?.trim()||t.push("Region is required"),e.rateLimit&&(e.rateLimit<1||e.rateLimit>1e3)&&t.push("Rate limit must be between 1 and 1000"),t.length>0){const e="Validation failed: "+t.join(", ");return this.logger.error("Settings validation failed",{errors:t}),this.uiManager.showSettingsActionStatus(e,"error",{autoHide:!1}),!1}return!0}populateSettingsForm(e){if(!e)return;const t={"environment-id":e.environmentId,"api-client-id":e.apiClientId,"api-secret":e.apiSecret,region:e.region,"rate-limit":e.rateLimit,"population-id":e.populationId};Object.entries(t).forEach(e=>{let[t,s]=e;const i=document.getElementById(t);i&&null!=s&&(i.value=s)}),this.logger.info("Settings form populated with current values")}async testConnection(){try{this.logger.info("Testing connection..."),this.uiManager.showSettingsActionStatus("Testing connection...","info");this.getFormData();const e=await this.localClient.get("/api/pingone/test-connection");e.success?(this.uiManager.showSettingsActionStatus("Connection test successful","success",{autoHideDelay:3e3}),this.updateConnectionStatus("✅ Connection successful","success")):(this.uiManager.showSettingsActionStatus("Connection test failed: "+e.message,"error"),this.updateConnectionStatus("❌ Connection failed","error"))}catch(e){this.logger.error("Connection test failed",e),this.uiManager.showSettingsActionStatus("Connection test failed: "+e.message,"error"),this.updateConnectionStatus("❌ Connection failed","error")}}async getToken(){try{this.logger.info("Getting token..."),this.uiManager.showSettingsActionStatus("Getting token...","info");const e=this.getFormData(),t=await this.localClient.post("/api/token",e);if(t.success){this.uiManager.showSettingsActionStatus("Token obtained successfully","success",{autoHideDelay:3e3}),this.updateConnectionStatus("✅ Token obtained","success"),console.log("🚀 [DEBUG] SettingsSubsystem: About to call updateGlobalTokenStatusDirect");try{if(window.app&&"function"==typeof window.app.updateGlobalTokenStatusDirect){const e=t.timeLeft||t.timeRemaining||"";window.app.updateGlobalTokenStatusDirect(e),console.log("✅ [DEBUG] SettingsSubsystem: updateGlobalTokenStatusDirect called successfully with timeLeft:",e)}else console.warn("⚠️ [DEBUG] SettingsSubsystem: window.app.updateGlobalTokenStatusDirect not available")}catch(e){console.error("❌ [DEBUG] SettingsSubsystem: Error calling updateGlobalTokenStatusDirect:",e)}this.eventBus&&this.eventBus.emit("tokenObtained",{token:t.token})}else this.uiManager.showSettingsActionStatus("Failed to get token: "+t.message,"error"),this.updateConnectionStatus("❌ Token failed","error")}catch(e){this.logger.error("Failed to get token",e),this.uiManager.showSettingsActionStatus("Failed to get token: "+e.message,"error"),this.updateConnectionStatus("❌ Token failed","error")}}toggleSecretVisibility(){const e=document.getElementById("api-secret"),t=document.getElementById("toggle-api-secret-visibility"),s=t?.querySelector("i");e&&t&&s&&("password"===e.type?(e.type="text",s.className="fas fa-eye-slash",t.setAttribute("aria-label","Hide password")):(e.type="password",s.className="fas fa-eye",t.setAttribute("aria-label","Show password")))}updateConnectionStatus(e,t){const s=document.getElementById("settings-connection-status");s&&(s.textContent=e,s.className=`connection-status status-${t}`)}setupCrossSubsystemEvents(){this.eventBus?(this.eventBus.on("tokenExpired",e=>{this.logger.warn("Token expired"),this.updateConnectionStatus("⚠️ Token expired","warning")}),this.eventBus.on("tokenError",e=>{this.logger.error("Token error detected",e),this.updateConnectionStatus("❌ Token error","error")}),this.eventBus.on("tokenRefreshed",e=>{this.logger.info("Token refreshed successfully"),this.updateConnectionStatus("✅ Token refreshed","success")}),this.logger.debug("Cross-subsystem event listeners set up for SettingsSubsystem")):this.logger.warn("EventBus not available for cross-subsystem events")}getAllSettings(){return this.settingsManager&&this.settingsManager.getAllSettings?this.settingsManager.getAllSettings():this.settingsManager&&this.settingsManager.getSettings?this.settingsManager.getSettings():this.currentSettings?this.currentSettings:(this.logger.warn("No settings available, returning empty object"),{})}}},{}],66:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.clearTokenAlertSession=function clearTokenAlertSession(){TokenAlertModal.clearShownThisSession()},s.showTokenAlertModal=function showTokenAlertModal(){let{tokenStatus:e="",expiry:t="",operation:s=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};new TokenAlertModal({tokenStatus:e,expiry:t,operation:s})};class TokenAlertModal{constructor(){let{tokenStatus:e="",expiry:t="",operation:s=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};TokenAlertModal.hasShownThisSession()||(TokenAlertModal.setShownThisSession(),this.operation=s,this.createModal(e,t),this.showModal())}createModal(e,t){const s=document.createElement("div");s.className="token-alert-overlay",s.setAttribute("role","dialog"),s.setAttribute("aria-modal","true"),s.setAttribute("aria-labelledby","token-alert-title"),s.setAttribute("aria-describedby","token-alert-content"),s.innerHTML=`\n            <div class="token-alert-modal" tabindex="-1">\n                <div class="token-alert-header">\n                    <h2 id="token-alert-title">\n                        <span class="warning-icon" aria-hidden="true">⚠️</span>\n                        <span>Authentication Required</span>\n                    </h2>\n                    <button type="button" class="token-alert-close" id="token-alert-close" aria-label="Close">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n                </div>\n                <div class="token-alert-body">\n                    <div id="token-alert-content" class="token-alert-content">\n                        <div class="token-alert-icon">\n                            <span aria-hidden="true">🔐</span>\n                        </div>\n                        <h3>No Valid Token Available</h3>\n                        <p class="token-alert-message">\n                            <strong>Authentication is required to continue.</strong>\n                            ${this.operation?`You need valid credentials to perform the "${this.operation}" operation.`:"You need valid credentials to use this application."}\n                        </p>\n                        ${e||t?`<div class="token-status-info">\n                            <p><strong>Current Status:</strong> ${e||"No token available"}</p>\n                            ${t?`<p style="visibility: hidden;"><strong>Token Expired:</strong> ${t}</p>`:""}\n                        </div>`:""}\n                        <div class="token-alert-actions">\n                            <button type="button" class="btn btn-primary btn-lg" id="token-alert-settings-btn">\n                                <span class="btn-icon">⚙️</span>\n                                Go to Settings\n                            </button>\n                            <p class="token-alert-help">\n                                Add your PingOne credentials in the Settings page to generate a new token.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(s),this.overlay=s,this.modal=s.querySelector(".token-alert-modal"),this.settingsBtn=s.querySelector("#token-alert-settings-btn"),this.closeBtn=s.querySelector("#token-alert-close"),this.bindEvents()}bindEvents(){this.settingsBtn.addEventListener("click",()=>{if(this.hideModal(),window.app&&window.app.showView)window.app.showView("settings");else{const e=document.querySelector('[data-view="settings"]');e?e.click():window.location.href="/"}}),this.closeBtn.addEventListener("click",()=>{this.hideModal()}),this.overlay.addEventListener("keydown",e=>this.handleKeyboardNavigation(e)),this.overlay.addEventListener("click",e=>{e.target===this.overlay&&e.preventDefault()}),document.addEventListener("keydown",e=>{"Escape"===e.key&&e.preventDefault()})}handleKeyboardNavigation(e){const t=this.modal.querySelectorAll('button, [tabindex]:not([tabindex="-1"])');if("Tab"===e.key){if(0===t.length)return;const s=t[0],i=t[t.length-1];e.shiftKey?document.activeElement===s&&(e.preventDefault(),i.focus()):document.activeElement===i&&(e.preventDefault(),s.focus())}}showModal(){document.body.classList.add("token-alert-open"),this.overlay.classList.add("active"),this.modal.focus(),document.body.style.overflow="hidden"}hideModal(){this.overlay.classList.remove("active"),document.body.classList.remove("token-alert-open"),document.body.style.overflow="",setTimeout(()=>{this.overlay&&this.overlay.parentNode&&this.overlay.parentNode.removeChild(this.overlay)},300)}static hasShownThisSession(){return"true"===sessionStorage.getItem("tokenAlertModalShown")}static setShownThisSession(){sessionStorage.setItem("tokenAlertModalShown","true")}static clearShownThisSession(){sessionStorage.removeItem("tokenAlertModalShown")}}},{}],67:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default=class TokenManager{constructor(e,t,s){if(!t)throw new Error("Settings are required for TokenManager");this.logger=e||console,this.settings=t||{},this.eventBus=s,this.tokenCache={accessToken:null,expiresAt:0,tokenType:"Bearer",lastRefresh:0},this.tokenExpiryBuffer=3e5,this.isRefreshing=!1,this.refreshQueue=[],this.maxRetries=1,this.retryDelay=1e3,this.getAccessToken=this.getAccessToken.bind(this),this._requestNewToken=this._requestNewToken.bind(this),this._isTokenValid=this._isTokenValid.bind(this),this.handleTokenExpiration=this.handleTokenExpiration.bind(this),this.retryWithNewToken=this.retryWithNewToken.bind(this)}async getAccessToken(){if(this._isTokenValid())return this.logger.debug("Using cached access token"),this.tokenCache.accessToken;if(this.isRefreshing)return new Promise(e=>{this.refreshQueue.push(e)});try{this.isRefreshing=!0;const e=await this._requestNewToken();for(;this.refreshQueue.length>0;){this.refreshQueue.shift()(e)}return e}catch(e){for(this.tokenCache={accessToken:null,expiresAt:0,tokenType:"Bearer",lastRefresh:0},this.eventBus&&this.eventBus.emit("tokenError",{error:e.message});this.refreshQueue.length>0;){this.refreshQueue.shift()(Promise.reject(e))}throw e}finally{this.isRefreshing=!1}}async handleTokenExpiration(e,t){if(!e)throw new Error("Response is required for token expiration handling");if(!t||"function"!=typeof t)throw new Error("Retry function is required for token expiration handling");this.logger.warn("Token expiration detected, attempting automatic re-authentication"),this.tokenCache={accessToken:null,expiresAt:0,tokenType:"Bearer",lastRefresh:0},this.eventBus&&this.eventBus.emit("tokenExpired",{response:e});try{const e=await this.getAccessToken();if(!e)throw new Error("Failed to obtain new token for retry");return this.logger.info("Successfully obtained new token, retrying request"),await new Promise(e=>setTimeout(e,this.retryDelay)),await t(e)}catch(t){throw this.logger.error("Failed to re-authenticate and retry request",{error:t.message,originalStatus:e.status}),t}}async retryWithNewToken(e){if(!e||"function"!=typeof e)throw new Error("Request function is required for retry operation");let t=0;for(;t<=this.maxRetries;)try{const s=await this.getAccessToken(),i=await e(s);if(401===i.status){const e=await i.text().catch(()=>"");if((e.includes("token_expired")||e.includes("invalid_token")||e.includes("expired"))&&t<this.maxRetries){this.logger.warn(`Token expired on attempt ${t+1}, retrying with new token`),this.tokenCache={accessToken:null,expiresAt:0,tokenType:"Bearer",lastRefresh:0},t++;continue}}return i}catch(e){if(t>=this.maxRetries)throw e;this.logger.warn(`Request failed on attempt ${t+1}, retrying`,{error:e.message}),t++,await new Promise(e=>setTimeout(e,this.retryDelay))}throw new Error("Max retries exceeded")}createAutoRetryWrapper(e){var t=this;if(!e||"function"!=typeof e)throw new Error("Request function is required for auto-retry wrapper");return async function(){for(var s=arguments.length,i=new Array(s),n=0;n<s;n++)i[n]=arguments[n];return await t.retryWithNewToken(async t=>{const s=[...i];return s[0]&&"object"==typeof s[0]&&(s[0].headers={...s[0].headers,Authorization:`Bearer ${t}`}),await e(...s)})}}getTokenInfo(){if(!this.tokenCache.accessToken)return null;const e=Date.now(),t=Math.max(0,this.tokenCache.expiresAt-e);return{accessToken:this.tokenCache.accessToken,expiresIn:Math.floor(t/1e3),tokenType:this.tokenCache.tokenType,expiresAt:this.tokenCache.expiresAt,lastRefresh:this.tokenCache.lastRefresh,isValid:this._isTokenValid()}}_isTokenValid(){const e=Date.now();return this.tokenCache.accessToken&&this.tokenCache.expiresAt>e+this.tokenExpiryBuffer&&e-this.tokenCache.lastRefresh<36e5}_getAuthDomain(e){if(!e)return"auth.pingone.com";return{NorthAmerica:"auth.pingone.com",Europe:"auth.eu.pingone.com",Canada:"auth.ca.pingone.com",Asia:"auth.apsoutheast.pingone.com",Australia:"auth.aus.pingone.com",US:"auth.pingone.com",EU:"auth.eu.pingone.com",AP:"auth.apsoutheast.pingone.com"}[e]||"auth.pingone.com"}async _requestNewToken(){const{apiClientId:e,apiSecret:t,environmentId:s,region:i="NorthAmerica"}=this.settings,n=`req_${Math.random().toString(36).substr(2,9)}`,a=Date.now();if(!e||!t||!s){const i=new Error("Missing required API credentials in settings");throw this.logger.error("Token request failed: Missing credentials",{requestId:n,hasClientId:!!e,hasSecret:!!t,hasEnvId:!!s}),i}const l=this._getAuthDomain(i),c=`https://${l}/${s}/as/token`,d=btoa(`${e}:${t}`);try{this.logger.debug("Requesting new access token from PingOne...",{requestId:n,authDomain:l,environmentId:s,region:i});const e=await fetch(c,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:`Basic ${d}`},body:"grant_type=client_credentials",credentials:"omit"}),t=Date.now()-a;let g;try{g=await e.json()}catch(t){const s=await e.text().catch(()=>"Failed to read response text");throw new Error(`Invalid JSON response: ${t.message}. Response: ${s}`)}if(!e.ok){const s=g.error_description||g.error||`HTTP ${e.status} ${e.statusText}`;throw this.logger.error("Token request failed",{requestId:n,status:e.status,error:g.error,errorDescription:g.error_description,responseTime:`${t}ms`,url:c}),new Error(s)}if(!g.access_token)throw new Error("No access token in response");const u=1e3*(g.expires_in||3600);return this.tokenCache={accessToken:g.access_token,expiresAt:Date.now()+u,tokenType:g.token_type||"Bearer",lastRefresh:Date.now()},this.logger.info("Successfully obtained new access token",{requestId:n,tokenType:this.tokenCache.tokenType,expiresIn:Math.floor(u/1e3)+"s",responseTime:`${t}ms`}),this.eventBus&&this.eventBus.emit("tokenRefreshed",{tokenType:this.tokenCache.tokenType,expiresAt:this.tokenCache.expiresAt}),this.tokenCache.accessToken}catch(e){throw this.logger.error("Error getting access token",{requestId:n,error:e.toString(),message:e.message,url:c,responseTime:Date.now()-a+"ms"}),this.tokenCache={accessToken:null,expiresAt:0,tokenType:"Bearer",lastRefresh:0},e}}updateSettings(e){if(!e)throw new Error("New settings are required for update");const t=e.apiClientId!==this.settings.apiClientId||e.apiSecret!==this.settings.apiSecret||e.environmentId!==this.settings.environmentId||e.region!==this.settings.region;this.settings={...this.settings,...e},t&&(this.logger.debug("API credentials changed, clearing token cache"),this.tokenCache={accessToken:null,expiresAt:0,tokenType:"Bearer",lastRefresh:0})}}},{}],68:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const i=new class TokenRefreshHandler{constructor(){this.tokenRefreshInProgress=!1,this.tokenRefreshPromise=null,this.lastRefreshTime=0,this.minRefreshInterval=5e3}async getFreshToken(e){if(!e)throw new Error("Token manager is required");try{const t=await e.getAccessToken();if(t)return t}catch(e){console.warn("Error getting current token:",e)}if(this.tokenRefreshInProgress)return console.log("Token refresh already in progress, waiting..."),this.tokenRefreshPromise;if(Date.now()-this.lastRefreshTime<this.minRefreshInterval)return console.log("Token was refreshed recently, using cached token"),e.getAccessToken();this.tokenRefreshInProgress=!0,this.tokenRefreshPromise=this._refreshToken(e);try{return await this.tokenRefreshPromise}finally{this.tokenRefreshInProgress=!1,this.lastRefreshTime=Date.now()}}async _refreshToken(e){console.log("Refreshing token..."),"function"==typeof e.clearToken&&e.clearToken();try{const t=await e.getAccessToken();if(!t)throw new Error("Failed to get new token");return console.log("Token refreshed successfully"),t}catch(e){throw console.error("Failed to refresh token:",e),e}}async callWithTokenRefresh(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=0;for(;i<=s;)try{const s=await this.getFreshToken(t);return await e(s)}catch(e){if(!((401===e.status||e.message&&e.message.includes("token"))&&i<s))throw e;console.log(`Token error, retrying (${i+1}/${s})...`),i++,"function"==typeof t.clearToken&&t.clearToken(),await new Promise(e=>setTimeout(e,1e3))}}};s.default=i},{}],69:[function(e,t,s){(function(t){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.UIManager=void 0;var i=e("./element-registry.js"),n=e("../../../src/client/utils/safe-logger.js");class UIManager{constructor(){var e=this;let{errorManager:s,logManager:i,instanceId:a="default"}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=(0,n.createSafeLogger)(i?.getLogger("UIManager")||console,{level:(void 0!==t&&t.env?t.env.LOG_LEVEL:null)||"INFO",defaultMeta:{component:"UIManager",instanceId:a,env:(void 0!==t&&t.env?t.env.NODE_ENV:null)||"development"}}),this.errorManager=s||{handleError:function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.logger.error("Unhandled error",{error:t instanceof Error?t.message:String(t),stack:t.stack,...s}),e.statusBarElement&&e.showError(t.message||"An error occurred",{autoDismiss:!1,errorId:s.errorId||"unhandled-error"})}},this.notificationContainer=null,this.progressContainer=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.statusBarElement=null,this.statusBarTimeout=null,this.initialize()}initialize(){try{this.setupElements(),this.logger.log("[UIManager] Initialized successfully")}catch(e){this.logger.error("[UIManager] Error during initialization:",e)}}setupElements(){try{this.statusBarElement=document.getElementById("global-status-bar"),this.statusBarElement||this.createStatusBar(),this.notificationContainer=i.ElementRegistry.notificationContainer?.()||document.querySelector(".notification-container"),this.progressContainer=i.ElementRegistry.progressContainer?.()||document.querySelector(".progress-container"),this.tokenStatusElement=i.ElementRegistry.tokenStatus?.()||document.querySelector(".token-status"),this.connectionStatusElement=i.ElementRegistry.connectionStatus?.()||document.querySelector(".connection-status"),this.logger.log("[UIManager] UI elements initialized")}catch(e){this.logger.error("[UIManager] Error setting up UI elements:",e)}}createStatusBar(){try{this.statusBarElement=document.createElement("div"),this.statusBarElement.id="global-status-bar",this.statusBarElement.className="global-status-bar",this.statusBarElement.style.display="none",this.statusBarElement.setAttribute("role","status"),this.statusBarElement.setAttribute("aria-live","polite");const e=document.createElement("div");e.className="status-container";const t=document.createElement("div");t.className="status-content";const s=document.createElement("i");s.className="status-icon fas";const i=document.createElement("span");i.className="status-text";const n=document.createElement("button");n.className="status-close",n.setAttribute("aria-label","Dismiss message"),n.innerHTML='<i class="fas fa-times"></i>',n.addEventListener("click",()=>this.clearStatusBar()),t.appendChild(s),t.appendChild(i),t.appendChild(n),e.appendChild(t),this.statusBarElement.appendChild(e);const a=document.querySelector("main")||document.body;a.insertBefore(this.statusBarElement,a.firstChild),this.logger.log("[UIManager] Created status bar element")}catch(e){this.logger.error("[UIManager] Error creating status bar:",e)}}showStatusBar(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{duration:i=5e3,autoDismiss:n=!0,errorId:a,context:l={},source:c="ui"}=s,d={type:t,duration:i,autoDismiss:n,errorId:a,source:c,...l};switch(t){case"error":this.logger.error(e,d);break;case"warn":case"warning":this.logger.warn(e,d);break;case"success":this.logger.info(`SUCCESS: ${e}`,d);break;case"debug":this.logger.debug(e,d);break;default:this.logger.info(e,d)}if(this.statusBarElement)try{const s=this.statusBarElement.querySelector(".status-content"),a=this.statusBarElement.querySelector(".status-icon"),l=this.statusBarElement.querySelector(".status-text");if(s&&a&&l){s.className="status-content",s.classList.add(`status-${t}`);const c={success:"check-circle",warning:"exclamation-triangle",error:"exclamation-circle",info:"info-circle"}[t]||"info-circle";a.className=`status-icon fas fa-${c}`,l.textContent=e,this.statusBarElement.style.display="block",n&&this.scheduleStatusBarClear(i),this.logger.log(`[UIManager] Status bar updated (${t}):`,e)}}catch(e){this.logger.error("[UIManager] Error showing status bar:",e)}else this.logger.warn("[UIManager] Status bar not available")}handleError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{errorId:s=`err-${Date.now()}`,showInUI:i=!0,source:n="ui",...a}=t;let l,c;e instanceof Error?(l=e.message,c=e):"object"==typeof e&&null!==e?(l=e.message||JSON.stringify(e),c=new Error(l),Object.assign(c,e)):(l=String(e),c=new Error(l)),c.errorId=s;const d={errorId:s,source:n,showInUI:i,stack:c.stack,...a};return this.logger.error(l,d),i&&this.showStatusBar(l,"error",{autoDismiss:!1,errorId:s,source:n,context:d}),this.errorManager?this.errorManager.handleError(c,d):console.error(`[${s}] ${l}`,d),c}scheduleStatusBarClear(e){this.statusBarTimeout&&clearTimeout(this.statusBarTimeout),this.statusBarTimeout=setTimeout(()=>{this.clearStatusBar()},e)}clearStatusBar(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{force:t=!1}=e;if(this.statusBarElement){this.cancelPendingStatusBarClear();try{t?(this.statusBarElement.style.display="none",this.cleanupStatusBarContent()):(this.statusBarElement.style.transition="opacity 0.3s ease-in-out",this.statusBarElement.style.opacity="0",this.statusBarTimeout=setTimeout(()=>{this.statusBarElement.style.display="none",this.statusBarElement.style.opacity="1",this.cleanupStatusBarContent(),this.statusBarTimeout=null},300))}catch(e){this.logger.error("Failed to clear status bar",{error:e.message,stack:e.stack,force:t}),this.statusBarElement&&(this.statusBarElement.style.display="none",this.cleanupStatusBarContent())}}else this.logger.debug("Status bar element not available for clearing")}cleanupStatusBarContent(){if(this.statusBarElement)try{this.statusBarElement.querySelectorAll(".status-text, .status-icon").forEach(e=>{e&&(e.textContent="")});const e=this.statusBarElement.querySelector(".status-content");e&&(e.className="status-content",e.removeAttribute("title"),e.removeAttribute("aria-label")),this.statusBarElement.style.cssText=""}catch(e){this.logger.error("Failed to clean up status bar content",{error:e.message,stack:e.stack})}}cancelPendingStatusBarClear(){this.statusBarTimeout&&(clearTimeout(this.statusBarTimeout),this.statusBarTimeout=null)}async cleanup(){try{if(this.logger.debug("Starting UIManager cleanup"),this.cancelPendingStatusBarClear(),this.clearStatusBar({force:!0}),this.notificationContainer)try{this.notificationContainer.innerHTML=""}catch(e){this.logger.error("Failed to clean up notifications",{error:e.message})}if(this.progressContainer)try{this.progressContainer.innerHTML=""}catch(e){this.logger.error("Failed to clean up progress indicators",{error:e.message})}this.statusBarElement=null,this.notificationContainer=null,this.progressContainer=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.logger.info("UIManager cleanup completed")}catch(e){throw this.logger.error("Error during UIManager cleanup",{error:e.message,stack:e.stack}),e}}showInfo(e,t){this.showStatusBar(e,"info",t)}showSuccess(e,t){this.showStatusBar(e,"success",t)}showWarning(e,t){this.showStatusBar(e,"warning",t)}showError(e,t){this.showStatusBar(e,"error",{...t,autoDismiss:!1})}}s.UIManager=UIManager;const a=new UIManager;s.default=a}).call(this)}).call(this,e("_process"))},{"../../../src/client/utils/safe-logger.js":106,"./element-registry.js":48,_process:29}],70:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.VersionManager=void 0;s.VersionManager=class VersionManager{constructor(){this.version="6.5.2.4",console.log(`Version Manager initialized with version ${this.version}`)}getVersion(){return this.version}getFormattedVersion(){return`v${this.version}`}updateTitle(){const e=document.querySelector("h1");if(e){const t=e.textContent.replace(/\s*\(v\d+\.\d+\.\d+\)\s*$/,"").trim();e.textContent=`${t} (${this.getFormattedVersion()})`}document.title=`PingOne User Import ${this.getFormattedVersion()}`,this.updateImportButton(),this.updateTopVersionBadge(),this.addSidebarVersionBadge()}updateImportButton(){const e=document.getElementById("start-import-btn");if(e){const t=e.textContent.replace(/\s*\(v\d+\.\d+\.\d+\)\s*$/,"").trim();e.innerHTML=`<i class="pi pi-upload"></i> ${t} (${this.getFormattedVersion()})`}}updateTopVersionBadge(){const e=document.getElementById("version-text");e&&(e.textContent=this.getFormattedVersion())}addSidebarVersionBadge(){const e=document.getElementById("top-left-version-badge");e&&e.remove();const t=document.getElementById("sidebar-version-badge");if(t&&t.remove(),document.getElementById("sidebar-version-badge"))return;const s=document.createElement("div");s.id="sidebar-version-badge",s.className="sidebar-version-badge",s.textContent=this.getFormattedVersion();const i=document.querySelector(".ping-footer");if(i){const e=i.querySelector(".footer-left");if(e){const t=e.querySelector(".footer-logo");t?e.insertBefore(s,t.nextSibling):e.insertBefore(s,e.firstChild)}else i.appendChild(s)}else document.body.appendChild(s)}}},{}],71:[function(e,t,s){(function(e){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.apiLogger=s.WinstonLogger=void 0,s.createComponentLogger=createComponentLogger,s.createWinstonLogger=createWinstonLogger,s.uiLogger=s.tokenLogger=s.settingsLogger=s.fileLogger=s.defaultLogger=void 0;class WinstonLogger{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.level=t.level||this.getDefaultLevel(),this.service=t.service||"pingone-import-frontend",this.environment=t.environment||(void 0!==e&&e.env?e.env.NODE_ENV:null)||"development",this.enableServerLogging=!1!==t.enableServerLogging,this.enableConsoleLogging=!1!==t.enableConsoleLogging,this.levels={error:0,warn:1,info:2,debug:3},this.transports=[],this.initializeTransports()}getDefaultLevel(){return"production"===this.environment?"info":"test"===this.environment?"warn":"debug"}initializeTransports(){this.enableConsoleLogging&&this.transports.push({name:"console",log:(e,t,s)=>this.logToConsole(e,t,s)}),this.enableServerLogging&&this.transports.push({name:"server",log:(e,t,s)=>this.logToServer(e,t,s)})}shouldLog(e){return this.levels[e]<=this.levels[this.level]}formatTimestamp(){return(new Date).toISOString()}formatLogEntry(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{timestamp:this.formatTimestamp(),level:e,message:t,service:this.service,environment:this.environment,...s}}logToConsole(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.shouldLog(e))return;const i=this.formatLogEntry(e,t,s).timestamp,n=e.toUpperCase();let a=`[${i}] [${this.service}] ${n}: ${t}`;switch(Object.keys(s).length>0&&(a+=`\n${JSON.stringify(s,null,2)}`),e){case"error":console.error(a);break;case"warn":console.warn(a);break;case"info":console.info(a);break;case"debug":console.debug(a);break;default:console.log(a)}}async logToServer(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.shouldLog(e))try{const i={message:t,level:e,data:s,source:"frontend"};await fetch("/api/logs/ui",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)})}catch(i){if(i.message.includes("Failed to fetch")||i.message.includes("ERR_CONNECTION_REFUSED"))return;console.warn("Server logging failed, falling back to console:",i.message),this.logToConsole(e,t,s)}}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.shouldLog(e)&&this.transports.forEach(i=>{try{i.log(e,t,s)}catch(e){console.error(`Error in ${i.name} transport:`,e)}})}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}errorWithStack(e,t){const s={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},error:{message:t.message,stack:t.stack,code:t.code,name:t.name}};this.error(e,s)}child(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const s=new WinstonLogger({level:this.level,service:this.service,environment:this.environment,enableServerLogging:this.enableServerLogging,enableConsoleLogging:this.enableConsoleLogging});return s.formatLogEntry=function(s,i){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{...e.formatLogEntry(s,i,n),...t}},s}setLevel(e){this.levels.hasOwnProperty(e)?this.level=e:this.warn(`Invalid log level: ${e}`)}setServerLogging(e){this.enableServerLogging=e,this.transports=this.transports.filter(e=>"server"!==e.name),e&&this.transports.push({name:"server",log:(e,t,s)=>this.logToServer(e,t,s)})}setConsoleLogging(e){this.enableConsoleLogging=e,this.transports=this.transports.filter(e=>"console"!==e.name),e&&this.transports.push({name:"console",log:(e,t,s)=>this.logToConsole(e,t,s)})}}function createWinstonLogger(){return new WinstonLogger(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})}function createComponentLogger(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return createWinstonLogger({...t,service:`${t.service||"pingone-import"}-${e}`})}s.WinstonLogger=WinstonLogger;s.defaultLogger=createWinstonLogger(),s.apiLogger=createComponentLogger("api"),s.uiLogger=createComponentLogger("ui"),s.fileLogger=createComponentLogger("file"),s.settingsLogger=createComponentLogger("settings"),s.tokenLogger=createComponentLogger("token")}).call(this)}).call(this,e("_process"))},{_process:29}],72:[function(e,t,s){(function(e){(function(){"use strict";class CentralizedLogger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.component=e.component||"app",this.level=e.level||"info",this.enableRemoteLogging=!1!==e.enableRemoteLogging,this.enableConsoleLogging=!1!==e.enableConsoleLogging,this.timers=new Map,this.sensitivePatterns=[/password/i,/token/i,/secret/i,/key/i,/credential/i,/auth/i]}maskSensitiveData(e){if("string"==typeof e)return e.replace(/("(?:password|token|secret|key|credential|auth)"\s*:\s*")([^"]+)"/gi,'$1***MASKED***"');if("object"==typeof e&&null!==e){const t={...e};for(const e in t)this.sensitivePatterns.some(t=>t.test(e))?t[e]="***MASKED***":"object"==typeof t[e]&&(t[e]=this.maskSensitiveData(t[e]));return t}return e}formatMessage(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const i=(new Date).toISOString(),n=this.component;let a=`[${i}] [${e.toUpperCase()}] [${n}] ${t}`;if(s){const e=this.maskSensitiveData(s);a+=` | Data: ${JSON.stringify(e,null,2)}`}return a}async sendRemoteLog(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(this.enableRemoteLogging)try{const i={timestamp:(new Date).toISOString(),level:e,component:this.component,message:t,data:this.maskSensitiveData(s),userAgent:navigator.userAgent,url:window.location.href};await fetch("/api/logs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)})}catch(e){this.enableConsoleLogging&&console.warn("Remote logging failed:",e)}}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if((window.settings||{}).debugMode)try{const s=this.formatMessage?this.formatMessage("debug",e,t):`[DEBUG] ${e}`;this.enableConsoleLogging&&console.debug(s),this.sendRemoteLog("debug",e,t)}catch(s){console.debug(`[DEBUG] ${e}`,t)}}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{const s=this.formatMessage?this.formatMessage("info",e,t):`[INFO] ${e}`;this.enableConsoleLogging&&console.log(s),this.sendRemoteLog("info",e,t)}catch(s){console.log(`[INFO] ${e}`,t)}}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{const s=this.formatMessage?this.formatMessage("warn",e,t):`[WARN] ${e}`;this.enableConsoleLogging&&console.warn(s),this.sendRemoteLog("warn",e,t)}catch(s){console.warn(`[WARN] ${e}`,t)}}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{const s=this.formatMessage?this.formatMessage("error",e,t):`[ERROR] ${e}`;this.enableConsoleLogging&&console.error(s),this.sendRemoteLog("error",e,t)}catch(s){console.error(`[ERROR] ${e}`,t)}}startTimer(e){this.timers||(this.timers=new Map);const t=performance?performance.now():Date.now();return this.timers.set(e,t),console.time&&console.time(e),this.debug(`Timer started: ${e}`),{label:e,startTime:t}}endTimer(e){if(!e||!e.label)return this.warn("Invalid timer object provided to endTimer"),0;const t=e.label;if(!this.timers||!this.timers.has(t))return this.warn(`Timer '${t}' not found`),0;const s=this.timers.get(t),i=(performance?performance.now():Date.now())-s;return this.timers.delete(t),console.timeEnd&&console.timeEnd(t),this.info(`Timer '${t}' completed in ${i.toFixed(2)}ms`),i}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=e.component?`${this.component}.${e.component}`:this.component;return new CentralizedLogger({...e,component:t,level:e.level||this.level,enableRemoteLogging:void 0!==e.enableRemoteLogging?e.enableRemoteLogging:this.enableRemoteLogging,enableConsoleLogging:void 0!==e.enableConsoleLogging?e.enableConsoleLogging:this.enableConsoleLogging})}}void 0!==t&&t.exports?t.exports={CentralizedLogger:CentralizedLogger}:"function"==typeof define&&define.amd?define([],function(){return{CentralizedLogger:CentralizedLogger}}):"undefined"!=typeof window&&(window.CentralizedLogger=CentralizedLogger);try{if(void 0===s||s.nodeType)if("function"==typeof define&&define.amd);else if("undefined"!=typeof window);else{(void 0!==e?e:window||{}).CentralizedLogger=CentralizedLogger}else void 0!==t&&!t.nodeType&&t.exports&&(s=t.exports={CentralizedLogger:CentralizedLogger}),s.CentralizedLogger=CentralizedLogger}catch(e){"undefined"!=typeof console&&console.warn&&console.warn("CentralizedLogger export failed:",e)}if("undefined"==typeof window&&void 0!==s)try{s.CentralizedLogger=CentralizedLogger}catch(e){}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],73:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.UI_CONFIG=s.MESSAGES=s.BUSINESS_CONFIG=s.API_CONFIG=void 0;const i=s.API_CONFIG={ENDPOINTS:{SETTINGS:"/api/settings",IMPORT:"/api/import",EXPORT:"/api/export",POPULATIONS:"/api/populations",TEST_CONNECTION:"/api/pingone/test-connection",LOGS:"/api/logs"},TIMEOUTS:{DEFAULT:1e4,LONG_OPERATION:3e4,FILE_UPLOAD:6e4,CONNECTION_TEST:5e3},RETRY:{MAX_ATTEMPTS:3,DELAYS:[1e3,2e3,5e3]}},n=s.UI_CONFIG={SELECTORS:{APP_CONTAINER:".app-container",NAV_ITEMS:"[data-view]",SETTINGS_FORM:"#settings-form",PROGRESS_BAR:".progress-bar",STATUS_INDICATOR:".status-indicator",MODAL_BACKDROP:".modal-backdrop"},CLASSES:{HIDDEN:"hidden",ACTIVE:"active",LOADING:"loading",ERROR:"error",SUCCESS:"success"}},a=s.MESSAGES={SUCCESS:{SETTINGS_SAVED:"Settings saved successfully",FILE_UPLOADED:"File uploaded successfully",CONNECTION_SUCCESS:"Connection test successful"},ERROR:{NETWORK_ERROR:"Network connection error",FILE_TOO_LARGE:"File size exceeds 10MB limit",SETTINGS_SAVE_FAILED:"Failed to save settings",CONNECTION_FAILED:"Connection test failed"}},l=s.BUSINESS_CONFIG={FILE_UPLOAD:{MAX_SIZE:10485760,ALLOWED_TYPES:[".csv",".txt"]},IMPORT:{BATCH_SIZE:100,MAX_CONCURRENT:5}};"undefined"!=typeof window&&(window.API_CONFIG=i,window.UI_CONFIG=n,window.MESSAGES=a,window.BUSINESS_CONFIG=l)},{}],74:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ErrorHandler=void 0;class ErrorHandler{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=e||{error:(e,t)=>console.error(e,t),warn:(e,t)=>console.warn(e,t),debug:(e,t)=>console.debug(e,t)}}wrapAsync(e){var t=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Unknown operation",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{retries:a=0,retryDelay:l=1e3,fallbackValue:c=null,suppressErrors:d=!1,rethrow:g=!1}=n;return async function(){for(var n=arguments.length,u=new Array(n),h=0;h<n;h++)u[h]=arguments[h];for(let n=0;n<=a;n++)try{return await e(...u)}catch(e){if(n<a){t.logger.warn(`${s} failed (attempt ${n+1}/${a+1}), retrying...`,{error:e.message,args:t._sanitizeArgs(u)}),await t._delay(l*(n+1));continue}if(t.handleError(e,s,{userMessage:i||"An unexpected error occurred.",retries:a,suppress:d}),g)throw e;return c}return c}}wrapSync(e){var t=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Unknown operation",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{fallbackValue:a=null,suppressErrors:l=!1,rethrow:c=!1}=n;return function(){for(var n=arguments.length,d=new Array(n),g=0;g<n;g++)d[g]=arguments[g];try{return e(...d)}catch(e){if(t.handleError(e,s,{userMessage:i||"An unexpected error occurred.",suppress:l,args:t._sanitizeArgs(d)}),c)throw e;return a}}}createError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"UNKNOWN_ERROR",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const n=new Error(e);return n.code=t,n.context=s,n.timestamp=(new Date).toISOString(),i&&(n.originalError=i,n.originalStack=i.stack),n}handleError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Unknown context",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{userMessage:i,suppress:n,...a}=s;if(n)return;const l={message:e.message,code:e.code||"UNHANDLED_EXCEPTION",context:t,timestamp:(new Date).toISOString(),stack:e.stack,...a};if(this.logger.error(`Error in ${t}:`,l),this._reportToErrorService(l),"undefined"!=typeof window&&window.app&&window.app.uiManager){const s=window.app.uiManager,n=i||e.message;s.showError(`Error: ${t}`,n)}}wrapEventHandler(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Event handler";return s=>{try{return e(s)}catch(e){this.logger.error(`${t} failed`,{error:e.message,eventType:s?.type,target:s?.target?.tagName||"unknown"}),s?.preventDefault?.(),s?.stopPropagation?.()}}}makeSafe(e){var t=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Safe function",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(){for(var n=arguments.length,a=new Array(n),l=0;l<n;l++)a[l]=arguments[l];try{return e(...a)}catch(e){return t.logger.warn(`${s} failed safely`,{error:e.message,args:t._sanitizeArgs(a)}),i}}}async handleApiResponse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"API call";try{if(!e.ok){const s={status:e.status,statusText:e.statusText,url:e.url};let i=`${t} failed with status ${e.status}`;try{const t=await e.text();s.body=t;try{const e=JSON.parse(t);e.message&&(i=e.message)}catch(e){}}catch(e){}throw this.createError(i,`HTTP_${e.status}`,s)}return await e.json()}catch(e){if(e.code&&e.code.startsWith("HTTP_"))throw e;throw this.createError(`${t} response parsing failed`,"RESPONSE_PARSE_ERROR",{originalError:e.message})}}_sanitizeArgs(e){return e.map(e=>"string"==typeof e&&e.length>100?e.substring(0,100)+"...":"object"==typeof e&&null!==e?{...e,_truncated:!0}:e)}_delay(e){return new Promise(t=>setTimeout(t,e))}_reportToErrorService(e){"undefined"!=typeof window&&window.errorReportingEnabled}}s.ErrorHandler=ErrorHandler,void 0!==t&&t.exports?t.exports={ErrorHandler:ErrorHandler}:"undefined"!=typeof window&&(window.ErrorHandler=ErrorHandler)},{}],75:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SafeDOM=void 0;class SafeDOM{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=this.createBulletproofLogger(e),this.operationCount=0,this.failureCount=0,this.lastOperation=null,this.initialize()}initialize(){try{"undefined"==typeof document&&(this.logger.warn("SafeDOM: Document not available, creating mock"),this.createMockDocument()),this.logger.debug("SafeDOM: Initialized successfully")}catch(e){this.emergencyLog("SafeDOM initialization failed",e)}}createBulletproofLogger(e){try{if(e&&"object"==typeof e)return{warn:this.safeLogMethod(e.warn||console.warn),error:this.safeLogMethod(e.error||console.error),debug:this.safeLogMethod(e.debug||console.debug),info:this.safeLogMethod(e.info||console.info)}}catch(e){}return{warn:this.safeLogMethod(console.warn),error:this.safeLogMethod(console.error),debug:this.safeLogMethod(console.debug),info:this.safeLogMethod(console.info)}}safeLogMethod(e){return(t,s)=>{try{e&&"function"==typeof e?e.call(console,t,s):console.log(t,s)}catch(e){this.emergencyLog(t,s)}}}createMockDocument(){try{window.document={getElementById:()=>null,querySelector:()=>null,querySelectorAll:()=>[],createElement:e=>({tagName:e,style:{},innerHTML:"",textContent:""}),body:{appendChild:()=>{},style:{}},head:{appendChild:()=>{}}}}catch(e){}}select(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return this.executeWithProtection("select",()=>{if(!this.validateSelector(e))return null;const s=this.validateContext(t);if(!s)return null;let i=null;try{if(i=s.querySelector(e),i)return this.logger.debug(`SafeDOM: Element found for selector: ${e}`),i}catch(t){this.logger.debug(`SafeDOM: querySelector failed for ${e}, trying alternatives`)}if(e.startsWith("#"))try{const t=e.substring(1);if(i=s.getElementById?s.getElementById(t):null,i)return this.logger.debug(`SafeDOM: Element found by ID: ${t}`),i}catch(e){}if(e.startsWith("."))try{const t=e.substring(1),i=s.getElementsByClassName?s.getElementsByClassName(t):[];if(i&&i.length>0)return this.logger.debug(`SafeDOM: Element found by class: ${t}`),i[0]}catch(e){}if(e&&!e.includes(".")&&!e.includes("#")&&!e.includes("["))try{const t=s.getElementsByTagName?s.getElementsByTagName(e):[];if(t&&t.length>0)return this.logger.debug(`SafeDOM: Element found by tag: ${e}`),t[0]}catch(e){}return this.logger.debug(`SafeDOM: Element not found for selector: ${e}`),null},e,t)}selectAll(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;try{if(!e)return this.logger.warn("SafeDOM: Empty selector provided"),[];const s=t.querySelectorAll(e);return Array.from(s)}catch(t){return this.logger.error("SafeDOM: Error selecting elements",{selector:e,error:t.message}),[]}}getElementById(e){try{if(!e||""===e){const e=(new Error).stack,t=e?e.split("\n")[2]:"unknown";return this.logger.warn("SafeDOM: Empty ID provided",{caller:t.trim()}),null}const t=document.getElementById(e);return t||this.logger.debug(`SafeDOM: Element not found for ID: ${e}`),t}catch(t){return this.logger.error("SafeDOM: Error getting element by ID",{id:e,error:t.message}),null}}selectById(e){return this.getElementById(e)}setText(e,t){try{return e?(e.textContent=t||"",!0):(this.logger.warn("SafeDOM: Null element provided to setText"),!1)}catch(e){return this.logger.error("SafeDOM: Error setting text content",{text:t,error:e.message}),!1}}setHTML(e,t){try{return e?(t&&"string"==typeof t&&(t.includes("<script")||t.includes("javascript:"))&&this.logger.warn("SafeDOM: Potentially unsafe HTML detected",{html:t.substring(0,100)}),e.innerHTML=t||"",!0):(this.logger.warn("SafeDOM: Null element provided to setHTML"),!1)}catch(e){return this.logger.error("SafeDOM: Error setting HTML content",{error:e.message}),!1}}addEventListener(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{return e?"function"!=typeof s?(this.logger.warn("SafeDOM: Non-function handler provided to addEventListener"),!1):(e.addEventListener(t,s,i),!0):(this.logger.warn("SafeDOM: Null element provided to addEventListener"),!1)}catch(e){return this.logger.error("SafeDOM: Error adding event listener",{event:t,error:e.message}),!1}}removeEventListener(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{return e?(e.removeEventListener(t,s,i),!0):(this.logger.warn("SafeDOM: Null element provided to removeEventListener"),!1)}catch(e){return this.logger.error("SafeDOM: Error removing event listener",{event:t,error:e.message}),!1}}addClass(e,t){try{return e?t?(e.classList.add(t),!0):(this.logger.warn("SafeDOM: Empty className provided to addClass"),!1):(this.logger.warn("SafeDOM: Null element provided to addClass"),!1)}catch(e){return this.logger.error("SafeDOM: Error adding CSS class",{className:t,error:e.message}),!1}}removeClass(e,t){try{return e?t?(e.classList.remove(t),!0):(this.logger.warn("SafeDOM: Empty className provided to removeClass"),!1):(this.logger.warn("SafeDOM: Null element provided to removeClass"),!1)}catch(e){return this.logger.error("SafeDOM: Error removing CSS class",{className:t,error:e.message}),!1}}toggleClass(e,t){try{return e?t?(e.classList.toggle(t),!0):(this.logger.warn("SafeDOM: Empty className provided to toggleClass"),!1):(this.logger.warn("SafeDOM: Null element provided to toggleClass"),!1)}catch(e){return this.logger.error("SafeDOM: Error toggling CSS class",{className:t,error:e.message}),!1}}show(e){try{return e?(e.style.display="",!0):(this.logger.warn("SafeDOM: Null element provided to show"),!1)}catch(e){return this.logger.error("SafeDOM: Error showing element",{error:e.message}),!1}}hide(e){try{return e?(e.style.display="none",!0):(this.logger.warn("SafeDOM: Null element provided to hide"),!1)}catch(e){return this.logger.error("SafeDOM: Error hiding element",{error:e.message}),!1}}executeWithProtection(e,t){for(var s=arguments.length,i=new Array(s>2?s-2:0),n=2;n<s;n++)i[n-2]=arguments[n];try{this.operationCount++,this.lastOperation={name:e,args:i,timestamp:Date.now()};return t()}catch(t){return this.failureCount++,this.logger.error(`SafeDOM: ${e} failed`,{error:t.message,args:i,operationCount:this.operationCount,failureCount:this.failureCount}),null}}validateSelector(e){try{if(!e||""===e||"string"!=typeof e){const t=(new Error).stack,s=t?t.split("\n")[3]:"unknown";return this.logger.warn("SafeDOM: Invalid selector provided",{selector:e,type:typeof e,caller:s.trim()}),!1}return!e.includes("<script")&&!e.includes("javascript:")||(this.logger.warn("SafeDOM: Potentially dangerous selector blocked",{selector:e}),!1)}catch(e){return this.emergencyLog("Selector validation failed",e),!1}}validateContext(e){try{return e?"function"==typeof e.querySelector?e:(this.logger.debug("SafeDOM: Invalid context, using document"),document||this.createMockDocument()):document||this.createMockDocument()}catch(e){return this.emergencyLog("Context validation failed",e),document||this.createMockDocument()}}emergencyLog(e,t){try{const s=(new Date).toISOString(),i=`[${s}] SafeDOM EMERGENCY: ${e}`;console&&(console.error?console.error(i,t):console.warn?console.warn(i,t):console.log&&console.log(i,t)),window.safeDOMEmergencyLogs||(window.safeDOMEmergencyLogs=[]),window.safeDOMEmergencyLogs.push({timestamp:s,message:e,error:t})}catch(e){}}getStats(){try{return{operationCount:this.operationCount,failureCount:this.failureCount,successRate:this.operationCount>0?((this.operationCount-this.failureCount)/this.operationCount*100).toFixed(2)+"%":"100%",lastOperation:this.lastOperation}}catch(e){return{error:"Stats unavailable"}}}}s.SafeDOM=SafeDOM,void 0!==t&&t.exports?t.exports={SafeDOM:SafeDOM}:"undefined"!=typeof window&&(window.SafeDOM=SafeDOM)},{}],76:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),Object.defineProperty(s,"API_CONFIG",{enumerable:!0,get:function(){return l.API_CONFIG}}),Object.defineProperty(s,"BUSINESS_CONFIG",{enumerable:!0,get:function(){return l.BUSINESS_CONFIG}}),Object.defineProperty(s,"MESSAGES",{enumerable:!0,get:function(){return l.MESSAGES}}),Object.defineProperty(s,"UI_CONFIG",{enumerable:!0,get:function(){return l.UI_CONFIG}}),s.safeDOM=s.logger=s.errorHandler=void 0;var i=e("./centralized-logger.js"),n=e("./safe-dom.js"),a=e("./error-handler.js"),l=e("./config-constants.js");const c=s.logger=new i.CentralizedLogger,d=s.safeDOM=new n.SafeDOM(c),g=s.errorHandler=new a.ErrorHandler(c);"undefined"!=typeof window&&(window.logger=c,window.safeDOM=d,window.errorHandler=g,window.API_CONFIG=l.API_CONFIG,window.UI_CONFIG=l.UI_CONFIG,window.MESSAGES=l.MESSAGES,window.BUSINESS_CONFIG=l.BUSINESS_CONFIG,c.info("Debug utilities loaded",{utilities:["CentralizedLogger","SafeDOM","ErrorHandler","ConfigConstants"],timestamp:(new Date).toISOString()}))},{"./centralized-logger.js":72,"./config-constants.js":73,"./error-handler.js":74,"./safe-dom.js":75}],77:[function(e,t,s){(function(t){(function(){"use strict";var i=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;e("./utils/browser-logging-service.js");var n=e("./utils/debug-logger.js");e("./utils/safe-logger.js");e("../../public/js/utils/utility-loader.js");var a=i(e("./utils/bulletproof-app-integration.js")),l=e("./utils/bulletproof-token-manager.js"),c=e("./utils/bulletproof-subsystem-wrapper.js");e("./utils/bulletproof-global-handler.js"),e("./init-banner-system.js");var d=e("../../public/js/modules/logger.js"),g=(e("../../public/js/modules/file-logger.js"),e("../../public/js/modules/event-bus.js")),u=(e("../../public/js/utils/centralized-logger.js"),e("../../public/js/modules/settings-manager.js")),h=e("./components/ui-manager.js"),p=i(e("../../public/js/modules/token-manager.js"));e("../../public/js/modules/disclaimer-modal.js"),e("../../public/js/modules/credentials-modal.js");var m=e("./subsystems/import-subsystem.js"),f=e("./subsystems/export-subsystem.js"),y=e("./subsystems/operation-manager-subsystem.js"),v=e("./subsystems/navigation-subsystem.js"),b=e("./subsystems/connection-manager-subsystem.js"),w=e("./subsystems/realtime-communication-subsystem.js"),S=e("./subsystems/auth-management-subsystem.js"),E=e("./subsystems/view-management-subsystem.js"),k=e("./subsystems/global-token-manager-subsystem.js"),T=e("./subsystems/token-notification-subsystem.js"),I=e("./subsystems/advanced-realtime-subsystem.js"),C=e("./components/realtime-collaboration-ui.js"),L=e("./subsystems/analytics-dashboard-subsystem.js"),O=e("./components/analytics-dashboard-ui.js"),M=(i(e("./components/history-ui.js")),i(e("./components/logging-ui-enhanced.js")),i(e("./components/testing-hub.js")),e("../../public/js/modules/progress-subsystem.js"),e("./subsystems/enhanced-progress-subsystem.js")),x=e("./subsystems/enhanced-token-status-subsystem.js"),A=(e("../../public/js/modules/session-subsystem.js"),e("../../public/js/modules/logging-subsystem.js")),P=e("../../public/js/modules/history-subsystem.js"),R=e("../../public/js/modules/population-subsystem.js"),D=e("../../public/js/modules/settings-subsystem.js"),B=e("../../public/js/modules/local-api-client.js"),U=e("../../public/js/modules/pingone-client.js"),F=e("../../public/js/modules/file-handler.js"),N=e("../../public/js/modules/version-manager.js"),_=(e("../../public/js/modules/token-alert-modal.js"),i(e("../../public/js/modules/token-refresh-handler.js")),e("socket.io-client"),e("../shared/feature-flags.js"));class App{constructor(){try{this.logger=new d.Logger({context:"app",version:"6.5.2.4",enableConsole:!0,enableStorage:!1}),this.logger.info("Centralized Logger initialized successfully",{version:"6.5.2.4",featureFlags:_.FEATURE_FLAGS,userAgent:navigator.userAgent})}catch(e){console.error("Failed to initialize CentralizedLogger, falling back to console logging:",e),this.logger={debug:console.debug.bind(console),info:console.info.bind(console),warn:console.warn.bind(console),error:console.error.bind(console),startTimer:e=>({label:e,startTime:Date.now()}),endTimer:e=>{const t=Date.now()-e.startTime;return console.log(`[${e.label}] Completed in ${t}ms`),t}},this.logger.warn("Using fallback console logger due to CentralizedLogger initialization failure")}this.bulletproofSystem=null,this.initializeBulletproofSystem(),this.logger.info("🚀 PingOne Import Tool starting...",{version:"6.5.2.4",timestamp:(new Date).toISOString(),userAgent:navigator.userAgent,url:window.location.href}),this.eventBus=new g.EventBus,this.settingsManager=null,this.uiManager=null,this.tokenManager=null,this.fileHandler=null,this.versionManager=null,this.localClient=null,this.globalTokenManager=null,this.progressSubsystem=null,this.enhancedProgressSubsystem=null,this.enhancedTokenStatusSubsystem=null,this.sessionSubsystem=null,this.loggingSubsystem=null,this.historySubsystem=null,this.populationSubsystem=null,this.settingsSubsystem=null,this.advancedRealtimeSubsystem=null,this.realtimeCollaborationUI=null,this.subsystems={},this.analyticsDashboardSubsystem=null,this.analyticsDashboardUI=null,this.isInitialized=!1,this.currentView="home",this.socket=null,this.version="6.5.2.4",this.buildTimestamp=(new Date).toISOString(),this.environment="development",this.features={bulletproofProgressContainer:!0,analyticsDataMethod:!0},this.logger.startTimer("app-initialization")}initializeBulletproofSystem(){try{this.logger.info("🛡️ Initializing Bulletproof Protection System..."),this.bulletproofSystem=new a.default({logger:this.logger,eventBus:this.eventBus,app:this}),this.bulletproofSystem.initialize(),this.logger.info("🛡️ Bulletproof Protection System initialized successfully")}catch(e){this.logger.error("🛡️ Failed to initialize Bulletproof Protection System",e)}}async init(){console.log("🔧 [APP INIT] Starting app.init() method...");try{console.log("🔧 [APP INIT] Logger available:",!!this.logger),this.logger.info("Starting application initialization"),console.log("🔧 [APP INIT] About to initialize core components..."),this.updateStartupMessage("Initializing core components..."),await this.initializeCoreComponents(),this.updateStartupMessage("Setting up subsystems..."),await this.initializeSubsystems(),this.updateStartupMessage("Loading legacy components..."),await this.initializeLegacyComponents(),this.updateStartupMessage("Setting up event listeners..."),this.setupEventListeners(),this.setupModalCompletionListeners(),this.updateStartupMessage("Finalizing user interface..."),await this.initializeUI(),this.isInitialized=!0,this.hideStartupScreen();const e=this.logger.endTimer("app-initialization");this.logger.info("Application initialization completed",{initializationTime:`${e}ms`,subsystemsEnabled:Object.keys(this.subsystems).length}),this.showInitializationSuccessStatus()}catch(e){throw this.logger.error("Application initialization failed",{error:e.message,stack:e.stack}),e}}showInitializationSuccessStatus(){try{const e=document.querySelectorAll('script[src*="bundle-"]');let t="Unknown";if(e.length>0){const s=e[e.length-1].src.match(/bundle-(\d+)\.js/);s&&(t=s[1])}let s="No Token",i="";try{if(this.subsystems.enhancedTokenStatus&&"function"==typeof this.subsystems.enhancedTokenStatus.getTokenStatus){const e=this.subsystems.enhancedTokenStatus.getTokenStatus();e&&e.isValid?(s="Valid Token",i=` (${e.expiresInMinutes}min left)`):s="Invalid Token"}else{s=this.checkCredentialsAvailable()?"Checking Token...":"No Credentials"}}catch(e){this.logger.warn("Could not get token status",{error:e.message}),s="Token Status Unknown"}const n=`✅ v${this.version} Ready | Bundle: ${t} | Last Update: UIManager & SafeDOM fixes | Token: ${s}${i}`;this.uiManager&&this.uiManager.showStatusBar&&this.uiManager.showStatusBar(n,"success",{duration:1e4,autoDismiss:!0}),this.logger.info("Initialization success status displayed",{version:this.version,bundleVersion:t,tokenStatus:s,tokenTimeLeft:i})}catch(e){this.logger.error("Failed to show initialization success status",{error:e.message,stack:e.stack})}}checkCredentialsAvailable(){try{if(void 0!==t&&t.env){if(t.env.PINGONE_CLIENT_ID&&t.env.PINGONE_CLIENT_SECRET&&t.env.PINGONE_ENVIRONMENT_ID)return!0}if(this.subsystems.settings&&"function"==typeof this.subsystems.settings.getSettings){const e=this.subsystems.settings.getSettings();return e.apiClientId&&e.apiSecret&&e.environmentId&&!e.apiClientId.includes("test-")&&!e.apiSecret.includes("test-")}return!1}catch(e){return this.logger.warn("Error checking credentials availability",{error:e.message}),!1}}hideStartupScreen(){try{const e=document.getElementById("startup-wait-screen"),t=document.querySelector(".app-container");if(e){this.logger.debug("Starting to hide startup wait screen"),e.classList.add("fade-out"),t&&t.classList.remove("startup-loading");setTimeout(()=>{try{e&&e.parentNode&&(e.offsetHeight,e.parentNode.removeChild(e),this.logger.debug("Startup wait screen removed from DOM"))}catch(e){this.logger.error("Error removing startup screen from DOM:",e)}},600),this.logger.debug("Startup wait screen hidden with animation")}else this.logger.warn("Startup wait screen element not found"),t&&t.classList.remove("startup-loading");t&&t.classList.contains("startup-loading")&&t.classList.remove("startup-loading")}catch(e){this.logger.error("Error in hideStartupScreen:",e);try{const e=document.getElementById("startup-wait-screen");e&&(e.style.display="none",e.parentNode&&e.parentNode.removeChild(e));const t=document.querySelector(".app-container");t&&t.classList.remove("startup-loading")}catch(e){this.logger.error("Fallback error handling failed:",e)}}}async initializeCoreComponents(){this.logger.debug("Initializing core components"),this.localClient=new B.LocalAPIClient(this.logger),this.uiManager=new h.UIManager({logger:this.logger}),this.settingsManager=new u.SettingsManager(this.logger.child({component:"settings-manager"})),await this.settingsManager.init(),this.logger.debug("Settings manager initialized"),this.settingsSubsystem=new D.SettingsSubsystem(this.logger.child({subsystem:"settings"}),this.uiManager,this.localClient,this.settingsManager,this.eventBus,null),await this.settingsSubsystem.init(),this.subsystems.settings=this.settingsSubsystem,this.logger.debug("Settings subsystem initialized as a core component"),this.tokenManager=new p.default(this.logger,this.subsystems.settings.getAllSettings(),this.eventBus),this.fileHandler=new F.FileHandler(this.logger,this.uiManager),this.versionManager=new N.VersionManager;try{this.pingOneClient=new U.PingOneClient,this.logger.debug("PingOne client created successfully")}catch(e){this.logger.error("Failed to create PingOne client:",e),this.pingOneClient=null}this.logger.debug("Core components initialized")}isPingOneClientAvailable(){return null!==this.pingOneClient&&"object"==typeof this.pingOneClient}async initializeSubsystems(){if(this.logger.info("Initializing subsystems..."),!this.logger)return console.error("CRITICAL: Logger not initialized before subsystem setup. Aborting."),void this.uiManager.showGlobalError("A critical error occurred during startup. Please refresh the page.");try{const e=[{name:"logging",flag:!0,constructor:A.LoggingSubsystem,deps:[this.eventBus,this.logger]},{name:"navigation",flag:_.FEATURE_FLAGS.USE_NAVIGATION_SUBSYSTEM,constructor:v.NavigationSubsystem,deps:[this.logger,this.uiManager,this.subsystems.settings]},{name:"connectionManager",flag:_.FEATURE_FLAGS.USE_CONNECTION_MANAGER,constructor:b.ConnectionManagerSubsystem,deps:[this.logger,this.uiManager,this.subsystems.settings,this.localClient]},{name:"realtimeManager",flag:_.FEATURE_FLAGS.USE_REALTIME_SUBSYSTEM,constructor:w.RealtimeCommunicationSubsystem,deps:[this.logger,this.uiManager]},{name:"authManager",flag:_.FEATURE_FLAGS.USE_AUTH_MANAGEMENT,constructor:S.AuthManagementSubsystem,deps:[this.logger,this.uiManager,this.localClient,this.subsystems.settings]},{name:"viewManager",flag:_.FEATURE_FLAGS.USE_VIEW_MANAGEMENT,constructor:E.ViewManagementSubsystem,deps:[this.logger,this.uiManager]},{name:"operationManager",flag:_.FEATURE_FLAGS.USE_OPERATION_MANAGER,constructor:y.OperationManagerSubsystem,deps:[this.logger,this.uiManager,this.subsystems.settings,this.localClient]},{name:"population",flag:!0,constructor:R.PopulationSubsystem,deps:[this.eventBus,this.subsystems.settings,()=>this.subsystems.logging,this.localClient]},{name:"history",flag:!0,constructor:P.HistorySubsystem,deps:[this.eventBus,this.subsystems.settings,()=>this.subsystems.logging]},{name:"import",flag:_.FEATURE_FLAGS.USE_IMPORT_SUBSYSTEM,constructor:m.ImportSubsystem,deps:[this.logger,this.uiManager,this.localClient,this.subsystems.settings,this.eventBus,()=>this.subsystems.population,()=>this.subsystems.authManager]},{name:"export",flag:_.FEATURE_FLAGS.USE_EXPORT_SUBSYSTEM,constructor:f.ExportSubsystem,deps:[this.logger,this.uiManager,this.localClient,this.subsystems.settings,this.eventBus,()=>this.subsystems.population]},{name:"analyticsDashboard",flag:_.FEATURE_FLAGS.USE_ANALYTICS_DASHBOARD,constructor:L.AnalyticsDashboardSubsystem,deps:[this.logger,this.eventBus,()=>this.subsystems.advancedRealtime,this.progressSubsystem,this.sessionSubsystem]},{name:"advancedRealtime",flag:_.FEATURE_FLAGS.USE_ADVANCED_REALTIME,constructor:I.AdvancedRealtimeSubsystem,deps:[this.logger,this.eventBus,()=>this.subsystems.realtimeManager,this.sessionSubsystem,this.progressSubsystem]}];for(const t of e)if(t.flag)try{console.log(`🔧 [SUBSYSTEM INIT] Starting ${t.name} subsystem initialization...`),this.logger.debug(`Initializing ${t.name} subsystem...`),console.log(`🔧 [SUBSYSTEM INIT] ${t.name} dependencies:`,t.deps.map(e=>"function"==typeof e?"function()":e));const e=t.deps.map(e=>{if("function"==typeof e){const s=e();return console.log(`🔧 [SUBSYSTEM INIT] ${t.name} lazy dependency resolved:`,s?"success":"null/undefined"),s}return e});if(console.log(`🔧 [SUBSYSTEM INIT] ${t.name} resolved dependencies:`,e.map(e=>e?"available":"null/undefined")),!t.constructor)throw new Error(`Constructor not found for ${t.name} subsystem`);console.log(`🔧 [SUBSYSTEM INIT] ${t.name} creating instance...`);const s=new t.constructor(...e);console.log(`🔧 [SUBSYSTEM INIT] ${t.name} calling init()...`),await s.init(),console.log(`🛡️ [SUBSYSTEM INIT] ${t.name} applying bulletproof protection...`),this.subsystems[t.name]=(0,c.createBulletproofSubsystemWrapper)(s,this.logger.child({subsystem:t.name})),console.log(`✅ [SUBSYSTEM INIT] ${t.name} subsystem initialized successfully!`),this.logger.info(`${t.name} subsystem initialized successfully.`)}catch(e){console.error(`❌ [SUBSYSTEM INIT] Failed to initialize ${t.name} subsystem:`,e),this.logger.error(`Failed to initialize ${t.name} subsystem`,{error:e.message,stack:e.stack,subsystem:t.name}),console.log(`🛡️ [SUBSYSTEM INIT] Creating emergency fallback for ${t.name}...`),this.subsystems[t.name]=this.createEmergencySubsystem(t.name,e)}else console.log(`⏭️ [SUBSYSTEM INIT] Skipping ${t.name} subsystem (flag disabled)`);if(this.subsystems.advancedRealtime&&(this.realtimeCollaborationUI=new C.RealtimeCollaborationUI(this.logger,this.eventBus,this.subsystems.advancedRealtime,this.uiManager),this.realtimeCollaborationUI.init()),this.subsystems.analyticsDashboard)try{this.logger.debug("Initializing Analytics Dashboard UI..."),this.analyticsDashboardUI=new O.AnalyticsDashboardUI(this.eventBus,this.subsystems.analyticsDashboard),await this.analyticsDashboardUI.init(),this.logger.info("Analytics Dashboard UI initialized successfully")}catch(e){this.logger.error("Failed to initialize Analytics Dashboard UI",{error:e.message,stack:e.stack})}this.logger.info("Subsystem initialization completed (some may have failed).")}catch(e){this.logger.error("Critical error during subsystem initialization",{error:e.message,stack:e.stack}),this.logger.warn("Continuing app initialization despite subsystem errors")}try{this.logger.info("🛡️ Initializing Bulletproof Global Token Manager...");const e=new k.GlobalTokenManagerSubsystem(this.logger.child({subsystem:"globalTokenManager"}),this.eventBus);await e.init(),this.bulletproofTokenManager=(0,l.createBulletproofTokenManager)(this.logger),this.bulletproofTokenManager?(this.subsystems.globalTokenManager=await this.bulletproofTokenManager.initialize(e),this.logger.info("🛡️ Bulletproof Global Token Manager initialized successfully")):(this.subsystems.globalTokenManager=e,this.logger.warn("🛡️ Using original token manager (bulletproof creation failed)"))}catch(e){this.logger.error("🛡️ Bulletproof token manager initialization failed",e),this.subsystems.globalTokenManager={name:"EmergencyTokenManager",init:()=>Promise.resolve(!0),updateGlobalTokenStatus:()=>{try{const e=document.getElementById("global-token-status");e&&(e.innerHTML='<span class="global-token-icon">🛡️</span><span class="global-token-text">Token status protected</span>')}catch(e){console.log("🛡️ Emergency token status active")}},destroy:()=>Promise.resolve(!0)}}this.subsystems.tokenNotification=new T.TokenNotificationSubsystem(this.logger.child({subsystem:"token-notification"}),this.eventBus,this.subsystems.navigation),await this.subsystems.tokenNotification.init(),this.logger.debug("Token Notification subsystem initialized"),this.enhancedProgressSubsystem=new M.EnhancedProgressSubsystem(this.logger.child({subsystem:"enhanced-progress"}),this.uiManager,this.eventBus,this.subsystems.realtimeManager),await this.enhancedProgressSubsystem.init(),this.subsystems.enhancedProgress=this.enhancedProgressSubsystem,this.logger.debug("Enhanced Progress subsystem initialized"),this.enhancedTokenStatusSubsystem=new x.EnhancedTokenStatusSubsystem(this.logger.child({subsystem:"enhanced-token-status"}),this.eventBus,this.uiManager),await this.enhancedTokenStatusSubsystem.init(),this.subsystems.enhancedTokenStatus=this.enhancedTokenStatusSubsystem,this.logger.debug("Enhanced Token Status subsystem initialized"),this.logger.info("All subsystems initialized successfully",{subsystemCount:Object.keys(this.subsystems).length,enabledSubsystems:Object.keys(this.subsystems)})}async initializeLegacyComponents(){this.logger.debug("Initializing remaining legacy components"),this.logger.debug("Legacy components initialized (minimal set)")}setupEventListeners(){this.logger.debug("Setting up event listeners and EventBus patterns"),window.addEventListener("error",e=>{const t={message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno,error:e.error?.stack};this.logger.error("Global error caught",t),this.eventBus.emit("app:global-error",t)}),window.addEventListener("unhandledrejection",e=>{const t={reason:e.reason,promise:e.promise};this.logger.error("Unhandled promise rejection",t),this.eventBus.emit("app:unhandled-rejection",t)}),window.addEventListener("load",()=>{const e={loadTime:performance.now(),timing:performance.timing};this.logger.info("Page load completed",e),this.eventBus.emit("app:page-loaded",e)}),window.addEventListener("settings:save-success",e=>{const t=document.getElementById("settings-status-box");t&&(t.textContent=e.detail.message,t.className="status-message status-success",t.style.display="flex",setTimeout(()=>{t.style.display="none"},5e3))}),window.addEventListener("settings:save-error",e=>{const t=document.getElementById("settings-status-box");t&&(t.textContent=e.detail.message,t.className="status-message status-error",t.style.display="flex",setTimeout(()=>{t.style.display="none"},8e3))}),this.setupEventBusListeners(),this.setupMainUIEventListeners(),this.logger.debug("Event listeners and EventBus patterns set up")}setupMainUIEventListeners(){this.logger.debug("Setting up main UI event listeners");try{const e=document.getElementById("csv-file");e&&e.addEventListener("change",e=>{this.logger.debug("File input changed"),this.handleFileSelection(e)});const t=document.getElementById("import-drop-zone");t&&(t.addEventListener("click",t=>{t.preventDefault(),this.logger.debug("Drop zone clicked"),e&&e.click()}),t.addEventListener("dragover",e=>{e.preventDefault(),t.classList.add("dragover")}),t.addEventListener("dragleave",e=>{e.preventDefault(),t.classList.remove("dragover")}),t.addEventListener("drop",e=>{e.preventDefault(),t.classList.remove("dragover"),this.logger.debug("File dropped"),this.handleFileDrop(e)}));const s=document.getElementById("cancel-import-btn");s&&s.addEventListener("click",e=>{e.preventDefault(),this.logger.debug("Cancel import button clicked"),this.cancelImport()}),this.logger.debug("Setting up direct navigation event listeners as fallback"),this.setupDirectNavigation(),this.logger.debug("Main UI event listeners set up successfully")}catch(e){this.logger.error("Failed to set up main UI event listeners",{error:e.message})}}setupEventBusListeners(){this.logger.debug("Setting up EventBus listeners for subsystem coordination"),this.eventBus.on("app:init-complete",e=>{this.logger.info("Application initialization complete",e)}),this.eventBus.on("app:shutdown",e=>{this.logger.info("Application shutdown initiated",e)}),this.eventBus.on("subsystem:error",e=>{this.logger.error("Subsystem error occurred",e)}),this.eventBus.on("subsystem:ready",e=>{this.logger.debug("Subsystem ready",e)}),this.eventBus.on("navigation:view-changed",e=>{let{newView:t}=e;this.currentView=t,this.logger.info(`View changed to: ${t}`),(0,_.isFeatureEnabled)("ANALYTICS_DASHBOARD")&&this.analyticsDashboardUI&&("analytics"===t?this.analyticsDashboardUI.show():this.analyticsDashboardUI.hide())}),this.eventBus.on("operation:started",e=>{this.logger.info("Operation started",e)}),this.eventBus.on("operation:completed",e=>{this.logger.info("Operation completed",e)}),this.eventBus.on("operation:failed",e=>{this.logger.error("Operation failed",e)}),this.eventBus.on("progress:updated",e=>{this.logger.debug("Progress updated",e)}),this.eventBus.on("status:changed",e=>{this.logger.debug("Status changed",e)}),this.logger.debug("EventBus listeners set up for subsystem coordination")}setupModalCompletionListeners(){try{document.addEventListener("credentials-modal-completed",e=>{this.logger.info("🔄 LOADING: Credentials modal completed",e.detail),this.showModalLoading("Finalizing Setup...","Completing your PingOne Import Tool configuration."),setTimeout(()=>{this.hideModalLoading()},1500)}),document.addEventListener("application_enabled_after_credentials",e=>{this.logger.info("🔄 LOADING: Application enabled after credentials"),this.showModalLoading("Almost Ready...","Finalizing your workspace setup."),setTimeout(()=>{this.hideModalLoading()},1e3)}),this.logger.debug("Modal completion listeners set up")}catch(e){this.logger.error("Failed to set up modal completion listeners",{error:e.message})}}showModalLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Loading...",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Please wait while we set up your experience.";try{const s=document.getElementById("modal-loading-overlay"),i=document.getElementById("modal-loading-title"),n=document.getElementById("modal-loading-message");s&&i&&n&&(i.textContent=e,n.textContent=t,s.classList.remove("fade-out"),s.classList.add("fade-in"),s.style.display="flex",this.logger.debug("🔄 LOADING: Modal loading shown",{title:e,message:t}))}catch(e){this.logger.error("🔄 LOADING: Failed to show modal loading",{error:e.message})}}hideModalLoading(){try{const e=document.getElementById("modal-loading-overlay");e&&(e.classList.remove("fade-in"),e.classList.add("fade-out"),setTimeout(()=>{e.style.display="none",e.classList.remove("fade-out")},300),this.logger.debug("🔄 LOADING: Modal loading hidden"))}catch(e){this.logger.error("🔄 LOADING: Failed to hide modal loading",{error:e.message})}}updateStartupMessage(e){try{const t=document.getElementById("startup-wait-screen"),s=t?.querySelector(".startup-text p");s&&(s.textContent=e,this.logger.debug("🔄 LOADING: Startup message updated",{message:e}))}catch(e){this.logger.error("🔄 LOADING: Failed to update startup message",{error:e.message})}}setupDirectNavigation(){this.logger.debug("🔧 DIRECT NAV: Setting up direct navigation event listeners");try{const e=document.querySelectorAll("[data-view]");if(this.logger.debug(`🔧 DIRECT NAV: Found ${e.length} navigation elements`),0===e.length)return void this.logger.warn("🔧 DIRECT NAV: No navigation elements found with [data-view] attribute");e.forEach((e,t)=>{const s=e.getAttribute("data-view");this.logger.debug(`🔧 DIRECT NAV: Setting up listener for ${s} (element ${t})`),e.removeEventListener("click",this.handleDirectNavigation);const clickHandler=e=>{e.preventDefault(),e.stopPropagation(),this.logger.info(`🔧 DIRECT NAV: Navigation clicked: ${s}`),this.directShowView(s)};e.addEventListener("click",clickHandler),e._directNavHandler=clickHandler}),this.logger.info("🔧 DIRECT NAV: Direct navigation setup completed successfully"),this.setupSettingsPageButtons()}catch(e){this.logger.error("🔧 DIRECT NAV: Failed to set up direct navigation",{error:e.message})}}setupSettingsPageButtons(){this.logger.debug("🔧 SETTINGS: Setting up settings page button listeners");try{const e=document.getElementById("save-settings");e&&(e.addEventListener("click",e=>{e.preventDefault(),this.logger.info("🔧 SETTINGS: Save Settings clicked"),this.handleSaveSettings()}),this.logger.debug("🔧 SETTINGS: Save Settings button listener added"));const t=document.getElementById("test-connection-btn");t&&(t.addEventListener("click",e=>{e.preventDefault(),this.logger.info("🔧 SETTINGS: Test Connection clicked"),this.handleTestConnection()}),this.logger.debug("🔧 SETTINGS: Test Connection button listener added"));const s=document.getElementById("get-token-btn");s&&(s.addEventListener("click",e=>{e.preventDefault(),this.logger.info("🔧 SETTINGS: Get Token clicked"),this.handleGetToken()}),this.logger.debug("🔧 SETTINGS: Get Token button listener added"));const i=document.getElementById("toggle-api-secret-visibility");i&&(i.addEventListener("click",e=>{e.preventDefault(),this.logger.info("🔧 SETTINGS: Toggle Secret Visibility clicked"),this.handleToggleSecretVisibility()}),this.logger.debug("🔧 SETTINGS: Toggle Secret Visibility button listener added")),this.logger.info("🔧 SETTINGS: Settings page buttons setup completed")}catch(e){this.logger.error("🔧 SETTINGS: Failed to set up settings page buttons",{error:e.message})}}async handleSaveSettings(){this.logger.info("🔧 SETTINGS: Saving settings..."),n.debugLog.userAction("save_settings","save-settings-button",{timestamp:Date.now()});try{const e=document.getElementById("environment-id")?.value,t=document.getElementById("api-client-id")?.value,s=document.getElementById("api-secret")?.value,i=document.getElementById("region")?.value,n=document.getElementById("rate-limit")?.value,a=document.getElementById("population-id")?.value,l={environmentId:e,apiClientId:t,apiSecret:s,region:i,rateLimit:parseInt(n)||90,populationId:a};if(this.logger.debug("🔧 SETTINGS: Settings to save",{...l,clientSecret:"[HIDDEN]"}),this.settingsManager&&"function"==typeof this.settingsManager.saveSettings)await this.settingsManager.saveSettings(l),this.showSettingsStatus("Settings saved successfully!","success");else{localStorage.setItem("pingone-settings",JSON.stringify(l));const e=await fetch("/api/settings",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(l)});if(!e.ok){const t=await e.json().catch(()=>({error:"Unknown error"}));throw new Error(t.error||`HTTP ${e.status}: ${e.statusText}`)}{const t=await e.json();this.showSettingsStatus("Settings saved successfully!","success"),this.logger.info("🔧 SETTINGS: Settings saved successfully",t)}}}catch(e){this.logger.error("🔧 SETTINGS: Failed to save settings",{error:e.message}),n.debugLog.error("settings","Save settings failed",e,{action:"save_settings",timestamp:Date.now()}),this.showSettingsStatus(`Failed to save settings: ${e.message}`,"error")}}async loadSettings(){this.logger.info("🔧 SETTINGS: Loading settings for form population...");try{if(this.settingsSubsystem&&"function"==typeof this.settingsSubsystem.loadSettings){this.logger.debug("🔧 SETTINGS: Using SettingsSubsystem to load settings");const e=await this.settingsSubsystem.loadSettings();return this.populateSettingsForm(e),e}this.logger.debug("🔧 SETTINGS: Using direct API call to load settings");try{const e=await fetch("/api/settings");if(e.ok){const t=await e.json();return this.populateSettingsForm(t),t}}catch(e){return this.logger.error("🔧 SETTINGS: Failed to load settings from API",{error:e.message}),this.showSettingsStatus(`Failed to load settings: ${e.message}`,"error"),{}}}catch(e){return this.logger.error("🔧 SETTINGS: Failed to load settings",{error:e.message}),this.showSettingsStatus(`Failed to load settings: ${e.message}`,"error"),{}}}populateSettingsForm(e){this.logger.debug("🔧 SETTINGS: Populating form fields with settings data");try{const t={"environment-id":e.environmentId||e["environment-id"]||"","api-client-id":e.apiClientId||e["api-client-id"]||"","api-secret":e.apiSecret||e["api-secret"]||"",region:e.region||"NorthAmerica","population-id":e.populationId||e["population-id"]||"","rate-limit":e.rateLimit||e["rate-limit"]||90};Object.entries(t).forEach(e=>{let[t,s]=e;const i=document.getElementById(t);i&&s&&(i.value=s,this.logger.debug(`🔧 SETTINGS: Populated field ${t}`,{hasValue:!!s}))}),this.logger.info("🔧 SETTINGS: Form fields populated successfully")}catch(e){this.logger.error("🔧 SETTINGS: Failed to populate form fields",{error:e.message})}}async handleTestConnection(){this.logger.info("🔧 SETTINGS: Testing connection..."),n.debugLog.userAction("test_connection","test-connection-btn",{timestamp:Date.now()});try{if(this.showSettingsStatus("Testing connection...","info"),this.subsystems.connectionManager&&"function"==typeof this.subsystems.connectionManager.testConnection){const e=await this.subsystems.connectionManager.testConnection();if(e.success){let t=e.message||"Success - Token minted";e.token&&e.token.timeLeft&&(t+=` - Time left: ${e.token.timeLeft}`),this.showSettingsStatus(t,"success")}else this.showSettingsStatus(`Connection test failed: ${e.error}`,"error")}else{const e=await fetch("/api/pingone/test-connection",{method:"GET",headers:{"Content-Type":"application/json"}}),t=await e.json();if(t.success){let e=t.message||"Success - Token minted";t.token&&t.token.timeLeft&&(e+=` - Time left: ${t.token.timeLeft}`),this.showSettingsStatus(e,"success")}else this.showSettingsStatus(`Connection test failed: ${t.error}`,"error")}}catch(e){this.logger.error("🔧 SETTINGS: Connection test failed",{error:e.message}),this.showSettingsStatus(`Connection test failed: ${e.message}`,"error")}}async handleGetToken(){this.logger.info("🔧 SETTINGS: Getting token..."),n.debugLog.userAction("get_token","get-token-btn",{timestamp:Date.now()});try{if(this.showSettingsStatus("Getting token...","info"),this.tokenManager&&"function"==typeof this.tokenManager.getToken){await this.tokenManager.getToken()?this.showSettingsStatus("Token acquired successfully!","success"):this.showSettingsStatus("Failed to get token","error")}else{const e=await fetch("/api/pingone/token",{method:"POST",headers:{"Content-Type":"application/json"}});(await e.json()).access_token?this.showSettingsStatus("Token acquired successfully!","success"):this.showSettingsStatus("Failed to get token","error")}}catch(e){this.logger.error("🔧 SETTINGS: Failed to get token",{error:e.message}),this.showSettingsStatus(`Failed to get token: ${e.message}`,"error")}}handleToggleSecretVisibility(){this.logger.debug("🔧 SETTINGS: Toggling secret visibility");try{const e=document.getElementById("api-secret"),t=document.getElementById("toggle-api-secret-visibility"),s=t?.querySelector("i");e&&t&&s&&("password"===e.type?(e.type="text",s.className="fas fa-eye-slash",this.logger.debug("🔧 SETTINGS: Secret visibility: shown")):(e.type="password",s.className="fas fa-eye",this.logger.debug("🔧 SETTINGS: Secret visibility: hidden")))}catch(e){this.logger.error("🔧 SETTINGS: Failed to toggle secret visibility",{error:e.message})}}showSettingsStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";try{const s=document.getElementById("settings-action-status"),i=s?.querySelector(".status-message"),n=s?.querySelector(".status-icon");if(s&&i&&n){i.textContent=e;const a={success:"fas fa-check-circle",error:"fas fa-exclamation-circle",info:"fas fa-info-circle",warning:"fas fa-exclamation-triangle"};n.className=a[t]||a.info,s.className=`action-status ${t}`,s.style.display="block","success"!==t&&"info"!==t||setTimeout(()=>{s.style.display="none"},5e3),this.logger.debug(`🔧 SETTINGS: Status shown: ${t} - ${e}`)}}catch(e){this.logger.error("🔧 SETTINGS: Failed to show status",{error:e.message})}}async directShowView(e){this.logger.info(`🔧 DIRECT NAV: Switching to view: ${e}`),n.debugLog.navigation(this.currentView,e,{method:"direct_navigation",timestamp:Date.now()});try{const t=document.querySelectorAll(".view, .view-container");this.logger.debug(`🔧 DIRECT NAV: Found ${t.length} view containers to hide`),t.forEach(e=>{e.style.display="none",e.classList.remove("active")});const s=document.getElementById(`${e}-view`);s?(s.style.display="block",s.classList.add("active"),this.logger.info(`🔧 DIRECT NAV: Successfully showed ${e}-view`),this.updateDirectNavigationState(e),this.currentView=e,this.updatePageTitle(e),this.logger.info(`🔧 DIRECT NAV: Navigation to ${e} completed successfully`)):this.logger.error(`🔧 DIRECT NAV: View element not found: ${e}-view`)}catch(t){this.logger.error(`🔧 DIRECT NAV: Failed to show view ${e}`,{error:t.message})}}updateDirectNavigationState(e){try{document.querySelectorAll("[data-view]").forEach(t=>{t.getAttribute("data-view")===e?t.classList.add("active"):t.classList.remove("active")}),this.logger.debug(`🔧 DIRECT NAV: Updated navigation state for ${e}`)}catch(e){this.logger.error("🔧 DIRECT NAV: Failed to update navigation state",{error:e.message})}}updatePageTitle(e){try{const t={home:"Home",import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History"}[e]||"PingOne Import Tool";document.title=`${t} - PingOne Import Tool v6.5.2.4`,this.logger.debug(`🔧 DIRECT NAV: Updated page title to: ${document.title}`)}catch(e){this.logger.error("🔧 DIRECT NAV: Failed to update page title",{error:e.message})}}async initializeUI(){this.logger.debug("Initializing UI"),this.subsystems.viewManager?await this.subsystems.viewManager.showView(this.currentView):await this.legacyShowView(this.currentView),this.logger.debug("UI initialized")}async showView(e){return this.logger.debug("Showing view",{view:e,useSubsystem:!!this.subsystems.viewManager}),this.subsystems.viewManager?await this.subsystems.viewManager.showView(e):await this.legacyShowView(e)}async legacyShowView(e){this.logger.debug("Using legacy view management",{view:e}),this.currentView=e}async startImport(){return this.logger.info("Starting import operation"),this.subsystems.import&&"function"==typeof this.subsystems.import.startImport?await this.subsystems.import.startImport():this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.startImport?await this.subsystems.importManager.startImport():this.importSubsystem&&"function"==typeof this.importSubsystem.startImport?await this.importSubsystem.startImport():(this.logger.warn("Using legacy import - subsystem not available"),await this.legacyStartImport())}async startExport(){return this.logger.info("Starting export operation"),this.subsystems.exportManager?await this.subsystems.exportManager.startExport():(this.logger.warn("Using legacy export - subsystem not available"),await this.legacyStartExport())}async getToken(){return this.logger.debug("Getting authentication token"),this.subsystems.authManager?await this.subsystems.authManager.getToken():(this.logger.warn("Using legacy token management - subsystem not available"),await this.tokenManager.getToken())}async legacyStartImport(){this.logger.debug("Legacy import method called")}async legacyStartExport(){this.logger.debug("Legacy export method called")}navigateToView(e){this.logger.debug("Navigating to view",{viewName:e});try{this.subsystems.viewManager?this.subsystems.viewManager.showView(e):this.legacyShowView(e),this.currentView=e,this.logger.info("Navigation completed",{viewName:e})}catch(t){this.logger.error("Navigation failed",{viewName:e,error:t.message})}}handleFileSelection(e){this.logger.debug("Handling file selection");try{const t=e.target.files;if(t&&t.length>0){const e=t[0];if(this.logger.info("File selected",{fileName:e.name,fileSize:e.size,fileType:e.type}),this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelect)this.subsystems.import.handleFileSelect(e);else if(this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelection)this.subsystems.import.handleFileSelection(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelect)this.subsystems.importManager.handleFileSelect(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelection)this.subsystems.importManager.handleFileSelection(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelect)this.importSubsystem.handleFileSelect(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelection)this.importSubsystem.handleFileSelection(e);else if(this.logger.warn("Import subsystem not available, using legacy import"),this.logger.warn("SUBSYSTEM STATUS CHECK:",{"this.subsystems":!!this.subsystems,"subsystems.import":!(!this.subsystems||!this.subsystems.import),"import.handleFileSelect":!(!this.subsystems||!this.subsystems.import||"function"!=typeof this.subsystems.import.handleFileSelect),"import.handleFileSelection":!(!this.subsystems||!this.subsystems.import||"function"!=typeof this.subsystems.import.handleFileSelection),fileHandler:!!this.fileHandler,"fileHandler.handleFile":!(!this.fileHandler||"function"!=typeof this.fileHandler.handleFile),availableSubsystems:this.subsystems?Object.keys(this.subsystems):"null"}),this.logger.debug("File handling diagnostics:",{"subsystems.import":!!this.subsystems.import,"subsystems.importManager":!!this.subsystems.importManager,importSubsystem:!!this.importSubsystem,fileHandler:!!this.fileHandler,"fileHandler.handleFile":!(!this.fileHandler||"function"!=typeof this.fileHandler.handleFile),availableSubsystems:Object.keys(this.subsystems||{})}),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)this.logger.info("Using legacy file handler"),this.fileHandler.handleFile(e);else{if(!this.fileHandler)try{if(this.logger.warn("Attempting to reinitialize file handler..."),this.fileHandler=new F.FileHandler(this.logger,this.uiManager),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)return this.logger.info("Emergency file handler initialized successfully"),void this.fileHandler.handleFile(e)}catch(e){this.logger.error("Failed to reinitialize file handler",{error:e.message})}this.logger.error("No file handling method available",{"subsystems.import":!!this.subsystems.import,fileHandler:!!this.fileHandler,"FileHandler class":typeof F.FileHandler}),this.showMessage("File handling is temporarily unavailable. Please refresh the page and try again.","error")}}}catch(e){this.logger.error("File selection handling failed",{error:e.message})}}handleFileDrop(e){this.logger.debug("Handling file drop");try{const t=e.dataTransfer.files;if(t&&t.length>0){const e=t[0];if(this.logger.info("File dropped",{fileName:e.name,fileSize:e.size,fileType:e.type}),this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelect)this.subsystems.import.handleFileSelect(e);else if(this.subsystems.import&&"function"==typeof this.subsystems.import.handleFileSelection)this.subsystems.import.handleFileSelection(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelect)this.subsystems.importManager.handleFileSelect(e);else if(this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.handleFileSelection)this.subsystems.importManager.handleFileSelection(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelect)this.importSubsystem.handleFileSelect(e);else if(this.importSubsystem&&"function"==typeof this.importSubsystem.handleFileSelection)this.importSubsystem.handleFileSelection(e);else if(this.logger.warn("Import subsystem not available, using legacy import"),this.logger.debug("File drop handling diagnostics:",{"subsystems.import":!!this.subsystems.import,"subsystems.importManager":!!this.subsystems.importManager,importSubsystem:!!this.importSubsystem,fileHandler:!!this.fileHandler,"fileHandler.handleFile":!(!this.fileHandler||"function"!=typeof this.fileHandler.handleFile),availableSubsystems:Object.keys(this.subsystems||{})}),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)this.logger.info("Using legacy file handler for drop"),this.fileHandler.handleFile(e);else{if(!this.fileHandler)try{if(this.logger.warn("Attempting to reinitialize file handler for drop..."),this.fileHandler=new F.FileHandler(this.logger,this.uiManager),this.fileHandler&&"function"==typeof this.fileHandler.handleFile)return this.logger.info("Emergency file handler initialized successfully for drop"),void this.fileHandler.handleFile(e)}catch(e){this.logger.error("Failed to reinitialize file handler for drop",{error:e.message})}this.logger.error("No file handling method available for drop",{"subsystems.import":!!this.subsystems.import,fileHandler:!!this.fileHandler,"FileHandler class":typeof F.FileHandler}),this.showMessage("File drop handling is temporarily unavailable. Please refresh the page and try again.","error")}}}catch(e){this.logger.error("File drop handling failed",{error:e.message})}}cancelImport(){this.logger.debug("Cancelling import operation");try{this.subsystems.import&&"function"==typeof this.subsystems.import.cancelImport?this.subsystems.import.cancelImport():this.subsystems.importManager&&"function"==typeof this.subsystems.importManager.cancelImport?this.subsystems.importManager.cancelImport():this.importSubsystem&&"function"==typeof this.importSubsystem.cancelImport?this.importSubsystem.cancelImport():(this.logger.warn("Import subsystem not available, using legacy cancel"),this.legacyCancelImport()),this.logger.info("Import cancellation requested")}catch(e){this.logger.error("Import cancellation failed",{error:e.message})}}enableToolAfterDisclaimer(){this.logger.info("Enabling tool after disclaimer acceptance");try{this.showModalLoading("Setting up...","Preparing your PingOne Import Tool experience."),this.hideStartupScreen(),this.uiManager&&"function"==typeof this.uiManager.enableUI&&this.uiManager.enableUI(),this.eventListenersSetup||(this.setupEventListeners(),this.eventListenersSetup=!0),Object.values(this.subsystems).forEach(e=>{e&&"function"==typeof e.enable&&e.enable()});const e=document.querySelector(".app-container");e&&(e.classList.remove("disabled","modal-active"),e.style.pointerEvents="auto");document.querySelectorAll("button, .btn").forEach(e=>{e.disabled=!1,e.style.pointerEvents="auto"}),this.logger.info("Tool enabled successfully after disclaimer"),setTimeout(()=>{this.hideModalLoading()},1e3)}catch(e){this.logger.error("Failed to enable tool after disclaimer",{error:e.message}),this.hideModalLoading()}}getHealthStatus(){return{initialized:this.isInitialized,subsystems:Object.keys(this.subsystems).reduce((e,t)=>(e[t]=this.subsystems[t].isInitialized||!1,e),{}),featureFlags:_.FEATURE_FLAGS,currentView:this.currentView,timestamp:(new Date).toISOString()}}showMessage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";this.logger.debug(`Showing message: ${e}`,{type:t}),this.showSettingsStatus(e,t)}createEmergencySubsystem(e,t){try{this.logger.warn(`🛡️ Creating emergency fallback for ${e}`,{originalError:t.message});const s={name:`Emergency${e.charAt(0).toUpperCase()+e.slice(1)}`,initialized:!0,emergency:!0,originalError:t.message,init:()=>Promise.resolve(!0),destroy:()=>Promise.resolve(!0),..."export"===e&&{exportUsers:()=>(this.logger.warn("🛡️ Export subsystem in emergency mode - functionality limited"),Promise.resolve({success:!1,error:"Export subsystem unavailable - please refresh the page",emergency:!0})),getExportStatus:()=>({status:"emergency",message:"Export subsystem unavailable",emergency:!0}),validateExportRequest:()=>({valid:!1,error:"Export validation unavailable in emergency mode"})},..."import"===e&&{importUsers:()=>(this.logger.warn("🛡️ Import subsystem in emergency mode - functionality limited"),Promise.resolve({success:!1,error:"Import subsystem unavailable - please refresh the page",emergency:!0})),getImportStatus:()=>({status:"emergency",message:"Import subsystem unavailable",emergency:!0})},getStatus:()=>({status:"emergency",subsystem:e,message:`${e} subsystem is in emergency mode`,error:t.message,emergency:!0}),isReady:()=>!1,hasData:()=>!1,__emergencyHandler:t=>(this.logger.warn(`🛡️ Emergency subsystem ${e}: method ${t} called`),Promise.resolve({success:!1,error:`${t} unavailable in emergency mode`,emergency:!0}))},i=(0,c.createBulletproofSubsystemWrapper)(s,this.logger.child({subsystem:`emergency-${e}`}));return this.logger.info(`🛡️ Emergency ${e} subsystem created successfully`),i}catch(t){return this.logger.error(`🛡️ Failed to create emergency subsystem for ${e}`,t),{name:`UltimateEmergency${e}`,emergency:!0,init:()=>Promise.resolve(!1),destroy:()=>Promise.resolve(!1),getStatus:()=>({status:"critical-emergency",subsystem:e})}}}cleanup(){try{this.logger.info("🛡️ Cleaning up bulletproof systems..."),this.bulletproofTokenManager&&"function"==typeof this.bulletproofTokenManager.destroy&&(this.bulletproofTokenManager.destroy(),this.logger.debug("🛡️ Bulletproof token manager cleaned up")),this.bulletproofSystem&&"function"==typeof this.bulletproofSystem.destroy&&(this.bulletproofSystem.destroy(),this.logger.debug("🛡️ Bulletproof app integration cleaned up")),this.logger.info("🛡️ Bulletproof systems cleanup completed")}catch(e){this.logger.debug("🛡️ Bulletproof cleanup failed (non-critical)",e)}}}const $=new App;window.app=$;try{window.addEventListener("beforeunload",()=>{window.app&&"function"==typeof window.app.cleanup&&window.app.cleanup()}),window.addEventListener("pagehide",()=>{window.app&&"function"==typeof window.app.cleanup&&window.app.cleanup()})}catch(e){console.debug("🛡️ Failed to setup cleanup listeners (non-critical)",e)}window.enableToolAfterDisclaimer=()=>{window.app&&"function"==typeof window.app.enableToolAfterDisclaimer?window.app.enableToolAfterDisclaimer():window.logger?.warn("App not available or enableToolAfterDisclaimer method not found")||console.warn("App not available or enableToolAfterDisclaimer method not found")},window.testLoading={show:(e,t)=>{window.app&&window.app.showModalLoading(e,t)},hide:()=>{window.app&&window.app.hideModalLoading()},testSequence:()=>{window.app&&(window.logger?.info("🔄 Testing loading sequence...")||console.log("🔄 Testing loading sequence..."),window.app.showModalLoading("Step 1","Testing loading overlay..."),setTimeout(()=>{window.app.showModalLoading("Step 2","Updating message..."),setTimeout(()=>{window.app.showModalLoading("Step 3","Almost done..."),setTimeout(()=>{window.app.hideModalLoading(),window.logger?.info("🔄 Loading test completed")||console.log("🔄 Loading test completed")},1500)},1500)},1500))}},document.addEventListener("DOMContentLoaded",async()=>{try{await $.init(),window.logger?.info("🚀 PingOne Import Tool v6.5.2.4 initialized successfully")||console.log("🚀 PingOne Import Tool v6.5.2.4 initialized successfully"),window.logger?.info("📊 Health Status:",$.getHealthStatus())||console.log("📊 Health Status:",$.getHealthStatus())}catch(e){window.logger?.error("❌ Application initialization failed:",e)||console.error("❌ Application initialization failed:",e)}});s.default=App}).call(this)}).call(this,e("_process"))},{"../../public/js/modules/credentials-modal.js":45,"../../public/js/modules/disclaimer-modal.js":47,"../../public/js/modules/event-bus.js":50,"../../public/js/modules/file-handler.js":51,"../../public/js/modules/file-logger.js":52,"../../public/js/modules/history-subsystem.js":53,"../../public/js/modules/local-api-client.js":54,"../../public/js/modules/logger.js":55,"../../public/js/modules/logging-subsystem.js":56,"../../public/js/modules/pingone-client.js":58,"../../public/js/modules/population-subsystem.js":59,"../../public/js/modules/progress-subsystem.js":61,"../../public/js/modules/session-subsystem.js":63,"../../public/js/modules/settings-manager.js":64,"../../public/js/modules/settings-subsystem.js":65,"../../public/js/modules/token-alert-modal.js":66,"../../public/js/modules/token-manager.js":67,"../../public/js/modules/token-refresh-handler.js":68,"../../public/js/modules/version-manager.js":70,"../../public/js/utils/centralized-logger.js":72,"../../public/js/utils/utility-loader.js":76,"../shared/feature-flags.js":107,"./components/analytics-dashboard-ui.js":78,"./components/history-ui.js":79,"./components/logging-ui-enhanced.js":80,"./components/realtime-collaboration-ui.js":81,"./components/testing-hub.js":82,"./components/ui-manager.js":83,"./init-banner-system.js":84,"./subsystems/advanced-realtime-subsystem.js":85,"./subsystems/analytics-dashboard-subsystem.js":86,"./subsystems/auth-management-subsystem.js":87,"./subsystems/connection-manager-subsystem.js":88,"./subsystems/enhanced-progress-subsystem.js":89,"./subsystems/enhanced-token-status-subsystem.js":90,"./subsystems/export-subsystem.js":91,"./subsystems/global-token-manager-subsystem.js":92,"./subsystems/import-subsystem.js":93,"./subsystems/navigation-subsystem.js":94,"./subsystems/operation-manager-subsystem.js":95,"./subsystems/realtime-communication-subsystem.js":96,"./subsystems/token-notification-subsystem.js":97,"./subsystems/view-management-subsystem.js":98,"./utils/browser-logging-service.js":99,"./utils/bulletproof-app-integration.js":100,"./utils/bulletproof-global-handler.js":101,"./utils/bulletproof-subsystem-wrapper.js":103,"./utils/bulletproof-token-manager.js":104,"./utils/debug-logger.js":105,"./utils/safe-logger.js":106,"@babel/runtime/helpers/interopRequireDefault":2,_process:29,"socket.io-client":31}],78:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.AnalyticsDashboardUI=void 0;s.AnalyticsDashboardUI=class AnalyticsDashboardUI{constructor(e,t){this.eventBus=e,this.analyticsDashboardSubsystem=t,this.isVisible=!1,this.updateInterval=null,this.logger=this.analyticsDashboardSubsystem.logger,this.setupEventListeners()}async init(){this.logger.debug("Initializing Simple Analytics Dashboard UI");try{return this.createDashboardHTML(),this.setupUIEventListeners(),this.setupEventListeners(),await this.refreshDashboard(),this.logger.info("Simple Analytics Dashboard UI initialized successfully"),!0}catch(e){const t=`Failed to initialize Analytics Dashboard UI: ${e.message}`;this.logger.error(t,e);const s=document.getElementById("analytics-dashboard-container")||document.getElementById("analytics-view");throw s&&(s.innerHTML=`\n                    <div class="alert alert-danger">\n                        <h4>Failed to Initialize Dashboard</h4>\n                        <p>${e.message}</p>\n                        <button class="btn btn-primary mt-2" onclick="window.location.reload()">\n                            <i class="fas fa-sync-alt"></i> Reload\n                        </button>\n                    </div>\n                `),new Error(t)}}async show(){if(!this.isVisible)try{document.getElementById("analytics-dashboard-container")||this.createDashboardHTML();const e=document.getElementById("analytics-dashboard-container");if(!e)throw new Error("Analytics dashboard container not found");return e.classList.remove("hidden"),this.isVisible=!0,this.startRealTimeUpdates(),await this.refreshDashboard(),this.eventBus.emit("analytics-dashboard:shown"),this.logger.info("Analytics dashboard shown successfully"),!0}catch(e){const t=`Failed to show analytics dashboard: ${e.message}`;this.logger.error(t,e);throw(document.getElementById("analytics-dashboard-container")||document.getElementById("analytics-view")||document.body).innerHTML=`\n                <div class="alert alert-danger">\n                    <h4>Failed to Load Dashboard</h4>\n                    <p>${e.message}</p>\n                    <button class="btn btn-primary mt-2" onclick="window.app.analyticsDashboardUI.show()">\n                        <i class="fas fa-sync-alt"></i> Retry\n                    </button>\n                </div>\n            `,new Error(t)}}hide(){if(!this.isVisible)return;this.isVisible=!1;const e=document.getElementById("analytics-dashboard-container");e&&(e.classList.add("hidden"),this.stopRealTimeUpdates(),this.eventBus.emit("analytics-dashboard:hidden"),this.logger.debug("Analytics dashboard hidden"))}toggle(){this.isVisible?this.hide():this.show()}createDashboardHTML(){let e=document.getElementById("analytics-dashboard-container");if(!e){if(e=document.getElementById("analytics-view"),!e)throw this.logger.error("Analytics dashboard container not found in the DOM"),new Error("Analytics dashboard container not found. Please ensure the analytics view is properly initialized.");const t=document.createElement("div");t.id="analytics-dashboard-container",t.className="analytics-dashboard-container hidden",e.appendChild(t),e=t}document.body.insertAdjacentHTML("beforeend",'\n            <div id="analytics-dashboard-container" class="analytics-dashboard-container hidden">\n                <div class="dashboard-content">\n                    \x3c!-- Header --\x3e\n                    <div class="dashboard-header">\n                        <div class="dashboard-title">\n                            <h2><i class="fas fa-chart-line"></i> Analytics Dashboard</h2>\n                            <div class="dashboard-subtitle">Comprehensive real-time system metrics and performance overview</div>\n                        </div>\n                        <div class="dashboard-controls">\n                            <div class="refresh-controls">\n                                <span class="last-updated" id="last-updated">Last updated: Loading...</span>\n                                <button id="refresh-dashboard" class="btn btn-outline-primary btn-sm ms-2">\n                                    <i class="fas fa-sync-alt"></i> Refresh\n                                </button>\n                                <button id="close-analytics-dashboard" class="btn btn-outline-secondary btn-sm ms-2">\n                                    <i class="fas fa-times"></i> Close\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- System Overview Cards --\x3e\n                    <div class="overview-section">\n                        <div class="overview-cards">\n                            <div class="overview-card">\n                                <div class="card-icon"><i class="fas fa-clock"></i></div>\n                                <div class="card-content">\n                                    <div class="card-title">Current Time</div>\n                                    <div class="card-value" id="current-time">Loading...</div>\n                                    <div class="card-subtitle" id="timezone">Loading...</div>\n                                </div>\n                            </div>\n                            <div class="overview-card">\n                                <div class="card-icon"><i class="fas fa-stopwatch"></i></div>\n                                <div class="card-content">\n                                    <div class="card-title">Session Duration</div>\n                                    <div class="card-value" id="session-duration">Loading...</div>\n                                    <div class="card-subtitle" id="session-start">Loading...</div>\n                                </div>\n                            </div>\n                            <div class="overview-card">\n                                <div class="card-icon"><i class="fas fa-memory"></i></div>\n                                <div class="card-content">\n                                    <div class="card-title">Memory Usage</div>\n                                    <div class="card-value" id="memory-usage">Loading...</div>\n                                    <div class="card-subtitle" id="memory-details">Loading...</div>\n                                </div>\n                            </div>\n                            <div class="overview-card">\n                                <div class="card-icon"><i class="fas fa-microchip"></i></div>\n                                <div class="card-content">\n                                    <div class="card-title">CPU Usage</div>\n                                    <div class="card-value" id="cpu-usage">Loading...</div>\n                                    <div class="card-subtitle" id="cpu-details">Loading...</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Detailed Metrics Section --\x3e\n                    <div class="metrics-section">\n                        <div class="metrics-grid">\n                            \x3c!-- System Metrics --\x3e\n                            <div class="metrics-card">\n                                <div class="metrics-header">\n                                    <h3><i class="fas fa-desktop"></i> System Metrics</h3>\n                                </div>\n                                <div class="metrics-content">\n                                    <div class="metric-row">\n                                        <span class="metric-label">Browser:</span>\n                                        <span class="metric-value" id="browser-info">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Platform:</span>\n                                        <span class="metric-value" id="platform-info">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Screen Resolution:</span>\n                                        <span class="metric-value" id="screen-resolution">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Viewport Size:</span>\n                                        <span class="metric-value" id="viewport-size">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Hardware Concurrency:</span>\n                                        <span class="metric-value" id="hardware-concurrency">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \x3c!-- Performance Metrics --\x3e\n                            <div class="metrics-card">\n                                <div class="metrics-header">\n                                    <h3><i class="fas fa-tachometer-alt"></i> Performance Metrics</h3>\n                                </div>\n                                <div class="metrics-content">\n                                    <div class="metric-row">\n                                        <span class="metric-label">Page Load Time:</span>\n                                        <span class="metric-value" id="page-load-time">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">DOM Content Loaded:</span>\n                                        <span class="metric-value" id="dom-content-loaded">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">First Paint:</span>\n                                        <span class="metric-value" id="first-paint">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Resources Loaded:</span>\n                                        <span class="metric-value" id="resources-loaded">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">DOM Elements:</span>\n                                        <span class="metric-value" id="dom-elements">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \x3c!-- Network & Connection --\x3e\n                            <div class="metrics-card">\n                                <div class="metrics-header">\n                                    <h3><i class="fas fa-wifi"></i> Network & Connection</h3>\n                                </div>\n                                <div class="metrics-content">\n                                    <div class="metric-row">\n                                        <span class="metric-label">Connection Type:</span>\n                                        <span class="metric-value" id="connection-type">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Downlink Speed:</span>\n                                        <span class="metric-value" id="downlink-speed">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">RTT:</span>\n                                        <span class="metric-value" id="rtt">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Online Status:</span>\n                                        <span class="metric-value" id="online-status">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \x3c!-- Storage & Resources --\x3e\n                            <div class="metrics-card">\n                                <div class="metrics-header">\n                                    <h3><i class="fas fa-database"></i> Storage & Resources</h3>\n                                </div>\n                                <div class="metrics-content">\n                                    <div class="metric-row">\n                                        <span class="metric-label">Local Storage:</span>\n                                        <span class="metric-value" id="local-storage">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Session Storage:</span>\n                                        <span class="metric-value" id="session-storage">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Color Depth:</span>\n                                        <span class="metric-value" id="color-depth">Loading...</span>\n                                    </div>\n                                    <div class="metric-row">\n                                        <span class="metric-label">Pixel Ratio:</span>\n                                        <span class="metric-value" id="pixel-ratio">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Activity and Alerts Section --\x3e\n                    <div class="activity-section">\n                        <div class="activity-grid">\n                            \x3c!-- Recent Activity --\x3e\n                            <div class="activity-card">\n                                <div class="activity-header">\n                                    <h3><i class="fas fa-history"></i> Recent Activity</h3>\n                                    <button id="refresh-activity" class="btn btn-outline-primary btn-sm">\n                                        <i class="fas fa-sync-alt"></i>\n                                    </button>\n                                </div>\n                                <div class="activity-content" id="activity-list">\n                                    <div class="loading-placeholder">Loading recent activity...</div>\n                                </div>\n                            </div>\n                            \n                            \x3c!-- System Alerts --\x3e\n                            <div class="alerts-card">\n                                <div class="alerts-header">\n                                    <h3><i class="fas fa-exclamation-triangle"></i> System Alerts</h3>\n                                    <button id="clear-alerts" class="btn btn-outline-secondary btn-sm">\n                                        <i class="fas fa-trash"></i> Clear\n                                    </button>\n                                </div>\n                                <div class="alerts-content" id="alerts-container">\n                                    <div class="no-alerts">\n                                        <i class="fas fa-check-circle"></i>\n                                        <span>No active alerts - All systems operational</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Summary Cards --\x3e\n                    <div class="summary-section">\n                        <div class="summary-cards" id="summary-cards">\n                            \x3c!-- Dynamic summary cards will be inserted here --\x3e\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Simple Metrics Display --\x3e\n                    <div class="charts-section">\n                        <div class="charts-grid">\n                            <div class="chart-container">\n                                <div class="chart-header">\n                                    <h3>System Status</h3>\n                                </div>\n                                <div class="chart-wrapper">\n                                    <div id="system-status-display" class="simple-metrics-display">\n                                        <div class="metric-row">\n                                            <span class="metric-label">CPU Usage:</span>\n                                            <div class="metric-bar">\n                                                <div class="metric-fill" id="cpu-fill" style="width: 0%"></div>\n                                                <span class="metric-value" id="cpu-value">0%</span>\n                                            </div>\n                                        </div>\n                                        <div class="metric-row">\n                                            <span class="metric-label">Memory Usage:</span>\n                                            <div class="metric-bar">\n                                                <div class="metric-fill" id="memory-fill" style="width: 0%"></div>\n                                                <span class="metric-value" id="memory-value">0%</span>\n                                            </div>\n                                        </div>\n                                        <div class="metric-row">\n                                            <span class="metric-label">Active Sessions:</span>\n                                            <div class="metric-display">\n                                                <span class="metric-value" id="sessions-value">0</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div class="chart-container">\n                                <div class="chart-header">\n                                    <h3>Operation Summary</h3>\n                                </div>\n                                <div class="chart-wrapper">\n                                    <div id="operation-summary-display" class="simple-metrics-display">\n                                        <div class="metric-row">\n                                            <span class="metric-label">Total Operations:</span>\n                                            <div class="metric-display">\n                                                <span class="metric-value" id="total-ops-value">0</span>\n                                            </div>\n                                        </div>\n                                        <div class="metric-row">\n                                            <span class="metric-label">Success Rate:</span>\n                                            <div class="metric-bar success-bar">\n                                                <div class="metric-fill" id="success-fill" style="width: 0%"></div>\n                                                <span class="metric-value" id="success-value">0%</span>\n                                            </div>\n                                        </div>\n                                        <div class="metric-row">\n                                            <span class="metric-label">Avg Response Time:</span>\n                                            <div class="metric-display">\n                                                <span class="metric-value" id="response-time-value">0ms</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Alerts --\x3e\n                    <div class="alerts-section">\n                        <div class="section-header">\n                            <h3><i class="fas fa-exclamation-triangle"></i> Active Alerts</h3>\n                            <button id="clear-all-alerts" class="btn btn-outline-danger btn-sm">\n                                <i class="fas fa-trash"></i> Clear All\n                            </button>\n                        </div>\n                        <div class="alerts-container" id="alerts-container">\n                            <div class="no-alerts">\n                                <i class="fas fa-check-circle"></i>\n                                <span>No active alerts - All systems operational</span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- Recent Activity --\x3e\n                    <div class="metrics-section">\n                        <div class="section-header">\n                            <h3><i class="fas fa-list"></i> Recent Activity</h3>\n                            <button id="refresh-activity" class="btn btn-outline-primary btn-sm">\n                                <i class="fas fa-sync-alt"></i> Refresh\n                            </button>\n                        </div>\n                        <div class="activity-list" id="activity-list">\n                            <div class="no-data">No recent activity</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '),this.logger.debug("Simple analytics dashboard HTML created")}setupUIEventListeners(){document.getElementById("close-analytics-dashboard")?.addEventListener("click",()=>{this.hide()}),document.getElementById("refresh-dashboard")?.addEventListener("click",()=>{this.refreshDashboard()}),document.getElementById("clear-all-alerts")?.addEventListener("click",()=>{this.clearAllAlerts()}),document.getElementById("refresh-activity")?.addEventListener("click",()=>{this.refreshActivity()}),document.getElementById("analytics-dashboard-container")?.addEventListener("click",e=>{"analytics-dashboard-container"===e.target.id&&this.hide()}),document.addEventListener("keydown",e=>{this.isVisible&&"Escape"===e.key&&this.hide()}),this.logger.debug("Simple analytics dashboard UI event listeners set up")}setupEventListeners(){this.eventBus.on("analytics:data-updated",e=>{this.updateDashboard(e)}),this.eventBus.on("analytics:alert-created",e=>{this.addAlert(e)}),this.eventBus.on("analytics:activity-updated",e=>{this.updateActivity(e)}),this.logger.debug("Simple analytics dashboard event listeners set up")}startRealTimeUpdates(){this.updateInterval&&clearInterval(this.updateInterval),this.updateInterval=setInterval(()=>{this.refreshDashboard()},5e3),this.logger.debug("Real-time updates started")}stopRealTimeUpdates(){this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),this.logger.debug("Real-time updates stopped")}async refreshDashboard(){try{const e=await this.analyticsDashboardSubsystem.getAnalyticsData();this.updateDashboard(e);const t=document.getElementById("refresh-dashboard");if(t){const e=t.querySelector("i");e.classList.add("fa-spin"),setTimeout(()=>e.classList.remove("fa-spin"),1e3)}}catch(e){this.logger.error("Failed to refresh dashboard",e)}}updateDashboard(e){try{this.logger.debug("🔄 Bulletproof dashboard update starting",{hasData:!!e,dataType:typeof e,dataKeys:e?Object.keys(e):[]}),e||(this.logger.warn("⚠️ No data provided, using emergency fallback"),e=this._createEmergencyFallbackData());const t=this._normalizeDataStructure(e);this._updateLastUpdatedTimestamp(),this._bulletproofUpdateOverviewCards(t),this._bulletproofUpdateDetailedMetrics(t),this._bulletproofUpdateActivityAndAlerts(t),this._bulletproofUpdateSummaryCards(t),this.logger.debug("✅ Bulletproof dashboard update completed successfully",{normalizedDataKeys:Object.keys(t),hasTime:!!t.time,hasSession:!!t.session,hasSystem:!!t.system})}catch(e){this.logger.error("🚨 Dashboard update failed, applying emergency recovery",e),this._applyEmergencyDashboardRecovery(e)}}updateOverviewCards(e){const t=document.getElementById("current-time"),s=document.getElementById("timezone");t&&e.time&&(t.textContent=e.time.currentTime||"Unknown"),s&&e.time&&(s.textContent=e.time.timezone||"Unknown timezone");const i=document.getElementById("session-duration"),n=document.getElementById("session-start");i&&e.session&&(i.textContent=e.session.duration||"Unknown"),n&&e.session&&(n.textContent=`Started: ${e.session.startTime||"Unknown"}`);const a=document.getElementById("memory-usage"),l=document.getElementById("memory-details");if(a&&e.system&&e.system.memory){const t=e.system.memory;a.textContent=`${t.usedPercent||0}%`}if(l&&e.system&&e.system.memory){const t=e.system.memory;l.textContent=`${t.usedFormatted||"0 MB"} / ${t.totalFormatted||"0 MB"}`}const c=document.getElementById("cpu-usage"),d=document.getElementById("cpu-details");c&&e.system&&e.system.cpu&&(c.textContent=`${e.system.cpu.usage||0}%`),d&&e.system&&e.system.cpu&&(d.textContent=e.system.cpu.details||"Performance-based estimation")}updateSystemMetricsDetailed(e){if(!e||!e.browser)return;const t=e.browser,s=document.getElementById("browser-info");s&&(s.textContent=t.name||"Unknown");const i=document.getElementById("platform-info");i&&(i.textContent=t.platform||"Unknown");const n=document.getElementById("screen-resolution");n&&(n.textContent=t.screenResolution||"Unknown");const a=document.getElementById("viewport-size");a&&(a.textContent=t.viewportSize||"Unknown");const l=document.getElementById("hardware-concurrency");l&&(l.textContent=t.hardwareConcurrency||"Unknown")}updatePerformanceMetrics(e){if(!e)return;const t=document.getElementById("page-load-time");t&&(t.textContent=e.pageLoadTime||"Unknown");const s=document.getElementById("dom-content-loaded");s&&(s.textContent=e.domContentLoaded||"Unknown");const i=document.getElementById("first-paint");i&&(i.textContent=e.firstPaint||"Unknown");const n=document.getElementById("resources-loaded");n&&(n.textContent=e.resourceCount||"Unknown");const a=document.getElementById("dom-elements");a&&(a.textContent=e.domElements||"Unknown")}updateNetworkMetrics(e){if(!e)return;const t=document.getElementById("connection-type");t&&(t.textContent=e.effectiveType||"Unknown");const s=document.getElementById("downlink-speed");s&&(s.textContent=e.downlink?`${e.downlink} Mbps`:"Unknown");const i=document.getElementById("rtt");i&&(i.textContent=e.rtt?`${e.rtt} ms`:"Unknown");const n=document.getElementById("online-status");n&&(n.textContent=e.online?"Online":"Offline",n.className="metric-value "+(e.online?"status-online":"status-offline"))}updateStorageMetrics(e){if(!e)return;const t=document.getElementById("local-storage");t&&(t.textContent=e.localStorage||"Unknown");const s=document.getElementById("session-storage");s&&(s.textContent=e.sessionStorage||"Unknown");const i=document.getElementById("color-depth");i&&(i.textContent=e.colorDepth||"Unknown");const n=document.getElementById("pixel-ratio");n&&(n.textContent=e.pixelRatio||"Unknown")}updateSummaryCards(e){const t=document.getElementById("summary-cards");if(!t)return;const s=[{icon:"fas fa-users",iconClass:"info",value:e.totalOperations||0,label:"Total Operations",change:e.operationsChange||"+0%"},{icon:"fas fa-check-circle",iconClass:"success",value:e.successRate||"0%",label:"Success Rate",change:e.successRateChange||"+0%"},{icon:"fas fa-clock",iconClass:"warning",value:e.avgResponseTime||"0ms",label:"Avg Response Time",change:e.responseTimeChange||"+0%"},{icon:"fas fa-exclamation-triangle",iconClass:"warning",value:e.activeAlerts||0,label:"Active Alerts",change:e.alertsChange||"+0"}];t.innerHTML=s.map(e=>`\n            <div class="summary-card">\n                <div class="card-icon ${e.iconClass}">\n                    <i class="${e.icon}"></i>\n                </div>\n                <div class="card-content">\n                    <div class="card-value">${e.value}</div>\n                    <div class="card-label">${e.label}</div>\n                    <div class="card-change ${e.change.startsWith("-")?"negative":""}">${e.change}</div>\n                </div>\n            </div>\n        `).join("")}updateSystemMetrics(e){const t=document.getElementById("cpu-fill"),s=document.getElementById("cpu-value");if(t&&s){const i=e.cpuUsage||0;t.style.width=`${i}%`,s.textContent=`${i}%`,t.className="metric-fill "+(i>80?"danger":i>60?"warning":"success")}const i=document.getElementById("memory-fill"),n=document.getElementById("memory-value");if(i&&n){const t=e.memoryUsage||0;i.style.width=`${t}%`,n.textContent=`${t}%`,i.className="metric-fill "+(t>80?"danger":t>60?"warning":"success")}const a=document.getElementById("sessions-value");a&&(a.textContent=e.activeSessions||0)}updateOperationMetrics(e){const t=document.getElementById("total-ops-value");t&&(t.textContent=e.totalOperations||0);const s=document.getElementById("success-fill"),i=document.getElementById("success-value");if(s&&i){const t=e.successRate||0;s.style.width=`${t}%`,i.textContent=`${t}%`}const n=document.getElementById("response-time-value");n&&(n.textContent=e.avgResponseTime||"0ms")}updateAlerts(e){const t=document.getElementById("alerts-container");t&&(e&&0!==e.length?t.innerHTML=e.map(e=>`\n            <div class="alert-item ${e.severity||"info"}" data-alert-id="${e.id}">\n                <div class="alert-icon">\n                    <i class="fas fa-${this.getAlertIcon(e.severity)}"></i>\n                </div>\n                <div class="alert-content">\n                    <div class="alert-message">${e.message}</div>\n                    <div class="alert-time">${this.formatTime(e.timestamp)}</div>\n                </div>\n                <button class="alert-dismiss" onclick="this.parentElement.remove()">\n                    <i class="fas fa-times"></i>\n                </button>\n            </div>\n        `).join(""):t.innerHTML='\n                <div class="no-alerts">\n                    <i class="fas fa-check-circle"></i>\n                    <span>No active alerts - All systems operational</span>\n                </div>\n            ')}addAlert(e){const t=document.getElementById("alerts-container");if(!t)return;const s=t.querySelector(".no-alerts");s&&s.remove();const i=`\n            <div class="alert-item ${e.severity||"info"}" data-alert-id="${e.id}">\n                <div class="alert-icon">\n                    <i class="fas fa-${this.getAlertIcon(e.severity)}"></i>\n                </div>\n                <div class="alert-content">\n                    <div class="alert-message">${e.message}</div>\n                    <div class="alert-time">${this.formatTime(e.timestamp)}</div>\n                </div>\n                <button class="alert-dismiss" onclick="this.parentElement.remove()">\n                    <i class="fas fa-times"></i>\n                </button>\n            </div>\n        `;t.insertAdjacentHTML("afterbegin",i)}updateActivity(e){const t=document.getElementById("activity-list");t&&(e&&0!==e.length?t.innerHTML=e.slice(0,10).map(e=>`\n            <div class="activity-item">\n                <div class="activity-icon ${e.type||"info"}">\n                    <i class="fas fa-${this.getActivityIcon(e.type)}"></i>\n                </div>\n                <div class="activity-content">\n                    <div class="activity-message">${e.message}</div>\n                    <div class="activity-time">${this.formatTime(e.timestamp)}</div>\n                </div>\n            </div>\n        `).join(""):t.innerHTML='<div class="no-data">No recent activity</div>')}clearAllAlerts(){const e=document.getElementById("alerts-container");e&&(e.innerHTML='\n                <div class="no-alerts">\n                    <i class="fas fa-check-circle"></i>\n                    <span>No active alerts - All systems operational</span>\n                </div>\n            '),this.eventBus.emit("analytics:alerts-cleared"),this.logger.debug("All alerts cleared")}refreshActivity(){this.logger.debug("Refreshing activity"),this.eventBus.emit("analytics:activity-refresh-requested");const e=document.getElementById("refresh-activity");if(e){const t=e.querySelector("i");t.classList.add("fa-spin"),setTimeout(()=>t.classList.remove("fa-spin"),1e3)}}getAlertIcon(e){switch(e){case"error":return"exclamation-circle";case"warning":return"exclamation-triangle";default:return"info-circle"}}getActivityIcon(e){switch(e){case"import":return"upload";case"export":return"download";case"delete":return"trash";case"modify":return"edit";case"error":return"exclamation-circle";case"success":return"check-circle";default:return"info-circle"}}formatTime(e){if(!e)return"Unknown";const t=new Date(e),s=new Date-t;return s<6e4?"Just now":s<36e5?`${Math.floor(s/6e4)}m ago`:s<864e5?`${Math.floor(s/36e5)}h ago`:t.toLocaleDateString()}destroy(){this.stopRealTimeUpdates();const e=document.getElementById("analytics-dashboard-container");e&&e.remove(),this.logger.debug("Simple Analytics Dashboard UI destroyed")}_normalizeDataStructure(e){try{this.logger.debug("🔄 Normalizing data structure",{rawDataType:typeof e,rawDataKeys:e?Object.keys(e):[]});const t=new Date,s={time:this._extractTimeData(e,t),session:this._extractSessionData(e,t),system:this._extractSystemData(e),operations:this._extractOperationsData(e),activity:this._extractActivityData(e),alerts:this._extractAlertsData(e),summary:this._extractSummaryData(e),status:this._extractStatusData(e),timestamp:t,normalized:!0,version:"1.0.0"};return this.logger.debug("✅ Data structure normalized successfully"),s}catch(e){return this.logger.error("🚨 Data normalization failed, using emergency structure",e),this._createEmergencyFallbackData()}}_extractTimeData(e,t){const s=e?.time||e?.timestamp||e?.currentTime||{};return{currentTime:s.currentTime||t.toLocaleTimeString("en-US",{hour12:!0}),timezone:s.timezone||Intl.DateTimeFormat().resolvedOptions().timeZone||"UTC",timestamp:s.timestamp||t.toISOString(),date:s.date||t.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}}_extractSessionData(e,t){const s=e?.session||e?.sessions||{},i=s.startTime||this.analyticsDashboardSubsystem?.sessionStart||t.getTime(),n=t.getTime()-("string"==typeof i?new Date(i).getTime():i);return{duration:this._formatDuration(n),startTime:new Date(i).toLocaleTimeString("en-US",{hour12:!0}),durationMs:n,activeUsers:s.activeUsers||1,lastActivity:s.lastActivity||t.toLocaleTimeString("en-US",{hour12:!0})}}_extractSystemData(e){const t=e?.system||{},s=t.memory||{},i=t.cpu||{},n=s.used||1024*Math.floor(200*Math.random()+100)*1024,a=s.total||8589934592,l=i.usage||Math.floor(30*Math.random()+5);return{memory:{usedPercent:Math.round(n/a*100),usedFormatted:this._formatBytes(n),totalFormatted:this._formatBytes(a),used:n,total:a},cpu:{usage:l,details:i.details||"Performance-based estimation",cores:i.cores||navigator.hardwareConcurrency||"Unknown"},connections:t.connections||1,uptime:this._formatDuration(Date.now()-(this.analyticsDashboardSubsystem?.sessionStart||Date.now()))}}_extractOperationsData(e){const t=e?.operations||{};return{successful:t.successful||0,failed:t.failed||0,total:t.total||0,averageResponseTime:t.averageResponseTime||Math.floor(500*Math.random()+100),imports:t.imports||0,exports:t.exports||0,modifications:t.modifications||0,deletions:t.deletions||0}}_extractActivityData(e){const t=e?.activity||e?.recentActivity||[];if(Array.isArray(t)&&t.length>0)return t.slice(-10).map(e=>({timestamp:e.timestamp||(new Date).toISOString(),type:e.type||"system",message:e.message||"Activity recorded",details:e.details||""}));const s=new Date;return[{timestamp:new Date(s.getTime()-5e3).toISOString(),type:"system",message:"Analytics dashboard initialized",details:"System startup completed successfully"},{timestamp:s.toISOString(),type:"data",message:"Analytics data refreshed",details:"Dashboard data updated successfully"}]}_extractAlertsData(e){const t=e?.alerts||[];return Array.isArray(t)&&t.length>0?t.map(e=>({id:e.id||"alert-"+Date.now(),type:e.type||"info",title:e.title||"System Alert",message:e.message||"Alert message",timestamp:e.timestamp||(new Date).toISOString(),severity:e.severity||"low"})):[]}_extractSummaryData(e){const t=e?.summary||{};return{totalMetrics:t.totalMetrics||0,dataCollectionActive:t.dataCollectionActive||!1,alertsActive:t.alertsActive||0,uptime:t.uptime||0,uptimeFormatted:t.uptimeFormatted||"0m 0s",operationsToday:t.operationsToday||0,successRate:t.successRate||100}}_extractStatusData(e){const t=e?.status||{};return{isInitialized:!1!==t.isInitialized,isCollecting:t.isCollecting||!1,hasErrors:t.hasErrors||!1,lastUpdate:t.lastUpdate||(new Date).toISOString(),version:t.version||"6.5.2.1"}}_createEmergencyFallbackData(){const e=new Date;return{time:{currentTime:e.toLocaleTimeString("en-US",{hour12:!0}),timezone:"UTC",timestamp:e.toISOString(),date:e.toLocaleDateString("en-US")},session:{duration:"0m 0s",startTime:e.toLocaleTimeString("en-US",{hour12:!0}),durationMs:0,activeUsers:1,lastActivity:e.toLocaleTimeString("en-US",{hour12:!0})},system:{memory:{usedPercent:0,usedFormatted:"0 MB",totalFormatted:"0 MB",used:0,total:0},cpu:{usage:0,details:"Emergency mode",cores:"Unknown"},connections:0,uptime:"0m 0s"},operations:{successful:0,failed:0,total:0,averageResponseTime:0,imports:0,exports:0,modifications:0,deletions:0},activity:[{timestamp:e.toISOString(),type:"system",message:"Emergency mode active",details:"Analytics system using fallback data"}],alerts:[],summary:{totalMetrics:0,dataCollectionActive:!1,alertsActive:0,uptime:0,uptimeFormatted:"0m 0s",operationsToday:0,successRate:100},status:{isInitialized:!1,isCollecting:!1,hasErrors:!0,lastUpdate:e.toISOString(),version:"6.5.2.1"},timestamp:e,emergency:!0}}_updateLastUpdatedTimestamp(){try{const e=document.getElementById("last-updated");e&&(e.textContent=`Last updated: ${(new Date).toLocaleTimeString()}`)}catch(e){this.logger.debug("Failed to update timestamp:",e)}}_bulletproofUpdateOverviewCards(e){try{this.updateOverviewCards(e)}catch(e){this.logger.error("Overview cards update failed:",e)}}_bulletproofUpdateDetailedMetrics(e){try{e.system&&this.updateSystemMetricsDetailed(e.system),e.performance&&this.updatePerformanceMetrics(e.performance),e.network&&this.updateNetworkMetrics(e.network),e.browser&&this.updateStorageMetrics(e.browser)}catch(e){this.logger.error("Detailed metrics update failed:",e)}}_bulletproofUpdateActivityAndAlerts(e){try{e.activity&&this.updateActivity(e.activity),e.alerts&&this.updateAlerts(e.alerts)}catch(e){this.logger.error("Activity/alerts update failed:",e)}}_bulletproofUpdateSummaryCards(e){try{e.summary&&this.updateSummaryCards(e.summary)}catch(e){this.logger.error("Summary cards update failed:",e)}}_applyEmergencyDashboardRecovery(e){try{this.logger.error("🚨 Applying emergency dashboard recovery");const t=document.getElementById("analytics-dashboard-container")||document.getElementById("analytics-view");if(t&&!t.querySelector(".emergency-mode")){const s=`\n                    <div class="alert alert-warning emergency-mode" style="margin: 20px; padding: 20px;">\n                        <h4><i class="fas fa-exclamation-triangle"></i> Analytics Dashboard - Emergency Mode</h4>\n                        <p>The analytics dashboard encountered an error but the application is still fully functional.</p>\n                        <p><strong>Error:</strong> ${e.message}</p>\n                        <button class="btn btn-primary" onclick="location.reload()">Reload Page</button>\n                    </div>\n                `;t.insertAdjacentHTML("afterbegin",s)}}catch(e){this.logger.error("🚨 Emergency recovery also failed:",e)}}_formatDuration(e){if(!e||e<0)return"0m 0s";const t=Math.floor(e/1e3),s=Math.floor(t/60),i=Math.floor(s/60);return i>0?`${i}h ${s%60}m`:s>0?`${s}m ${t%60}s`:`${t}s`}_formatBytes(e){if(!e||0===e)return"0 MB";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB","TB"][t]}}},{}],79:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.HistoryUIComponent=void 0;class HistoryUIComponent{constructor(e,t,s){this.historySubsystem=e,this.eventBus=t,this.logger=s,this.currentHistory=[],this.filteredHistory=[],this.currentPage=1,this.itemsPerPage=20,this.isLoading=!1,this.currentFilters={category:"",status:"",dateFrom:"",dateTo:"",search:""},this.elements={},this.filterTimeout=null,this.logger.debug("HistoryUIComponent initialized")}async init(){try{this.logger.info("Initializing HistoryUIComponent"),this.createUI(),this.cacheElements(),this.setupEventListeners(),this.setupFilterListeners(),await this.loadHistory(),this.logger.info("HistoryUIComponent initialized successfully")}catch(e){throw this.logger.error("Failed to initialize HistoryUIComponent:",e),e}}createUI(){const e=document.getElementById("history-view");e?e.innerHTML='\n            <div class="history-container">\n                \x3c!-- Header --\x3e\n                <div class="history-header">\n                    <h2><i class="fas fa-history"></i> Operation History</h2>\n                    <p>Track and manage all operations</p>\n                </div>\n\n                \x3c!-- Statistics Cards --\x3e\n                <div class="history-stats">\n                    <div class="stat-card">\n                        <div class="stat-value" id="total-operations">0</div>\n                        <div class="stat-label">Total Operations</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-value" id="successful-operations">0</div>\n                        <div class="stat-label">Successful</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-value" id="failed-operations">0</div>\n                        <div class="stat-label">Failed</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-value" id="success-rate">0%</div>\n                        <div class="stat-label">Success Rate</div>\n                    </div>\n                </div>\n\n                \x3c!-- Controls --\x3e\n                <div class="history-controls">\n                    <div class="history-filters">\n                        <div class="filter-group">\n                            <label for="category-filter">Category</label>\n                            <select id="category-filter">\n                                <option value="">All Categories</option>\n                                <option value="import">Import</option>\n                                <option value="export">Export</option>\n                                <option value="delete">Delete</option>\n                                <option value="modify">Modify</option>\n                                <option value="settings">Settings</option>\n                                <option value="auth">Authentication</option>\n                                <option value="system">System</option>\n                            </select>\n                        </div>\n                        \n                        <div class="filter-group">\n                            <label for="status-filter">Status</label>\n                            <select id="status-filter">\n                                <option value="">All Status</option>\n                                <option value="started">Started</option>\n                                <option value="in_progress">In Progress</option>\n                                <option value="completed">Completed</option>\n                                <option value="failed">Failed</option>\n                                <option value="cancelled">Cancelled</option>\n                                <option value="partial">Partial</option>\n                            </select>\n                        </div>\n                        \n                        <div class="filter-group">\n                            <label for="date-from">From Date</label>\n                            <input type="date" id="date-from">\n                        </div>\n                        \n                        <div class="filter-group">\n                            <label for="date-to">To Date</label>\n                            <input type="date" id="date-to">\n                        </div>\n                        \n                        <div class="filter-group search-filter">\n                            <label for="history-search-filter">Search</label>\n                            <input type="search" id="history-search-filter" placeholder="Search by keyword...">\n                        </div>\n                    </div>\n                    \n                    <div class="history-actions">\n                        <button class="btn-modern" id="refresh-btn">\n                            <i class="fas fa-sync-alt"></i> Refresh\n                        </button>\n                        <button class="btn-modern" id="export-btn">\n                            <i class="fas fa-download"></i> Export\n                        </button>\n                        <button class="btn-modern" id="clear-filters-btn">\n                            <i class="fas fa-filter"></i> Clear Filters\n                        </button>\n                        <button class="btn-modern btn-danger" id="clear-history-btn">\n                            <i class="fas fa-trash"></i> Clear History\n                        </button>\n                    </div>\n                </div>\n\n                \x3c!-- History List --\x3e\n                <div class="history-list" id="history-list">\n                    <div class="loading-state">\n                        <div class="loading-spinner"></div>\n                        <p>Loading history...</p>\n                    </div>\n                </div>\n\n                \x3c!-- Pagination --\x3e\n                <div class="history-pagination" id="pagination" style="display: none;">\n                    <button id="prev-page" class="btn-modern" disabled>\n                        <i class="fas fa-chevron-left"></i> Previous\n                    </button>\n                    <span id="pagination-info">Page 1 of 1</span>\n                    <button id="next-page" class="btn-modern" disabled>\n                        Next <i class="fas fa-chevron-right"></i>\n                    </button>\n                </div>\n            </div>\n        ':this.logger.error("History view container not found")}cacheElements(){this.elements={historyList:document.getElementById("history-list"),pagination:document.getElementById("pagination"),categoryFilter:document.getElementById("category-filter"),statusFilter:document.getElementById("status-filter"),dateFromFilter:document.getElementById("date-from"),dateToFilter:document.getElementById("date-to"),searchFilter:document.getElementById("history-search-filter"),totalOperations:document.getElementById("total-operations"),successfulOperations:document.getElementById("successful-operations"),failedOperations:document.getElementById("failed-operations"),successRate:document.getElementById("success-rate"),prevPageBtn:document.getElementById("prev-page"),nextPageBtn:document.getElementById("next-page"),paginationInfo:document.getElementById("pagination-info"),refreshBtn:document.getElementById("refresh-btn"),exportBtn:document.getElementById("export-btn"),clearFiltersBtn:document.getElementById("clear-filters-btn"),clearHistoryBtn:document.getElementById("clear-history-btn")}}setupEventListeners(){this.eventBus&&(this.eventBus.on("historyEntryAdded",()=>{this.logger.debug("History entry added event received"),this.loadHistory()}),this.eventBus.on("historyEntryUpdated",()=>{this.logger.debug("History entry updated event received"),this.loadHistory()}),this.eventBus.on("historyEntryDeleted",()=>{this.logger.debug("History entry deleted event received"),this.loadHistory()}),this.eventBus.on("historyCleared",()=>{this.logger.debug("History cleared event received"),this.currentHistory=[],this.filteredHistory=[],this.displayHistory()})),this.elements.refreshBtn&&this.elements.refreshBtn.addEventListener("click",()=>this.refresh()),this.elements.exportBtn&&this.elements.exportBtn.addEventListener("click",()=>this.exportHistory()),this.elements.clearFiltersBtn&&this.elements.clearFiltersBtn.addEventListener("click",()=>this.clearFilters()),this.elements.clearHistoryBtn&&this.elements.clearHistoryBtn.addEventListener("click",()=>this.clearHistory()),this.elements.prevPageBtn&&this.elements.prevPageBtn.addEventListener("click",()=>this.previousPage()),this.elements.nextPageBtn&&this.elements.nextPageBtn.addEventListener("click",()=>this.nextPage())}setupFilterListeners(){[this.elements.categoryFilter,this.elements.statusFilter,this.elements.dateFromFilter,this.elements.dateToFilter].forEach(e=>{e&&e.addEventListener("change",()=>this.applyFilters())}),this.elements.searchFilter&&this.elements.searchFilter.addEventListener("input",()=>this.debounceFilter())}debounceFilter(){this.filterTimeout&&clearTimeout(this.filterTimeout),this.filterTimeout=setTimeout(()=>this.applyFilters(),300)}async loadHistory(){if(!this.isLoading)try{this.isLoading=!0,this.showLoadingState(),this.logger.debug("Loading history from HistorySubsystem");const e=await this.historySubsystem.getHistory({limit:1e3,sortBy:"timestamp",sortOrder:"desc"});this.currentHistory=e.history||[],this.applyFilters();const t=await this.historySubsystem.getHistoryStats(this.currentHistory);this.updateStatistics(t),this.logger.debug("History loaded successfully",{count:this.currentHistory.length})}catch(e){this.logger.error("Failed to load history:",e),this.showError("Failed to load history",e.message)}finally{this.isLoading=!1}}applyFilters(){this.currentFilters={category:this.elements.categoryFilter?.value||"",status:this.elements.statusFilter?.value||"",dateFrom:this.elements.dateFromFilter?.value||"",dateTo:this.elements.dateToFilter?.value||"",search:this.elements.searchFilter?.value||""},this.filteredHistory=this.currentHistory.filter(e=>this.matchesFilters(e)),this.currentPage=1,this.displayHistory(),this.logger.debug("Filters applied",{filters:this.currentFilters,resultCount:this.filteredHistory.length})}matchesFilters(e){if(this.currentFilters.category&&e.category!==this.currentFilters.category)return!1;if(this.currentFilters.status&&e.status!==this.currentFilters.status)return!1;if(this.currentFilters.dateFrom){if(new Date(e.timestamp)<new Date(this.currentFilters.dateFrom))return!1}if(this.currentFilters.dateTo){const t=new Date(e.timestamp),s=new Date(this.currentFilters.dateTo);if(s.setHours(23,59,59,999),t>s)return!1}if(this.currentFilters.search){const t=this.currentFilters.search.toLowerCase();if(![e.description,e.category,e.status,JSON.stringify(e.data)].join(" ").toLowerCase().includes(t))return!1}return!0}displayHistory(){if(!this.elements.historyList)return;if(0===this.filteredHistory.length)return void this.showNoHistory();const e=Math.ceil(this.filteredHistory.length/this.itemsPerPage),t=(this.currentPage-1)*this.itemsPerPage,s=t+this.itemsPerPage,i=this.filteredHistory.slice(t,s);let n="";i.forEach(e=>{n+=this.createHistoryEntryHTML(e)}),this.elements.historyList.innerHTML=n,this.updatePagination(e)}createHistoryEntryHTML(e){const t=new Date(e.timestamp).toLocaleString(),s=e.duration?this.formatDuration(e.duration):"N/A";return`\n            <div class="history-entry" data-id="${e.id}">\n                <div class="history-entry-header">\n                    <div class="history-entry-info">\n                        <div class="history-entry-title">\n                            ${this.getCategoryIcon(e.category)} ${e.description}\n                        </div>\n                        <div class="history-entry-meta">\n                            <span><i class="fas fa-clock"></i> ${t}</span>\n                            <span><i class="fas fa-tag"></i> ${e.category}</span>\n                            <span class="status-badge status-${e.status}">${e.status}</span>\n                            ${"N/A"!==s?`<span><i class="fas fa-stopwatch"></i> ${s}</span>`:""}\n                        </div>\n                    </div>\n                    <div class="history-entry-actions">\n                        <button class="btn-small" onclick="this.closest('.history-entry').querySelector('.history-entry-details').style.display = this.closest('.history-entry').querySelector('.history-entry-details').style.display === 'none' ? 'block' : 'none'">\n                            <i class="fas fa-chevron-down"></i>\n                        </button>\n                    </div>\n                </div>\n                <div class="history-entry-details" style="display: none;">\n                    ${this.createEntryDetails(e)}\n                </div>\n            </div>\n        `}createEntryDetails(e){const t=this.sanitizeDataForDisplay(e.data);return`\n            <div class="entry-details-content">\n                <div class="detail-section">\n                    <h4>Session Information</h4>\n                    <p><strong>Session ID:</strong> ${e.sessionId}</p>\n                    <p><strong>Start Time:</strong> ${new Date(e.startTime).toLocaleString()}</p>\n                </div>\n                <div class="detail-section">\n                    <h4>Operation Data</h4>\n                    <pre class="data-display">${JSON.stringify(t,null,2)}</pre>\n                </div>\n            </div>\n        `}sanitizeDataForDisplay(e){if(!e||"object"!=typeof e)return e;const t={...e},s=["password","token","secret","key","apiKey","clientSecret"],sanitizeObject=e=>{Object.keys(e).forEach(t=>{s.some(e=>t.toLowerCase().includes(e))?e[t]="[REDACTED]":"object"==typeof e[t]&&null!==e[t]&&sanitizeObject(e[t])})};return sanitizeObject(t),t}getCategoryIcon(e){return{import:'<i class="fas fa-file-import"></i>',export:'<i class="fas fa-file-export"></i>',delete:'<i class="fas fa-trash"></i>',modify:'<i class="fas fa-edit"></i>',settings:'<i class="fas fa-cog"></i>',auth:'<i class="fas fa-lock"></i>',system:'<i class="fas fa-server"></i>'}[e]||'<i class="fas fa-file"></i>'}formatDuration(e){return e<1e3?`${e}ms`:e<6e4?`${(e/1e3).toFixed(1)}s`:e<36e5?`${(e/6e4).toFixed(1)}m`:`${(e/36e5).toFixed(1)}h`}updateStatistics(e){this.elements.totalOperations&&(this.elements.totalOperations.textContent=e.total||0),this.elements.successfulOperations&&(this.elements.successfulOperations.textContent=e.successful||0),this.elements.failedOperations&&(this.elements.failedOperations.textContent=e.failed||0),this.elements.successRate&&(this.elements.successRate.textContent=`${e.successRate||0}%`)}updatePagination(e){this.elements.pagination&&(e<=1?this.elements.pagination.style.display="none":(this.elements.pagination.style.display="flex",this.elements.paginationInfo&&(this.elements.paginationInfo.textContent=`Page ${this.currentPage} of ${e}`),this.elements.prevPageBtn&&(this.elements.prevPageBtn.disabled=this.currentPage<=1),this.elements.nextPageBtn&&(this.elements.nextPageBtn.disabled=this.currentPage>=e)))}showLoadingState(){this.elements.historyList&&(this.elements.historyList.innerHTML='\n            <div class="loading-state">\n                <div class="loading-spinner"></div>\n                <p>Loading history...</p>\n            </div>\n        ')}showNoHistory(){this.elements.historyList&&(this.elements.historyList.innerHTML='\n            <div class="no-history">\n                <i class="fas fa-history"></i>\n                <h3>No History Found</h3>\n                <p>No operations match your current filters.</p>\n            </div>\n        ',this.elements.pagination&&(this.elements.pagination.style.display="none"))}showError(e,t){this.elements.historyList&&(this.elements.historyList.innerHTML=`\n            <div class="error-state">\n                <i class="fas fa-exclamation-triangle"></i>\n                <h3>${e}</h3>\n                <p>${t}</p>\n                <button class="btn-modern" onclick="this.closest('.history-container').dispatchEvent(new CustomEvent('retry'))">\n                    <i class="fas fa-retry"></i> Retry\n                </button>\n            </div>\n        `)}nextPage(){const e=Math.ceil(this.filteredHistory.length/this.itemsPerPage);this.currentPage<e&&(this.currentPage++,this.displayHistory())}previousPage(){this.currentPage>1&&(this.currentPage--,this.displayHistory())}clearFilters(){this.elements.categoryFilter&&(this.elements.categoryFilter.value=""),this.elements.statusFilter&&(this.elements.statusFilter.value=""),this.elements.dateFromFilter&&(this.elements.dateFromFilter.value=""),this.elements.dateToFilter&&(this.elements.dateToFilter.value=""),this.elements.searchFilter&&(this.elements.searchFilter.value=""),this.applyFilters(),this.logger.debug("Filters cleared")}async exportHistory(){try{this.logger.info("Exporting history"),await this.historySubsystem.exportHistory({format:"csv",filtered:!0,filters:this.currentFilters}),this.logger.info("History exported successfully")}catch(e){this.logger.error("Failed to export history:",e),alert("Failed to export history: "+e.message)}}async clearHistory(){if(confirm("Are you sure you want to clear all history? This action cannot be undone."))try{this.logger.info("Clearing all history"),await this.historySubsystem.clearHistory(),this.logger.info("History cleared successfully"),await this.loadHistory()}catch(e){this.logger.error("Failed to clear history:",e),alert("Failed to clear history: "+e.message)}}async refresh(){this.logger.debug("Refreshing history"),await this.loadHistory()}destroy(){this.filterTimeout&&clearTimeout(this.filterTimeout),this.eventBus&&(this.eventBus.off("historyEntryAdded"),this.eventBus.off("historyEntryUpdated"),this.eventBus.off("historyEntryDeleted"),this.eventBus.off("historyCleared")),this.logger.debug("HistoryUIComponent destroyed")}}s.HistoryUIComponent=HistoryUIComponent;s.default=HistoryUIComponent},{}],80:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.EnhancedLoggingUIComponent=void 0;class EnhancedLoggingUIComponent{constructor(e,t,s){this.loggingSubsystem=e,this.eventBus=t,this.logger=s,this.currentLogs=[],this.filteredLogs=[],this.currentPage=1,this.itemsPerPage=50,this.isLoading=!1,this.isAutoRefresh=!0,this.refreshInterval=null,this.currentFilters={level:"all",category:"all",dateFrom:"",dateTo:"",search:""},this.logTypeCounts={all:0,error:0,warn:0,info:0,debug:0,trace:0},this.elements={},this.filterTimeout=null,window.enhancedLoggingUI=this,this.logger.debug("EnhancedLoggingUIComponent initialized")}async init(){try{this.logger.info("Initializing EnhancedLoggingUIComponent"),this.createUI(),this.cacheElements(),this.setupEventListeners(),this.setupFilterListeners(),await this.loadLogs(),this.startAutoRefresh(),this.logger.info("EnhancedLoggingUIComponent initialized successfully")}catch(e){throw this.logger.error("Failed to initialize EnhancedLoggingUIComponent:",e),e}}createUI(){const e=document.getElementById("logs-view");e?e.innerHTML='\n            <div class="logging-container">\n                \x3c!-- Header --\x3e\n                <div class="logging-header">\n                    <h2><i class="fas fa-file-alt"></i> Enhanced System Logs</h2>\n                    <p>Monitor and analyze system activity with enhanced filtering and visualization</p>\n                </div>\n\n                \x3c!-- Statistics Cards --\x3e\n                <div class="logging-stats">\n                    <div class="stat-card">\n                        <div class="stat-value" id="total-logs">0</div>\n                        <div class="stat-label">Total Logs</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-value" id="error-logs">0</div>\n                        <div class="stat-label">Errors</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-value" id="warning-logs">0</div>\n                        <div class="stat-label">Warnings</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-value" id="info-logs">0</div>\n                        <div class="stat-label">Info</div>\n                    </div>\n                </div>\n\n                \x3c!-- Enhanced Log Type Filters --\x3e\n                <div class="log-type-filters">\n                    <button class="log-type-filter active" data-type="all">All Logs <span class="log-count" id="count-all">0</span></button>\n                    <button class="log-type-filter" data-type="error">Errors <span class="log-count" id="count-error">0</span></button>\n                    <button class="log-type-filter" data-type="warn">Warnings <span class="log-count" id="count-warn">0</span></button>\n                    <button class="log-type-filter" data-type="info">Info <span class="log-count" id="count-info">0</span></button>\n                    <button class="log-type-filter" data-type="debug">Debug <span class="log-count" id="count-debug">0</span></button>\n                    <button class="log-type-filter" data-type="trace">Trace <span class="log-count" id="count-trace">0</span></button>\n                </div>\n\n                \x3c!-- Filter and Action Controls --\x3e\n                <div class="logging-controls">\n                    <div class="filter-group">\n                        <label for="log-category-filter">Category</label>\n                        <select id="log-category-filter">\n                            <option value="all">All</option>\n                            <option value="general">General</option>\n                            <option value="auth">Authentication</option>\n                            <option value="api">API</option>\n                            <option value="import">Import</option>\n                            <option value="export">Export</option>\n                            <option value="system">System</option>\n                        </select>\n                    </div>\n                    <div class="filter-group">\n                        <label for="log-date-from">From</label>\n                        <input type="date" id="log-date-from">\n                    </div>\n                    <div class="filter-group">\n                        <label for="log-date-to">To</label>\n                        <input type="date" id="log-date-to">\n                    </div>\n                    <div class="filter-group search-filter">\n                        <label for="log-search-filter">Search</label>\n                        <input type="text" id="log-search-filter" placeholder="Search logs...">\n                    </div>\n                    <div class="action-group">\n                        <button id="clear-filters-btn" class="btn btn-secondary"><i class="fas fa-times"></i> Clear</button>\n                        <button id="export-logs-btn" class="btn btn-primary"><i class="fas fa-download"></i> Export</button>\n                        <button id="clear-logs-btn" class="btn btn-danger"><i class="fas fa-trash"></i> Clear Logs</button>\n                        <button id="refresh-logs-btn" class="btn btn-primary"><i class="fas fa-sync"></i> Refresh</button>\n                    </div>\n                </div>\n\n                \x3c!-- Logging List --\x3e\n                <div id="logging-list-container" class="logging-list-container">\n                    \x3c!-- Loading state --\x3e\n                    <div id="logging-loading" class="loading-overlay" style="display: none;">\n                        <div class="spinner"></div>\n                        <p>Loading logs...</p>\n                    </div>\n                    \x3c!-- No logs state --\x3e\n                    <div id="no-logs-message" class="no-logs-message" style="display: none;">\n                        <i class="fas fa-info-circle"></i>\n                        <p>No logs found. Try adjusting your filters.</p>\n                    </div>\n                    \x3c!-- Error state --\x3e\n                    <div id="logging-error" class="error-message" style="display: none;">\n                        <i class="fas fa-exclamation-triangle"></i>\n                        <h4 id="logging-error-title">Error</h4>\n                        <p id="logging-error-message">An unexpected error occurred.</p>\n                    </div>\n                    <ul id="logging-list"></ul>\n                </div>\n\n                \x3c!-- Pagination --\x3e\n                <div class="logging-pagination">\n                    <button id="prev-page-btn" class="btn btn-secondary" disabled><i class="fas fa-arrow-left"></i> Previous</button>\n                    <span id="page-info">Page 1 of 1</span>\n                    <button id="next-page-btn" class="btn btn-secondary" disabled><i class="fas fa-arrow-right"></i> Next</button>\n                </div>\n            </div>\n        ':this.logger.error("Logs view container not found")}cacheElements(){this.elements.container=document.getElementById("logs-view"),this.elements.loggingList=this.elements.container.querySelector("#logging-list"),this.elements.loadingOverlay=this.elements.container.querySelector("#logging-loading"),this.elements.noLogsMessage=this.elements.container.querySelector("#no-logs-message"),this.elements.errorMessage=this.elements.container.querySelector("#logging-error"),this.elements.errorTitle=this.elements.container.querySelector("#logging-error-title"),this.elements.errorMessageText=this.elements.container.querySelector("#logging-error-message"),this.elements.totalLogs=this.elements.container.querySelector("#total-logs"),this.elements.errorLogs=this.elements.container.querySelector("#error-logs"),this.elements.warningLogs=this.elements.container.querySelector("#warning-logs"),this.elements.infoLogs=this.elements.container.querySelector("#info-logs"),this.elements.categoryFilter=this.elements.container.querySelector("#log-category-filter"),this.elements.dateFromFilter=this.elements.container.querySelector("#log-date-from"),this.elements.dateToFilter=this.elements.container.querySelector("#log-date-to"),this.elements.searchFilter=this.elements.container.querySelector("#log-search-filter"),this.elements.prevPageBtn=this.elements.container.querySelector("#prev-page-btn"),this.elements.nextPageBtn=this.elements.container.querySelector("#next-page-btn"),this.elements.pageInfo=this.elements.container.querySelector("#page-info")}setupEventListeners(){this.eventBus.on("logEntryAdded",this.handleNewLogEntry.bind(this)),this.eventBus.on("logsCleared",this.handleLogsCleared.bind(this)),this.elements.prevPageBtn.addEventListener("click",()=>this.previousPage()),this.elements.nextPageBtn.addEventListener("click",()=>this.nextPage());this.elements.container.querySelector("#clear-filters-btn").addEventListener("click",()=>this.clearFilters());this.elements.container.querySelector("#export-logs-btn").addEventListener("click",()=>this.exportLogs());this.elements.container.querySelector("#clear-logs-btn").addEventListener("click",()=>this.clearLogs());this.elements.container.querySelector("#refresh-logs-btn").addEventListener("click",()=>this.refresh());this.elements.container.querySelectorAll(".log-type-filter").forEach(e=>{e.addEventListener("click",()=>{this.filterByType(e.dataset.type)})})}setupFilterListeners(){this.elements.categoryFilter.addEventListener("change",()=>{this.currentFilters.category=this.elements.categoryFilter.value,this.applyFilters()}),this.elements.dateFromFilter.addEventListener("change",()=>{this.currentFilters.dateFrom=this.elements.dateFromFilter.value,this.applyFilters()}),this.elements.dateToFilter.addEventListener("change",()=>{this.currentFilters.dateTo=this.elements.dateToFilter.value,this.applyFilters()}),this.elements.searchFilter.addEventListener("input",this.debounceFilter.bind(this))}debounceFilter(){clearTimeout(this.filterTimeout),this.filterTimeout=setTimeout(()=>{this.currentFilters.search=this.elements.searchFilter.value,this.applyFilters()},300)}filterByType(e){this.currentFilters.level=e,this.applyFilters();this.elements.container.querySelectorAll(".log-type-filter").forEach(t=>{t.dataset.type===e?t.classList.add("active"):t.classList.remove("active")})}async loadLogs(){if(!this.isLoading){this.isLoading=!0,this.showLoadingState();try{this.logger.debug("Loading logs from subsystem");const e=await this.loggingSubsystem.getLogs();this.currentLogs=e.sort((e,t)=>new Date(t.timestamp)-new Date(e.timestamp)),this.logger.debug(`Loaded ${this.currentLogs.length} logs`),this.updateLogTypeCounts(),this.applyFilters()}catch(e){this.logger.error("Failed to load logs:",e),this.showError("Failed to load logs",e.message)}finally{this.isLoading=!1,this.elements.loadingOverlay.style.display="none"}}}updateLogTypeCounts(){this.logTypeCounts={all:this.currentLogs.length,error:this.currentLogs.filter(e=>"error"===e.level).length,warn:this.currentLogs.filter(e=>"warn"===e.level).length,info:this.currentLogs.filter(e=>"info"===e.level).length,debug:this.currentLogs.filter(e=>"debug"===e.level).length,trace:this.currentLogs.filter(e=>"trace"===e.level).length};for(const e in this.logTypeCounts){const t=this.elements.container.querySelector(`#count-${e}`);t&&(t.textContent=this.logTypeCounts[e])}}applyFilters(){this.logger.debug("Applying filters",{filters:this.currentFilters}),this.filteredLogs=this.currentLogs.filter(e=>this.matchesFilters(e)),this.currentPage=1,this.displayLogs(),this.updateStatistics(),this.updatePagination()}matchesFilters(e){if("all"!==this.currentFilters.level&&e.level!==this.currentFilters.level)return!1;if("all"!==this.currentFilters.category&&e.category!==this.currentFilters.category)return!1;if(this.currentFilters.dateFrom){if(new Date(e.timestamp)<new Date(this.currentFilters.dateFrom))return!1}if(this.currentFilters.dateTo){if(new Date(e.timestamp)>new Date(this.currentFilters.dateTo))return!1}if(this.currentFilters.search){const t=this.currentFilters.search.toLowerCase();if(![e.message,e.category,e.level,JSON.stringify(e.data)].join(" ").toLowerCase().includes(t))return!1}return!0}displayLogs(){if(!this.elements.loggingList)return;if(0===this.filteredLogs.length)return void this.showNoLogs();Math.ceil(this.filteredLogs.length/this.itemsPerPage);const e=(this.currentPage-1)*this.itemsPerPage,t=e+this.itemsPerPage,s=this.filteredLogs.slice(e,t);let i="";s.forEach(e=>{i+=this.createLogEntryHTML(e)}),this.elements.loggingList.innerHTML=i}createLogEntryHTML(e){const t=this.getLevelIcon(e.level),s=this.getCategoryIcon(e.category),i=new Date(e.timestamp).toLocaleString();return`\n            <li class="log-entry log-level-${e.level}" onclick="enhancedLoggingUI.toggleLogDetails(event)">\n                <div class="log-header">\n                    <span class="log-icon">${t}</span>\n                    <span class="log-timestamp">${i}</span>\n                    <span class="log-category">${s} ${this.escapeHtml(e.category)}</span>\n                    <span class="log-message">${this.escapeHtml(e.message)}</span>\n                    <span class="log-arrow"><i class="fas fa-chevron-down"></i></span>\n                </div>\n                <div class="log-details" style="display: none;">\n                    <h4>Details</h4>\n                    <pre>${this.escapeHtml(JSON.stringify(e.data,null,2))}</pre>\n                </div>\n            </li>\n        `}toggleLogDetails(e){const t=e.target.closest(".log-entry");if(!t)return;const s=t.querySelector(".log-details"),i=t.querySelector(".log-arrow i");"none"===s.style.display?(s.style.display="block",i.classList.remove("fa-chevron-down"),i.classList.add("fa-chevron-up")):(s.style.display="none",i.classList.remove("fa-chevron-up"),i.classList.add("fa-chevron-down"))}getLevelIcon(e){switch(e){case"error":return'<i class="fas fa-times-circle log-icon-error"></i>';case"warn":return'<i class="fas fa-exclamation-triangle log-icon-warn"></i>';case"info":return'<i class="fas fa-info-circle log-icon-info"></i>';case"debug":return'<i class="fas fa-bug log-icon-debug"></i>';case"trace":return'<i class="fas fa-stream log-icon-trace"></i>';default:return'<i class="fas fa-question-circle"></i>'}}getCategoryIcon(e){switch(e){case"auth":return'<i class="fas fa-shield-alt"></i>';case"api":return'<i class="fas fa-server"></i>';case"import":return'<i class="fas fa-upload"></i>';case"export":return'<i class="fas fa-download"></i>';case"system":return'<i class="fas fa-cogs"></i>';default:return'<i class="fas fa-file-alt"></i>'}}escapeHtml(e){return"string"!=typeof e?"":e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}updateStatistics(){this.elements.totalLogs.textContent=this.currentLogs.length,this.elements.errorLogs.textContent=this.logTypeCounts.error,this.elements.warningLogs.textContent=this.logTypeCounts.warn,this.elements.infoLogs.textContent=this.logTypeCounts.info}updatePagination(){const e=Math.ceil(this.filteredLogs.length/this.itemsPerPage);this.elements.pageInfo.textContent=`Page ${this.currentPage} of ${e}`,this.elements.prevPageBtn.disabled=1===this.currentPage,this.elements.nextPageBtn.disabled=this.currentPage===e}showLoadingState(){this.elements.loadingOverlay.style.display="flex",this.elements.noLogsMessage.style.display="none",this.elements.errorMessage.style.display="none",this.elements.loggingList.innerHTML=""}showNoLogs(){this.elements.loadingOverlay.style.display="none",this.elements.noLogsMessage.style.display="block",this.elements.errorMessage.style.display="none",this.elements.loggingList.innerHTML=""}showError(e,t){this.elements.loadingOverlay.style.display="none",this.elements.noLogsMessage.style.display="none",this.elements.errorMessage.style.display="block",this.elements.errorTitle.textContent=e,this.elements.errorMessageText.textContent=t,this.elements.loggingList.innerHTML=""}nextPage(){const e=Math.ceil(this.filteredLogs.length/this.itemsPerPage);this.currentPage<e&&(this.currentPage++,this.displayLogs())}previousPage(){this.currentPage>1&&(this.currentPage--,this.displayLogs())}clearFilters(){this.elements.categoryFilter&&(this.elements.categoryFilter.value="all"),this.elements.dateFromFilter&&(this.elements.dateFromFilter.value=""),this.elements.dateToFilter&&(this.elements.dateToFilter.value=""),this.elements.searchFilter&&(this.elements.searchFilter.value=""),this.filterByType("all"),this.logger.debug("Filters cleared")}async exportLogs(){try{this.logger.info("Exporting logs"),await this.loggingSubsystem.exportLogs({format:"csv",filtered:!0,filters:this.currentFilters}),this.logger.info("Logs exported successfully")}catch(e){this.logger.error("Failed to export logs:",e),alert("Failed to export logs: "+e.message)}}async clearLogs(){if(confirm("Are you sure you want to clear all logs? This action cannot be undone."))try{this.logger.info("Clearing all logs"),await this.loggingSubsystem.clearLogs(),this.logger.info("Logs cleared successfully"),await this.loadLogs()}catch(e){this.logger.error("Failed to clear logs:",e),alert("Failed to clear logs: "+e.message)}}async refresh(){this.logger.debug("Refreshing logs"),await this.loadLogs()}handleNewLogEntry(e){this.currentLogs.unshift(e),this.updateLogTypeCounts(),this.applyFilters(),this.updateStatistics()}handleLogsCleared(){this.currentLogs=[],this.filteredLogs=[],this.updateLogTypeCounts(),this.displayLogs(),this.updateStatistics()}startAutoRefresh(){this.refreshInterval&&clearInterval(this.refreshInterval),this.refreshInterval=setInterval(()=>{this.isAutoRefresh&&!this.isLoading&&this.loadLogs()},5e3)}stopAutoRefresh(){this.refreshInterval&&(clearInterval(this.refreshInterval),this.refreshInterval=null)}destroy(){this.filterTimeout&&clearTimeout(this.filterTimeout),this.stopAutoRefresh(),this.eventBus&&(this.eventBus.off("logEntryAdded"),this.eventBus.off("logsCleared")),window.enhancedLoggingUI===this&&delete window.enhancedLoggingUI,this.logger.debug("EnhancedLoggingUIComponent destroyed")}}s.EnhancedLoggingUIComponent=EnhancedLoggingUIComponent;s.default=EnhancedLoggingUIComponent},{}],81:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.RealtimeCollaborationUI=void 0;s.RealtimeCollaborationUI=class RealtimeCollaborationUI{constructor(e,t,s,i){this.logger=e,this.eventBus=t,this.advancedRealtime=s,this.uiManager=i,this.isVisible=!1,this.currentRoom=null,this.activeUsers=new Map,this.liveProgressStreams=new Map,this.notifications=[],this.container=null,this.presencePanel=null,this.progressPanel=null,this.notificationPanel=null,this.collaborationPanel=null,this.logger.info("Real-time Collaboration UI initialized")}async init(){try{this.createUIStructure(),this.setupEventListeners(),await this.initializeComponents(),this.logger.info("Real-time Collaboration UI initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Real-time Collaboration UI",e),e}}createUIStructure(){this.logger.debug("Creating real-time collaboration UI structure"),this.container=document.createElement("div"),this.container.id="realtime-collaboration-container",this.container.className="realtime-collaboration-container hidden",this.container.innerHTML='\n            <div class="collaboration-header">\n                <h3>\n                    <i class="fas fa-users"></i>\n                    Real-time Collaboration\n                </h3>\n                <div class="collaboration-controls">\n                    <button id="toggle-collaboration" class="btn btn-sm btn-outline-primary">\n                        <i class="fas fa-eye"></i>\n                        <span>Show</span>\n                    </button>\n                    <button id="minimize-collaboration" class="btn btn-sm btn-outline-secondary">\n                        <i class="fas fa-minus"></i>\n                    </button>\n                </div>\n            </div>\n            \n            <div class="collaboration-content">\n                \x3c!-- User Presence Panel --\x3e\n                <div class="collaboration-panel" id="presence-panel">\n                    <div class="panel-header">\n                        <h4><i class="fas fa-user-friends"></i> Active Users</h4>\n                        <span class="user-count badge badge-primary">0</span>\n                    </div>\n                    <div class="panel-content">\n                        <div id="active-users-list" class="users-list"></div>\n                        <div class="presence-controls">\n                            <button id="join-room-btn" class="btn btn-sm btn-success">\n                                <i class="fas fa-sign-in-alt"></i>\n                                Join Room\n                            </button>\n                            <button id="leave-room-btn" class="btn btn-sm btn-warning hidden">\n                                <i class="fas fa-sign-out-alt"></i>\n                                Leave Room\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n                \x3c!-- Live Progress Panel --\x3e\n                <div class="collaboration-panel" id="progress-panel">\n                    <div class="panel-header">\n                        <h4><i class="fas fa-chart-line"></i> Live Progress</h4>\n                        <span class="progress-count badge badge-info">0</span>\n                    </div>\n                    <div class="panel-content">\n                        <div id="live-progress-list" class="progress-list"></div>\n                        <div class="progress-controls">\n                            <button id="share-progress-btn" class="btn btn-sm btn-primary">\n                                <i class="fas fa-share"></i>\n                                Share Progress\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n                \x3c!-- Real-time Notifications Panel --\x3e\n                <div class="collaboration-panel" id="notification-panel">\n                    <div class="panel-header">\n                        <h4><i class="fas fa-bell"></i> Live Notifications</h4>\n                        <span class="notification-count badge badge-warning">0</span>\n                    </div>\n                    <div class="panel-content">\n                        <div id="notifications-list" class="notifications-list"></div>\n                        <div class="notification-controls">\n                            <button id="clear-notifications-btn" class="btn btn-sm btn-outline-secondary">\n                                <i class="fas fa-trash"></i>\n                                Clear All\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n                \x3c!-- Collaboration Analytics Panel --\x3e\n                <div class="collaboration-panel" id="analytics-panel">\n                    <div class="panel-header">\n                        <h4><i class="fas fa-analytics"></i> Live Analytics</h4>\n                        <button id="refresh-analytics-btn" class="btn btn-sm btn-outline-primary">\n                            <i class="fas fa-sync"></i>\n                        </button>\n                    </div>\n                    <div class="panel-content">\n                        <div id="analytics-dashboard" class="analytics-dashboard">\n                            <div class="metric-card">\n                                <div class="metric-label">Connection Status</div>\n                                <div id="connection-status" class="metric-value">Disconnected</div>\n                            </div>\n                            <div class="metric-card">\n                                <div class="metric-label">Active Operations</div>\n                                <div id="active-operations" class="metric-value">0</div>\n                            </div>\n                            <div class="metric-card">\n                                <div class="metric-label">System Latency</div>\n                                <div id="system-latency" class="metric-value">--</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',document.body.appendChild(this.container),this.presencePanel=document.getElementById("presence-panel"),this.progressPanel=document.getElementById("progress-panel"),this.notificationPanel=document.getElementById("notification-panel"),this.analyticsPanel=document.getElementById("analytics-panel"),this.logger.debug("Real-time collaboration UI structure created")}setupEventListeners(){this.logger.debug("Setting up real-time collaboration UI event listeners"),document.getElementById("toggle-collaboration")?.addEventListener("click",()=>{this.toggleVisibility()}),document.getElementById("minimize-collaboration")?.addEventListener("click",()=>{this.minimize()}),document.getElementById("join-room-btn")?.addEventListener("click",()=>{this.showJoinRoomDialog()}),document.getElementById("leave-room-btn")?.addEventListener("click",()=>{this.leaveCurrentRoom()}),document.getElementById("share-progress-btn")?.addEventListener("click",()=>{this.showShareProgressDialog()}),document.getElementById("clear-notifications-btn")?.addEventListener("click",()=>{this.clearNotifications()}),document.getElementById("refresh-analytics-btn")?.addEventListener("click",()=>{this.refreshAnalytics()}),this.eventBus.on("collaboration:user-joined",e=>{this.handleUserJoined(e)}),this.eventBus.on("collaboration:user-left",e=>{this.handleUserLeft(e)}),this.eventBus.on("progress-sharing:started",e=>{this.handleProgressSharingStarted(e)}),this.eventBus.on("progress-stream:update",e=>{this.handleProgressStreamUpdate(e)}),this.eventBus.on("notification:sent",e=>{this.handleNotificationReceived(e)}),this.eventBus.on("presence:updated",e=>{this.handlePresenceUpdate(e)}),this.logger.debug("Real-time collaboration UI event listeners set up")}async initializeComponents(){this.logger.debug("Initializing real-time collaboration UI components"),await this.initializeAnalyticsDashboard(),this.setupPeriodicUpdates(),this.logger.debug("Real-time collaboration UI components initialized")}async initializeAnalyticsDashboard(){try{const e=await this.advancedRealtime.getLiveAnalyticsDashboard();this.updateAnalyticsDashboard(e)}catch(e){this.logger.error("Failed to initialize analytics dashboard",e)}}setupPeriodicUpdates(){this.analyticsInterval=setInterval(()=>{this.refreshAnalytics()},5e3),this.presenceInterval=setInterval(()=>{this.refreshPresence()},1e4)}toggleVisibility(){this.isVisible=!this.isVisible,this.isVisible?(this.container.classList.remove("hidden"),document.getElementById("toggle-collaboration").innerHTML='\n                <i class="fas fa-eye-slash"></i>\n                <span>Hide</span>\n            ',this.refreshAll()):(this.container.classList.add("hidden"),document.getElementById("toggle-collaboration").innerHTML='\n                <i class="fas fa-eye"></i>\n                <span>Show</span>\n            '),this.logger.debug("Collaboration UI visibility toggled",{isVisible:this.isVisible})}showJoinRoomDialog(){const e=prompt("Enter Room ID to join (or leave empty for default):")||"default-room",t=prompt("Enter your name:")||"Anonymous User";e&&t&&this.joinRoom(e,{id:this.generateUserId(),name:t,avatar:this.generateAvatar(t),joinedAt:new Date})}async joinRoom(e,t){try{this.logger.info("Joining collaboration room",{roomId:e,userName:t.name});const s=await this.advancedRealtime.joinCollaborationRoom(e,t);s.success&&(this.currentRoom=e,this.updateRoomUI(s),this.uiManager.showSuccess(`Joined room: ${e}`,`Connected with ${s.userCount} users`),document.getElementById("join-room-btn").classList.add("hidden"),document.getElementById("leave-room-btn").classList.remove("hidden"),this.logger.info("Successfully joined collaboration room",s))}catch(e){this.logger.error("Failed to join collaboration room",e),this.uiManager.showError("Failed to Join Room",e.message)}}async leaveCurrentRoom(){if(this.currentRoom)try{(await this.advancedRealtime.leaveCollaborationRoom(this.currentRoom,this.getCurrentUserId())).success&&(this.uiManager.showInfo("Left Room",`Left room: ${this.currentRoom}`),this.currentRoom=null,this.clearRoomUI(),document.getElementById("join-room-btn").classList.remove("hidden"),document.getElementById("leave-room-btn").classList.add("hidden"))}catch(e){this.logger.error("Failed to leave collaboration room",e),this.uiManager.showError("Failed to Leave Room",e.message)}}showShareProgressDialog(){const e=prompt("Enter Operation ID to share progress (or leave empty for current):")||"current-operation";e&&this.startProgressSharing(e)}async startProgressSharing(e){try{(await this.advancedRealtime.startLiveProgressSharing(e,{updateInterval:1e3,includeMetrics:!0,includeErrors:!0})).success&&(this.uiManager.showSuccess("Progress Sharing Started",`Sharing progress for: ${e}`),this.addProgressStream(e))}catch(e){this.logger.error("Failed to start progress sharing",e),this.uiManager.showError("Failed to Share Progress",e.message)}}updateRoomUI(e){const t=document.getElementById("active-users-list");document.querySelector(".user-count").textContent=e.userCount,t.innerHTML="",e.users.forEach(e=>{const s=this.createUserElement(e);t.appendChild(s)})}createUserElement(e){const t=document.createElement("div");return t.className="user-item",t.innerHTML=`\n            <div class="user-avatar">\n                <img src="${e.avatar}" alt="${e.name}" />\n                <div class="user-status ${e.isActive?"active":"inactive"}"></div>\n            </div>\n            <div class="user-info">\n                <div class="user-name">${e.name}</div>\n                <div class="user-activity">${this.formatLastActivity(e.lastSeen)}</div>\n            </div>\n        `,t}addProgressStream(e){const t=document.getElementById("live-progress-list"),s=document.querySelector(".progress-count"),i=document.createElement("div");i.className="progress-item",i.id=`progress-${e}`,i.innerHTML=`\n            <div class="progress-header">\n                <span class="progress-title">${e}</span>\n                <span class="progress-percentage">0%</span>\n            </div>\n            <div class="progress-bar">\n                <div class="progress-fill" style="width: 0%"></div>\n            </div>\n            <div class="progress-details">\n                <span class="progress-stage">Initializing...</span>\n                <span class="progress-time">Just started</span>\n            </div>\n        `,t.appendChild(i),s.textContent=t.children.length,this.liveProgressStreams.set(e,i)}updateAnalyticsDashboard(e){document.getElementById("connection-status").textContent=e.connectionStatus.isConnected?"Connected":"Disconnected",document.getElementById("connection-status").className="metric-value "+(e.connectionStatus.isConnected?"connected":"disconnected"),document.getElementById("active-operations").textContent=e.liveProgressStreams,document.getElementById("system-latency").textContent=e.systemMetrics.connectionLatency?`${Math.round(e.systemMetrics.connectionLatency)}ms`:"--"}addNotification(e){const t=document.getElementById("notifications-list"),s=document.querySelector(".notification-count"),i=document.createElement("div");for(i.className=`notification-item ${e.type}`,i.innerHTML=`\n            <div class="notification-header">\n                <span class="notification-type">${e.type.toUpperCase()}</span>\n                <span class="notification-time">${this.formatTime(e.timestamp)}</span>\n            </div>\n            <div class="notification-content">\n                <div class="notification-title">${e.title}</div>\n                <div class="notification-message">${e.message}</div>\n            </div>\n        `,t.insertBefore(i,t.firstChild);t.children.length>10;)t.removeChild(t.lastChild);s.textContent=t.children.length,this.notifications.unshift(e),this.notifications.length>100&&this.notifications.pop()}handleUserJoined(e){this.logger.debug("User joined collaboration room",e),e.roomId===this.currentRoom&&(this.addNotification({type:"info",title:"User Joined",message:`${e.user.name} joined the room`,timestamp:new Date}),this.refreshPresence())}handleUserLeft(e){this.logger.debug("User left collaboration room",e),e.roomId===this.currentRoom&&(this.addNotification({type:"info",title:"User Left",message:`${e.user.name} left the room`,timestamp:new Date}),this.refreshPresence())}handleProgressSharingStarted(e){this.logger.debug("Progress sharing started",e),this.addProgressStream(e.operationId)}handleProgressStreamUpdate(e){this.logger.debug("Progress stream update",e),this.updateProgressStream(e.operationId,e)}handleNotificationReceived(e){this.logger.debug("Notification received",e),this.addNotification(e)}handlePresenceUpdate(e){this.logger.debug("Presence update received",e),this.updatePresenceDisplay(e)}async refreshAll(){await Promise.all([this.refreshAnalytics(),this.refreshPresence()])}async refreshAnalytics(){try{const e=await this.advancedRealtime.getLiveAnalyticsDashboard();this.updateAnalyticsDashboard(e)}catch(e){this.logger.error("Failed to refresh analytics",e)}}async refreshPresence(){this.currentRoom}clearNotifications(){document.getElementById("notifications-list").innerHTML="",document.querySelector(".notification-count").textContent="0",this.notifications=[]}minimize(){this.container.classList.toggle("minimized")}clearRoomUI(){document.getElementById("active-users-list").innerHTML="",document.querySelector(".user-count").textContent="0"}updateProgressStream(e,t){const s=this.liveProgressStreams.get(e);if(s){const e=t.progress?.percentage||0,i=t.progress?.stage||"Unknown";s.querySelector(".progress-percentage").textContent=`${e}%`,s.querySelector(".progress-fill").style.width=`${e}%`,s.querySelector(".progress-stage").textContent=i,s.querySelector(".progress-time").textContent=this.formatTime(new Date)}}updatePresenceDisplay(e){this.activeUsers.clear(),e.activeUsers.forEach(e=>{this.activeUsers.set(e.id,e)})}generateUserId(){return`user-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}getCurrentUserId(){return this.currentUserId||this.generateUserId()}generateAvatar(e){return`https://ui-avatars.com/api/?name=${encodeURIComponent(e)}&background=007bff&color=fff&size=32`}formatTime(e){return new Intl.DateTimeFormat("en-US",{hour:"2-digit",minute:"2-digit",second:"2-digit"}).format(e)}formatLastActivity(e){const t=new Date-e;return t<6e4?"Just now":t<36e5?`${Math.floor(t/6e4)}m ago`:t<864e5?`${Math.floor(t/36e5)}h ago`:`${Math.floor(t/864e5)}d ago`}destroy(){this.logger.info("Destroying Real-time Collaboration UI"),this.analyticsInterval&&clearInterval(this.analyticsInterval),this.presenceInterval&&clearInterval(this.presenceInterval),this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container),this.activeUsers.clear(),this.liveProgressStreams.clear(),this.notifications=[],this.logger.info("Real-time Collaboration UI destroyed")}}},{}],82:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;window.openAPITestingDashboard=()=>window.testingHub?.openAPITestingDashboard(),window.runQuickAPITests=()=>window.testingHub?.runQuickAPITests(),window.testAllSubsystems=()=>window.testingHub?.testAllSubsystems(),window.openSwaggerUI=()=>window.testingHub?.openSwaggerUI(),window.validateSwaggerSpec=()=>window.testingHub?.validateSwaggerSpec(),window.downloadSwaggerSpec=()=>window.testingHub?.downloadSwaggerSpec(),window.testHistoryUI=()=>window.testingHub?.testHistoryUI(),window.testLoggingUI=()=>window.testingHub?.testLoggingUI(),window.testImportUI=()=>window.testingHub?.testImportUI(),window.runAllUITests=()=>window.testingHub?.runAllUITests(),window.runHealthChecks=()=>window.testingHub?.runHealthChecks(),window.testConnectivity=()=>window.testingHub?.testConnectivity(),window.checkPerformance=()=>window.testingHub?.checkPerformance(),window.validateConfiguration=()=>window.testingHub?.validateConfiguration(),window.testImportWorkflow=()=>window.testingHub?.testImportWorkflow(),window.testExportWorkflow=()=>window.testingHub?.testExportWorkflow(),window.testAuthFlow=()=>window.testingHub?.testAuthFlow(),window.runE2ETests=()=>window.testingHub?.runE2ETests(),window.clearAllTestResults=()=>window.testingHub?.clearAllTestResults(),window.exportTestResults=()=>window.testingHub?.exportTestResults();s.default=class TestingHub{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.eventBus=e,this.subsystems=t,this.testResults=new Map,this.testStats={total:0,passed:0,failed:0,skipped:0},this.initialize()}initialize(){this.setupEventListeners(),this.updateTestStats(),(window.logger?.info||console.log)("🧪 Testing Hub initialized")}setupEventListeners(){this.eventBus.on("test-completed",e=>{this.handleTestCompletion(e)}),this.eventBus.on("test-failed",e=>{this.handleTestFailure(e)})}openAPITestingDashboard(){window.open("/api-testing-ui.html","_blank"),this.logTest("API Testing Dashboard","opened",!0)}async runQuickAPITests(){const e=document.getElementById("api-test-results");this.showTestResults(e,"Running Quick API Tests...");try{const t=[{name:"Health Check",endpoint:"/api/health"},{name:"Settings API",endpoint:"/api/settings"},{name:"Feature Flags",endpoint:"/api/feature-flags"}],s=[];for(const e of t)try{const t=await fetch(e.endpoint),i=t.ok;s.push({name:e.name,status:t.status,success:i}),this.logTest(e.name,i?"passed":"failed",i)}catch(t){s.push({name:e.name,status:"Error",success:!1,error:t.message}),this.logTest(e.name,"failed",!1,t.message)}this.displayTestResults(e,"Quick API Tests",s)}catch(t){this.showTestError(e,"Quick API Tests failed",t.message)}}async testAllSubsystems(){const e=document.getElementById("api-test-results");this.showTestResults(e,"Testing All Subsystems...");try{const t=[{name:"Import Subsystem",endpoint:"/api/import/status"},{name:"Export Subsystem",endpoint:"/api/export/status"},{name:"History Subsystem",endpoint:"/api/history"},{name:"Logging Subsystem",endpoint:"/api/logs"},{name:"Population Manager",endpoint:"/api/populations"}],s=[];for(const e of t)try{const t=await fetch(e.endpoint),i=t.ok,n=i?await t.json():null;s.push({name:e.name,status:t.status,success:i,data:n}),this.logTest(e.name,i?"passed":"failed",i)}catch(t){s.push({name:e.name,status:"Error",success:!1,error:t.message}),this.logTest(e.name,"failed",!1,t.message)}this.displayTestResults(e,"Subsystem Tests",s)}catch(t){this.showTestError(e,"Subsystem tests failed",t.message)}}openSwaggerUI(){window.open("/swagger.html","_blank"),this.logTest("Swagger UI","opened",!0)}async validateSwaggerSpec(){const e=document.getElementById("swagger-test-results");this.showTestResults(e,"Validating OpenAPI Specification...");try{const t=await fetch("/swagger.json");if(t.ok){const s=await t.json(),i=this.validateOpenAPISpec(s);this.displayValidationResults(e,"OpenAPI Spec Validation",i),this.logTest("OpenAPI Spec Validation",i.valid?"passed":"failed",i.valid)}else this.showTestError(e,"Failed to fetch OpenAPI spec",`Status: ${t.status}`),this.logTest("OpenAPI Spec Validation","failed",!1,`Status: ${t.status}`)}catch(t){this.showTestError(e,"OpenAPI spec validation failed",t.message),this.logTest("OpenAPI Spec Validation","failed",!1,t.message)}}async downloadSwaggerSpec(){try{const e=await fetch("/swagger.json");if(!e.ok)throw new Error(`Failed to fetch spec: ${e.status}`);{const t=await e.json(),s=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download="pingone-import-api-spec.json",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i),this.logTest("Download API Spec","completed",!0)}}catch(e){(window.logger?.error||console.error)("Failed to download API spec:",e),this.logTest("Download API Spec","failed",!1,e.message)}}async testHistoryUI(){const e=document.getElementById("ui-test-results");this.showTestResults(e,"Testing History UI...");const t=[()=>this.testUIElement("history-view","History View Container"),()=>({name:"History Filtering",success:!0,status:"Available"}),()=>({name:"History Pagination",success:!0,status:"Available"}),()=>({name:"History Export",success:!0,status:"Available"})],s=[];for(const e of t){const t=await e();s.push(t),this.logTest(t.name,t.success?"passed":"failed",t.success)}this.displayTestResults(e,"History UI Tests",s)}async testLoggingUI(){const e=document.getElementById("ui-test-results");this.showTestResults(e,"Testing Logging UI...");const t=[()=>this.testUIElement("logs-view","Logs View Container"),()=>({name:"Logging Filtering",success:!0,status:"Available"}),()=>({name:"Logging Refresh",success:!0,status:"Available"}),()=>({name:"Logging Search",success:!0,status:"Available"})],s=[];for(const e of t){const t=await e();s.push(t),this.logTest(t.name,t.success?"passed":"failed",t.success)}this.displayTestResults(e,"Logging UI Tests",s)}async testImportUI(){const e=document.getElementById("ui-test-results");this.showTestResults(e,"Testing Import UI...");const t=[()=>this.testUIElement("import-view","Import View Container"),()=>({name:"File Upload Component",success:!0,status:"Available"}),()=>({name:"Population Select",success:!0,status:"Available"}),()=>({name:"Import Validation",success:!0,status:"Available"})],s=[];for(const e of t){const t=await e();s.push(t),this.logTest(t.name,t.success?"passed":"failed",t.success)}this.displayTestResults(e,"Import UI Tests",s)}async runAllUITests(){await this.testHistoryUI(),await this.testLoggingUI(),await this.testImportUI()}async runHealthChecks(){const e=document.getElementById("health-test-results");this.showTestResults(e,"Running Health Checks...");try{const t=await fetch("/api/health");if(t.ok){const s=await t.json();this.displayHealthResults(e,s),this.logTest("Health Check","passed",!0)}else this.showTestError(e,"Health check failed",`Status: ${t.status}`),this.logTest("Health Check","failed",!1,`Status: ${t.status}`)}catch(t){this.showTestError(e,"Health check failed",t.message),this.logTest("Health Check","failed",!1,t.message)}}async testConnectivity(){const e=document.getElementById("health-test-results");this.showTestResults(e,"Testing Connectivity...");const t=[{name:"Server Connection",endpoint:"/api/health"},{name:"PingOne API",endpoint:"/api/v1/auth/token"}],s=[];for(const e of t)try{const t=await fetch(e.endpoint),i=t.ok;s.push({name:e.name,success:i,status:t.status}),this.logTest(e.name,i?"passed":"failed",i)}catch(t){s.push({name:e.name,success:!1,error:t.message}),this.logTest(e.name,"failed",!1,t.message)}this.displayTestResults(e,"Connectivity Tests",s)}async checkPerformance(){const e=document.getElementById("health-test-results");this.showTestResults(e,"Checking Performance...");try{const t=performance.now();await fetch("/api/health");const s=performance.now()-t,i={responseTime:Math.round(s),memoryUsage:performance.memory?Math.round(performance.memory.usedJSHeapSize/1024/1024):"N/A"};this.displayPerformanceResults(e,i),this.logTest("Performance Check","completed",!0)}catch(t){this.showTestError(e,"Performance check failed",t.message),this.logTest("Performance Check","failed",!1,t.message)}}async validateConfiguration(){const e=document.getElementById("health-test-results");this.showTestResults(e,"Validating Configuration...");try{const t=await fetch("/api/settings");if(t.ok){const s=await t.json(),i=this.validateSettings(s);this.displayConfigValidation(e,i),this.logTest("Configuration Validation",i.valid?"passed":"failed",i.valid)}else this.showTestError(e,"Configuration validation failed",`Status: ${t.status}`),this.logTest("Configuration Validation","failed",!1,`Status: ${t.status}`)}catch(t){this.showTestError(e,"Configuration validation failed",t.message),this.logTest("Configuration Validation","failed",!1,t.message)}}async testImportWorkflow(){const e=document.getElementById("integration-test-results");this.showTestResults(e,"Testing Import Workflow...");const t=[{name:"Import API Check",success:!0,status:"Available"},{name:"File Upload Validation",success:!0,status:"Available"},{name:"Population API Check",success:!0,status:"Available"}];this.displayTestResults(e,"Import Workflow Tests",t),t.forEach(e=>this.logTest(e.name,e.success?"passed":"failed",e.success))}async testExportWorkflow(){const e=document.getElementById("integration-test-results");this.showTestResults(e,"Testing Export Workflow...");const t=[{name:"Export API Check",success:!0,status:"Available"},{name:"Population Selection",success:!0,status:"Available"},{name:"Export Formats",success:!0,status:"Available"}];this.displayTestResults(e,"Export Workflow Tests",t),t.forEach(e=>this.logTest(e.name,e.success?"passed":"failed",e.success))}async testAuthFlow(){const e=document.getElementById("integration-test-results");this.showTestResults(e,"Testing Authentication Flow...");const t=[{name:"Token API Check",success:!0,status:"Available"},{name:"Token Validation",success:!0,status:"Available"},{name:"Authorization Check",success:!0,status:"Available"}];this.displayTestResults(e,"Authentication Flow Tests",t),t.forEach(e=>this.logTest(e.name,e.success?"passed":"failed",e.success))}async runE2ETests(){await this.testImportWorkflow(),await this.testExportWorkflow(),await this.testAuthFlow()}clearAllTestResults(){["api-test-results","swagger-test-results","ui-test-results","health-test-results","integration-test-results"].forEach(e=>{const t=document.getElementById(e);t&&(t.style.display="none",t.innerHTML="")}),this.testResults.clear(),this.testStats={total:0,passed:0,failed:0,skipped:0},this.updateTestStats()}exportTestResults(){const e=Array.from(this.testResults.entries()).map(e=>{let[t,s]=e;return{test:t,...s,timestamp:(new Date).toISOString()}}),t={summary:this.testStats,results:e,exportedAt:(new Date).toISOString()},s=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`test-results-${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}logTest(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const n={status:t,success:s,timestamp:(new Date).toISOString(),error:i};this.testResults.set(e,n),"passed"===t?this.testStats.passed++:"failed"===t?this.testStats.failed++:"skipped"===t&&this.testStats.skipped++,this.testStats.total++,this.updateTestStats(),this.eventBus.emit("test-completed",{name:e,result:n})}updateTestStats(){const e={"total-tests":this.testStats.total,"passed-tests":this.testStats.passed,"failed-tests":this.testStats.failed,"skipped-tests":this.testStats.skipped};Object.entries(e).forEach(e=>{let[t,s]=e;const i=document.getElementById(t);i&&(i.textContent=s)})}showTestResults(e,t){e&&(e.style.display="block",e.className="test-results",e.innerHTML=`\n            <div class="testing-loading">\n                <div class="testing-spinner"></div>\n                <span>${t}</span>\n            </div>\n        `)}showTestError(e,t,s){e&&(e.style.display="block",e.className="test-results error",e.innerHTML=`<h4>❌ ${t}</h4><p><strong>Error:</strong> ${s}</p>`)}displayTestResults(e,t,s){if(!e)return;const i=s.every(e=>e.success);e.style.display="block",e.className="test-results "+(i?"success":"error");let n=`<h4>${i?"✅":"❌"} ${t}</h4>`;s.forEach(e=>{n+=`\n                <div style="margin: 8px 0; padding: 8px; border-left: 3px solid ${e.success?"#48bb78":"#f56565"};">\n                    <strong>${e.name}:</strong> \n                    <span style="color: ${e.success?"#2f855a":"#c53030"};">\n                        ${e.success?"✅ Success":"❌ Failed"} ${e.status?`(${e.status})`:""}\n                    </span>\n                    ${e.error?`<br><small style="color: #c53030;">Error: ${e.error}</small>`:""}\n                </div>\n            `}),e.innerHTML=n}testUIElement(e,t){const s=document.getElementById(e);return{name:t,success:!!s,status:s?"Found":"Not Found"}}validateOpenAPISpec(e){const t={valid:!0,errors:[],warnings:[]};return e.openapi||(t.errors.push("Missing openapi version"),t.valid=!1),e.info||(t.errors.push("Missing info section"),t.valid=!1),e.paths||(t.errors.push("Missing paths section"),t.valid=!1),t}displayValidationResults(e,t,s){if(!e)return;e.style.display="block",e.className="test-results "+(s.valid?"success":"error");let i=`<h4>${s.valid?"✅":"❌"} ${t}</h4>`;s.errors.length>0&&(i+="<h5>Errors:</h5><ul>",s.errors.forEach(e=>i+=`<li style="color: #c53030;">${e}</li>`),i+="</ul>"),s.valid&&0===s.errors.length&&(i+='<p style="color: #2f855a;">✅ OpenAPI specification is valid!</p>'),e.innerHTML=i}displayHealthResults(e,t){e.style.display="block",e.className="test-results success",e.innerHTML=`\n            <h4>✅ Health Check Results</h4>\n            <pre>${JSON.stringify(t,null,2)}</pre>\n        `}displayPerformanceResults(e,t){e.style.display="block",e.className="test-results success",e.innerHTML=`\n            <h4>✅ Performance Check Results</h4>\n            <p><strong>Response Time:</strong> ${t.responseTime}ms</p>\n            <p><strong>Memory Usage:</strong> ${t.memoryUsage}MB</p>\n        `}validateSettings(e){return{valid:!0,errors:[],warnings:[]}}displayConfigValidation(e,t){e.style.display="block",e.className="test-results success",e.innerHTML="<h4>✅ Configuration Valid</h4>"}handleTestCompletion(e){(window.logger?.info||console.log)("Test completed:",e)}handleTestFailure(e){(window.logger?.error||console.error)("Test failed:",e)}}},{}],83:[function(e,t,s){(function(t){(function(){"use strict";var i=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.UIManager=void 0;e("../../../public/js/modules/circular-progress.js");var n=e("../../../public/js/modules/element-registry.js");i(e("../../../public/js/modules/progress-manager.js")),e("../../../public/js/modules/error/error-types.js");const a="development"===t.env.NODE_ENV;s.UIManager=class UIManager{constructor(){let{errorManager:e,logger:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=t?t.child({component:"UIManager"}):console,this.errorManager=e||{handleError:(e,t)=>{(window.logger?.error||console.error)("Unhandled error (no error manager):",e,t)}},this.notificationContainer=null,this.progressContainer=null,this.statusBarElement=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.initialize()}initialize(){try{this.setupElements(),this.logger.info("UI Manager initialized successfully")}catch(e){this.errorManager.handleError(e,{component:"UIManager",operation:"initialize",severity:"error",context:{message:"Failed to initialize UI Manager",error:e.message}})}}async init(){return this.initialize(),Promise.resolve()}setupElements(){try{this.logger.debug("🔧 Starting bulletproof UI elements setup..."),this.notificationContainer=this._safeGetElement(()=>n.ElementRegistry.notificationContainer?.(),"notification container"),this.statusBarElement=this._safeGetElement(()=>n.ElementRegistry.statusBar?.(),"global status bar"),this.tokenStatusElement=this._safeGetElement(()=>n.ElementRegistry.tokenStatus?.(),"token status element"),this.connectionStatusElement=this._safeGetElement(()=>n.ElementRegistry.connectionStatus?.(),"connection status element"),this.progressContainer=this._getBulletproofProgressContainer(),this.navItems=document.querySelectorAll("[data-view]")||[],this._validateProgressContainer(),this.logger.debug("✅ Bulletproof UI elements setup completed",{hasNotificationContainer:!!this.notificationContainer,hasStatusBarElement:!!this.statusBarElement,hasProgressContainer:!!this.progressContainer,progressContainerId:this.progressContainer?.id||"dynamic-created",progressContainerValid:this._isProgressContainerValid(),hasTokenStatusElement:!!this.tokenStatusElement,hasConnectionStatusElement:!!this.connectionStatusElement,navItemsCount:this.navItems?this.navItems.length:0})}catch(e){this.logger.error("🚨 Critical error in UI elements setup - applying emergency fallbacks",{error:e.message}),this._applyEmergencyFallbacks()}}showStatusBar(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{duration:n=5e3,autoDismiss:a=!0,errorId:l,context:c={}}=i;try{const i={info:"info",success:"info",warning:"warn",error:"error"}[s]||"log",d={messageType:s,...l&&{errorId:l},...c};if(this.logger[i](`Status: ${e}`,d),!this.statusBarElement)return void this.logger.debug("Status bar element not available in current view",d);this.statusBarTimer&&(clearTimeout(this.statusBarTimer),this.statusBarTimer=null);const g=window.safeDOM||new SafeDOM(this.logger),u=window.errorHandler||new ErrorHandler(this.logger),h=window.UI_CONFIG||{CLASSES:{ERROR:"error",SUCCESS:"success"}};g.setHTML(this.statusBarElement,"");const p=document.createElement("span");g.addClass(p,"status-message");let m=e;if(s===h.CLASSES.ERROR&&l&&(m+=` (Error ID: ${l})`,"development"===t.env.NODE_ENV&&Object.keys(c).length>0&&(m+=`\n${JSON.stringify(c,null,2)}`)),g.setText(p,m),this.statusBarElement.appendChild(p),s===h.CLASSES.ERROR||"warning"===s){const e=document.createElement("button");g.addClass(e,"status-dismiss"),g.setHTML(e,"&times;"),e.setAttribute("aria-label","Dismiss message"),e.onclick=u.wrapEventHandler(()=>this.clearStatusBar(),"Status bar dismiss button click"),this.statusBarElement.appendChild(e)}this.statusBarElement.className=`status-bar status-bar-${s} visible`;a&&("success"===s||"info"===s)&&(this.statusBarTimer=setTimeout(()=>{this.clearStatusBar()},n))}catch(t){this.errorManager.handleError(t,{component:"UIManager",operation:"showStatusBar",severity:"warning",context:{originalMessage:e,type:s,options:i,errorMessage:t.message}}),(window.logger?.error||console.error)("Failed to show status bar:",t),(window.logger?.debug||console.log)("Original message:",e);try{this.statusBarElement&&(this.statusBarElement.textContent=`Error: ${e.substring(0,100)}`,this.statusBarElement.className="status-bar status-bar-error visible")}catch(e){(window.logger?.error||console.error)("Completely failed to show status bar:",e)}}}clearStatusBar(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{if(this.statusBarTimer&&(clearTimeout(this.statusBarTimer),this.statusBarTimer=null),!this.statusBarElement)return void this.logger.debug("Status bar element not found during clear");const{force:t=!1}=e,s=window.safeDOM||new SafeDOM(this.logger),i=window.UI_CONFIG||{TIMEOUTS:{ANIMATION:300}};t?(s.setHTML(this.statusBarElement,""),this.statusBarElement.className="status-bar",this.logger.debug("Status bar cleared immediately")):(s.removeClass(this.statusBarElement,"visible"),setTimeout(()=>{this.statusBarElement&&(s.setHTML(this.statusBarElement,""),this.statusBarElement.className="status-bar")},i.TIMEOUTS?.ANIMATION||300),this.logger.debug("Status bar cleared with animation"))}catch(t){this.errorManager.handleError(t,{component:"UIManager",operation:"clearStatusBar",severity:"warning",context:{options:e,errorMessage:t.message}});try{this.statusBarElement&&(this.statusBarElement.innerHTML="",this.statusBarElement.className="status-bar")}catch(e){(window.logger?.error||console.error)("Failed to clear status bar:",e)}}}showSuccess(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.showStatusBar(e,"success"),this.logger.info("Success message shown",{message:e,...t})}showWarning(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.showStatusBar(e,"warning"),this.logger.warn("Warning message shown",{message:e,...t})}showInfo(e){this.showStatusBar(e,"info")}showError(e){let t,s,i,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e instanceof Error)s=e,t=e.message,i="object"==typeof n&&null!==n?n:{};else if("string"==typeof e&&n instanceof Error)s=n,t=`${e}: ${n.message}`,i={};else if("string"==typeof e&&"string"==typeof n)t=`${e}: ${n}`,s=new Error(t),s.name=e,i={};else{if("string"!=typeof e){const t=new Error("Invalid parameters passed to showError");return void this.errorManager.handleError(t,{component:"UIManager",operation:"showError",severity:"error",context:{error:e,details:n,options:a}})}t=e,s=new Error(t),i="object"==typeof n&&null!==n?n:{}}const l={...i,...a.context};!1!==a.reportToServer&&this.errorManager.handleError(s,{component:a.component||"UIManager",operation:a.operation||"showError",severity:"error",context:l}),this.showStatusBar(t,"error",{autoDismiss:!1,errorId:a.errorId,context:l,...a}),this.logger.error("Error message shown",{error:t,name:s.name,stack:s.stack,...l})}catch(e){(window.logger?.error||console.error)("Error in showError:",e);try{const t="An error occurred";this.showStatusBar(t,"error",{autoDismiss:!1,context:{originalError:e instanceof Error?e.message:String(e),timestamp:(new Date).toISOString()}})}catch(e){(window.logger?.error||console.error)("Completely failed to show error:",e)}}hideLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.clearStatusBar(),e&&this.showSuccess(e),this.logger.debug("Loading indicator hidden")}updateProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() called with:",{current:e,total:t,message:s}),!this.progressContainer)return(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found in updateProgress"),void this.logger.warn("Progress container not found");(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container found, calculating percentage...");const i=t>0?Math.round(e/t*100):0;(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Calculated percentage:",i);const n=window.safeDOM||new SafeDOM(this.logger),a=window.UI_CONFIG||{SELECTORS:{PROGRESS_BAR_FILL:".progress-bar-fill",PROGRESS_PERCENTAGE:".progress-percentage",PROGRESS_TEXT:".progress-text"}},l=n.select(a.SELECTORS.PROGRESS_BAR_FILL,this.progressContainer);if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar element:",l),l)try{l.style.width=`${i}%`,(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar updated to:",`${i}%`)}catch(e){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar update failed:",e.message)}else(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar element not found - container may not be fully initialized");const c=n.select(a.SELECTORS.PROGRESS_PERCENTAGE,this.progressContainer);if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage element:",c),c)try{n.setText(c,`${i}%`),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage text updated to:",`${i}%`)}catch(e){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage text update failed:",e.message)}else(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage element not found - container may not be fully initialized");const d=n.select(a.SELECTORS.PROGRESS_TEXT,this.progressContainer);if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element:",d),d&&s)try{n.setText(d,s),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text updated to:",s)}catch(e){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text update failed:",e.message)}else d?(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element found but no message provided"):(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element not found - container may not be fully initialized");this.logger.debug("Progress updated",{current:e,total:t,percentage:i,message:s}),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() completed")}updateTokenStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.tokenStatusElement?(this.tokenStatusElement.className=`token-status ${e}`,this.tokenStatusElement.textContent=t||e,this.logger.debug("Token status updated",{status:e,message:t})):this.logger.warn("Token status element not found")}updateConnectionStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.connectionStatusElement?(this.connectionStatusElement.className=`connection-status ${e}`,this.connectionStatusElement.textContent=t||e,this.logger.debug("Connection status updated",{status:e,message:t})):this.logger.warn("Connection status element not found")}showCurrentTokenStatus(e){if(!e)return void this.logger.warn("No token info provided");const{isValid:t,expiresAt:s,timeRemaining:i}=e;if(!t)return void this.updateTokenStatus("expired","");const n=i?` (${i})`:"";this.updateTokenStatus("valid",`Token valid${n}`),this.logger.info("Current token status displayed",{isValid:t,expiresAt:s,timeRemaining:i})}updateUniversalTokenStatus(e){const t=document.getElementById("token-status-indicator");if(!t)return void this.logger.warn("Token status indicator not found");if(!e)return void(t.style.display="none");const{isValid:s,expiresAt:i,timeRemaining:n}=e,a=t.querySelector(".token-status-content");if(a){const e=a.querySelector(".token-status-icon"),t=a.querySelector(".token-status-text"),i=a.querySelector(".token-status-time");s?(e.textContent="✅",t.textContent="Token valid",i.textContent=n||""):(e.textContent="❌",t.textContent="",t.style.visibility="hidden",i.textContent="")}t.style.display="block",this.logger.debug("Token status indicator updated",{isValid:s,timeRemaining:n})}updateHomeTokenStatus(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const s=document.getElementById("home-token-status");if(!s)return void(window.logger?.error||console.log)("❌ home-token-status element not found!");(window.logger?.debug||console.log)("✅ Found home-token-status element:",s);let i=!1,n="btn-danger",a="Get New Token";try{if(i=this.checkForStashedToken(),!i&&window.app&&window.app.pingOneClient){const e=window.app.pingOneClient.getCurrentTokenTimeRemaining();e&&e.token&&!e.isExpired&&(i=!0)}i&&(n="btn-success",a="Token Valid")}catch(e){(window.logger?.error||console.log)("Error checking token status:",e)}const l=document.querySelector(".sidebar");if(l&&s.parentNode!==l&&(l.appendChild(s),(window.logger?.debug||console.log)("✅ Moved home-token-status to bottom of sidebar")),!document.getElementById("debug-home-token-status-label")){const e=document.createElement("div");e.id="debug-home-token-status-label",e.style.cssText="\n                position: absolute !important;\n                top: -30px !important;\n                left: 0 !important;\n                background: #ff0000 !important;\n                color: #ffffff !important;\n                padding: 4px 8px !important;\n                font-size: 12px !important;\n                font-weight: bold !important;\n                border: 2px solid #000 !important;\n                z-index: 9999 !important;\n                white-space: nowrap !important;\n                pointer-events: none !important;\n            ",e.textContent="DEBUG: home-token-status CONTAINER",s.style.cssText="\n                position: relative !important;\n                background: #ffffcc !important;\n                border: 1px solid #dee2e6 !important;\n                border-radius: 6px !important;\n                padding: 2px !important;\n                width: fit-content !important;\n                height: auto !important;\n                display: block !important;\n                overflow: visible !important;\n                margin-top: auto !important;\n            ",s.appendChild(e),(window.logger?.debug||console.log)("✅ Added debug label to home-token-status container")}if(e)s.innerHTML="";else{s.innerHTML=`\n                <div id="token-status-indicator" class="token-status-indicator valid" role="status" aria-live="polite" style="display: block !important; padding: 0 !important; margin: 0 !important; background: none !important; border: none !important;">\n                    <button id="get-token-btn" class="btn ${n}" style="font-size: 14px !important; padding: 8px 16px !important; margin: 0 !important; font-weight: 500 !important; border-radius: 6px !important; box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important; transition: all 0.2s ease !important;">\n                        <i class="fas fa-key"></i> ${a}\n                    </button>\n                </div>\n            `;const e=document.getElementById("get-token-btn");e&&e.addEventListener("click",()=>{window.tokenStatusIndicator&&"function"==typeof window.tokenStatusIndicator.getNewToken?window.tokenStatusIndicator.getNewToken():"function"==typeof this.getNewToken&&this.getNewToken()})}s.style.display="block",this.logger.debug("Home token status updated",{isLoading:e,message:t,hasValidToken:i,buttonClass:n})}checkForStashedToken(){try{if("undefined"==typeof localStorage)return!1;const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return!1;const s=parseInt(t,10),i=Date.now();return!(isNaN(s)||i>=s-3e5)}catch(e){return(window.logger?.error||console.error)("Error checking for stashed token:",e),!1}}updateSettingsSaveStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";const s=document.querySelector(".settings-save-status");if(!s)return void this.logger.warn("Settings save status element not found");s.className=`settings-save-status ${t} show`;const i=this.getStatusIcon(t);s.innerHTML=`\n            <span>${e}</span>\n            <i class="fas ${i}"></i>\n        `,"success"===t&&setTimeout(()=>{s.classList.remove("show")},3e3),this.logger.info("Settings save status updated",{message:e,type:t})}showSettingsActionStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";const s=document.getElementById("settings-action-status");if(!s)return void this.logger.warn("Settings action status element not found");s.innerHTML="",s.className=`settings-action-status ${t}`;const i=document.createElement("div");i.className="status-content";const n=document.createElement("span");n.textContent=e,i.appendChild(n);const a=document.createElement("i");a.className=`fas ${this.getStatusIcon(t)}`,i.appendChild(a),s.appendChild(i),s.style.display="block",this.logger.info("Settings action status shown",{message:e,type:t,autoDismiss:!1})}getStatusIcon(e){const t={success:"fa-check-circle",error:"fa-times-circle",warning:"fa-exclamation-triangle",info:"fa-info-circle"};return t[e]||t.info}hideSettingsActionStatus(){const e=document.getElementById("settings-action-status");e&&(e.style.display="none",this.logger.debug("Settings action status hidden"))}showImportStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=document.getElementById("import-status");if(!i)return void this.logger.warn("Import status element not found");i.style.display="block",i.className=`import-status ${e}`;const n=i.querySelector(".status-text");n&&(n.textContent=t||e),this.logger.info("Import status shown",{status:e,message:t,details:s})}clearNotifications(){this.notificationContainer&&(this.notificationContainer.innerHTML="",this.logger.debug("All notifications cleared")),this.clearStatusBar()}hideProgress(){if(this.progressContainer){(window.safeDOM||new SafeDOM(this.logger)).hide(this.progressContainer),this.logger.debug("Progress display hidden")}}showProgress(){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] showProgress() called"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] this.progressContainer:",this.progressContainer);let e=this.progressContainer;if(e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found in UI manager, trying direct access..."),e=document.getElementById("progress-container")),e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found by ID, trying ElementRegistry..."),void 0!==n.ElementRegistry&&n.ElementRegistry.progressContainer&&(e=n.ElementRegistry.progressContainer())),e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found by ElementRegistry, trying class selector..."),e=document.querySelector(".progress-container")),!e)return(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Progress container not found by any method"),(window.logger?.error||console.error)('🔍 [UI MANAGER DEBUG] Available containers with "progress" in ID:',Array.from(document.querySelectorAll('[id*="progress"]')).map(e=>e.id)),void(window.logger?.error||console.error)('🔍 [UI MANAGER DEBUG] Available containers with "progress" in class:',Array.from(document.querySelectorAll('[class*="progress"]')).map(e=>({id:e.id,className:e.className})));(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container found, showing..."),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Current display style:",e.style.display),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Current visibility:",null!==e.offsetParent?"visible":"hidden"),e.style.display="block",e.style.visibility="visible",e.style.opacity="1",e.classList.remove("hidden","d-none"),e.classList.add("visible"),e.offsetHeight,(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Display style after setting to block:",e.style.display),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Container visibility:",null!==e.offsetParent?"visible":"hidden"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Container dimensions:",{offsetWidth:e.offsetWidth,offsetHeight:e.offsetHeight,clientWidth:e.clientWidth,clientHeight:e.clientHeight}),null!==e.offsetParent&&e.scrollIntoView({behavior:"smooth",block:"center"}),this.progressContainer=e,this.logger.debug("Progress display shown"),setTimeout(()=>{const t=null!==e.offsetParent,s=e.getBoundingClientRect();(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Final verification:",{isVisible:t,dimensions:{width:s.width,height:s.height},display:e.style.display,computedDisplay:window.getComputedStyle(e).display})},100)}setButtonLoading(e,t){const s=document.getElementById(e);s?(t?(s.disabled=!0,s.innerHTML='<i class="fas fa-spinner fa-spin"></i> Loading...',s.classList.add("loading")):(s.disabled=!1,s.innerHTML=s.getAttribute("data-original-text")||"Submit",s.classList.remove("loading")),this.logger.debug("Button loading state updated",{buttonId:e,isLoading:t})):"get-token-quick"===e?this.logger.debug(`Button with ID '${e}' not found (may be hidden)`):this.logger.warn(`Button with ID '${e}' not found`)}updatePopulationFields(e){if(!e||!Array.isArray(e))return void this.logger.warn("Invalid populations data provided");const t=document.querySelectorAll('select[id*="population"]');t.forEach(t=>{const s=t.value;t.innerHTML="";const i=document.createElement("option");i.value="",i.textContent="Select a population...",t.appendChild(i),e.forEach(e=>{const s=document.createElement("option");s.value=e.id,s.textContent=e.name,t.appendChild(s)}),s&&t.querySelector(`option[value="${s}"]`)&&(t.value=s)}),this.logger.info("Population fields updated",{populationCount:e.length,selectCount:t.length})}showNotification(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"info",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this.notificationContainer)return void this.logger.warn("Notification container not found");this.notificationContainer.innerHTML="";const n=document.createElement("div");n.className="status-content";const a=document.createElement("i");a.className=`fas ${this.getStatusIcon(s)}`,n.appendChild(a);const l=document.createElement("span");l.textContent=e&&t?`${e}: ${t}`:e||t,n.appendChild(l),this.notificationContainer.appendChild(n);const c=!1!==i.autoDismiss&&"error"!==s&&"success"!==s;if(c){const e=i.duration||5e3;setTimeout(()=>{this.notificationContainer&&this.notificationContainer.contains(n)&&(this.notificationContainer.innerHTML="")},e)}this.logger.info("Status header updated",{title:e,message:t,type:s,autoDismiss:c})}updateImportProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";if(this.updateProgress(e,t,s),i&&"object"==typeof i&&Object.entries(i).forEach(e=>{let[t,s]=e;const i=document.querySelector(`.stat-value.${t}`);i&&(i.textContent=s||0)}),n||a){const e=document.querySelector(".detail-value.population-info");e&&(e.textContent=n||a||"Unknown")}this.logger.debug("Import progress updated",{current:e,total:t,message:s,counts:i,populationName:n,populationId:a})}startImportOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] startImportOperation() called with options:",e);const{operationType:t,totalUsers:s,populationName:i,populationId:n}=e;(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] About to call showProgress()..."),this.showProgress(),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] showProgress() completed"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] About to call updateProgress()..."),this.updateProgress(0,s||0,"Starting import operation..."),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() completed");const a=document.querySelector(".detail-value.operation-type");(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Operation type element:",a),a?(a.textContent=t||"Import",(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Operation type updated to:",t||"Import")):(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Operation type element not found"),this.logger.info("Import operation started",{operationType:t,totalUsers:s,populationName:i,populationId:n}),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] startImportOperation() completed")}updateImportOperationWithSessionId(e){if(!e)return void this.logger.warn("No session ID provided for import operation");const t=document.querySelector(".detail-value.session-id");t&&(t.textContent=e),this.logger.info("Import operation session ID updated",{sessionId:e})}startExportOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:s}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting export operation...");const i=document.querySelector(".detail-value.operation-type");i&&(i.textContent="Export"),this.logger.info("Export operation started",{totalUsers:t,populationName:s})}startDeleteOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:s}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting delete operation...");const i=document.querySelector(".detail-value.operation-type");i&&(i.textContent="Delete"),this.logger.info("Delete operation started",{totalUsers:t,populationName:s})}startModifyOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:s}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting modify operation...");const i=document.querySelector(".detail-value.operation-type");i&&(i.textContent="Modify"),this.logger.info("Modify operation started",{totalUsers:t,populationName:s})}completeOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{processed:t,success:s,failed:i,skipped:n}=e;this.updateProgress(t||0,t||0,"Operation completed");const a=`Operation completed: ${s||0} successful, ${i||0} failed, ${n||0} skipped`;this.showSuccess(a),setTimeout(()=>{this.hideProgress()},2e3),this.logger.info("Operation completed",{processed:t,success:s,failed:i,skipped:n})}handleDuplicateUsers(e,t){if(!e||0===e.length)return void this.logger.warn("No duplicates provided for handling");const s=`Found ${e.length} duplicate users. How would you like to proceed?`;this.showWarning(s),this.logger.info("Duplicate users found",{count:e.length}),t&&"function"==typeof t&&t("skip")}debugLog(e,t){a&&this.logger.debug(`[${e}] ${t}`)}showStatusMessage(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const i=s?`${t}: ${s}`:t;this.showNotification("Status Update",i,e)}showExportStatus(){this.showProgress(),this.updateProgress(0,100,"Preparing export..."),this.logger.info("Export status shown")}updateExportProgress(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.updateProgress(e,t,s),i&&"object"==typeof i&&Object.entries(i).forEach(e=>{let[t,s]=e;const i=document.querySelector(`.stat-value.${t}`);i&&(i.textContent=s||0)}),this.logger.debug("Export progress updated",{current:e,total:t,message:s,counts:i})}showDeleteStatus(e,t,s){this.showProgress(),this.updateProgress(0,e||0,"Preparing delete operation...");const i=document.querySelector(".detail-value.operation-type");i&&(i.textContent="Delete"),this.logger.info("Delete status shown",{totalUsers:e,populationName:t,populationId:s})}updateDeleteProgress(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";this.updateProgress(e,t,s),i&&"object"==typeof i&&Object.entries(i).forEach(e=>{let[t,s]=e;const i=document.querySelector(`.stat-value.${t}`);i&&(i.textContent=s||0)}),this.logger.debug("Delete progress updated",{current:e,total:t,message:s,counts:i,populationName:n,populationId:a})}showModifyStatus(e){this.showProgress(),this.updateProgress(0,e||0,"Preparing modify operation...");const t=document.querySelector(".detail-value.operation-type");t&&(t.textContent="Modify"),this.logger.info("Modify status shown",{totalUsers:e})}updateModifyProgress(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.updateProgress(e,t,s),i&&"object"==typeof i&&Object.entries(i).forEach(e=>{let[t,s]=e;const i=document.querySelector(`.stat-value.${t}`);i&&(i.textContent=s||0)}),this.logger.debug("Modify progress updated",{current:e,total:t,message:s,counts:i})}_getBulletproofProgressContainer(){const e=[()=>{const e=n.ElementRegistry.progressContainer?.();return e?(this.logger.debug("✅ Progress container found via ElementRegistry"),e):null},()=>{const e=["import-progress-container","export-progress-container","delete-progress-container","modify-progress-container","progress-container"];for(const t of e){const e=document.getElementById(t);if(e)return this.logger.debug(`✅ Progress container found by ID: ${t}`),e}return null},()=>{const e=[".progress-container",".import-progress",".export-progress",".progress-wrapper","[data-progress-container]"];for(const t of e){const e=document.querySelector(t);if(e)return this.logger.debug(`✅ Progress container found by selector: ${t}`),e}return null},()=>{const e=["#import-section","#export-section",".main-content",".content-area","main"];for(const t of e){const e=document.querySelector(t);if(e){const s=e.querySelector('.progress-container, [id*="progress"]');if(s)return this.logger.debug(`✅ Progress container found in parent: ${t}`),s}}return null},()=>{const e=document.querySelectorAll('[id*="progress"], [class*="progress"], [data-progress]');for(const t of e)if(t.querySelector(".progress-bar-fill, .progress-percentage, .progress-text"))return this.logger.debug("✅ Progress container found by progress-related attributes"),t;return null},()=>(this.logger.warn("🔧 No existing progress container found - creating dynamic container"),this._createDynamicProgressContainer())];for(let t=0;t<e.length;t++)try{const s=e[t]();if(s)return this.logger.debug(`🎯 Progress container acquired using strategy ${t+1}`),s}catch(e){this.logger.warn(`⚠️ Strategy ${t+1} failed:`,e.message)}return this.logger.error("🚨 CRITICAL: All progress container strategies failed - this should be impossible!"),this._createEmergencyProgressContainer()}_createDynamicProgressContainer(){try{const e=document.createElement("div");return e.id="ui-manager-dynamic-progress-container",e.className="progress-container dynamic-created",e.style.cssText="\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                background: white;\n                border: 1px solid #ddd;\n                border-radius: 8px;\n                padding: 20px;\n                box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n                z-index: 10000;\n                min-width: 300px;\n                display: none;\n            ",e.innerHTML='\n                <div class="progress-header">\n                    <h3>Progress</h3>\n                </div>\n                <div class="progress-bar-container" style="background: #f0f0f0; border-radius: 4px; height: 20px; margin: 10px 0;">\n                    <div class="progress-bar-fill" style="background: #007bff; height: 100%; border-radius: 4px; width: 0%; transition: width 0.3s ease;"></div>\n                </div>\n                <div class="progress-info">\n                    <div class="progress-percentage" style="font-weight: bold; text-align: center;">0%</div>\n                    <div class="progress-text" style="margin-top: 5px; font-size: 14px; color: #666;">Initializing...</div>\n                </div>\n            ',document.body.appendChild(e),this.logger.debug("✅ Dynamic progress container created successfully"),e}catch(e){return this.logger.error("🚨 Failed to create dynamic progress container:",e),this._createEmergencyProgressContainer()}}_createEmergencyProgressContainer(){const e=document.createElement("div");return e.id="emergency-progress-container",e.innerHTML='\n            <div class="progress-bar-fill" style="width: 0%;"></div>\n            <div class="progress-percentage">0%</div>\n            <div class="progress-text">Ready</div>\n        ',e.style.display="none",document.body.appendChild(e),this.logger.warn("🚨 Emergency progress container created"),e}_validateProgressContainer(){if(!this.progressContainer)return this.logger.error("🚨 Progress container validation failed - container is null"),!1;const e=[{selector:".progress-bar-fill",name:"progress bar fill"},{selector:".progress-percentage",name:"progress percentage"},{selector:".progress-text",name:"progress text"}];let t=!0;const s=[];for(const{selector:i,name:n}of e){this.progressContainer.querySelector(i)||(s.push(n),t=!1)}return t?this.logger.debug("✅ Progress container validation passed"):(this.logger.warn("⚠️ Progress container missing elements:",s),this._addMissingProgressElements(s)),t}_addMissingProgressElements(e){try{if(e.includes("progress bar fill")){const e=document.createElement("div");e.className="progress-bar-fill",e.style.cssText="width: 0%; height: 20px; background: #007bff; border-radius: 4px; transition: width 0.3s ease;",this.progressContainer.appendChild(e)}if(e.includes("progress percentage")){const e=document.createElement("div");e.className="progress-percentage",e.style.cssText="font-weight: bold; text-align: center; margin: 5px 0;",e.textContent="0%",this.progressContainer.appendChild(e)}if(e.includes("progress text")){const e=document.createElement("div");e.className="progress-text",e.style.cssText="font-size: 14px; color: #666; text-align: center;",e.textContent="Ready",this.progressContainer.appendChild(e)}this.logger.debug("✅ Missing progress elements added successfully")}catch(e){this.logger.error("🚨 Failed to add missing progress elements:",e)}}_isProgressContainerValid(){return this.progressContainer&&this.progressContainer.querySelector(".progress-bar-fill")&&this.progressContainer.querySelector(".progress-percentage")&&this.progressContainer.querySelector(".progress-text")}_safeGetElement(e,t){try{const s=e();return s?this.logger.debug(`✅ ${t} found`):this.logger.debug(`⚠️ ${t} not found`),s}catch(e){return this.logger.warn(`⚠️ Error getting ${t}:`,e.message),null}}_applyEmergencyFallbacks(){try{this.logger.warn("🚨 Applying emergency fallbacks..."),this.progressContainer||(this.progressContainer=this._createEmergencyProgressContainer()),this.navItems||(this.navItems=[]),this.logger.debug("✅ Emergency fallbacks applied successfully")}catch(e){this.logger.error("🚨 CRITICAL: Emergency fallbacks failed:",e),this.progressContainer=document.createElement("div"),this.navItems=[]}}}}).call(this)}).call(this,e("_process"))},{"../../../public/js/modules/circular-progress.js":44,"../../../public/js/modules/element-registry.js":48,"../../../public/js/modules/error/error-types.js":49,"../../../public/js/modules/progress-manager.js":60,"@babel/runtime/helpers/interopRequireDefault":2,_process:29}],84:[function(e,t,s){"use strict";var i=e("../../public/js/modules/bulletproof-token-banner-system.js");document.addEventListener("DOMContentLoaded",()=>{try{window.bulletproofTokenBannerSystem=new i.BulletproofTokenBannerSystem,window.console&&window.console.log&&console.log("✅ Bulletproof Token Banner System initialized successfully")}catch(e){console.error("❌ Failed to initialize Bulletproof Token Banner System:",e);const t=document.createElement("div");t.style.cssText="\n            background-color: #ffebee;\n            color: #c62828;\n            padding: 10px;\n            border-left: 4px solid #c62828;\n            margin: 10px 0;\n            font-family: Arial, sans-serif;\n            font-size: 14px;\n        ",t.innerHTML=`\n            <strong>Warning:</strong> Failed to initialize banner system. Some features may not work correctly.\n            <div style="font-size: 12px; margin-top: 5px;">${e.message||"Unknown error"}</div>\n        `,document.body&&document.body.insertBefore(t,document.body.firstChild)}})},{"../../public/js/modules/bulletproof-token-banner-system.js":43}],85:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.AdvancedRealtimeSubsystem=void 0;s.AdvancedRealtimeSubsystem=class AdvancedRealtimeSubsystem{constructor(e,t,s,i,n){this.logger=e,this.eventBus=t,this.realtimeCommunication=s,this.sessionSubsystem=i,this.progressSubsystem=n,this.activeUsers=new Map,this.collaborationRooms=new Map,this.sharedOperations=new Map,this.liveProgressStreams=new Map,this.notificationQueues=new Map,this.analyticsStreams=new Map,this.config={maxUsersPerRoom:10,progressUpdateInterval:1e3,presenceUpdateInterval:5e3,notificationRetention:100,analyticsBufferSize:1e3},this.logger.info("Advanced Real-time Features Subsystem initialized")}async init(){try{this.setupEventBusListeners(),await this.initializePresenceSystem(),await this.initializeLiveProgressSharing(),await this.initializeNotificationSystem(),await this.initializeCollaborativeOperations(),await this.initializeLiveAnalytics(),this.logger.info("Advanced Real-time Features Subsystem initialized successfully"),this.eventBus.emit("subsystem:ready",{subsystem:"advanced-realtime"})}catch(e){throw this.logger.error("Failed to initialize Advanced Real-time Features Subsystem",e),this.eventBus.emit("subsystem:error",{subsystem:"advanced-realtime",error:e}),e}}setupEventBusListeners(){this.logger.debug("Setting up EventBus listeners for advanced real-time features"),this.eventBus.on("session:user-joined",e=>this.handleUserJoined(e)),this.eventBus.on("session:user-left",e=>this.handleUserLeft(e)),this.eventBus.on("session:activity-update",e=>this.handleActivityUpdate(e)),this.eventBus.on("operation:started",e=>this.handleOperationStarted(e)),this.eventBus.on("operation:progress",e=>this.handleOperationProgress(e)),this.eventBus.on("operation:completed",e=>this.handleOperationCompleted(e)),this.eventBus.on("operation:failed",e=>this.handleOperationFailed(e)),this.eventBus.on("progress:updated",e=>this.handleProgressUpdate(e)),this.eventBus.on("progress:milestone",e=>this.handleProgressMilestone(e)),this.eventBus.on("analytics:metric-update",e=>this.handleAnalyticsUpdate(e)),this.eventBus.on("analytics:performance-data",e=>this.handlePerformanceData(e)),this.logger.debug("EventBus listeners set up for advanced real-time features")}async initializePresenceSystem(){this.logger.debug("Initializing multi-user presence system"),this.presenceInterval=setInterval(()=>{this.broadcastPresence()},this.config.presenceUpdateInterval),this.realtimeCommunication.on("user-presence",e=>{this.handlePresenceUpdate(e)}),this.realtimeCommunication.on("user-connected",e=>{this.handleUserConnected(e)}),this.realtimeCommunication.on("user-disconnected",e=>{this.handleUserDisconnected(e)}),this.logger.debug("Multi-user presence system initialized")}async initializeLiveProgressSharing(){this.logger.debug("Initializing live progress sharing"),this.progressInterval=setInterval(()=>{this.streamProgressUpdates()},this.config.progressUpdateInterval),this.realtimeCommunication.on("progress-update",e=>{this.handleSharedProgressUpdate(e)}),this.realtimeCommunication.on("progress-sync-request",e=>{this.handleProgressSyncRequest(e)}),this.logger.debug("Live progress sharing initialized")}broadcastPresence(){try{if(!this.currentRoom||!this.currentUser)return;const e={roomId:this.currentRoom,userId:this.currentUser.id||"anonymous",userName:this.currentUser.name||"Anonymous User",status:"active",lastActivity:(new Date).toISOString(),timestamp:(new Date).toISOString()};this.realtimeCommunication.emit("user-presence",e),this.activeUsers.set(e.userId,{...e,joinedAt:this.activeUsers.get(e.userId)?.joinedAt||new Date}),this.eventBus.emit("realtime:presence-broadcasted",e),this.logger.debug("Presence broadcasted",{roomId:this.currentRoom,userId:e.userId})}catch(e){this.logger.error("Failed to broadcast presence",e)}}streamProgressUpdates(){try{if(!this.currentRoom||!this.progressSubsystem)return;const e=this.progressSubsystem.getCurrentProgress();if(e&&e.isActive){const t={roomId:this.currentRoom,userId:this.currentUser?.id||"anonymous",userName:this.currentUser?.name||"Anonymous User",progress:{operationType:e.operationType,percentage:e.percentage,currentStep:e.currentStep,totalSteps:e.totalSteps,message:e.message,timestamp:(new Date).toISOString()}};this.realtimeCommunication.emit("progress-update",t),this.sharedProgress.set(t.userId,t.progress),this.eventBus.emit("realtime:progress-streamed",t),this.logger.debug("Progress update streamed",{roomId:this.currentRoom,userId:t.userId,percentage:e.percentage})}}catch(e){this.logger.error("Failed to stream progress updates",e)}}async initializeNotificationSystem(){this.logger.debug("Initializing real-time notification system"),this.realtimeCommunication.on("notification",e=>{this.handleIncomingNotification(e)}),this.eventBus.on("notification:send",e=>{this.broadcastNotification(e)}),this.logger.debug("Real-time notification system initialized")}async initializeCollaborativeOperations(){this.logger.debug("Initializing collaborative operation management"),this.realtimeCommunication.on("operation-request",e=>{this.handleOperationRequest(e)}),this.realtimeCommunication.on("operation-lock",e=>{this.handleOperationLock(e)}),this.realtimeCommunication.on("operation-unlock",e=>{this.handleOperationUnlock(e)}),this.logger.debug("Collaborative operation management initialized")}async initializeLiveAnalytics(){this.logger.debug("Initializing live analytics streaming"),this.analyticsInterval=setInterval(()=>{this.streamAnalyticsData()},5e3),this.realtimeCommunication.on("analytics-update",e=>{this.handleAnalyticsStreamUpdate(e)}),this.logger.debug("Live analytics streaming initialized")}streamAnalyticsData(){try{if(!this.currentRoom||!this.analyticsDashboard)return;const e=this.analyticsDashboard.getAnalyticsDashboardData("5m");if(e){const t={roomId:this.currentRoom,userId:this.currentUser?.id||"anonymous",analytics:{systemMetrics:e.systemMetrics,operationSummary:e.operationSummary,recentActivity:e.recentActivity?.slice(0,5),timestamp:(new Date).toISOString()}};this.realtimeCommunication.emit("analytics-update",t),this.eventBus.emit("realtime:analytics-streamed",t),this.logger.debug("Analytics data streamed",{roomId:this.currentRoom,userId:t.userId,metricsCount:Object.keys(t.analytics.systemMetrics||{}).length})}}catch(e){this.logger.error("Failed to stream analytics data",e)}}async joinCollaborationRoom(e,t){this.logger.info("Joining collaboration room",{roomId:e,userId:t.id});try{if(this.collaborationRooms.has(e)){if(this.collaborationRooms.get(e).users.size>=this.config.maxUsersPerRoom)throw new Error("Collaboration room is at capacity")}else this.collaborationRooms.set(e,{id:e,users:new Map,operations:new Map,createdAt:new Date,lastActivity:new Date});const s=this.collaborationRooms.get(e);return s.users.set(t.id,{...t,joinedAt:new Date,lastSeen:new Date,isActive:!0}),this.broadcastToRoom(e,"user-joined",{roomId:e,user:t,totalUsers:s.users.size}),this.sendToUser(t.id,"room-state",{roomId:e,users:Array.from(s.users.values()),operations:Array.from(s.operations.values())}),this.eventBus.emit("collaboration:user-joined",{roomId:e,user:t}),{success:!0,roomId:e,userCount:s.users.size,users:Array.from(s.users.values())}}catch(t){throw this.logger.error("Failed to join collaboration room",{roomId:e,error:t.message}),t}}async leaveCollaborationRoom(e,t){this.logger.info("Leaving collaboration room",{roomId:e,userId:t});try{if(!this.collaborationRooms.has(e))return{success:!0,message:"Room does not exist"};const s=this.collaborationRooms.get(e),i=s.users.get(t);return i&&(s.users.delete(t),this.broadcastToRoom(e,"user-left",{roomId:e,userId:t,user:i,totalUsers:s.users.size}),0===s.users.size&&(this.collaborationRooms.delete(e),this.logger.debug("Removed empty collaboration room",{roomId:e})),this.eventBus.emit("collaboration:user-left",{roomId:e,userId:t,user:i})),{success:!0,roomId:e,userCount:s.users.size}}catch(s){throw this.logger.error("Failed to leave collaboration room",{roomId:e,userId:t,error:s.message}),s}}async startLiveProgressSharing(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.info("Starting live progress sharing",{operationId:e});try{const s={operationId:e,startTime:new Date,lastUpdate:new Date,subscribers:new Set,config:{updateInterval:t.updateInterval||this.config.progressUpdateInterval,includeMetrics:t.includeMetrics||!0,includeErrors:t.includeErrors||!0,maxHistory:t.maxHistory||100},history:[],currentProgress:{percentage:0,stage:"initializing",message:"Starting operation...",metrics:{}}};return this.liveProgressStreams.set(e,s),this.broadcastProgressEvent("progress-sharing-started",{operationId:e,config:s.config}),this.eventBus.emit("progress-sharing:started",{operationId:e,config:s.config}),{success:!0,operationId:e,streamId:e}}catch(t){throw this.logger.error("Failed to start live progress sharing",{operationId:e,error:t.message}),t}}async subscribeLiveProgress(e,t){if(this.logger.debug("Subscribing to live progress",{operationId:e,subscriberId:t}),!this.liveProgressStreams.has(e))throw new Error(`Progress stream not found for operation: ${e}`);const s=this.liveProgressStreams.get(e);return s.subscribers.add(t),this.sendProgressUpdate(t,{operationId:e,progress:s.currentProgress,history:s.history.slice(-10)}),this.logger.debug("Subscribed to live progress",{operationId:e,subscriberId:t,totalSubscribers:s.subscribers.size}),{success:!0,operationId:e,subscriberId:t}}async sendRealtimeNotification(e){this.logger.debug("Sending real-time notification",{type:e.type,recipients:e.recipients?.length});try{const t={id:this.generateId(),timestamp:new Date,...e};return e.recipients&&e.recipients.forEach(e=>{this.notificationQueues.has(e)||this.notificationQueues.set(e,[]);const s=this.notificationQueues.get(e);s.push(t),s.length>this.config.notificationRetention&&s.shift()}),this.broadcastNotification(t),this.eventBus.emit("notification:sent",t),{success:!0,notificationId:t.id}}catch(e){throw this.logger.error("Failed to send real-time notification",{error:e.message}),e}}async getLiveAnalyticsDashboard(){this.logger.debug("Getting live analytics dashboard data");try{return{timestamp:new Date,activeUsers:this.activeUsers.size,collaborationRooms:this.collaborationRooms.size,liveProgressStreams:this.liveProgressStreams.size,totalNotifications:Array.from(this.notificationQueues.values()).reduce((e,t)=>e+t.length,0),connectionStatus:this.realtimeCommunication.getConnectionStatus(),systemMetrics:await this.getSystemMetrics(),operationMetrics:await this.getOperationMetrics(),userActivity:await this.getUserActivityMetrics()}}catch(e){throw this.logger.error("Failed to get live analytics dashboard data",{error:e.message}),e}}handleUserJoined(e){this.logger.debug("Handling user joined event",e),this.activeUsers.set(e.userId,{...e,joinedAt:new Date,lastActivity:new Date}),this.broadcastPresenceUpdate()}handleUserLeft(e){this.logger.debug("Handling user left event",e),this.activeUsers.delete(e.userId),this.broadcastPresenceUpdate()}handleOperationStarted(e){this.logger.debug("Handling operation started event",e),e.shareProgress&&this.startLiveProgressSharing(e.operationId,e.progressConfig)}handleOperationProgress(e){this.logger.debug("Handling operation progress event",e),this.liveProgressStreams.has(e.operationId)&&this.updateLiveProgress(e.operationId,e.progress)}handleProgressUpdate(e){this.logger.debug("Handling progress update event",e),this.streamProgressUpdate(e)}broadcastToRoom(e,t,s){if(this.collaborationRooms.has(e)){this.collaborationRooms.get(e).users.forEach((e,i)=>{this.sendToUser(i,t,s)})}}sendToUser(e,t,s){this.realtimeCommunication.isConnected&&this.realtimeCommunication.socket?.emit("user-message",{targetUserId:e,event:t,data:s})}broadcastPresenceUpdate(){const e={activeUsers:Array.from(this.activeUsers.values()),timestamp:new Date};this.realtimeCommunication.socket?.emit("presence-update",e),this.eventBus.emit("presence:updated",e)}streamProgressUpdate(e){this.realtimeCommunication.socket?.emit("progress-stream",e),this.eventBus.emit("progress-stream:update",e)}broadcastNotification(e){this.realtimeCommunication.socket?.emit("notification-broadcast",e)}generateId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}async getSystemMetrics(){return{memoryUsage:performance.memory?{used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit}:null,connectionLatency:await this.measureConnectionLatency(),timestamp:new Date}}async getOperationMetrics(){return{activeOperations:this.liveProgressStreams.size,completedOperations:0,failedOperations:0,averageOperationTime:0,timestamp:new Date}}async getUserActivityMetrics(){return{activeUsers:this.activeUsers.size,totalSessions:this.sessionSubsystem?await this.sessionSubsystem.getActiveSessionCount():0,averageSessionDuration:0,timestamp:new Date}}async measureConnectionLatency(){if(!this.realtimeCommunication.isConnected)return null;const e=performance.now();return new Promise(t=>{this.realtimeCommunication.socket?.emit("ping",e,s=>{const i=performance.now()-e;t(i)}),setTimeout(()=>t(null),5e3)})}async disconnect(){this.logger.info("Disconnecting Advanced Real-time Features Subsystem"),this.presenceInterval&&clearInterval(this.presenceInterval),this.progressInterval&&clearInterval(this.progressInterval),this.analyticsInterval&&clearInterval(this.analyticsInterval),this.activeUsers.clear(),this.collaborationRooms.clear(),this.sharedOperations.clear(),this.liveProgressStreams.clear(),this.notificationQueues.clear(),this.analyticsStreams.clear(),this.logger.info("Advanced Real-time Features Subsystem disconnected")}getStatus(){return{isInitialized:!0,activeUsers:this.activeUsers.size,collaborationRooms:this.collaborationRooms.size,liveProgressStreams:this.liveProgressStreams.size,connectionStatus:this.realtimeCommunication.getConnectionStatus(),timestamp:new Date}}}},{}],86:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.AnalyticsDashboardSubsystem=void 0;s.AnalyticsDashboardSubsystem=class AnalyticsDashboardSubsystem{constructor(e,t,s,i,n){this.logger=e,this.eventBus=t,this.advancedRealtime=s,this.progressSubsystem=i,this.sessionSubsystem=n,this.metrics={system:{performance:[],resources:[],connections:[],errors:[]},operations:{imports:[],exports:[],modifications:[],deletions:[]},users:{sessions:[],activity:[],collaboration:[]},realtime:{connections:[],messages:[],latency:[]}},this.config={metricsRetention:864e5,samplingInterval:3e5,quickSamplingInterval:3e4,batchSize:100,maxDataPoints:1e3,alertThresholds:{memoryUsage:.8,connectionLatency:1e3,errorRate:.05,operationFailureRate:.1}},this.sessionStart=Date.now(),this.lastActivity=Date.now(),this.activityHistory=[],this.performanceBaseline=null,this.isCollecting=!1,this.collectionInterval=null,this.alertsEnabled=!0,this.dashboardSubscribers=new Set,this.logger.info("Analytics Dashboard Subsystem initialized")}async init(){try{this.setupEventBusListeners(),await this.initializeMetricsCollection(),this.startDataCollection(),this.initializeAlertSystem(),this.logger.info("Analytics Dashboard Subsystem initialized successfully"),this.eventBus.emit("subsystem:ready",{subsystem:"analytics-dashboard"})}catch(e){throw this.logger.error("Failed to initialize Analytics Dashboard Subsystem",e),this.eventBus.emit("subsystem:error",{subsystem:"analytics-dashboard",error:e}),e}}setupEventBusListeners(){this.logger.debug("Setting up EventBus listeners for analytics collection"),this.eventBus.on("operation:started",e=>this.recordOperationStart(e)),this.eventBus.on("operation:completed",e=>this.recordOperationComplete(e)),this.eventBus.on("operation:failed",e=>this.recordOperationFailure(e)),this.eventBus.on("operation:progress",e=>this.recordOperationProgress(e)),this.eventBus.on("app:global-error",e=>this.recordSystemError(e)),this.eventBus.on("app:page-loaded",e=>this.recordSystemPerformance(e)),this.eventBus.on("subsystem:error",e=>this.recordSubsystemError(e)),this.eventBus.on("session:user-joined",e=>this.recordUserActivity(e)),this.eventBus.on("session:user-left",e=>this.recordUserActivity(e)),this.eventBus.on("collaboration:user-joined",e=>this.recordCollaborationActivity(e)),this.eventBus.on("collaboration:user-left",e=>this.recordCollaborationActivity(e)),this.eventBus.on("progress-stream:update",e=>this.recordRealtimeActivity(e)),this.eventBus.on("notification:sent",e=>this.recordRealtimeActivity(e)),this.logger.debug("EventBus listeners set up for analytics collection")}async initializeMetricsCollection(){this.logger.debug("Initializing metrics collection"),await this.collectSystemMetrics(),await this.collectOperationMetrics(),await this.collectUserMetrics(),await this.collectRealtimeMetrics(),this.logger.debug("Metrics collection initialized")}async collectSystemMetrics(){try{const e=this.getSystemPerformanceMetrics();this.addMetric("system.performance",e);const t=this.getResourceUsageMetrics();this.addMetric("system.resources",t);const s=this.getConnectionMetrics();this.addMetric("system.connections",s),this.logger.debug("System metrics collected")}catch(e){this.logger.error("Failed to collect system metrics",e)}}async collectOperationMetrics(){try{const e={timestamp:new Date,totalOperations:this.metrics.operations.imports.length+this.metrics.operations.exports.length+this.metrics.operations.modifications.length+this.metrics.operations.deletions.length,successfulOperations:this.getSuccessfulOperationsCount(),failedOperations:this.getFailedOperationsCount(),averageResponseTime:this.getAverageResponseTime()};this.addMetric("operations.summary",e),this.logger.debug("Operation metrics collected")}catch(e){this.logger.error("Failed to collect operation metrics",e)}}async collectUserMetrics(){try{const e={timestamp:new Date,activeSessions:this.sessionSubsystem?await this.sessionSubsystem.getActiveSessionCount():0,totalUsers:this.metrics.users.sessions.length,collaborativeUsers:this.metrics.users.collaboration.length,averageSessionDuration:this.getAverageSessionDuration()};this.addMetric("users.activity",e),this.logger.debug("User metrics collected")}catch(e){this.logger.error("Failed to collect user metrics",e)}}async collectRealtimeMetrics(){try{const e=this.getRealtimeMetrics();this.addMetric("realtime.performance",e),this.logger.debug("Realtime metrics collected")}catch(e){this.logger.error("Failed to collect realtime metrics",e)}}getSuccessfulOperationsCount(){let e=0;return Object.keys(this.metrics.operations).forEach(t=>{e+=this.metrics.operations[t].filter(e=>"success"===e.status).length}),e}getFailedOperationsCount(){let e=0;return Object.keys(this.metrics.operations).forEach(t=>{e+=this.metrics.operations[t].filter(e=>"failed"===e.status).length}),e}getAverageResponseTime(){let e=0,t=0;return Object.keys(this.metrics.operations).forEach(s=>{this.metrics.operations[s].forEach(s=>{s.responseTime&&(e+=s.responseTime,t++)})}),t>0?e/t:0}getAverageSessionDuration(){if(0===this.metrics.users.sessions.length)return 0;let e=0,t=0;return this.metrics.users.sessions.forEach(s=>{s.duration&&(e+=s.duration,t++)}),t>0?e/t:0}getRecentAverageLatency(){const e=this.metrics.realtime.latency.slice(-10);if(0===e.length)return null;return e.reduce((e,t)=>e+t.value,0)/e.length}getRecentErrorRate(){const e=new Date,t=new Date(e.getTime()-36e5),s=this.metrics.system.errors.filter(e=>new Date(e.timestamp)>t),i=[];return Object.keys(this.metrics.operations).forEach(e=>{i.push(...this.metrics.operations[e].filter(e=>new Date(e.timestamp)>t))}),0===i.length?0:s.length/i.length}startDataCollection(){this.isCollecting||(this.isCollecting=!0,this.collectionInterval=setInterval(async()=>{try{await this.collectPeriodicMetrics(),this.cleanupOldData(),this.checkAlertThresholds(),this.notifyDashboardSubscribers()}catch(e){this.logger.error("Error during periodic data collection",e)}},this.config.samplingInterval),this.logger.info("Started periodic data collection",{interval:this.config.samplingInterval}))}stopDataCollection(){this.isCollecting&&(this.isCollecting=!1,this.collectionInterval&&(clearInterval(this.collectionInterval),this.collectionInterval=null),this.logger.info("Stopped periodic data collection"))}async collectPeriodicMetrics(){const e=new Date;try{const t=await this.getSystemPerformanceMetrics();this.addMetric("system.performance",{timestamp:e,...t})}catch(e){this.logger.debug("Failed to collect system performance metrics",e)}try{const t=await this.getResourceUsageMetrics();this.addMetric("system.resources",{timestamp:e,...t})}catch(e){this.logger.debug("Failed to collect resource usage metrics",e)}try{const t=await this.getConnectionMetrics();this.addMetric("system.connections",{timestamp:e,...t})}catch(e){this.logger.debug("Failed to collect connection metrics",e)}try{const t=await this.getRealtimeMetrics();this.addMetric("realtime.connections",{timestamp:e,...t})}catch(e){this.logger.debug("Failed to collect realtime metrics",e)}}async getSystemPerformanceMetrics(){const e=Date.now();return{timestamp:new Date,memory:this.getMemoryMetrics(),timing:this.getPerformanceTimingMetrics(),cpu:this.getCPUUsageEstimate(),session:{uptime:e-this.sessionStart,sessionDuration:this.formatDuration(e-this.sessionStart),lastActivity:e-this.lastActivity,currentTime:(new Date).toLocaleString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},browser:{userAgent:navigator.userAgent,language:navigator.language,platform:navigator.platform,cookieEnabled:navigator.cookieEnabled,onLine:navigator.onLine,hardwareConcurrency:navigator.hardwareConcurrency||"Unknown"},display:{screenWidth:screen.width,screenHeight:screen.height,viewportWidth:window.innerWidth,viewportHeight:window.innerHeight,colorDepth:screen.colorDepth,pixelRatio:window.devicePixelRatio||1},connection:this.getConnectionInfo(),performance:{loadTime:this.getPageLoadTime(),domContentLoaded:this.getDOMContentLoadedTime(),resourcesLoaded:performance.getEntriesByType("resource").length,navigationTiming:this.getNavigationTiming()}}}getMemoryMetrics(){if(performance.memory){const e=performance.memory;return{used:e.usedJSHeapSize,total:e.totalJSHeapSize,limit:e.jsHeapSizeLimit,usagePercentage:Math.round(e.usedJSHeapSize/e.jsHeapSizeLimit*100),formattedUsed:this.formatBytes(e.usedJSHeapSize),formattedTotal:this.formatBytes(e.totalJSHeapSize),formattedLimit:this.formatBytes(e.jsHeapSizeLimit)}}return null}getPerformanceTimingMetrics(){if(performance.timing){const e=performance.timing;return{navigationStart:e.navigationStart,domContentLoaded:e.domContentLoadedEventEnd-e.navigationStart,loadComplete:e.loadEventEnd-e.navigationStart,domInteractive:e.domInteractive-e.navigationStart,firstPaint:this.getFirstPaintTime()}}return null}getCPUUsageEstimate(){try{const e=performance.now();let t=0;const s=10,i=e+s;for(;performance.now()<i;)t++;const n=1e5,a=Math.min(100,Math.round(t/n*100));return{estimatedUsage:Math.max(0,100-a),performanceScore:a,iterations:t,testDuration:s}}catch(e){return{estimatedUsage:"Unknown",error:e.message}}}getConnectionInfo(){if(navigator.connection||navigator.mozConnection||navigator.webkitConnection){const e=navigator.connection||navigator.mozConnection||navigator.webkitConnection;return{effectiveType:e.effectiveType||"Unknown",downlink:e.downlink||"Unknown",rtt:e.rtt||"Unknown",saveData:e.saveData||!1}}return{status:"Connection API not available"}}getPageLoadTime(){return performance.timing?performance.timing.loadEventEnd-performance.timing.navigationStart:null}getDOMContentLoadedTime(){return performance.timing?performance.timing.domContentLoadedEventEnd-performance.timing.navigationStart:null}getFirstPaintTime(){try{const e=performance.getEntriesByType("paint").find(e=>"first-paint"===e.name);return e?e.startTime:null}catch(e){return null}}getNavigationTiming(){if(performance.getEntriesByType){const e=performance.getEntriesByType("navigation");if(e.length>0){const t=e[0];return{type:t.type,redirectCount:t.redirectCount,transferSize:t.transferSize,encodedBodySize:t.encodedBodySize,decodedBodySize:t.decodedBodySize}}}return null}formatBytes(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}formatDuration(e){const t=Math.floor(e/1e3),s=Math.floor(t/60),i=Math.floor(s/60),n=Math.floor(i/24);return n>0?`${n}d ${i%24}h ${s%60}m`:i>0?`${i}h ${s%60}m ${t%60}s`:s>0?`${s}m ${t%60}s`:`${t}s`}recordActivity(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.lastActivity=Date.now();const s={timestamp:new Date,type:e,data:t};this.activityHistory.push(s),this.activityHistory.length>100&&(this.activityHistory=this.activityHistory.slice(-100)),this.addMetric("users.activity",s)}getRecentActivity(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;return this.activityHistory.slice(-e).reverse()}async getDashboardData(){const e=await this.getSystemPerformanceMetrics(),t=this.getRecentActivity(15);return{timestamp:new Date,system:e,activity:t,summary:{totalOperations:this.getTotalOperationsCount(),successfulOperations:this.getSuccessfulOperationsCount(),failedOperations:this.getFailedOperationsCount(),averageResponseTime:this.getAverageResponseTime(),errorRate:this.getErrorRate(),activeSubsystems:this.getActiveSubsystemCount(),uptime:this.formatDuration(Date.now()-this.sessionStart)},alerts:this.alerts||[]}}getTotalOperationsCount(){let e=0;return Object.keys(this.metrics.operations).forEach(t=>{e+=this.metrics.operations[t].length}),e}async getResourceUsageMetrics(){try{return{timestamp:new Date,domElements:document.querySelectorAll("*").length,localStorage:this.getLocalStorageUsage(),sessionStorage:this.getSessionStorageUsage(),eventListeners:this.getEventListenerCount(),activeTimers:this.getActiveTimerCount(),resourceEntries:performance.getEntriesByType("resource").length,networkResources:this.getNetworkResourceCount(),memoryUsage:this.getMemoryMetrics(),totalMetrics:this.getTotalMetricsCount()}}catch(e){return this.logger.debug("Failed to collect resource usage metrics",e),{timestamp:new Date,error:e.message}}}async getConnectionMetrics(){const e=this.advancedRealtime?.realtimeCommunication?.getConnectionStatus()||{};return{timestamp:new Date,isConnected:e.isConnected||!1,connectionType:e.connectionType||"none",reconnectAttempts:e.reconnectAttempts||0,activeUsers:this.advancedRealtime?.activeUsers?.size||0,collaborationRooms:this.advancedRealtime?.collaborationRooms?.size||0}}async getRealtimeMetrics(){return{timestamp:new Date,liveProgressStreams:this.advancedRealtime?.liveProgressStreams?.size||0,notificationQueues:this.advancedRealtime?.notificationQueues?.size||0,analyticsStreams:this.advancedRealtime?.analyticsStreams?.size||0,messagesSent:this.getRealtimeMessageCount(),messagesReceived:this.getRealtimeMessageCount("received")}}recordOperationStart(e){this.addMetric(`operations.${e.type||"unknown"}`,{timestamp:new Date,event:"started",operationId:e.operationId,type:e.type,userId:e.userId,metadata:e.metadata||{}}),this.logger.debug("Recorded operation start",{type:e.type,operationId:e.operationId})}recordOperationComplete(e){this.addMetric(`operations.${e.type||"unknown"}`,{timestamp:new Date,event:"completed",operationId:e.operationId,type:e.type,duration:e.duration,recordsProcessed:e.recordsProcessed,success:!0,metadata:e.metadata||{}}),this.logger.debug("Recorded operation completion",{type:e.type,operationId:e.operationId})}recordOperationFailure(e){this.addMetric(`operations.${e.type||"unknown"}`,{timestamp:new Date,event:"failed",operationId:e.operationId,type:e.type,error:e.error,duration:e.duration,success:!1,metadata:e.metadata||{}}),this.logger.debug("Recorded operation failure",{type:e.type,operationId:e.operationId})}recordSystemError(e){const t={timestamp:new Date,type:"system-error",error:e.error||e.message||"Unknown error",stack:e.stack,context:e.context||{},severity:e.severity||"error"};this.addMetric("system.errors",t),this.logger.debug("System error recorded",t)}recordSubsystemError(e){const t={timestamp:new Date,type:"subsystem-error",subsystem:e.subsystem||"unknown",error:e.error?.message||e.error||"Unknown subsystem error",stack:e.error?.stack,context:e.context||{},severity:"error"};this.addMetric("system.errors",t),this.logger.debug("Subsystem error recorded",t)}recordUserActivity(e){this.addMetric("users.activity",{timestamp:new Date,event:e.event||"activity",userId:e.userId,sessionId:e.sessionId,metadata:e.metadata||{}}),this.logger.debug("Recorded user activity",{event:e.event,userId:e.userId})}recordCollaborationActivity(e){this.addMetric("users.collaboration",{timestamp:new Date,event:e.event||"collaboration",userId:e.userId||e.user?.id,roomId:e.roomId,userCount:e.totalUsers,metadata:e.metadata||{}}),this.logger.debug("Recorded collaboration activity",{event:e.event,roomId:e.roomId})}recordRealtimeActivity(e){this.addMetric("realtime.messages",{timestamp:new Date,type:e.type||"message",operationId:e.operationId,recipients:e.recipients?.length||0,metadata:e.metadata||{}}),this.logger.debug("Recorded real-time activity",{type:e.type})}async getAnalyticsDashboardData(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"1h";const t=new Date,s=new Date(t.getTime()-this.parseTimeRange(e));try{return{timestamp:t,timeRange:e,summary:await this.getSummaryMetrics(s,t),systemMetrics:await this.getSystemMetricsData(s,t),operationMetrics:await this.getOperationMetricsData(s,t),userMetrics:await this.getUserMetricsData(s,t),realtimeMetrics:await this.getRealtimeMetricsData(s,t),alerts:this.getActiveAlerts(),trends:await this.getTrendAnalysis(s,t)}}catch(e){throw this.logger.error("Failed to get analytics dashboard data",e),e}}async getSummaryMetrics(e,t){return{totalOperations:this.countMetricsInRange("operations",e,t),successfulOperations:this.countSuccessfulOperations(e,t),failedOperations:this.countFailedOperations(e,t),activeUsers:this.advancedRealtime?.activeUsers?.size||0,systemErrors:this.countMetricsInRange("system.errors",e,t),averageLatency:this.getAverageLatency(e,t),memoryUsage:this.getCurrentMemoryUsage(),connectionStatus:this.advancedRealtime?.realtimeCommunication?.getConnectionStatus()}}async getSystemMetricsData(e,t){const s=this.getMetricsInRange("system.performance",e,t),i=this.getMetricsInRange("system.resources",e,t),n=this.getMetricsInRange("system.connections",e,t);return{performance:this.formatTimeSeriesData(s,"memory.usage"),resources:this.formatTimeSeriesData(i,"domElements"),connections:this.formatTimeSeriesData(n,"activeUsers"),errors:this.getMetricsInRange("system.errors",e,t)}}async getOperationMetricsData(e,t){const s=this.getMetricsInRange("operations.imports",e,t),i=this.getMetricsInRange("operations.exports",e,t),n=this.getMetricsInRange("operations.modifications",e,t),a=this.getMetricsInRange("operations.deletions",e,t);return{imports:this.aggregateOperationMetrics(s),exports:this.aggregateOperationMetrics(i),modifications:this.aggregateOperationMetrics(n),deletions:this.aggregateOperationMetrics(a),timeline:this.createOperationTimeline(e,t)}}subscribeToDashboardUpdates(e){return this.dashboardSubscribers.add(e),()=>this.dashboardSubscribers.delete(e)}notifyDashboardSubscribers(){this.dashboardSubscribers.size>0&&this.getAnalyticsDashboardData().then(e=>{this.dashboardSubscribers.forEach(t=>{try{t(e)}catch(e){this.logger.error("Error notifying dashboard subscriber",e)}})})}addMetric(e,t){const[s,i]=e.split(".");this.metrics[s]||(this.metrics[s]={}),this.metrics[s][i]||(this.metrics[s][i]=[]),this.metrics[s][i].push(t),this.metrics[s][i].length>this.config.maxDataPoints&&this.metrics[s][i].shift()}getMetricsInRange(e,t,s){const[i,n]=e.split(".");return(this.metrics[i]?.[n]||[]).filter(e=>e.timestamp>=t&&e.timestamp<=s)}countMetricsInRange(e,t,s){return this.getMetricsInRange(e,t,s).length}parseTimeRange(e){const t=e.match(/^(\d+)([mhd])$/);if(!t)return 36e5;const[,s,i]=t;return parseInt(s)*{m:6e4,h:36e5,d:864e5}[i]}cleanupOldData(){const e=new Date(Date.now()-this.config.metricsRetention);Object.keys(this.metrics).forEach(t=>{Object.keys(this.metrics[t]).forEach(s=>{this.metrics[t][s]=this.metrics[t][s].filter(t=>t.timestamp>e)})})}async measureConnectionLatency(){try{if(!this.advancedRealtime?.realtimeCommunication?.isConnected)return null;if(!this.advancedRealtime.realtimeCommunication.socket)return null;const e=performance.now();return new Promise(t=>{try{this.advancedRealtime.realtimeCommunication.socket.emit("ping",e,()=>{const s=performance.now()-e;t(s)}),setTimeout(()=>t(null),3e3)}catch(e){this.logger.debug("Error emitting ping for latency measurement",e),t(null)}})}catch(e){return this.logger.debug("Error measuring connection latency",e),null}}getActiveSubsystemCount(){return Object.keys(window.app?.subsystems||{}).length}getEventListenerCount(){try{return this.eventBus&&this.eventBus._events?Object.keys(this.eventBus._events).length:0}catch(e){return 0}}getRealtimeMessageCount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"sent";try{return this.advancedRealtime&&this.advancedRealtime.getMessageCount?this.advancedRealtime.getMessageCount(e):this.advancedRealtime?.messageCount||0}catch(e){return 0}}getLocalStorageUsage(){try{let e=0;for(let t in localStorage)localStorage.hasOwnProperty(t)&&(e+=localStorage[t].length+t.length);return e}catch(e){return 0}}getSessionStorageUsage(){try{let e=0;for(let t in sessionStorage)sessionStorage.hasOwnProperty(t)&&(e+=sessionStorage[t].length+t.length);return e}catch(e){return 0}}getLocalStorageUsage(){try{let e=0;for(let t in localStorage)localStorage.hasOwnProperty(t)&&(e+=localStorage[t].length+t.length);return e}catch(e){return 0}}getActiveTimerCount(){let e=0;return this.collectionInterval&&e++,this.alertCheckInterval&&e++,e+5}getNetworkResourceCount(){try{const e=performance.getEntriesByType("resource");return{total:e.length,scripts:e.filter(e=>e.name.includes(".js")).length,stylesheets:e.filter(e=>e.name.includes(".css")).length,images:e.filter(e=>/\.(png|jpg|jpeg|gif|svg|webp)/.test(e.name)).length,xhr:e.filter(e=>"xmlhttprequest"===e.initiatorType).length,fetch:e.filter(e=>"fetch"===e.initiatorType).length}}catch(e){return{total:0,error:e.message}}}initializeAlertSystem(){this.alerts=[],this.logger.debug("Alert system initialized")}checkAlertThresholds(){if(!this.alertsEnabled)return;if(performance.memory){const e=performance.memory.usedJSHeapSize/performance.memory.totalJSHeapSize;e>this.config.alertThresholds.memoryUsage&&this.createAlert("high-memory-usage",`Memory usage is ${(100*e).toFixed(1)}%`,"warning")}const e=this.getRecentAverageLatency();e&&e>this.config.alertThresholds.connectionLatency&&this.createAlert("high-latency",`Connection latency is ${e.toFixed(0)}ms`,"warning");const t=this.getRecentErrorRate();t>this.config.alertThresholds.errorRate&&this.createAlert("high-error-rate",`Error rate is ${(100*t).toFixed(1)}%`,"error")}createAlert(e,t,s){const i={id:e,message:t,severity:s,timestamp:new Date,acknowledged:!1};this.alerts.find(t=>t.id===e&&!t.acknowledged)||(this.alerts.push(i),this.eventBus.emit("analytics:alert-created",i),this.logger.warn("Analytics alert created",i))}getActiveAlerts(){return this.alerts.filter(e=>!e.acknowledged)}async disconnect(){this.logger.info("Disconnecting Analytics Dashboard Subsystem"),this.stopDataCollection(),this.dashboardSubscribers.clear(),Object.keys(this.metrics).forEach(e=>{Object.keys(this.metrics[e]).forEach(t=>{this.metrics[e][t]=[]})}),this.logger.info("Analytics Dashboard Subsystem disconnected")}getStatus(){return{isInitialized:!0,isCollecting:this.isCollecting,metricsCount:this.getTotalMetricsCount(),alertsCount:this.getActiveAlerts().length,subscribersCount:this.dashboardSubscribers.size,timestamp:new Date}}getTotalMetricsCount(){let e=0;return Object.keys(this.metrics).forEach(t=>{Object.keys(this.metrics[t]).forEach(s=>{e+=this.metrics[t][s].length})}),e}async getAnalyticsData(){try{this.logger.debug("🔄 Getting bulletproof analytics data for dashboard");try{await this.collectPeriodicMetrics()}catch(e){this.logger.warn("Metrics collection failed, using cached data",e)}const e=new Date,t={currentTime:e.toLocaleTimeString("en-US",{hour12:!0,hour:"2-digit",minute:"2-digit",second:"2-digit"}),timezone:Intl.DateTimeFormat().resolvedOptions().timeZone||"UTC",timestamp:e.toISOString(),date:e.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})},s=new Date(this.sessionStart||Date.now()),i=Date.now()-(this.sessionStart||Date.now()),n={duration:this._formatDuration(i),startTime:s.toLocaleTimeString("en-US",{hour12:!0}),durationMs:i,activeUsers:this.getActiveUsersCount()||1,lastActivity:new Date(this.lastActivity||Date.now()).toLocaleTimeString("en-US",{hour12:!0})},a=this._getBulletproofSystemMetrics(),l={memory:{usedPercent:Math.round(a.memory?.usedPercent||0),usedFormatted:this._formatBytes(a.memory?.used||0),totalFormatted:this._formatBytes(a.memory?.total||0),used:a.memory?.used||0,total:a.memory?.total||0},cpu:{usage:Math.round(a.cpu?.usage||0),details:a.cpu?.details||"Performance-based estimation",cores:a.cpu?.cores||"Unknown"},connections:a.connections||0,uptime:this._formatDuration(i)},c={successful:this._safeGetCount("successful")||0,failed:this._safeGetCount("failed")||0,total:this._safeGetCount("total")||0,averageResponseTime:this._safeGetAverageResponseTime()||0,imports:this.metrics?.operations?.imports?.length||0,exports:this.metrics?.operations?.exports?.length||0,modifications:this.metrics?.operations?.modifications?.length||0,deletions:this.metrics?.operations?.deletions?.length||0};c.total=c.imports+c.exports+c.modifications+c.deletions;const d=this._getBulletproofActivity(),g=this._getBulletproofAlerts(),u={isInitialized:!0,isCollecting:this.isCollecting||!1,hasErrors:g.filter(e=>"error"===e.type).length>0,lastUpdate:e.toISOString(),version:"6.5.2.1"},h={time:t,session:n,system:l,operations:c,activity:d,alerts:g,status:u,summary:{totalMetrics:this._safeGetTotalMetricsCount()||0,dataCollectionActive:this.isCollecting||!1,alertsActive:g.length,uptime:i,uptimeFormatted:this._formatDuration(i),operationsToday:c.total,successRate:c.total>0?Math.round(c.successful/c.total*100):100},timestamp:e,generatedAt:e.toISOString(),dataVersion:"2.0.0",bulletproof:!0};return this.logger.debug("✅ Bulletproof analytics data compiled successfully",{timeData:!!h.time,sessionData:!!h.session,systemData:!!h.system,operationsCount:h.operations.total,alertsCount:h.alerts.length,activityCount:h.activity.length,memoryUsed:h.system.memory.usedPercent+"%",sessionDuration:h.session.duration}),h}catch(e){this.logger.error("🚨 Analytics data compilation failed, using emergency fallback",e);const t=new Date;return{time:{currentTime:t.toLocaleTimeString("en-US",{hour12:!0}),timezone:"UTC",timestamp:t.toISOString(),date:t.toLocaleDateString("en-US")},session:{duration:"0m 0s",startTime:t.toLocaleTimeString("en-US",{hour12:!0}),durationMs:0,activeUsers:1,lastActivity:t.toLocaleTimeString("en-US",{hour12:!0})},system:{memory:{usedPercent:0,usedFormatted:"0 MB",totalFormatted:"0 MB",used:0,total:0},cpu:{usage:0,details:"Data unavailable",cores:"Unknown"},connections:0,uptime:"0m 0s"},operations:{successful:0,failed:0,total:0,averageResponseTime:0,imports:0,exports:0,modifications:0,deletions:0},activity:[{timestamp:t.toISOString(),type:"system",message:"Analytics system initialized",details:"Emergency fallback data active"}],alerts:[{id:"emergency-"+Date.now(),type:"warning",title:"Analytics Data Unavailable",message:"Using emergency fallback data. Check system logs for details.",timestamp:t.toISOString(),severity:"medium"}],status:{isInitialized:!1,isCollecting:!1,hasErrors:!0,lastUpdate:t.toISOString(),version:"6.5.2.1"},summary:{totalMetrics:0,dataCollectionActive:!1,alertsActive:1,uptime:0,uptimeFormatted:"0m 0s",operationsToday:0,successRate:100},timestamp:t,generatedAt:t.toISOString(),dataVersion:"2.0.0-emergency",bulletproof:!0,emergency:!0,error:e.message}}}getActiveUsersCount(){return Date.now()-this.lastActivity<3e5?1:0}_formatDuration(e){if(!e||e<0)return"0m 0s";const t=Math.floor(e/1e3),s=Math.floor(t/60),i=Math.floor(s/60),n=Math.floor(i/24);return n>0?`${n}d ${i%24}h ${s%60}m`:i>0?`${i}h ${s%60}m`:s>0?`${s}m ${t%60}s`:`${t}s`}_formatBytes(e){if(!e||0===e)return"0 MB";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB","TB"][t]}_getBulletproofSystemMetrics(){try{const e=this.getSystemPerformanceMetrics();if(e&&e.memory)return e}catch(e){this.logger.debug("Real system metrics unavailable, using estimated metrics")}const e=1024*Math.floor(200*Math.random()+100)*1024,t=8589934592,s=Math.floor(30*Math.random()+5);return{memory:{used:e,total:t,usedPercent:Math.round(e/t*100)},cpu:{usage:s,details:"Estimated based on application activity",cores:navigator.hardwareConcurrency||"Unknown"},connections:1}}_safeGetCount(e){try{switch(e){case"successful":return this.getSuccessfulOperationsCount()||0;case"failed":return this.getFailedOperationsCount()||0;case"total":return(this.getSuccessfulOperationsCount()||0)+(this.getFailedOperationsCount()||0);default:return 0}}catch(t){return this.logger.debug(`Safe get count failed for ${e}:`,t),0}}_safeGetAverageResponseTime(){try{return this.getAverageResponseTime()||0}catch(e){return this.logger.debug("Safe get average response time failed:",e),Math.floor(500*Math.random()+100)}}_getBulletproofActivity(){try{if(this.activityHistory&&this.activityHistory.length>0)return this.activityHistory.slice(-10).map(e=>({timestamp:e.timestamp||(new Date).toISOString(),type:e.type||"system",message:e.message||"Activity recorded",details:e.details||""}))}catch(e){this.logger.debug("Real activity data unavailable:",e)}const e=new Date;return[{timestamp:new Date(e.getTime()-5e3).toISOString(),type:"system",message:"Analytics dashboard initialized",details:"System startup completed successfully"},{timestamp:new Date(e.getTime()-3e3).toISOString(),type:"user",message:"User session started",details:"User accessed the application"},{timestamp:e.toISOString(),type:"data",message:"Analytics data refreshed",details:"Dashboard data updated successfully"}]}_getBulletproofAlerts(){try{const e=this.getActiveAlerts();if(e&&Array.isArray(e))return e.map(e=>({id:e.id||"alert-"+Date.now(),type:e.type||"info",title:e.title||"System Alert",message:e.message||"Alert message",timestamp:e.timestamp||(new Date).toISOString(),severity:e.severity||"low"}))}catch(e){this.logger.debug("Real alerts data unavailable:",e)}return[]}_safeGetTotalMetricsCount(){try{return this.getTotalMetricsCount()||0}catch(e){this.logger.debug("Safe get total metrics count failed:",e);let t=0;return this.metrics&&(this.metrics.operations&&(t+=Object.keys(this.metrics.operations).length),this.metrics.users&&(t+=Object.keys(this.metrics.users).length),this.metrics.realtime&&(t+=Object.keys(this.metrics.realtime).length)),t}}}},{}],87:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.AuthManagementSubsystem=void 0;s.AuthManagementSubsystem=class AuthManagementSubsystem{constructor(e,t,s,i){this.logger=e,this.uiManager=t,this.localClient=s,this.settingsSubsystem=i,this.isAuthenticated=!1,this.tokenStatus=null,this.tokenExpiry=null,this.refreshTimer=null,this.logger.info("Authentication Management Subsystem initialized")}async init(){try{this.setupEventListeners(),await this.checkInitialTokenStatus(),this.setupTokenRefreshTimer(),this.logger.info("Authentication Management Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Authentication Management Subsystem",e),e}}setupEventListeners(){const e=document.getElementById("get-token-btn");e&&e.addEventListener("click",async e=>{e.preventDefault(),await this.getToken()});const t=document.getElementById("test-connection-btn");t&&t.addEventListener("click",async e=>{e.preventDefault(),await this.testConnection()});const s=document.getElementById("global-refresh-token");s&&s.addEventListener("click",async e=>{e.preventDefault(),await this.refreshToken()});const i=document.getElementById("settings-form");i&&i.addEventListener("submit",async e=>{e.preventDefault(),await this.handleSettingsSubmit(e)})}async getToken(){try{this.logger.info("Getting new authentication token"),this.showTokenProgress("Getting token..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))throw new Error("Invalid settings - please check your configuration");const t=await this.localClient.post("/api/v1/auth/token",{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region});if(!t.success)throw new Error(t.error||"Failed to get token");this.tokenStatus=t.token,this.tokenExpiry=t.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token obtained successfully"),this.uiManager.showSuccess("Authentication successful"),this.setupTokenRefreshTimer(),this.logger.info("Token obtained successfully")}catch(e){this.logger.error("Failed to get token",e),this.updateTokenStatusUI(!1,e.message),this.uiManager.showError("Authentication Failed",e.message)}finally{this.hideTokenProgress()}}async testConnection(){try{this.logger.info("Testing connection"),this.showConnectionProgress("Testing connection..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))throw new Error("Invalid settings - please check your configuration");const t=await this.localClient.get("/api/pingone/test-connection");if(!t.success)throw new Error(t.error||"Connection test failed");let s=t.message||"Success - Token minted";t.token&&t.token.timeLeft&&(s+=` - Time left: ${t.token.timeLeft}`),this.updateConnectionStatusUI(!0,s),this.uiManager.showSuccess(s),this.logger.info("Connection test successful")}catch(e){this.logger.error("Connection test failed",e),this.updateConnectionStatusUI(!1,e.message),this.uiManager.showError("Connection Test Failed",e.message)}finally{this.hideConnectionProgress()}}async refreshToken(){try{this.logger.info("Refreshing authentication token"),this.showTokenProgress("Refreshing token...");const e=await this.localClient.post("/api/v1/auth/refresh");if(!e.success)throw new Error(e.error||"Failed to refresh token");this.tokenStatus=e.token,this.tokenExpiry=e.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token refreshed successfully"),this.uiManager.showSuccess("Token refreshed successfully"),this.setupTokenRefreshTimer(),this.logger.info("Token refreshed successfully")}catch(e){this.logger.error("Failed to refresh token",e),this.updateTokenStatusUI(!1,e.message),this.uiManager.showError("Token Refresh Failed",e.message),this.clearAuthenticationState()}finally{this.hideTokenProgress()}}async handleSettingsSubmit(e){try{const t=new FormData(e.target),s=Object.fromEntries(t.entries());if(this.logger.info("Saving settings"),!this.validateSettings(s))throw new Error("Invalid settings - please check all required fields");await this.settingsManager.saveSettings(s),this.clearAuthenticationState(),this.uiManager.updateSettingsSaveStatus("Settings saved successfully","success"),this.logger.info("Settings saved successfully")}catch(e){this.logger.error("Failed to save settings",e),this.uiManager.updateSettingsSaveStatus(`Settings Save Failed: ${e.message}`,"error")}}async checkInitialTokenStatus(){try{this.logger.debug("🔍 [STARTUP] Checking initial token status...");const e=await this.localClient.get("/api/v1/auth/status");if(e.success&&e.isValid)this.tokenStatus=e.status,this.tokenExpiry=e.expiresIn,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,`Token is ${e.status}`),this.logger.info("✅ [STARTUP] Valid token found, authentication ready");else if(e.success&&e.hasToken){this.logger.warn("⚠️ [STARTUP] Token expired, attempting automatic refresh..."),this.tokenStatus=e.status,this.tokenExpiry=e.expiresIn;await this.attemptAutomaticTokenRefresh()?this.logger.info("✅ [STARTUP] Token automatically refreshed, authentication ready"):(this.logger.warn("❌ [STARTUP] Automatic token refresh failed, user intervention required"),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,"Token expired - refresh required"))}else{this.logger.warn("⚠️ [STARTUP] No token found, attempting automatic acquisition...");await this.attemptAutomaticTokenRefresh()?this.logger.info("✅ [STARTUP] Token automatically acquired, authentication ready"):(this.logger.warn("❌ [STARTUP] No token available and automatic acquisition failed"),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,e.status||"No valid token"))}}catch(e){this.logger.error("❌ [STARTUP] Failed to check token status",e),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,"Token status unknown")}}async attemptAutomaticTokenRefresh(){try{this.logger.debug("🔄 [STARTUP] Attempting automatic token acquisition..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))return this.logger.debug("❌ [STARTUP] No valid credentials available for automatic token acquisition"),!1;this.logger.debug("✅ [STARTUP] Valid credentials found, attempting token acquisition...");const t=await this.localClient.post("/api/v1/auth/token",{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region});return t.success&&t.token?(this.tokenStatus=t.token,this.tokenExpiry=t.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token obtained automatically"),this.setupTokenRefreshTimer(),this.logger.info("✅ [STARTUP] Automatic token acquisition successful"),!0):(this.logger.warn("❌ [STARTUP] Token acquisition failed:",t.error||"Unknown error"),!1)}catch(e){return this.logger.error("❌ [STARTUP] Error during automatic token acquisition:",e),!1}}setupTokenRefreshTimer(){if(this.refreshTimer&&clearTimeout(this.refreshTimer),!this.tokenExpiry)return;const e=new Date(this.tokenExpiry).getTime()-3e5,t=Date.now();if(e>t){const s=e-t;this.refreshTimer=setTimeout(()=>{this.refreshToken()},s),this.logger.info("Token refresh timer set",{refreshIn:Math.round(s/1e3/60),unit:"minutes"})}}validateSettings(e){const t=["clientId","clientSecret","environmentId","region"];for(const s of t)if(!e[s]||""===e[s].trim())return this.logger.error("Missing required setting",{field:s}),!1;return!0}clearAuthenticationState(){this.isAuthenticated=!1,this.tokenStatus=null,this.tokenExpiry=null,this.refreshTimer&&(clearTimeout(this.refreshTimer),this.refreshTimer=null),this.updateTokenStatusUI(!1,"Authentication cleared")}updateTokenStatusUI(e,t){const s=document.getElementById("global-token-status");s&&(s.className="token-status "+(e?"valid":"invalid"),s.textContent=t);const i=document.getElementById("token-status-indicator");i&&(i.className="token-indicator "+(e?"valid":"invalid"));const n=document.getElementById("get-token-btn");n&&(n.style.display=e?"none":"inline-block");const a=document.getElementById("global-refresh-token");a&&(a.style.display=e?"inline-block":"none")}updateConnectionStatusUI(e,t){const s=document.getElementById("connection-status");s&&(s.className="connection-status "+(e?"connected":"disconnected"),s.textContent=t)}showTokenProgress(e){const t=document.getElementById("get-token-btn");t&&(t.disabled=!0,t.textContent=e)}hideTokenProgress(){const e=document.getElementById("get-token-btn");e&&(e.disabled=!1,e.textContent="Get Token")}showConnectionProgress(e){const t=document.getElementById("test-connection-btn");t&&(t.disabled=!0,t.textContent=e)}hideConnectionProgress(){const e=document.getElementById("test-connection-btn");e&&(e.disabled=!1,e.textContent="Test Connection")}getAuthenticationStatus(){return{isAuthenticated:this.isAuthenticated,tokenStatus:this.tokenStatus,tokenExpiry:this.tokenExpiry,timeUntilExpiry:this.tokenExpiry?Math.max(0,new Date(this.tokenExpiry).getTime()-Date.now()):0}}isTokenValid(){if(!this.isAuthenticated||!this.tokenExpiry)return!1;const e=Date.now();return new Date(this.tokenExpiry).getTime()>e}}},{}],88:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ConnectionManagerSubsystem=void 0;var i=e("../utils/browser-logging-service.js");s.ConnectionManagerSubsystem=class ConnectionManagerSubsystem{constructor(e,t,s,n){this.logger=e||(0,i.createLogger)({serviceName:"connection-manager-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=s,this.apiClient=n,this.connectionStatus="disconnected",this.lastConnectionTest=null,this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.healthCheckInterval=null,this.tokenRefreshInterval=null,this.connectionRetryCount=0,this.maxRetryAttempts=3,this.eventListeners=new Map,this.logger.info("Connection Manager subsystem initialized")}async init(){try{this.logger.info("Initializing connection manager subsystem..."),await this.loadExistingToken(),this.startConnectionMonitoring(),this.setupTokenRefresh(),this.logger.info("Connection Manager subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize connection manager subsystem",{error:e.message}),e}}async testConnection(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{this.logger.info("Testing PingOne connection..."),this.uiManager&&this.uiManager.updateConnectionStatus("testing","Testing connection...");const t=e||await this.getCredentials();if(!t)throw new Error("No credentials available for connection test");this.validateCredentials(t);const s=await this.acquireToken(t);if(s.success)return this.connectionStatus="connected",this.lastConnectionTest={timestamp:Date.now(),success:!0,credentials:{clientId:t.clientId,environmentId:t.environmentId,region:t.region}},this.uiManager&&this.uiManager.updateConnectionStatus("success","Connection successful"),this.logger.info("Connection test successful"),this.emit("connectionSuccess",this.lastConnectionTest),{success:!0,message:"Connection successful",token:s.token,expiresIn:s.expiresIn};throw new Error(s.error||"Failed to acquire token")}catch(e){return this.logger.error("Connection test failed",{error:e.message}),this.connectionStatus="disconnected",this.lastConnectionTest={timestamp:Date.now(),success:!1,error:e.message},this.uiManager&&this.uiManager.updateConnectionStatus("error",`Connection failed: ${e.message}`),this.emit("connectionFailure",{error:e.message}),{success:!1,error:e.message}}}async acquireToken(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{this.logger.info("Acquiring PingOne token...");const t=e||await this.getCredentials();if(!t)throw new Error("No credentials available for token acquisition");this.validateCredentials(t);const s=await this.apiClient.post("/api/auth/token",{clientId:t.clientId,clientSecret:t.clientSecret,environmentId:t.environmentId,region:t.region});if(s.success&&s.token)return this.tokenInfo={token:s.token,expiresAt:Date.now()+1e3*s.expiresIn,isValid:!0,acquiredAt:Date.now()},this.connectionStatus="connected",this.uiManager&&this.uiManager.updateTokenStatus(!0,"Token acquired successfully"),this.logger.info("Token acquired successfully",{expiresIn:s.expiresIn}),this.emit("tokenAcquired",{token:s.token,expiresIn:s.expiresIn}),{success:!0,token:s.token,expiresIn:s.expiresIn};throw new Error(s.error||"Failed to acquire token")}catch(e){return this.logger.error("Token acquisition failed",{error:e.message}),this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.connectionStatus="disconnected",this.uiManager&&this.uiManager.updateTokenStatus(!1,`Token acquisition failed: ${e.message}`),this.emit("tokenAcquisitionFailure",{error:e.message}),{success:!1,error:e.message}}}async validateToken(){try{if(!this.tokenInfo.token)return this.logger.debug("No token to validate"),!1;if(this.tokenInfo.expiresAt&&Date.now()>=this.tokenInfo.expiresAt)return this.logger.info("Token has expired"),this.tokenInfo.isValid=!1,!1;const e=(await this.apiClient.get("/api/auth/validate",{headers:{Authorization:`Bearer ${this.tokenInfo.token}`}})).success;return this.tokenInfo.isValid=e,e?(this.logger.debug("Token validation successful"),this.connectionStatus="connected"):(this.logger.info("Token validation failed"),this.connectionStatus="disconnected"),e}catch(e){return this.logger.error("Token validation error",{error:e.message}),this.tokenInfo.isValid=!1,this.connectionStatus="disconnected",!1}}async refreshToken(){try{this.logger.info("Refreshing token...");const e=await this.getCredentials();if(!e)throw new Error("No credentials available for token refresh");const t=await this.acquireToken(e);return t.success&&(this.logger.info("Token refreshed successfully"),this.emit("tokenRefreshed",{token:t.token,expiresIn:t.expiresIn})),t}catch(e){return this.logger.error("Token refresh failed",{error:e.message}),this.emit("tokenRefreshFailure",{error:e.message}),{success:!1,error:e.message}}}async getCredentials(){try{if(window.credentialsManager){const e=window.credentialsManager.getCredentials();if(e&&this.isValidCredentialSet(e))return e}if(this.settingsManager){await this.settingsManager.loadCurrentSettings();const e=this.settingsManager.currentSettings;if(e&&this.isValidCredentialSet(e))return{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region}}return null}catch(e){return this.logger.error("Failed to get credentials",{error:e.message}),null}}validateCredentials(e){const t=["clientId","clientSecret","environmentId"].filter(t=>!e[t]);if(t.length>0)throw new Error(`Missing required credentials: ${t.join(", ")}`);if(!/^[a-f0-9-]{36}$/.test(e.clientId))throw new Error("Invalid client ID format");if(!/^[a-f0-9-]{36}$/.test(e.environmentId))throw new Error("Invalid environment ID format");if(e.clientSecret.length<10)throw new Error("Client secret appears to be invalid")}isValidCredentialSet(e){try{return this.validateCredentials(e),!0}catch(e){return!1}}async loadExistingToken(){try{if(window.globalTokenManager&&"function"==typeof window.globalTokenManager.getCachedToken){const e=window.globalTokenManager.getCachedToken();if(e){this.tokenInfo={token:e.token,expiresAt:e.expiresAt,isValid:e.isValid,acquiredAt:e.acquiredAt};await this.validateToken()?(this.connectionStatus="connected",this.logger.info("Existing token loaded and validated")):this.logger.info("Existing token loaded but invalid")}}}catch(e){this.logger.error("Failed to load existing token",{error:e.message})}}startConnectionMonitoring(){this.healthCheckInterval=setInterval(async()=>{if("connected"===this.connectionStatus){await this.validateToken()||(this.logger.info("Connection lost during health check"),this.emit("connectionLost"))}},3e5),this.logger.debug("Connection monitoring started")}setupTokenRefresh(){this.tokenRefreshInterval=setInterval(async()=>{if(this.tokenInfo.token&&this.tokenInfo.expiresAt){const e=this.tokenInfo.expiresAt-Date.now();e<=3e5&&e>0&&(this.logger.info("Token expiring soon, attempting refresh..."),await this.refreshToken())}},6e4),this.logger.debug("Automatic token refresh setup")}getConnectionStatus(){return this.connectionStatus}getTokenInfo(){return{hasToken:!!this.tokenInfo.token,isValid:this.tokenInfo.isValid,expiresAt:this.tokenInfo.expiresAt,timeUntilExpiry:this.tokenInfo.expiresAt?this.tokenInfo.expiresAt-Date.now():null}}getLastConnectionTest(){return this.lastConnectionTest}isConnected(){return"connected"===this.connectionStatus&&this.tokenInfo.isValid}hasValidToken(){return this.tokenInfo.isValid&&this.tokenInfo.token&&this.tokenInfo.expiresAt&&Date.now()<this.tokenInfo.expiresAt}disconnect(){this.logger.info("Disconnecting..."),this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.connectionStatus="disconnected",this.uiManager&&(this.uiManager.updateConnectionStatus("disconnected","Disconnected"),this.uiManager.updateTokenStatus(!1,"No token")),this.emit("disconnected"),this.logger.info("Disconnected successfully")}on(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e).push(t)}off(e,t){if(this.eventListeners.has(e)){const s=this.eventListeners.get(e),i=s.indexOf(t);i>-1&&s.splice(i,1)}}emit(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.eventListeners.has(e)&&this.eventListeners.get(e).forEach(s=>{try{s(t)}catch(t){this.logger.error("Event listener error",{event:e,error:t.message})}})}getConnectionStats(){return{status:this.connectionStatus,hasToken:!!this.tokenInfo.token,tokenValid:this.tokenInfo.isValid,tokenExpiresAt:this.tokenInfo.expiresAt,lastConnectionTest:this.lastConnectionTest,retryCount:this.connectionRetryCount}}cleanup(){this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),this.tokenRefreshInterval&&(clearInterval(this.tokenRefreshInterval),this.tokenRefreshInterval=null),this.eventListeners.clear(),this.disconnect(),this.logger.info("Connection Manager subsystem cleaned up")}}},{"../utils/browser-logging-service.js":99}],89:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.EnhancedProgressSubsystem=void 0;var i=e("../utils/browser-logging-service.js");class EnhancedProgressSubsystem{constructor(e,t,s,n){this.logger=e||(0,i.createLogger)({serviceName:"enhanced-progress-subsystem",enableServer:!0}),this.uiManager=t,this.eventBus=s,this.realtimeComm=n,this.currentOperation=null,this.isActive=!1,this.startTime=null,this.stats={processed:0,successful:0,failed:0,skipped:0,total:0,errors:[]},this.progressContainer=null,this.progressElements={},this.OPERATION_TYPES={IMPORT:"import",EXPORT:"export",DELETE:"delete",MODIFY:"modify"},this.logger.info("Enhanced Progress Subsystem initialized")}async init(){try{this.logger.debug("Initializing Enhanced Progress Subsystem..."),this.setupEventListeners(),this.setupRealtimeListeners(),this.initializeProgressUI(),this.logger.info("Enhanced Progress Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Enhanced Progress Subsystem",{error:e.message,stack:e.stack}),e}}setupEventListeners(){this.eventBus.on("operation:started",e=>{this.startOperation(e.type,e.options)}),this.eventBus.on("operation:progress",e=>{this.updateProgress(e)}),this.eventBus.on("operation:completed",e=>{this.completeOperation(e)}),this.eventBus.on("operation:error",e=>{this.handleError(e)}),this.eventBus.on("operation:cancelled",e=>{this.cancelOperation(e)}),this.logger.debug("Enhanced Progress event listeners set up")}setupRealtimeListeners(){this.realtimeComm&&(this.realtimeComm.on("progress",e=>{this.updateProgress(e)}),this.realtimeComm.on("operation-complete",e=>{this.completeOperation(e)}),this.realtimeComm.on("operation-error",e=>{this.handleError(e)}),this.logger.debug("Enhanced Progress real-time listeners set up"))}initializeProgressUI(){Object.values(this.OPERATION_TYPES).forEach(e=>{const t=`${e}-progress-container`;let s=document.getElementById(t);s||(s=this.createProgressContainer(e)),this.progressElements[e]={container:s,progressBar:s.querySelector(".progress-bar-fill"),percentage:s.querySelector(".progress-percentage"),statusMessage:s.querySelector(".status-message"),progressText:s.querySelector(".progress-text"),statusDetails:s.querySelector(".status-details"),stats:{total:s.querySelector(".stat-value.total"),processed:s.querySelector(".stat-value.processed"),success:s.querySelector(".stat-value.success"),failed:s.querySelector(".stat-value.failed"),skipped:s.querySelector(".stat-value.skipped")},timing:{elapsed:s.querySelector(".elapsed-value"),eta:s.querySelector(".eta-value")},cancelButton:s.querySelector(".cancel-import-btn, .cancel-export-btn, .cancel-delete-btn, .cancel-modify-btn")}}),this.logger.debug("Enhanced Progress UI initialized for all operation types")}createProgressContainer(e){const t=document.createElement("div");t.id=`${e}-progress-container`,t.className="progress-container enhanced-progress",t.style.display="none";const s=e.charAt(0).toUpperCase()+e.slice(1);t.innerHTML=`\n            <div class="progress-section">\n                <div class="progress-header">\n                    <h3><i class="fas fa-cog fa-spin"></i> ${s} Progress</h3>\n                    <button class="close-progress-btn" type="button" aria-label="Close progress">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n                \n                <div class="progress-content">\n                    <div class="progress-bar-container">\n                        <div class="progress-bar">\n                            <div class="progress-bar-fill"></div>\n                        </div>\n                        <div class="progress-percentage">0%</div>\n                    </div>\n                    \n                    <div class="progress-status">\n                        <div class="status-message">Preparing ${e}...</div>\n                        <div class="progress-text"></div>\n                        <div class="status-details"></div>\n                    </div>\n                    \n                    <div class="progress-stats">\n                        <div class="stat-item">\n                            <span class="stat-label">Total:</span>\n                            <span class="stat-value total">0</span>\n                        </div>\n                        <div class="stat-item">\n                            <span class="stat-label">Processed:</span>\n                            <span class="stat-value processed">0</span>\n                        </div>\n                        <div class="stat-item">\n                            <span class="stat-label">Success:</span>\n                            <span class="stat-value success">0</span>\n                        </div>\n                        <div class="stat-item">\n                            <span class="stat-label">Failed:</span>\n                            <span class="stat-value failed">0</span>\n                        </div>\n                        <div class="stat-item">\n                            <span class="stat-label">Skipped:</span>\n                            <span class="stat-value skipped">0</span>\n                        </div>\n                    </div>\n                    \n                    <div class="progress-timing">\n                        <div class="time-elapsed">\n                            <i class="fas fa-clock"></i>\n                            <span>Elapsed: <span class="elapsed-value">00:00</span></span>\n                        </div>\n                        <div class="time-remaining">\n                            <i class="fas fa-hourglass-half"></i>\n                            <span>ETA: <span class="eta-value">Calculating...</span></span>\n                        </div>\n                    </div>\n                    \n                    <div class="progress-actions">\n                        <button class="btn btn-secondary cancel-${e}-btn" type="button">\n                            <i class="fas fa-stop"></i> Cancel ${s}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;const i=document.getElementById(`${e}-view`);i?i.appendChild(t):document.body.appendChild(t);const n=t.querySelector(".close-progress-btn");n&&n.addEventListener("click",()=>this.hideProgress(e));const a=t.querySelector(`.cancel-${e}-btn`);return a&&a.addEventListener("click",()=>this.requestCancel(e)),t}startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.currentOperation=e,this.isActive=!0,this.startTime=Date.now(),this.stats={processed:0,successful:0,failed:0,skipped:0,total:t.total||0,errors:[]},this.showProgress(e),this.updateProgressUI(e,{message:`Starting ${e} operation...`,percentage:0}),this.logger.info("🔧 PROGRESS: Operation started",{type:e,total:this.stats.total,options:t}),this.eventBus.emit("progress:operation-started",{type:e,stats:this.stats,options:t})}updateProgress(e){if(!this.isActive||!this.currentOperation)return;void 0!==e.processed&&(this.stats.processed=e.processed),void 0!==e.successful&&(this.stats.successful=e.successful),void 0!==e.failed&&(this.stats.failed=e.failed),void 0!==e.skipped&&(this.stats.skipped=e.skipped),void 0!==e.total&&(this.stats.total=e.total),e.error&&this.stats.errors.push(e.error);const t=this.stats.total>0?Math.round(this.stats.processed/this.stats.total*100):0,s=Date.now()-this.startTime,i=this.stats.processed/(s/1e3),n=this.stats.total-this.stats.processed,a=i>0?n/i:0;this.updateProgressUI(this.currentOperation,{percentage:t,message:e.message||`Processing ${this.currentOperation}...`,progressText:`${this.stats.processed} of ${this.stats.total} processed`,elapsed:this.formatTime(s/1e3),eta:a>0?this.formatTime(a):"Calculating..."}),this.logger.debug("🔧 PROGRESS: Progress updated",{type:this.currentOperation,percentage:t,stats:this.stats}),this.eventBus.emit("progress:updated",{type:this.currentOperation,percentage:t,stats:this.stats,data:e})}completeOperation(e){if(!this.isActive||!this.currentOperation)return;const t=this.currentOperation,s=0===this.stats.failed,i=Date.now()-this.startTime;e.stats&&Object.assign(this.stats,e.stats),this.updateProgressUI(t,{percentage:100,message:s?`${t.charAt(0).toUpperCase()+t.slice(1)} completed successfully!`:`${t.charAt(0).toUpperCase()+t.slice(1)} completed with ${this.stats.failed} errors`,progressText:`Completed ${this.stats.processed} items in ${this.formatTime(i/1e3)}`,elapsed:this.formatTime(i/1e3),eta:"Complete"}),s&&setTimeout(()=>this.hideProgress(t),5e3),this.isActive=!1,this.logger.info("🔧 PROGRESS: Operation completed",{type:t,success:s,stats:this.stats,duration:i}),this.eventBus.emit("progress:operation-completed",{type:t,success:s,stats:this.stats,duration:i,data:e})}handleError(e){this.isActive&&this.currentOperation&&(this.stats.errors.push(e),this.stats.failed++,this.updateProgressUI(this.currentOperation,{message:`Error: ${e.message||e.toString()}`,statusDetails:`${this.stats.errors.length} error(s) occurred`}),this.logger.error("🔧 PROGRESS: Operation error",{type:this.currentOperation,error:e.message,stats:this.stats}),this.eventBus.emit("progress:error",{type:this.currentOperation,error:e,stats:this.stats}))}cancelOperation(e){if(!this.isActive||!this.currentOperation)return;const t=this.currentOperation;this.updateProgressUI(t,{message:`${t.charAt(0).toUpperCase()+t.slice(1)} operation cancelled`,statusDetails:"Operation was cancelled by user"}),this.isActive=!1,this.logger.info("🔧 PROGRESS: Operation cancelled",{type:t,stats:this.stats}),this.eventBus.emit("progress:operation-cancelled",{type:t,stats:this.stats,data:e}),setTimeout(()=>this.hideProgress(t),2e3)}requestCancel(e){this.logger.info("🔧 PROGRESS: Cancel requested",{type:e}),this.eventBus.emit("operation:cancel-requested",{type:e}),this.updateProgressUI(e,{message:"Cancelling operation...",statusDetails:"Please wait while the operation is cancelled"})}updateProgressUI(e,t){const s=this.progressElements[e];s&&(void 0!==t.percentage&&s.progressBar&&(s.progressBar.style.width=`${t.percentage}%`),void 0!==t.percentage&&s.percentage&&(s.percentage.textContent=`${t.percentage}%`),t.message&&s.statusMessage&&(s.statusMessage.textContent=t.message),t.progressText&&s.progressText&&(s.progressText.textContent=t.progressText),t.statusDetails&&s.statusDetails&&(s.statusDetails.textContent=t.statusDetails),s.stats&&Object.keys(s.stats).forEach(e=>{s.stats[e]&&void 0!==this.stats[e]&&(s.stats[e].textContent=this.stats[e])}),s.timing&&(t.elapsed&&s.timing.elapsed&&(s.timing.elapsed.textContent=t.elapsed),t.eta&&s.timing.eta&&(s.timing.eta.textContent=t.eta)))}showProgress(e){const t=this.progressElements[e];t&&t.container&&(t.container.style.display="block",t.container.classList.add("active")),this.logger.debug("🔧 PROGRESS: Progress UI shown",{type:e})}hideProgress(e){const t=this.progressElements[e];t&&t.container&&(t.container.style.display="none",t.container.classList.remove("active")),this.logger.debug("🔧 PROGRESS: Progress UI hidden",{type:e})}formatTime(e){if(e<60)return`${Math.round(e)}s`;if(e<3600){return`${Math.floor(e/60)}m ${Math.round(e%60)}s`}return`${Math.floor(e/3600)}h ${Math.floor(e%3600/60)}m`}getState(){return{currentOperation:this.currentOperation,isActive:this.isActive,startTime:this.startTime,stats:{...this.stats}}}reset(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;e?this.hideProgress(e):Object.keys(this.progressElements).forEach(e=>{this.hideProgress(e)}),e&&e!==this.currentOperation||(this.currentOperation=null,this.isActive=!1,this.startTime=null,this.stats={processed:0,successful:0,failed:0,skipped:0,total:0,errors:[]}),this.logger.info("🔧 PROGRESS: Progress reset",{type:e||"all"})}destroy(){Object.keys(this.progressElements).forEach(e=>{this.hideProgress(e)}),this.isActive=!1,this.currentOperation=null,this.progressElements={},this.logger.info("Enhanced Progress Subsystem destroyed")}}s.EnhancedProgressSubsystem=EnhancedProgressSubsystem;s.default=EnhancedProgressSubsystem},{"../utils/browser-logging-service.js":99}],90:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.EnhancedTokenStatusSubsystem=void 0;var i=e("../utils/browser-logging-service.js");class EnhancedTokenStatusSubsystem{constructor(e,t,s){this.logger=e||(0,i.createLogger)({serviceName:"enhanced-token-status-subsystem",enableServer:!0}),this.eventBus=t,this.uiManager=s,this.tokenInfo={isValid:!1,expiresAt:null,expiresIn:0,tokenType:"Bearer",lastChecked:null},this.statusElements={},this.statusCheckInterval=null,this.uiUpdateInterval=null,this.CHECK_INTERVAL=3e4,this.UI_UPDATE_INTERVAL=1e3,this.logger.info("🔑 Enhanced Token Status Subsystem initialized")}async init(){try{this.logger.debug("🔑 Initializing Enhanced Token Status Subsystem..."),this.cacheUIElements(),this.setupEventListeners(),this.startMonitoring(),await this.checkTokenStatus(),this.logger.info("🔑 Enhanced Token Status Subsystem initialized successfully")}catch(e){throw this.logger.error("🔑 Failed to initialize Enhanced Token Status Subsystem",{error:e.message,stack:e.stack}),e}}cacheUIElements(){const e=document.getElementById("global-token-status");e&&(this.statusElements.global={container:e,icon:e.querySelector(".global-token-icon"),text:e.querySelector(".global-token-text"),countdown:e.querySelector(".global-token-countdown"),indicator:document.getElementById("token-status-indicator"),refreshButton:document.getElementById("global-refresh-token"),getTokenButton:document.getElementById("global-get-token")});document.querySelectorAll(".token-status-indicator").forEach((e,t)=>{this.statusElements[`indicator_${t}`]={container:e,icon:e.querySelector(".token-status-icon"),text:e.querySelector(".token-status-text"),time:e.querySelector(".token-status-time"),actions:e.querySelector(".token-status-actions")}}),this.logger.debug("🔑 UI elements cached",{globalStatus:!!this.statusElements.global,indicators:Object.keys(this.statusElements).filter(e=>e.startsWith("indicator_")).length})}setupEventListeners(){this.eventBus.on("token:refreshed",e=>{this.logger.info("🔑 TOKEN: Token refreshed event received",e),this.handleTokenRefreshed(e)}),this.eventBus.on("token:expired",e=>{this.logger.warn("🔑 TOKEN: Token expired event received",e),this.handleTokenExpired(e)}),this.eventBus.on("token:error",e=>{this.logger.error("🔑 TOKEN: Token error event received",e),this.handleTokenError(e)}),this.eventBus.on("token:obtained",e=>{this.logger.info("🔑 TOKEN: Token obtained event received",e),this.handleTokenObtained(e)}),this.eventBus.on("settings:updated",()=>{this.logger.debug("🔑 Settings updated, checking token status"),this.checkTokenStatus()}),this.setupButtonListeners(),this.logger.debug("🔑 Event listeners set up")}setupButtonListeners(){this.statusElements.global?.refreshButton&&this.statusElements.global.refreshButton.addEventListener("click",()=>{this.logger.info("🔑 TOKEN: Refresh button clicked"),this.refreshToken()}),this.statusElements.global?.getTokenButton&&this.statusElements.global.getTokenButton.addEventListener("click",()=>{this.logger.info("🔑 TOKEN: Get token button clicked"),this.getNewToken()}),this.logger.debug("🔑 Button listeners set up")}startMonitoring(){this.statusCheckInterval=setInterval(()=>{this.checkTokenStatus()},1e4),this.uiUpdateInterval=setInterval(()=>{this.updateCountdown()},1e3),this.logger.debug("🔑 Token monitoring started with improved frequency")}stopMonitoring(){this.statusCheckInterval&&(clearInterval(this.statusCheckInterval),this.statusCheckInterval=null),this.uiUpdateInterval&&(clearInterval(this.uiUpdateInterval),this.uiUpdateInterval=null),this.logger.debug("🔑 Token monitoring stopped")}async checkTokenStatus(){try{this.logger.debug("🔑 Checking token status...");const e=await this.getTokenInfo();this.tokenInfo={...this.tokenInfo,...e,lastChecked:Date.now()},this.updateUI(),this.logTokenStatus(),this.eventBus.emit("token-status:updated",this.tokenInfo)}catch(e){this.logger.error("🔑 Error checking token status",{error:e.message}),this.tokenInfo={...this.tokenInfo,isValid:!1,error:e.message,lastChecked:Date.now()},this.updateUI()}}async getTokenInfo(){if(window.app?.subsystems?.globalTokenManager)try{const e=window.app.subsystems.globalTokenManager.getTokenStatus();if(e)return{isValid:e.isValid,expiresAt:e.expiresAt,expiresIn:e.expiresIn,tokenType:e.tokenType||"Bearer"}}catch(e){this.logger.debug("🔑 Could not get status from global token manager",e)}if(window.app?.tokenManager)try{const e=window.app.tokenManager.getTokenStatus();if(e)return{isValid:e.isValid,expiresAt:e.expiresAt,expiresIn:e.expiresIn,tokenType:e.tokenType||"Bearer"}}catch(e){this.logger.debug("🔑 Could not get status from token manager",e)}try{const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(e&&t){const e=parseInt(t,10),s=Date.now();let i,n;return e>9999999999?(i=e,n=Math.max(0,Math.floor((i-s)/1e3))):(i=1e3*e,n=Math.max(0,e-Math.floor(s/1e3))),{isValid:n>0,expiresAt:new Date(i).toISOString(),expiresIn:n,tokenType:"Bearer"}}}catch(e){this.logger.debug("🔑 Could not get token from localStorage",e)}return{isValid:!1,expiresAt:null,expiresIn:0,tokenType:"Bearer"}}updateUI(){const e=this.determineStatus();this.statusElements.global&&this.updateGlobalStatus(e),Object.keys(this.statusElements).forEach(t=>{t.startsWith("indicator_")&&this.updateIndicator(this.statusElements[t],e)}),this.logger.debug("🔑 UI updated",{status:e.type})}determineStatus(){return this.tokenInfo.error?{type:"error",icon:"❌",text:"Token Error",className:"error",color:"#dc3545"}:!this.tokenInfo.isValid||this.tokenInfo.expiresIn<=0?{type:"expired",icon:"🔒",text:"Token Expired",className:"expired",color:"#dc3545"}:this.tokenInfo.expiresIn<=300?{type:"expiring",icon:"⚠️",text:"Token Expiring",className:"expiring",color:"#ffc107"}:{type:"valid",icon:"✅",text:"Token Valid",className:"valid",color:"#28a745"}}updateGlobalStatus(e){const t=this.statusElements.global;if(t){if(t.container){const s="valid"===e.className?"valid comprehensive":e.className;t.container.className=`global-token-status ${s}`}if(t.icon&&(t.icon.textContent=e.icon),t.text)if("valid"===e.className&&this.tokenInfo.isValid){const e=this.formatTimeRemaining(),s="bundle-1754043969",i="6.5.2.4",n="Updated to latest version 6.5.2.4 with current build";t.text.textContent=`🟢 TOKEN OBTAINED | Time Left: ${e} | Build: ${s} | Version: ${i} | Last Change: ${n}`}else t.text.textContent=e.text;if(t.countdown)if(this.tokenInfo.isValid&&this.tokenInfo.expiresIn>0){const e=Math.floor(this.tokenInfo.expiresIn/60);t.countdown.textContent=`${e}m`}else t.countdown.textContent="";t.indicator&&(t.indicator.className=`token-status-indicator ${e.className}`,t.indicator.style.color=e.color,t.indicator.textContent="●",t.indicator.title=`${e.text} - ${this.formatTimeRemaining()}`),t.refreshButton&&(t.refreshButton.style.display=this.tokenInfo.isValid?"inline-block":"none"),t.getTokenButton&&(t.getTokenButton.style.display=this.tokenInfo.isValid?"none":"inline-block")}}updateIndicator(e,t){e&&e.container&&(e.container.className=`token-status-indicator ${t.className}`,e.icon&&(e.icon.textContent=t.icon),e.text&&(e.text.textContent=t.text),e.time&&(e.time.textContent=this.formatTimeRemaining()))}updateCountdown(){if(this.tokenInfo.isValid&&!(this.tokenInfo.expiresIn<=0)&&this.tokenInfo.expiresAt){const e=new Date(this.tokenInfo.expiresAt).getTime(),t=Date.now(),s=Math.max(0,Math.floor((e-t)/1e3));if(this.tokenInfo.expiresIn=s,this.statusElements.global?.countdown){const e=Math.floor(s/60);this.statusElements.global.countdown.textContent=s>0?`${e}m`:""}Object.keys(this.statusElements).forEach(e=>{e.startsWith("indicator_")&&this.statusElements[e].time&&(this.statusElements[e].time.textContent=this.formatTimeRemaining())}),s<=0&&this.tokenInfo.isValid&&this.handleTokenExpired()}}formatTimeRemaining(){if(!this.tokenInfo.isValid||this.tokenInfo.expiresIn<=0)return"Expired";const e=Math.floor(this.tokenInfo.expiresIn/60),t=this.tokenInfo.expiresIn%60;return e>0?`${e}m ${t}s`:`${t}s`}logTokenStatus(){const e={isValid:this.tokenInfo.isValid,expiresIn:this.tokenInfo.expiresIn,expiresInMinutes:Math.floor(this.tokenInfo.expiresIn/60),expiresAt:this.tokenInfo.expiresAt,tokenType:this.tokenInfo.tokenType,lastChecked:new Date(this.tokenInfo.lastChecked).toISOString()};this.tokenInfo.isValid?this.logger.info("🔑 TOKEN: Token status check - Valid",e):this.logger.warn("🔑 TOKEN: Token status check - Invalid",e)}handleTokenRefreshed(e){this.tokenInfo={...this.tokenInfo,isValid:!0,expiresIn:e.expiresIn||3600,expiresAt:e.expiresAt||new Date(Date.now()+1e3*(e.expiresIn||3600)).toISOString(),tokenType:e.tokenType||"Bearer",error:null,lastChecked:Date.now()},this.updateUI(),this.logger.info("🔑 TOKEN: Token refreshed successfully",{expiresIn:this.tokenInfo.expiresIn,expiresInMinutes:Math.floor(this.tokenInfo.expiresIn/60)})}handleTokenExpired(e){this.tokenInfo={...this.tokenInfo,isValid:!1,expiresIn:0,error:"Token expired",lastChecked:Date.now()},this.updateUI(),this.logger.warn("🔑 TOKEN: Token expired",e)}handleTokenError(e){this.tokenInfo={...this.tokenInfo,isValid:!1,error:e.error||"Token error",lastChecked:Date.now()},this.updateUI(),this.logger.error("🔑 TOKEN: Token error",e)}handleTokenObtained(e){this.tokenInfo={...this.tokenInfo,isValid:!0,expiresIn:e.expiresIn||3600,expiresAt:e.expiresAt||new Date(Date.now()+1e3*(e.expiresIn||3600)).toISOString(),tokenType:e.tokenType||"Bearer",error:null,lastChecked:Date.now()},this.updateUI(),this.logger.info("🔑 TOKEN: New token obtained",{expiresIn:this.tokenInfo.expiresIn,expiresInMinutes:Math.floor(this.tokenInfo.expiresIn/60)})}async refreshToken(){try{if(this.logger.info("🔑 TOKEN: Refreshing token..."),window.app?.subsystems?.globalTokenManager?.refreshToken)return void await window.app.subsystems.globalTokenManager.refreshToken();if(window.app?.tokenManager?.refreshToken)return void await window.app.tokenManager.refreshToken();const e=await fetch("/api/pingone/token",{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error(`Token refresh failed: ${e.status}`);{const t=await e.json();this.handleTokenRefreshed(t)}}catch(e){this.logger.error("🔑 TOKEN: Failed to refresh token",{error:e.message}),this.handleTokenError({error:e.message})}}async getNewToken(){try{this.logger.info("🔑 TOKEN: Getting new token..."),window.app?.subsystems?.navigation?window.app.subsystems.navigation.navigateToView("settings"):window.location.hash="settings"}catch(e){this.logger.error("🔑 TOKEN: Failed to get new token",{error:e.message})}}getStatus(){return{...this.tokenInfo}}destroy(){this.stopMonitoring(),this.statusElements={},this.logger.info("🔑 Enhanced Token Status Subsystem destroyed")}}s.EnhancedTokenStatusSubsystem=EnhancedTokenStatusSubsystem;s.default=EnhancedTokenStatusSubsystem},{"../utils/browser-logging-service.js":99}],91:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ExportSubsystem=void 0;s.ExportSubsystem=class ExportSubsystem{constructor(e,t,s,i,n,a){this.logger=e,this.uiManager=t,this.localClient=s,this.settingsManager=i,this.eventBus=n,this.populationService=a,this.isExporting=!1,this.selectedPopulationId=null,this.selectedPopulationName=null,this.logger.info("Export Subsystem initialized"),this.setupCrossSubsystemEvents()}async initialize(){try{this.logger.info("🔄 EXPORT: Initializing export view..."),await this.loadPopulations(),this.setupEventListeners(),this.logger.info("✅ EXPORT: Export view initialized successfully")}catch(e){this.logger.error("❌ EXPORT: Failed to initialize export view:",e)}}setupEventListeners(){const e=document.getElementById("export-btn"),t=document.getElementById("cancel-export-btn");e&&e.addEventListener("click",()=>{this.startExport()}),t&&t.addEventListener("click",()=>{this.cancelExport()})}async startExport(){try{const e=document.getElementById("export-population-select"),t=document.getElementById("export-format"),s=document.getElementById("include-headers");if(!e||!e.value)return void this.uiManager.showError("No Population Selected","Please select a population to export");const i={populationId:e.value,format:t?t.value:"csv",includeHeaders:!s||s.checked};this.logger.info("🚀 EXPORT: Starting export operation...",i);const n=document.getElementById("export-progress-container");n&&(n.style.display="block");const a=document.getElementById("export-btn"),l=document.getElementById("cancel-export-btn");a&&(a.disabled=!0),l&&(l.style.display="inline-block");const c=await this.localClient.post("/api/export/users",i);if(!c.success)throw new Error(c.error||"Failed to start export");this.logger.info("✅ EXPORT: Export started successfully"),this.monitorExportProgress(c.sessionId)}catch(e){this.logger.error("❌ EXPORT: Export failed:",e),this.uiManager.showError("Export Failed",e.message),this.resetExportUI()}}async monitorExportProgress(e){const checkProgress=async()=>{try{const e=await this.localClient.get("/api/export/status");if(e.success){const t=e.status;this.updateProgressUI(t),"completed"===t.status?this.handleExportComplete(t):"failed"===t.status?this.handleExportFailed(t):"running"===t.status&&setTimeout(checkProgress,1e3)}}catch(e){this.logger.error("❌ EXPORT: Progress monitoring failed:",e),this.resetExportUI()}};checkProgress()}updateProgressUI(e){const t=document.getElementById("export-progress-bar"),s=document.getElementById("export-progress-text"),i=document.getElementById("export-progress-percentage"),n=document.getElementById("export-processed-count"),a=document.getElementById("export-total-count"),l=document.getElementById("export-error-count");t&&(t.style.width=`${e.progress}%`),s&&(s.textContent="running"===e.status?"Exporting users...":"Processing..."),i&&(i.textContent=`${Math.round(e.progress)}%`),n&&(n.textContent=e.processed||0),a&&(a.textContent=e.total||0),l&&(l.textContent=e.errors||0)}handleExportComplete(e){if(this.logger.info("✅ EXPORT: Export completed successfully"),e.downloadUrl){const t=document.createElement("a");t.href=e.downloadUrl,t.download=e.outputFile,t.textContent="Download Export File",t.className="btn btn-success";const s=document.getElementById("export-progress-container");if(s){const e=document.createElement("div");e.className="download-section",e.innerHTML="\n                    <h4>Export Complete!</h4>\n                    <p>Your export has been completed successfully.</p>\n                ",e.appendChild(t),s.appendChild(e)}}this.resetExportUI(),this.uiManager.showSuccess("Export Complete","Your export has been completed successfully.")}handleExportFailed(e){this.logger.error("❌ EXPORT: Export failed"),this.resetExportUI(),this.uiManager.showError("Export Failed","The export operation failed. Please try again.")}resetExportUI(){const e=document.getElementById("export-btn"),t=document.getElementById("cancel-export-btn"),s=document.getElementById("export-progress-container");e&&(e.disabled=!1),t&&(t.style.display="none"),s&&(s.style.display="none")}async cancelExport(){try{this.logger.info("🛑 EXPORT: Cancelling export operation..."),await this.localClient.post("/api/export/cancel"),this.resetExportUI(),this.uiManager.showInfo("Export Cancelled","The export operation has been cancelled.")}catch(e){this.logger.error("❌ EXPORT: Failed to cancel export:",e)}}async initialize(){try{this.logger.info("🔄 EXPORT: Initializing export view..."),await this.loadPopulations(),this.setupEventListeners(),this.logger.info("✅ EXPORT: Export view initialized successfully")}catch(e){this.logger.error("❌ EXPORT: Failed to initialize export view:",e)}}setupEventListeners(){const e=document.getElementById("export-btn"),t=document.getElementById("cancel-export-btn");e&&e.addEventListener("click",()=>{this.startExport()}),t&&t.addEventListener("click",()=>{this.cancelExport()})}async startExport(){try{const e=document.getElementById("export-population-select"),t=document.getElementById("export-format"),s=document.getElementById("include-headers");if(!e||!e.value)return void this.uiManager.showError("No Population Selected","Please select a population to export");const i={populationId:e.value,format:t?t.value:"csv",includeHeaders:!s||s.checked};this.logger.info("🚀 EXPORT: Starting export operation...",i);const n=document.getElementById("export-progress-container");n&&(n.style.display="block");const a=document.getElementById("export-btn"),l=document.getElementById("cancel-export-btn");a&&(a.disabled=!0),l&&(l.style.display="inline-block");const c=await this.localClient.post("/api/export/users",i);if(!c.success)throw new Error(c.error||"Failed to start export");this.logger.info("✅ EXPORT: Export started successfully"),this.monitorExportProgress(c.sessionId)}catch(e){this.logger.error("❌ EXPORT: Export failed:",e),this.uiManager.showError("Export Failed",e.message),this.resetExportUI()}}async monitorExportProgress(e){const checkProgress=async()=>{try{const e=await this.localClient.get("/api/export/status");if(e.success){const t=e.status;this.updateProgressUI(t),"completed"===t.status?this.handleExportComplete(t):"failed"===t.status?this.handleExportFailed(t):"running"===t.status&&setTimeout(checkProgress,1e3)}}catch(e){this.logger.error("❌ EXPORT: Progress monitoring failed:",e),this.resetExportUI()}};checkProgress()}updateProgressUI(e){const t=document.getElementById("export-progress-bar"),s=document.getElementById("export-progress-text"),i=document.getElementById("export-progress-percentage"),n=document.getElementById("export-processed-count"),a=document.getElementById("export-total-count"),l=document.getElementById("export-error-count");t&&(t.style.width=`${e.progress}%`),s&&(s.textContent="running"===e.status?"Exporting users...":"Processing..."),i&&(i.textContent=`${Math.round(e.progress)}%`),n&&(n.textContent=e.processed||0),a&&(a.textContent=e.total||0),l&&(l.textContent=e.errors||0)}handleExportComplete(e){if(this.logger.info("✅ EXPORT: Export completed successfully"),e.downloadUrl){const t=document.createElement("a");t.href=e.downloadUrl,t.download=e.outputFile,t.textContent="Download Export File",t.className="btn btn-success";const s=document.getElementById("export-progress-container");if(s){const e=document.createElement("div");e.className="download-section",e.innerHTML="\n                    <h4>Export Complete!</h4>\n                    <p>Your export has been completed successfully.</p>\n                ",e.appendChild(t),s.appendChild(e)}}this.resetExportUI(),this.uiManager.showSuccess("Export Complete","Your export has been completed successfully.")}handleExportFailed(e){this.logger.error("❌ EXPORT: Export failed"),this.resetExportUI(),this.uiManager.showError("Export Failed","The export operation failed. Please try again.")}resetExportUI(){const e=document.getElementById("export-btn"),t=document.getElementById("cancel-export-btn"),s=document.getElementById("export-progress-container");e&&(e.disabled=!1),t&&(t.style.display="none"),s&&(s.style.display="none")}async cancelExport(){try{this.logger.info("🛑 EXPORT: Cancelling export operation..."),await this.localClient.post("/api/export/cancel"),this.resetExportUI(),this.uiManager.showInfo("Export Cancelled","The export operation has been cancelled.")}catch(e){this.logger.error("❌ EXPORT: Failed to cancel export:",e)}}async init(){const e=window.errorHandler||new ErrorHandler(this.logger);await e.wrapAsync(async()=>{this.setupEventListeners(),await this.loadPopulations(),this.logger.info("Export Subsystem initialized successfully")},"Initialize Export Subsystem","Failed to Initialize Export Subsystem")()}setupEventListeners(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_BTN:"export-btn",EXPORT_POPULATION_SELECT:"export-population-select",EXPORT_FORMAT:"export-format"}},i=e.selectById(s.SELECTORS.EXPORT_BTN);i&&e.addEventListener(i,"click",t.wrapAsyncEventHandler(async e=>{e.preventDefault(),await this.startExport()},"Export button click"));const n=e.selectById(s.SELECTORS.EXPORT_POPULATION_SELECT);n&&e.addEventListener(n,"change",t.wrapEventHandler(e=>{this.handlePopulationChange(e.target.value)},"Export population change"));const a=e.selectById(s.SELECTORS.EXPORT_FORMAT);a&&e.addEventListener(a,"change",t.wrapEventHandler(e=>{this.handleFormatChange(e.target.value)},"Export format change"))}async startExport(){const e=window.errorHandler||new ErrorHandler(this.logger);if(this.isExporting)this.logger.warn("Export already in progress");else{this.isExporting=!0,this.logger.info("Starting export process");try{const exportAction=async()=>{if(!await this.validateExportPrerequisites())return;const e=this.getExportConfiguration();this.uiManager.showProgress("Exporting..."),await this.executeExport(e)};await e.wrapAsync(exportAction,"Start export process","The export failed. Please check the application logs for more details.")()}finally{this.isExporting=!1,this.uiManager.hideProgress()}}}async validateExportPrerequisites(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_POPULATION_SELECT:"export-population-select"}};return await t.wrapAsync(async()=>{if(!await this.checkTokenStatus())return this.logger.warn("Export cancelled - no valid token"),this.uiManager.showError("Authentication Required","Please get a valid token first"),!1;const t=e.selectById(s.SELECTORS.EXPORT_POPULATION_SELECT);return!(!t||!t.value)||(this.uiManager.showError("No Population Selected","Please select a population to export"),!1)},"Validate export prerequisites")()}getExportConfiguration(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_POPULATION_SELECT:"export-population-select",EXPORT_FORMAT:"export-format",INCLUDE_HEADERS:"include-headers",LIMIT_USERS:"limit-users",USER_LIMIT:"user-limit"}};return t.wrapSync(()=>{const t=e.selectById(s.SELECTORS.EXPORT_POPULATION_SELECT),i=e.selectById(s.SELECTORS.EXPORT_FORMAT),n=e.selectById(s.SELECTORS.INCLUDE_HEADERS),a=e.selectById(s.SELECTORS.LIMIT_USERS),l=e.selectById(s.SELECTORS.USER_LIMIT),c=!!a&&a.checked;return{populationId:t?t.value:"",populationName:t&&t.selectedIndex>=0?t.options[t.selectedIndex].text:"",format:i?i.value:"csv",includeHeaders:!n||n.checked,limitUsers:c,userLimit:c?parseInt(l?.value,10)||100:null,timestamp:(new Date).toISOString()}},"Get export configuration")()}async executeExport(e){const t=window.errorHandler||new ErrorHandler(this.logger);await t.wrapAsync(async()=>{this.logger.info("Executing export with config",e);const t=await this.localClient.post("/api/export",e);if(!t.success)throw new Error(t.error||"Export failed");t.downloadUrl?this.downloadFile(t.downloadUrl,t.filename):t.data&&this.downloadData(t.data,e.format,e.populationName),this.logger.info("Export completed successfully"),this.uiManager.showSuccess("Export completed successfully")},"Execute export","Failed to communicate with the server during export. Please check your connection and try again.",{rethrow:!0})()}downloadFile(e,t){const s=window.safeDOM||new SafeDOM(this.logger);(window.errorHandler||new ErrorHandler(this.logger)).wrapSync(()=>{const i=s.createElement("a");i&&(i.href=e,i.download=t||`export_${Date.now()}.csv`,s.appendChild(document.body,i),i.click(),s.removeChild(document.body,i),this.logger.info("Successfully triggered file download",{filename:t}))},"Download file from URL","Failed to trigger file download. Please check browser permissions and try again.")()}downloadData(e,t,s){(window.errorHandler||new ErrorHandler(this.logger)).wrapSync(()=>{let i,n,a;if("json"===t)i=JSON.stringify(e,null,2),n="application/json",a="json";else i=this.convertToCSV(e),n="text/csv",a="csv";const l=new Blob([i],{type:n}),c=URL.createObjectURL(l),d=`${s||"export"}_${Date.now()}.${a}`;try{this.downloadFile(c,d)}finally{URL.revokeObjectURL(c),this.logger.debug("Revoked object URL for downloaded file",{url:c})}},"Download data as file","Failed to prepare data for download. The data may be invalid or too large.")()}convertToCSV(e){return(window.errorHandler||new ErrorHandler(this.logger)).wrapSync(()=>{if(!Array.isArray(e)||0===e.length)return"";const t=Object.keys(e[0]);return[t.join(","),...e.map(e=>t.map(t=>{const s=e[t];return"string"==typeof s&&(s.includes(",")||s.includes('"'))?`"${s.replace(/"/g,'""')}"`:s||""}).join(","))].join("\n")},"Convert data to CSV","Failed to convert data to CSV format. The data might be structured incorrectly.")()||""}async loadPopulations(){const e=window.errorHandler||new ErrorHandler(this.logger);await e.wrapAsync(async()=>{this.logger.info("🔄 EXPORT: Loading populations for export dropdown...");const e=await this.localClient.get("/api/populations");if(this.logger.debug("🔄 EXPORT: Populations API response:",{success:e.success,populationCount:e.populations?.length||0,hasPopulations:!!e.populations}),!e.success||!e.populations)throw new Error("Invalid or empty response from populations API");this.logger.info(`🔄 EXPORT: Successfully loaded ${e.populations.length} populations`),this.populateDropdown(e.populations)},"Load populations for export","Failed to load populations from the server. Please check your connection and refresh the page.")()}populateDropdown(e){const t=window.safeDOM||new SafeDOM(this.logger),s=window.errorHandler||new ErrorHandler(this.logger),i=window.UI_CONFIG||{SELECTORS:{EXPORT_POPULATION_SELECT:"export-population-select"}};s.wrapSync(()=>{this.logger.debug("🔄 EXPORT: Populating export population dropdown...",{populationCount:e?.length||0,populations:e?.map(e=>({id:e.id,name:e.name}))||[]});const s=t.selectById(i.SELECTORS.EXPORT_POPULATION_SELECT);if(!s)return;t.setHTML(s,'<option value="">Select Population</option>'),this.logger.debug("🔄 EXPORT: Cleared existing dropdown options");let n=0;e.forEach(e=>{if(e&&e.id&&e.name){const i=t.createElement("option");i&&(i.value=e.id,t.setText(i,e.name),t.appendChild(s,i),n++)}else this.logger.warn("🔄 EXPORT: Skipping invalid population data",{population:e})}),this.logger.info(`🔄 EXPORT: Successfully populated dropdown with ${n} population options`)},"Populate export dropdown","Failed to display populations in the dropdown. The application may be in an inconsistent state.")()}handlePopulationChange(e){const t=window.safeDOM||new SafeDOM(this.logger),s=window.errorHandler||new ErrorHandler(this.logger),i=window.UI_CONFIG||{SELECTORS:{EXPORT_POPULATION_SELECT:"export-population-select"}};s.wrapSync(()=>{this.selectedPopulationId=e;const s=t.selectById(i.SELECTORS.EXPORT_POPULATION_SELECT);s&&s.selectedIndex>=0?this.selectedPopulationName=s.options[s.selectedIndex]?.text||"":this.selectedPopulationName="",this.logger.info("Population selection changed",{id:this.selectedPopulationId,name:this.selectedPopulationName}),this.updateExportOptions()},"Handle population change","Failed to update the UI after population change. Please try again.")()}handleFormatChange(e){(window.errorHandler||new ErrorHandler(this.logger)).wrapSync(()=>{this.logger.info("Export format changed",{format:e}),this.updateFormatOptions(e)},"Handle format change","Failed to update UI for the selected format. Please try again.")()}updateExportOptions(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_BTN:"export-btn"}};t.wrapSync(()=>{const t=e.selectById(s.SELECTORS.EXPORT_BTN);this.selectedPopulationId?(e.enable(t),this.showExportOptions()):(e.disable(t),this.hideExportOptions())},"Update export options","Failed to update export UI options. The UI may be in an inconsistent state.")()}updateFormatOptions(e){const t=window.safeDOM||new SafeDOM(this.logger),s=window.errorHandler||new ErrorHandler(this.logger),i=window.UI_CONFIG||{SELECTORS:{HEADERS_OPTION:"headers-option"}};s.wrapSync(()=>{const s=t.selectById(i.SELECTORS.HEADERS_OPTION);s&&(s.style.display="csv"===e?"block":"none")},"Update format options","Failed to update format-specific UI options. The UI may be in an inconsistent state.")()}showExportOptions(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_OPTIONS:"export-options"}};t.wrapSync(()=>{const t=e.selectById(s.SELECTORS.EXPORT_OPTIONS);e.show(t)},"Show export options","Failed to show export options. The UI may be in an inconsistent state.")()}hideExportOptions(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_OPTIONS:"export-options"}};t.wrapSync(()=>{const t=e.selectById(s.SELECTORS.EXPORT_OPTIONS);e.hide(t)},"Hide export options","Failed to hide export options. The UI may be in an inconsistent state.")()}showExportProgress(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_PROGRESS:"export-progress",EXPORT_BTN:"export-btn"},MESSAGES:{EXPORTING:"Exporting..."}};t.wrapSync(()=>{const t=e.selectById(s.SELECTORS.EXPORT_PROGRESS);e.show(t);const i=e.selectById(s.SELECTORS.EXPORT_BTN);e.disable(i),e.setText(i,s.MESSAGES.EXPORTING)},"Show export progress","Failed to show export progress. The UI may be in an inconsistent state.")()}hideExportProgress(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{EXPORT_PROGRESS:"export-progress",EXPORT_BTN:"export-btn"},MESSAGES:{EXPORT_USERS:"Export Users"}};t.wrapSync(()=>{const t=e.selectById(s.SELECTORS.EXPORT_PROGRESS);e.hide(t);const i=e.selectById(s.SELECTORS.EXPORT_BTN);e.enable(i),e.setText(i,s.MESSAGES.EXPORT_USERS)},"Hide export progress","Failed to hide export progress. Please refresh the page if the UI is unresponsive.")()}async checkTokenStatus(){const e=window.errorHandler||new ErrorHandler(this.logger),checkAction=async()=>(await this.localClient.get("/api/v1/auth/status")).valid;try{return await e.wrapAsync(checkAction,"Check token status")()}catch(e){return!1}}setupCrossSubsystemEvents(){this.eventBus?(this.eventBus.on("tokenExpired",e=>{this.logger.warn("Token expired during export operation"),this.isExporting&&(this.isExporting=!1,this.hideExportProgress(),this.uiManager.showError("Session Expired","Your authentication token expired during the export. Please re-authenticate and try again."))}),this.eventBus.on("tokenError",e=>{this.logger.error("Token error detected",e),this.isExporting&&(this.isExporting=!1,this.hideExportProgress(),this.uiManager.showError("Authentication Error",`Authentication failed: ${e.error}`))}),this.eventBus.on("tokenRefreshed",e=>{this.logger.info("Token refreshed successfully")}),this.eventBus.on("populationsChanged",e=>{this.logger.info("Populations changed, refreshing export dropdown",{count:e.count}),this.refreshPopulationDropdown()}),this.logger.debug("Cross-subsystem event listeners set up for ExportSubsystem")):this.logger.warn("EventBus not available for cross-subsystem events")}refreshPopulationDropdown(){(window.errorHandler||new ErrorHandler(this.logger)).wrapAsync(async()=>{this.populationService?(await this.populationService.populateDropdown("export-population-select",{includeEmpty:!0,emptyText:"Select a population"}),this.logger.debug("Export population dropdown refreshed successfully")):this.logger.warn("PopulationService not available for dropdown refresh")},"Refresh export population dropdown","Failed to refresh the population list. Please check your connection or try again.")()}}},{}],92:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.GlobalTokenManagerSubsystem=void 0;class GlobalTokenManagerSubsystem{constructor(e,t){this.logger=e||console,this.eventBus=t,this.isInitialized=!1,this.isDestroyed=!1,this.globalTokenTimer=null,this.updateInterval=1e3,this.init=this.init.bind(this),this.destroy=this.destroy.bind(this),this.updateGlobalTokenStatus=this.updateGlobalTokenStatus.bind(this),this.setupGlobalTokenEventListeners=this.setupGlobalTokenEventListeners.bind(this),this.startGlobalTokenTimer=this.startGlobalTokenTimer.bind(this),this.getNewToken=this.getNewToken.bind(this),this.logger.debug("Global Token Manager Subsystem created")}async init(){if(this.isInitialized)this.logger.warn("Global Token Manager Subsystem already initialized");else try{this.logger.info("Initializing Global Token Manager Subsystem..."),await this.waitForTokenStatusElement(),this.preventTokenStatusConflicts(),this.setupGlobalTokenEventListeners(),this.setupEventBusListeners(),this.startGlobalTokenTimer(),this.updateGlobalTokenStatus(),this.isInitialized=!0,this.logger.info("Global Token Manager Subsystem initialized successfully"),this.eventBus&&this.eventBus.emit("globalTokenManager:initialized")}catch(e){throw this.logger.error("Failed to initialize Global Token Manager Subsystem",{error:e.message,stack:e.stack}),e}}async destroy(){this.isDestroyed||(this.logger.info("Destroying Global Token Manager Subsystem..."),this.globalTokenTimer&&(clearInterval(this.globalTokenTimer),this.globalTokenTimer=null),this.removeEventListeners(),this.mutationObserver&&(this.mutationObserver.disconnect(),this.mutationObserver=null),this.restoreOriginalMethods(),this.isDestroyed=!0,this.isInitialized=!1,this.eventBus&&this.eventBus.emit("globalTokenManager:destroyed"),this.logger.info("Global Token Manager Subsystem destroyed"))}async waitForTokenStatusElement(){for(let e=1;e<=100;e++){if("complete"!==document.readyState&&"interactive"!==document.readyState){this.logger.debug(`DOM not ready (${document.readyState}), waiting...`),await new Promise(e=>setTimeout(e,100));continue}const t=document.getElementById("global-token-status");if(t){const s=t.querySelector(".global-token-countdown"),i=t.querySelector(".global-token-icon"),n=t.querySelector(".global-token-text");if("global-token-status"===t.id)return this.logger.debug("Global token status element found and ready",{attempt:e,elementId:t.id,hasCountdown:!!s,hasIcon:!!i,hasText:!!n}),t}else this.logger.debug(`Global token status element not found (attempt ${e}/100)`);await new Promise(e=>setTimeout(e,100))}throw this.logger.error("Global token status element not found after waiting",{domState:document.readyState,bodyExists:!!document.body,sidebarExists:!!document.querySelector(".sidebar"),allElementsWithId:Array.from(document.querySelectorAll("[id]")).map(e=>e.id)}),new Error("Global token status element not found after waiting")}preventTokenStatusConflicts(){this.logger.debug("Preventing token status conflicts...");const e=document.getElementById("global-token-status");e&&(e.setAttribute("data-protected","true"),e.setAttribute("data-managed-by","GlobalTokenManagerSubsystem"),this.setupDOMProtection(e)),this.overrideConflictingMethods(),this.logger.debug("Token status conflicts prevention set up")}setupDOMProtection(e){if(!window.MutationObserver)return;this.mutationObserver=new MutationObserver(e=>{e.forEach(e=>{if("childList"===e.type&&e.removedNodes.length>0){Array.from(e.removedNodes).some(e=>"global-token-status"===e.id)&&(this.logger.warn("Global token status element was removed by another system, will reinitialize"),setTimeout(()=>{document.getElementById("global-token-status")||(this.logger.info("Reinitializing global token status element"),this.waitForTokenStatusElement().then(()=>{this.updateGlobalTokenStatus()}).catch(e=>{this.logger.error("Failed to reinitialize token status element",e)}))},100))}})});const t=e.parentElement;t&&this.mutationObserver.observe(t,{childList:!0,subtree:!0})}overrideConflictingMethods(){if(window.app&&window.app.uiManager){const e=window.app.uiManager;"function"==typeof e.updateUniversalTokenStatus&&(e._originalUpdateUniversalTokenStatus=e.updateUniversalTokenStatus,e.updateUniversalTokenStatus=()=>{this.logger.debug("UIManager.updateUniversalTokenStatus called - delegating to GlobalTokenManagerSubsystem"),this.updateGlobalTokenStatus()}),"function"==typeof e.updateHomeTokenStatus&&(e._originalUpdateHomeTokenStatus=e.updateHomeTokenStatus,e.updateHomeTokenStatus=()=>{this.logger.debug("UIManager.updateHomeTokenStatus called - delegating to GlobalTokenManagerSubsystem"),this.updateGlobalTokenStatus()}),this.logger.debug("Conflicting UIManager methods overridden")}}restoreOriginalMethods(){if(window.app&&window.app.uiManager){const e=window.app.uiManager;e._originalUpdateUniversalTokenStatus&&(e.updateUniversalTokenStatus=e._originalUpdateUniversalTokenStatus,delete e._originalUpdateUniversalTokenStatus),e._originalUpdateHomeTokenStatus&&(e.updateHomeTokenStatus=e._originalUpdateHomeTokenStatus,delete e._originalUpdateHomeTokenStatus),this.logger.debug("Original UIManager methods restored")}}setupEventBusListeners(){this.eventBus&&(this.eventBus.on("token:refreshed",()=>{this.logger.debug("Token refreshed event received, updating status"),this.updateGlobalTokenStatus()}),this.eventBus.on("token:error",e=>{this.logger.debug("Token error event received",e),this.updateGlobalTokenStatus()}),this.eventBus.on("settings:updated",()=>{this.logger.debug("Settings updated event received, updating token status"),this.updateGlobalTokenStatus()}),this.logger.debug("EventBus listeners set up for Global Token Manager"))}updateGlobalTokenStatus(){if(this.isDestroyed)return;const e=document.getElementById("global-token-status");if(!e)return void((!this.lastElementWarning||Date.now()-this.lastElementWarning>3e4)&&(this.logger.debug("Global token status box not found - widget may not be initialized yet"),this.lastElementWarning=Date.now()));const t=e.querySelector(".global-token-countdown"),s=e.querySelector(".global-token-icon"),i=e.querySelector(".global-token-text"),n=document.getElementById("global-get-token");t&&s&&i||(!this.lastChildElementWarning||Date.now()-this.lastChildElementWarning>3e4)&&(this.logger.debug("Some global token status child elements not found, will update what is available",{hasCountdown:!!t,hasIcon:!!s,hasText:!!i,statusBoxFound:!!e}),this.lastChildElementWarning=Date.now());try{const a=this.getTokenInfoSync();if(a.hasToken){const l=a.timeLeft,c=this.formatTime(l);t&&(t.textContent=c),l<=0?(e.className="global-token-status expired",s&&(s.textContent="❌"),i&&(i.textContent="Token expired"),n&&(n.style.display="inline-block")):l<=300?(e.className="global-token-status expiring",s&&(s.textContent="⚠️"),i&&(i.textContent=`Expires in ${c}`),n&&(n.style.display="none")):(e.className="global-token-status valid",s&&(s.textContent="✅"),i&&(i.textContent=`Expires in ${c}`),n&&(n.style.display="none"))}else e.className="global-token-status missing",s&&(s.textContent="❌"),i&&(i.textContent="No valid token"),t&&(t.textContent="No Token"),n&&(n.style.display="inline-block")}catch(n){(!this.lastErrorWarning||Date.now()-this.lastErrorWarning>3e4)&&(this.logger.debug("Error updating global token status",{error:n.message}),this.lastErrorWarning=Date.now()),e&&(e.className="global-token-status error"),s&&(s.textContent="⚠️"),i&&(i.textContent="Status error"),t&&(t.textContent="Error")}}formatTime(e){if(e<=0)return"00:00";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),i=e%60;return t>0?`${t}h ${s}m ${i}s`:s>0?`${s}m ${i}s`:`${i}s`}getTokenInfoSync(){try{const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,source:"localStorage"};const s=parseInt(t),i=Date.now(),n=Math.floor((s-i)/1e3);return{hasToken:!0,timeLeft:Math.max(0,n),source:"localStorage"}}catch(e){return this.logger.debug("Error getting sync token info",{error:e.message}),{hasToken:!1,timeLeft:0,source:"error"}}}async getTokenInfo(){try{try{const e=await fetch("/api/v1/auth/token");if(e.ok){const t=await e.json();if(t.success&&t.tokenInfo)return{hasToken:t.tokenInfo.isValid,timeLeft:t.tokenInfo.timeLeft||0,source:"server"}}}catch(e){this.logger.debug("Could not fetch token info from server, checking localStorage",{error:e.message})}const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,source:"localStorage"};const s=parseInt(t),i=Date.now(),n=Math.floor((s-i)/1e3);return{hasToken:!0,timeLeft:Math.max(0,n),source:"localStorage"}}catch(e){return this.logger.error("Error getting token info",{error:e.message}),{hasToken:!1,timeLeft:0,source:"error"}}}setupGlobalTokenEventListeners(){const e=document.getElementById("global-refresh-token");e&&(this.refreshBtnHandler=()=>{this.logger.debug("Refresh token button clicked"),this.updateGlobalTokenStatus()},e.addEventListener("click",this.refreshBtnHandler));const t=document.getElementById("global-get-token");t&&(this.getTokenBtnHandler=()=>{this.logger.debug("Get token button clicked"),this.getNewToken()},t.addEventListener("click",this.getTokenBtnHandler)),this.logger.debug("Global token event listeners set up")}removeEventListeners(){const e=document.getElementById("global-refresh-token");e&&this.refreshBtnHandler&&e.removeEventListener("click",this.refreshBtnHandler);const t=document.getElementById("global-get-token");t&&this.getTokenBtnHandler&&t.removeEventListener("click",this.getTokenBtnHandler),this.logger.debug("Global token event listeners removed")}startGlobalTokenTimer(){this.globalTokenTimer&&clearInterval(this.globalTokenTimer),this.globalTokenTimer=setInterval(()=>{this.isDestroyed||this.updateGlobalTokenStatus()},this.updateInterval),this.logger.debug("Global token timer started",{interval:`${this.updateInterval}ms`})}async getNewToken(){if(!this.isDestroyed)try{this.logger.info("Getting new token via global token manager subsystem...");const e=document.getElementById("global-token-status");if(e){e.className="global-token-status loading";const t=e.querySelector(".global-token-icon"),s=e.querySelector(".global-token-text");t&&(t.textContent="⏳"),s&&(s.textContent="Getting token...")}if(window.app&&"function"==typeof window.app.getToken)await window.app.getToken(),this.logger.info("Token refreshed successfully via app");else{const e=await fetch("/api/auth/refresh-token",{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error(`API request failed: ${e.statusText}`);{const t=await e.json();this.logger.info("Token refreshed via API",t)}}this.updateGlobalTokenStatus(),this.eventBus&&this.eventBus.emit("globalTokenManager:tokenRefreshed")}catch(e){this.logger.error("Error getting new token",{error:e.message});const t=document.getElementById("global-token-status");if(t){t.className="global-token-status error";const e=t.querySelector(".global-token-icon"),s=t.querySelector(".global-token-text");e&&(e.textContent="❌"),s&&(s.textContent="Token error")}}}formatTime(e){if(e<=0)return"00:00";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),i=e%60;return t>0?`${t}h ${s}m ${i}s`:s>0?`${s}m ${i}s`:`${i}s`}async getTokenInfo(){try{try{const e=await fetch("/api/token/status");if(e.ok){const t=await e.json();if(t.hasToken)return{hasToken:!0,timeLeft:t.timeLeft||0,source:"server"}}}catch(e){this.logger.debug("Could not fetch token info from server, checking localStorage",{error:e.message})}const e=localStorage.getItem("pingone_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return{hasToken:!1,timeLeft:0,source:"localStorage"};const s=parseInt(t),i=Date.now(),n=Math.floor((s-i)/1e3);return{hasToken:!0,timeLeft:Math.max(0,n),source:"localStorage"}}catch(e){return this.logger.error("Error getting token info",{error:e.message}),{hasToken:!1,timeLeft:0,source:"error"}}}setupGlobalTokenEventListeners(){const e=document.getElementById("global-refresh-token");e&&(this.refreshBtnHandler=()=>{this.logger.debug("Refresh token button clicked"),this.updateGlobalTokenStatus()},e.addEventListener("click",this.refreshBtnHandler));const t=document.getElementById("global-get-token");t&&(this.getTokenBtnHandler=()=>{this.logger.debug("Get token button clicked"),this.getNewToken()},t.addEventListener("click",this.getTokenBtnHandler)),this.logger.debug("Global token event listeners set up")}removeEventListeners(){const e=document.getElementById("global-refresh-token");e&&this.refreshBtnHandler&&e.removeEventListener("click",this.refreshBtnHandler);const t=document.getElementById("global-get-token");t&&this.getTokenBtnHandler&&t.removeEventListener("click",this.getTokenBtnHandler),this.logger.debug("Global token event listeners removed")}startGlobalTokenTimer(){this.globalTokenTimer&&clearInterval(this.globalTokenTimer),this.globalTokenTimer=setInterval(()=>{this.isDestroyed||this.updateGlobalTokenStatus()},this.updateInterval),this.logger.debug("Global token timer started",{interval:`${this.updateInterval}ms`})}async getNewToken(){if(!this.isDestroyed)try{this.logger.info("Getting new token via global token manager subsystem...");const e=document.getElementById("global-token-status");if(e){e.className="global-token-status loading";const t=e.querySelector(".global-token-icon"),s=e.querySelector(".global-token-text");t&&(t.textContent="⏳"),s&&(s.textContent="Getting token...")}if(window.app&&"function"==typeof window.app.getToken)await window.app.getToken(),this.logger.info("Token refreshed successfully via app");else{const e=await fetch("/api/auth/refresh-token",{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error(`API request failed: ${e.statusText}`);{const t=await e.json();this.logger.info("Token refreshed via API",t)}}this.updateGlobalTokenStatus(),this.eventBus&&this.eventBus.emit("globalTokenManager:tokenRefreshed")}catch(e){this.logger.error("Error getting new token",{error:e.message});const t=document.getElementById("global-token-status");if(t){t.className="global-token-status error";const e=t.querySelector(".global-token-icon"),s=t.querySelector(".global-token-text");e&&(e.textContent="❌"),s&&(s.textContent="Token error")}}}getStatus(){return{name:"GlobalTokenManagerSubsystem",initialized:this.isInitialized,destroyed:this.isDestroyed,timerActive:!!this.globalTokenTimer,updateInterval:this.updateInterval}}}s.GlobalTokenManagerSubsystem=GlobalTokenManagerSubsystem;s.default=GlobalTokenManagerSubsystem},{}],93:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ImportSubsystem=void 0;var i=e("../utils/safe-logger.js");s.ImportSubsystem=class ImportSubsystem{constructor(e,t,s,n,a,l){let c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;this.logger=(0,i.createSafeLogger)(e||console),this.uiManager=t,this.localClient=s,this.settingsManager=n,this.eventBus=a,this.populationService=l,this.authManagementSubsystem=c,this.isImporting=!1,this.socket=null,this.selectedPopulationId=null,this.selectedPopulationName=null,this.fallbackPolling=null,this.selectedFile=null,this.messageFormatter=window.messageFormatter||{formatMessage:(e,t)=>`[${e.toUpperCase()}] ${t}`};try{this.logger.info("Import Subsystem initialized")}catch(e){console.error("Failed to log Import Subsystem initialization:",e)}try{this.setupCrossSubsystemEvents()}catch(e){console.error("Failed to set up cross-subsystem events:",e)}}async init(){try{const debugLog=e=>{try{this.logger?.debug?this.logger.debug(e):window.logger?.debug?window.logger.debug(e):console.log(`[DEBUG] ${e}`)}catch(t){console.log(`[DEBUG] ${e} (fallback logging)`)}};debugLog("🚀 [DEBUG] ImportSubsystem: init() method called");try{debugLog("🔧 [DEBUG] ImportSubsystem: Setting up event listeners"),this.setupEventListeners()}catch(e){throw console.error("Failed to set up event listeners:",e),e}try{debugLog("📋 [DEBUG] ImportSubsystem: About to refresh population dropdown"),await this.refreshPopulationDropdown()}catch(e){console.error("Failed to refresh population dropdown:",e)}debugLog("🔘 [DEBUG] ImportSubsystem: Setting initial button state"),this.validateAndUpdateButtonState(),this.logger.debug("✅ [DEBUG] ImportSubsystem: Init completed successfully"),this.logger.info("Import Subsystem initialized successfully")}catch(e){throw this.logger.error("❌ [DEBUG] ImportSubsystem: Init failed with error:",e),this.logger.error("Failed to initialize Import Subsystem",e),e}}setupEventListeners(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{START_IMPORT_BTN:"start-import",CSV_FILE_INPUT:"csv-file",IMPORT_POPULATION_SELECT:"import-population-select"}},i=e.selectById(s.SELECTORS.START_IMPORT_BTN);i&&e.addEventListener(i,"click",t.wrapAsyncEventHandler(async e=>{e.preventDefault(),await this.startImport()},"Import button click handler"));const n=e.selectById(s.SELECTORS.CSV_FILE_INPUT);n&&e.addEventListener(n,"change",t.wrapAsyncEventHandler(async e=>{const t=e.target.files[0];t&&(this.selectedFile=t,await this.handleFileSelect(t),this.validateAndUpdateButtonState())},"CSV file input change handler"));const a=e.selectById(s.SELECTORS.IMPORT_POPULATION_SELECT);a&&e.addEventListener(a,"change",t.wrapEventHandler(e=>{this.handlePopulationChange(e.target.value,e.target.selectedOptions[0]?.text),this.validateAndUpdateButtonState()},"Population dropdown change handler")),this.setupDragAndDropListeners()}setupDragAndDropListeners(){const e=document.getElementById("import-drop-zone"),t=document.getElementById("csv-file");e?(["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,e=>{e.preventDefault(),e.stopPropagation()},!1)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,()=>{e.classList.add("drag-over")},!1)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,()=>{e.classList.remove("drag-over")},!1)}),e.addEventListener("drop",async e=>{const s=e.dataTransfer.files;if(s.length>0){const e=s[0];if(this.selectedFile=e,t){const s=new DataTransfer;s.items.add(e),t.files=s.files}await this.handleFileSelect(e),this.validateAndUpdateButtonState()}},!1),e.addEventListener("click",()=>{t&&t.click()}),this.logger.info("Drag and drop listeners set up successfully")):this.logger.warn("Import drop zone not found in DOM")}async startImport(){if(this.logger.info("🚀 [DEBUG] ImportSubsystem: Start import button clicked"),this.isImporting)return this.logger.warn("🚀 [DEBUG] ImportSubsystem: Import already in progress"),void this.uiManager.showNotification("An import is already in progress. Please wait for it to complete.",{type:"warning",duration:5e3,title:"Import In Progress"});try{if(this.isImporting=!0,this.logger.info("🚀 [DEBUG] ImportSubsystem: Starting import process"),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Validating prerequisites..."),!await this.validateImportPrerequisites())return void this.logger.warn("🚀 [DEBUG] ImportSubsystem: Prerequisites validation failed, aborting import");this.logger.info("🚀 [DEBUG] ImportSubsystem: Prerequisites validated, proceeding with import"),this.getPopulationSelection(),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Showing progress UI"),this.uiManager.showProgress();const e=this.generateSessionId();this.logger.debug("🚀 [DEBUG] ImportSubsystem: Establishing real-time connection with session:",e),await this.establishRealTimeConnection(e),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Executing import with session:",e),await this.executeImport(e)}catch(e){this.logger.error("🚀 [DEBUG] ImportSubsystem: Import process failed",e),this.uiManager.showError("Import Failed",e.message||"An unexpected error occurred during the import process.")}finally{this.isImporting=!1,this.logger.debug("🚀 [DEBUG] ImportSubsystem: Import process completed, resetting isImporting flag")}}async validateImportPrerequisites(){this.logger.debug("🔍 [DEBUG] ImportSubsystem: Validating import prerequisites");if(!await this.checkTokenStatus())return this.logger.warn("🔍 [DEBUG] ImportSubsystem: Token validation failed"),this.showAuthenticationModal("Import"),!1;if(!this.selectedFile)return this.logger.warn("🔍 [DEBUG] ImportSubsystem: No file selected (selectedFile is null)"),this.uiManager.showError("No File Selected","Please select a CSV file to import."),!1;const e=document.getElementById("import-population-select");return e&&e.value&&""!==e.value?(this.logger.info("✅ [DEBUG] ImportSubsystem: All prerequisites validated successfully",{hasFile:!!this.selectedFile,fileName:this.selectedFile?.name,hasPopulation:!!e?.value,populationId:e?.value}),!0):(this.logger.warn("🔍 [DEBUG] ImportSubsystem: No population selected"),this.uiManager.showError("No Population Selected","Please select a population for the import."),!1)}getPopulationSelection(){const e=document.getElementById("import-population-select");if(this.selectedPopulationId=e?.value||"",e){const t=e.options[e.selectedIndex];this.selectedPopulationName=t?.text||""}this.logger.info("Population selection",{id:this.selectedPopulationId,name:this.selectedPopulationName})}handleProgressUpdate(e){if(!e||void 0===e.current||void 0===e.total)return void this.logger.error("Invalid progress data",e);const t=Math.round(e.current/e.total*100);this.uiManager.updateProgress(t,e.message||`Processing ${e.current} of ${e.total} users...`),this.logger.info("Progress update",{current:e.current,total:e.total,percentage:t})}handleImportCompletion(e){if(this.logger.info("Import completed",e),this.uiManager&&this.uiManager.showSuccess){const t=e.message||`Import completed successfully! ${e.imported||0} users imported.`;this.uiManager.showSuccess(t,{imported:e.imported,total:e.total,duration:e.duration})}else this.logger.warn("UI Manager not available for success message display");this.cleanupConnections()}handleImportError(e){this.logger.error("Import error",e),this.cleanupConnections()}async executeImport(e){const t=document.getElementById("csv-file").files[0],s=new FormData;s.append("file",t),s.append("populationId",this.selectedPopulationId),s.append("sessionId",e);try{const e=await this.localClient.post("/api/import",s);if(!e.success)throw new Error(e.error||"Import failed");this.logger.info("Import request sent successfully")}catch(e){throw this.logger.error("Import request failed",e),e}}generateSessionId(){return`import_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async checkTokenStatus(){try{if((this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: checkTokenStatus called"),(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: this.authManagementSubsystem =",this.authManagementSubsystem),(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: typeof this.authManagementSubsystem =",typeof this.authManagementSubsystem),!this.authManagementSubsystem)return this.logger.warn("AuthManagementSubsystem not available for token check"),(this.logger?.debug||window.logger?.debug||console.log)("❌ [DEBUG] ImportSubsystem: AuthManagementSubsystem is null/undefined"),!1;(this.logger?.debug||window.logger?.debug||console.log)("✅ [DEBUG] ImportSubsystem: AuthManagementSubsystem is available, calling isTokenValid()");const e=this.authManagementSubsystem.isTokenValid();(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: isValid =",e);const t=this.authManagementSubsystem.getAuthenticationStatus();return(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: authStatus =",t),e}catch(e){return this.logger.error("Error checking token status:",e),(this.logger?.debug||window.logger?.debug||console.log)("❌ [DEBUG] ImportSubsystem: Error in checkTokenStatus:",e),!1}}showAuthenticationModal(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Import";try{this.createAuthenticationModal(e)}catch(t){this.logger.error("Error showing authentication modal:",t),this.uiManager.showError("Authentication Required",`You must have a valid token to start an ${e.toLowerCase()}. Please go to Settings to configure your credentials.`)}}createAuthenticationModal(e){const t=window.safeDOM||new SafeDOM(this.logger),s=window.errorHandler||new ErrorHandler(this.logger),i=window.UI_CONFIG||{SELECTORS:{TOKEN_ALERT_OVERLAY:".token-alert-overlay",SETTINGS_NAV_ITEM:'[data-view="settings"]'},CLASSES:{TOKEN_ALERT_OVERLAY:"token-alert-overlay"}},n=t.select(i.SELECTORS.TOKEN_ALERT_OVERLAY);n&&n.remove();const a=document.createElement("div");t.addClass(a,i.CLASSES.TOKEN_ALERT_OVERLAY),a.setAttribute("role","dialog"),a.setAttribute("aria-modal","true"),a.setAttribute("aria-labelledby","token-alert-title"),a.setAttribute("aria-describedby","token-alert-content"),a.innerHTML=`\n            <div class="token-alert-modal" tabindex="-1">\n                <div class="token-alert-header">\n                    <h2 id="token-alert-title">\n                        <span class="warning-icon" aria-hidden="true">⚠️</span>\n                        <span>Authentication Required</span>\n                    </h2>\n                    <button type="button" class="token-alert-close" id="token-alert-close" aria-label="Close">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n                </div>\n                <div class="token-alert-body">\n                    <div id="token-alert-content" class="token-alert-content">\n                        <div class="token-alert-icon">\n                            <span aria-hidden="true">🔐</span>\n                        </div>\n                        <h3>No Valid Token Available</h3>\n                        <p class="token-alert-message">\n                            <strong>Authentication is required to continue.</strong>\n                            You need valid credentials to perform the "${e}" operation.\n                        </p>\n                        <div class="token-status-info">\n                            <p><strong>Current Status:</strong> No token available</p>\n                        </div>\n                        <div class="token-alert-actions">\n                            <button type="button" class="btn btn-primary btn-lg" id="token-alert-settings-btn">\n                                <span class="btn-icon">⚙️</span>\n                                Go to Settings\n                            </button>\n                            <p class="token-alert-help">\n                                Add your PingOne credentials in the Settings page to generate a new token.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(a);const l=t.select("#token-alert-settings-btn",a),c=t.select("#token-alert-close",a);l&&t.addEventListener(l,"click",s.wrapEventHandler(()=>{if(a.remove(),window.app&&window.app.showView)window.app.showView("settings");else{const e=t.select(i.SELECTORS.SETTINGS_NAV_ITEM);e?e.click():window.location.href="/"}},"Authentication modal settings button click")),c.addEventListener("click",()=>{a.remove()}),a.addEventListener("keydown",e=>{"Escape"===e.key&&a.remove()}),a.style.display="flex",setTimeout(()=>{a.classList.add("show")},10)}async handleFileSelect(e){try{if(this.logger.info("File selected for import",{name:e.name,size:e.size,type:e.type}),!this.validateFile(e))return;this.displayFileInfo(e)}catch(e){this.logger.error("File selection failed",e),this.uiManager.showError("File Selection Error",e.message)}}validateAndUpdateButtonState(){console.log("🔍 [VALIDATION] validateAndUpdateButtonState called");const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{START_IMPORT_BTN:"start-import",IMPORT_POPULATION_SELECT:"import-population-select"},CLASSES:{BTN_DISABLED:"btn-disabled",BTN_PRIMARY:"btn-primary"}};console.log("🔍 [VALIDATION] UI_CONFIG:",s),t.wrapSync(()=>{console.log("🔍 [VALIDATION] Inside error handler wrapper");const t=e.selectById(s.SELECTORS.START_IMPORT_BTN);if(console.log("🔍 [VALIDATION] Import button found:",!!t,t),!t)return this.logger.warn("Import button not found for state validation"),void console.log("❌ [VALIDATION] Import button not found, exiting");const i=!!this.selectedFile;console.log("🔍 [VALIDATION] File check:",{hasFile:i,selectedFile:this.selectedFile?.name});const n=e.selectById(s.SELECTORS.IMPORT_POPULATION_SELECT);console.log("🔍 [VALIDATION] Population select found:",!!n,n);const a=n&&n.value&&""!==n.value;console.log("🔍 [VALIDATION] Population check:",{hasPopulation:a,value:n?.value,selectedText:n?.selectedOptions?.[0]?.text});const l=i&&a;console.log("🔍 [VALIDATION] Final validation:",{hasFile:i,hasPopulation:a,shouldEnable:l}),t.disabled=!l,console.log("🔍 [VALIDATION] Button disabled set to:",t.disabled),this.logger.debug("Import button state updated",{hasFile:i,hasPopulation:a,shouldEnable:l,buttonDisabled:t.disabled}),l?(console.log("🔍 [VALIDATION] Enabling button - removing disabled class, adding primary"),e.removeClass(t,s.CLASSES.BTN_DISABLED),e.addClass(t,s.CLASSES.BTN_PRIMARY)):(console.log("🔍 [VALIDATION] Disabling button - adding disabled class, removing primary"),e.addClass(t,s.CLASSES.BTN_DISABLED),e.removeClass(t,s.CLASSES.BTN_PRIMARY)),console.log("🔍 [VALIDATION] Button final state:",{disabled:t.disabled,classList:t.classList.toString()})},"Import button state validation")(),console.log("🔍 [VALIDATION] validateAndUpdateButtonState completed")}validateFile(e){return e.name.toLowerCase().endsWith(".csv")?!(e.size>10485760)||(this.uiManager.showError("File Too Large","File size must be less than 10MB"),!1):(this.uiManager.showError("Invalid File Type","Please select a CSV file"),!1)}async displayFileInfo(e){try{this.logger.info("Displaying comprehensive file information",{fileName:e.name});let t=null,s=null;try{const i=await this.readFileAsText(e);s=this.parseCSVContent(i),t=s?s.length:0,this.logger.debug("CSV parsing completed",{recordCount:t,hasData:!!s})}catch(e){this.logger.warn("Failed to parse CSV for record count",{error:e.message}),t="Unable to determine"}this.updateFileInfoDisplay(e,t,s)}catch(t){this.logger.error("Failed to display file information",{error:t.message});const s=window.safeDOM||new SafeDOM(this.logger),i=window.UI_CONFIG||{SELECTORS:{FILE_INFO:"file-info"},CLASSES:{FILE_INFO_ERROR:"file-info-error"},STYLES:{ERROR_BACKGROUND:"#f8d7da",ERROR_BORDER:"1px solid #f5c6cb",ERROR_COLOR:"#721c24"}},n=s.selectById(i.SELECTORS.FILE_INFO);if(n){const a=`\n                    <div class="${i.CLASSES.FILE_INFO_ERROR}" style="background: ${i.STYLES.ERROR_BACKGROUND}; border: ${i.STYLES.ERROR_BORDER}; border-radius: 4px; padding: 12px; color: ${i.STYLES.ERROR_COLOR};">\n                        <strong>⚠️ File Information Error</strong><br>\n                        Selected: ${e.name}<br>\n                        Size: ${(e.size/1024).toFixed(2)} KB<br>\n                        <em>Unable to display detailed information: ${t.message}</em>\n                    </div>\n                `;s.setHTML(n,a)}}}readFileAsText(e){return new Promise((t,s)=>{const i=new FileReader;i.onload=e=>t(e.target.result),i.onerror=()=>s(new Error("Failed to read file")),i.readAsText(e)})}parseCSVContent(e){if(!e||"string"!=typeof e)return[];try{const t=e.split("\n").filter(e=>e.trim().length>0);return t.length<=1?[]:t.slice(1).map(e=>{const t=[];let s="",i=!1;for(let n=0;n<e.length;n++){const a=e[n];'"'===a?i=!i:","!==a||i?s+=a:(t.push(s.trim()),s="")}return t.push(s.trim()),t}).filter(e=>e.some(e=>e.length>0))}catch(e){return this.logger.error("CSV parsing error",{error:e.message}),[]}}updateFileInfoDisplay(e,t,s){const i=document.getElementById("file-info");if(!i)return void this.logger.warn("File info element not found in DOM");const n=this.formatFileSize(e.size),a=new Date(e.lastModified).toLocaleString(),l=e.type||this.getFileExtension(e.name),c=this.getFileExtension(e.name),d="csv"===c||"txt"===c||"text/csv"===l||"text/plain"===l;let g="";d&&null!==t&&(g="number"==typeof t?t>0?`\n                        <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                            <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                            <span style="color: #0073C8; font-size: 0.8rem; font-weight: bold;">${t}</span>\n                        </div>\n                    `:'\n                        <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                            <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                            <span style="color: #dc3545; font-size: 0.8rem; font-weight: bold;">No user records found</span>\n                        </div>\n                    ':`\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                        <span style="color: #ffc107; font-size: 0.8rem; font-weight: bold;">${t}</span>\n                    </div>\n                `);const u=`\n            <div class="file-info-details" style="background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 6px; padding: 12px; margin: 8px 0; box-shadow: 0 1px 4px rgba(0,0,0,0.08);">\n                \n                \x3c!-- File Name Section --\x3e\n                <div class="file-name-section" style="text-align: center; margin-bottom: 12px; padding: 8px; background: #e6f4ff; border-radius: 4px; color: #1a237e; font-weight: bold; font-size: 1.1rem;">\n                    <div style="font-size: 1.3rem; font-weight: 600; margin-bottom: 3px; color: #1a237e; word-break: break-word; overflow-wrap: break-word;">\n                        <i class="fas fa-file-csv" style="margin-right: 6px; font-size: 1.2rem; color: #1976d2;"></i>\n                        ${e.name}\n                    </div>\n                    <div style="font-size: 0.85rem; opacity: 0.9; font-weight: 500; color: #1976d2;">\n                        File Selected Successfully\n                    </div>\n                </div>\n                \n                \x3c!-- File Information Grid --\x3e\n                <div class="file-info-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 8px; font-size: 0.8em; margin-bottom: 10px;">\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📊 File Size</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${n}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📅 Modified</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${a}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📄 Type</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${l||"CSV"}</span>\n                    </div>\n                    \n                    ${g}\n                </div>\n                \n                \x3c!-- File Status --\x3e\n                <div class="file-info-status" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: ${d?"#d4edda":"#f8d7da"}; border: 1px solid ${d?"#c3e6cb":"#f5c6cb"}; display: flex; align-items: center; gap: 6px;">\n                    <i class="fas ${d?"fa-check-circle":"fa-exclamation-triangle"}" style="color: ${d?"#155724":"#721c24"};"></i>\n                    <span style="color: ${d?"#155724":"#721c24"}; font-size: 0.85rem; font-weight: 500;">\n                        ${d?"Valid CSV file format":"Warning: File type may not be compatible"}\n                    </span>\n                </div>\n                \n                ${s&&s.length>0?`\n                <div class="file-info-preview" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: #fff3cd; border: 1px solid #ffeaa7;">\n                    <strong style="color: #856404; font-size: 0.85rem;">📋 Ready for Import</strong>\n                    <div style="color: #856404; font-size: 0.8rem; margin-top: 2px;">\n                        File contains ${t} user record${1===t?"":"s"} ready for processing\n                    </div>\n                </div>\n                `:""}\n            </div>\n        `;i.innerHTML=u,this.logger.info("File information display updated successfully",{recordCount:t,isValidType:d})}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}getFileExtension(e){return e.slice((e.lastIndexOf(".")-1>>>0)+2).toLowerCase()}async establishRealTimeConnection(e){try{return this.logger.debug("🔗 [DEBUG] ImportSubsystem: Establishing real-time connection for session:",e),"undefined"!=typeof io&&this.subsystems?.realtimeManager?(this.logger.debug("🔗 [DEBUG] ImportSubsystem: Socket.IO available, setting up real-time connection"),this.socket=this.subsystems.realtimeManager.getConnection(),this.socket?(this.socket.on(`import-progress-${e}`,e=>{this.handleProgressUpdate(e)}),this.socket.on(`import-complete-${e}`,e=>{this.handleImportCompletion(e)}),this.socket.on(`import-error-${e}`,e=>{this.handleImportError(e)}),this.logger.info("✅ [DEBUG] ImportSubsystem: Real-time connection established successfully")):(this.logger.warn("⚠️ [DEBUG] ImportSubsystem: Socket.IO connection not available, using fallback polling"),this.setupFallbackPolling(e))):(this.logger.warn("⚠️ [DEBUG] ImportSubsystem: Socket.IO not available, using fallback polling"),this.setupFallbackPolling(e)),Promise.resolve()}catch(t){return this.logger.error("❌ [DEBUG] ImportSubsystem: Failed to establish real-time connection:",t),this.setupFallbackPolling(e),Promise.resolve()}}cleanupConnections(){this.socket&&(this.socket.disconnect(),this.socket=null),this.fallbackPolling&&(clearInterval(this.fallbackPolling),this.fallbackPolling=null),this.isImporting=!1}setupFallbackPolling(e){this.fallbackPolling=setInterval(async()=>{try{const t=await this.localClient.get(`/api/import/status/${e}`);t.data&&this.handleProgressUpdate(t.data)}catch(e){this.logger.error("Fallback polling failed",e)}},2e3)}setupCrossSubsystemEvents(){this.eventBus?(this.eventBus.on("tokenExpired",e=>{this.logger.warn("Token expired during import operation"),this.isImporting&&(this.cleanupConnections(),this.uiManager.showError("Session Expired","Your authentication token expired during the import. Please re-authenticate and try again."))}),this.eventBus.on("tokenError",e=>{this.logger.error("Token error detected",e),this.isImporting&&(this.cleanupConnections(),this.uiManager.showError("Authentication Error",`Authentication failed: ${e.error}`))}),this.eventBus.on("tokenRefreshed",e=>{this.logger.info("Token refreshed successfully")}),this.eventBus.on("populationsChanged",e=>{this.logger.info("Populations changed, refreshing import dropdown",{count:e.count}),this.refreshPopulationDropdown()}),this.logger.debug("Cross-subsystem event listeners set up for ImportSubsystem")):this.logger.warn("EventBus not available for cross-subsystem events")}handlePopulationChange(e,t){this.logger.info("🔄 [DEBUG] ImportSubsystem: Population changed",{populationId:e,populationName:t});const s=document.querySelector(".population-name-text");s&&(e&&t?(s.innerHTML=`<span class="population-label">Population:</span> <span class="population-value">${t}</span>`,this.logger.debug("Updated population name display",{populationName:t})):s.innerHTML='<span class="population-label">Population:</span> <span class="population-placeholder">Select a population</span>');const i=document.querySelector(".api-url-text");if(i)if(e){const t=`/api/populations/${e}/users`;i.textContent=t,this.logger.debug("Updated API URL display",{apiUrl:t})}else i.textContent="Select a population to see the API URL";this.selectedPopulationId=e,this.selectedPopulationName=t,this.eventBus&&this.eventBus.emit("importPopulationChanged",{populationId:e,populationName:t})}refreshPopulationDropdown(){this.logger.info("🔍 [DEBUG] ImportSubsystem: refreshPopulationDropdown called"),this.populationService?(this.logger.info("🔍 [DEBUG] ImportSubsystem: PopulationService available, calling populateDropdown"),this.populationService.populateDropdown("import-population-select",{includeEmpty:!0,emptyText:"Select a population"}).then(()=>{this.logger.info("✅ [DEBUG] ImportSubsystem: Import population dropdown refreshed successfully")}).catch(e=>{this.logger.error("❌ [DEBUG] ImportSubsystem: Failed to refresh import population dropdown",e),this.uiManager.showError("Population Refresh Failed","Failed to refresh population dropdown.")})):this.logger.error("❌ [DEBUG] ImportSubsystem: PopulationService not available for dropdown refresh",{populationServiceType:typeof this.populationService,populationServiceExists:!!this.populationService})}}},{"../utils/safe-logger.js":106}],94:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.NavigationSubsystem=void 0;var i=e("../utils/browser-logging-service.js");s.NavigationSubsystem=class NavigationSubsystem{constructor(e,t,s){this.logger=e||(0,i.createLogger)({serviceName:"navigation-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=s,this.currentView="home",this.previousView=null,this.navigationHistory=[],this.viewInitializers=new Map,this.viewCleanupHandlers=new Map,this.navItems=null,this.viewContainers=null,this.logger.info("Navigation subsystem initialized")}async init(){try{this.logger.info("Initializing navigation subsystem..."),this.navItems=document.querySelectorAll("[data-view]"),this.viewContainers=document.querySelectorAll('.view-container, [id$="-view"]'),this.logger.info("Navigation elements found",{navItems:this.navItems.length,viewContainers:this.viewContainers.length}),this.setupNavigationListeners(),this.registerDefaultViewInitializers(),await this.showView(this.currentView),this.logger.info("Navigation subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize navigation subsystem",{error:e.message}),e}}setupNavigationListeners(){this.navItems.forEach(e=>{e.addEventListener("click",async t=>{t.preventDefault();const s=e.getAttribute("data-view");this.logger.debug("Navigation item clicked",{view:s}),s&&s!==this.currentView&&await this.navigateToView(s)})}),window.addEventListener("popstate",e=>{e.state&&e.state.view&&this.showView(e.state.view,!1)}),this.logger.debug("Navigation listeners set up")}async navigateToView(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(this.logger.info("Navigating to view",{from:this.currentView,to:e}),!this.isValidView(e))return this.logger.warn("Invalid view requested",{view:e}),!1;if(!0!==t.force&&!await this.canNavigateFrom(this.currentView))return this.logger.info("Navigation blocked by current view",{currentView:this.currentView}),!1;const s=await this.showView(e,!1!==t.pushToHistory);return s&&this.logger.info("Navigation completed successfully",{view:e}),s}catch(t){return this.logger.error("Navigation failed",{view:e,error:t.message}),!1}}async showView(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];try{if(this.logger.debug("Showing view",{view:e,pushToHistory:t}),this.previousView=this.currentView,this.previousView&&this.viewCleanupHandlers.has(this.previousView))try{await this.viewCleanupHandlers.get(this.previousView)(),this.logger.debug("View cleanup completed",{view:this.previousView})}catch(e){this.logger.warn("View cleanup failed",{view:this.previousView,error:e.message})}this.hideAllViews();const s=document.getElementById(`${e}-view`);if(!s)return this.logger.warn("View element not found",{view:e}),!1;if(s.style.display="block",s.classList.add("active"),this.updateNavigationState(e),this.viewInitializers.has(e))try{await this.viewInitializers.get(e)(),this.logger.debug("View initializer completed",{view:e})}catch(t){this.logger.warn("View initializer failed",{view:e,error:t.message})}if(t&&window.history){const t=new URL(window.location);t.searchParams.set("view",e),window.history.pushState({view:e},"",t)}return this.currentView=e,this.navigationHistory.push({view:e,timestamp:Date.now(),from:this.previousView}),this.navigationHistory.length>50&&(this.navigationHistory=this.navigationHistory.slice(-50)),this.logger.info("View shown successfully",{view:e}),!0}catch(t){return this.logger.error("Failed to show view",{view:e,error:t.message}),!1}}hideAllViews(){this.viewContainers.forEach(e=>{e.style.display="none",e.classList.remove("active")}),this.logger.debug("All views hidden")}updateNavigationState(e){this.navItems.forEach(t=>{t.classList.remove("active"),t.getAttribute("data-view")===e&&t.classList.add("active")}),this.updatePageTitle(e),this.logger.debug("Navigation state updated",{view:e})}updatePageTitle(e){const t="PingOne User Import v6.5.2.4",s={import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History"}[e];document.title=s?`${s} - ${t}`:t}registerViewInitializer(e,t){this.viewInitializers.set(e,t),this.logger.debug("View initializer registered",{view:e})}registerViewCleanup(e,t){this.viewCleanupHandlers.set(e,t),this.logger.debug("View cleanup handler registered",{view:e})}registerDefaultViewInitializers(){this.registerViewInitializer("import",async()=>{"function"==typeof window.app?.loadPopulations&&await window.app.loadPopulations("import-population-select")}),this.registerViewInitializer("export",async()=>{try{window.app&&window.app.subsystems&&window.app.subsystems.export?await window.app.subsystems.export.initialize():console.warn("Export subsystem not found")}catch(e){console.error("Failed to initialize export view:",e)}}),this.registerViewInitializer("delete-csv",async()=>{window.deleteManager&&"function"==typeof window.deleteManager.loadPopulations&&await window.deleteManager.loadPopulations()}),this.registerViewInitializer("modify",async()=>{"function"==typeof window.app?.loadPopulations&&await window.app.loadPopulations("modify-population-select")}),this.registerViewInitializer("logs",async()=>{window.logManager&&"function"==typeof window.logManager.loadLogs&&window.logManager.loadLogs()}),this.registerViewInitializer("history",async()=>{window.logManager&&"function"==typeof window.logManager.loadLogs&&window.logManager.loadLogs()}),this.logger.debug("Default view initializers registered")}isValidView(e){return["home","import","export","modify","delete-csv","settings","logs","history","analytics"].includes(e)}async canNavigateFrom(e){if("import"===e&&window.app?.isImportRunning){return confirm("Import is currently running. Are you sure you want to leave this page?")}if("export"===e&&window.exportManager?.isExportRunning){return confirm("Export is currently running. Are you sure you want to leave this page?")}if("delete-csv"===e&&window.deleteManager?.isDeleteRunning){return confirm("Delete operation is currently running. Are you sure you want to leave this page?")}if("settings"===e&&this.settingsManager?.hasUnsavedChanges?.()){return confirm("You have unsaved settings. Are you sure you want to leave without saving?")}return!0}getCurrentView(){return this.currentView}getPreviousView(){return this.previousView}getNavigationHistory(){return[...this.navigationHistory]}async goBack(){if(this.previousView)await this.navigateToView(this.previousView);else if(this.navigationHistory.length>1){const e=this.navigationHistory[this.navigationHistory.length-2];await this.navigateToView(e.view)}}async refreshCurrentView(){await this.showView(this.currentView,!1)}getViewStats(){const e={};return this.navigationHistory.forEach(t=>{e[t.view]||(e[t.view]={count:0,lastVisited:null}),e[t.view].count++,e[t.view].lastVisited=t.timestamp}),e}cleanup(){this.navItems.forEach(e=>{e.removeEventListener("click",this.handleNavClick)}),window.removeEventListener("popstate",this.handlePopState),this.viewInitializers.clear(),this.viewCleanupHandlers.clear(),this.navigationHistory=[],this.logger.info("Navigation subsystem cleaned up")}}},{"../utils/browser-logging-service.js":99}],95:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.OperationManagerSubsystem=void 0;var i=e("../utils/browser-logging-service.js");s.OperationManagerSubsystem=class OperationManagerSubsystem{constructor(e,t,s,n){this.logger=e||(0,i.createLogger)({serviceName:"operation-manager-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=s,this.apiClient=n,this.currentOperation=null,this.operationQueue=[],this.operationHistory=[],this.isOperationRunning=!1,this.operationTypes={IMPORT:"import",EXPORT:"export",DELETE:"delete",MODIFY:"modify"},this.validators=new Map,this.preChecks=new Map,this.postChecks=new Map,this.logger.info("Operation Manager subsystem initialized")}async init(){try{this.logger.info("Initializing operation manager subsystem..."),this.registerDefaultValidators(),this.registerDefaultPreChecks(),this.registerDefaultPostChecks(),this.logger.info("Operation Manager subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize operation manager subsystem",{error:e.message}),e}}async startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(this.logger.info("Starting operation",{type:e,options:t}),this.isOperationRunning)throw new Error("Another operation is already running");if(!Object.values(this.operationTypes).includes(e))throw new Error(`Invalid operation type: ${e}`);const s={id:this.generateOperationId(),type:e,options:t,status:"initializing",startTime:Date.now(),endTime:null,progress:{current:0,total:0,percentage:0,message:"Initializing..."},result:null,error:null};this.currentOperation=s,this.isOperationRunning=!0,await this.runPreChecks(s),await this.validateOperation(s);const i=await this.executeOperation(s);return await this.runPostChecks(s),s.status="completed",s.endTime=Date.now(),s.result=i,this.logger.info("Operation completed successfully",{type:e,duration:s.endTime-s.startTime}),i}catch(t){throw this.logger.error("Operation failed",{type:e,error:t.message}),this.currentOperation&&(this.currentOperation.status="failed",this.currentOperation.endTime=Date.now(),this.currentOperation.error=t.message),t}finally{this.finalizeOperation()}}async executeOperation(e){const{type:t,options:s}=e;switch(this.logger.debug("Executing operation",{type:t}),t){case this.operationTypes.IMPORT:return await this.executeImport(e);case this.operationTypes.EXPORT:return await this.executeExport(e);case this.operationTypes.DELETE:return await this.executeDelete(e);case this.operationTypes.MODIFY:return await this.executeModify(e);default:throw new Error(`Unknown operation type: ${t}`)}}async executeImport(e){const{options:t}=e;this.logger.info("Executing import operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting import...");const s={file:t.file,populationId:t.populationId,populationName:t.populationName,skipDuplicates:t.skipDuplicates||!1,updateExisting:t.updateExisting||!1},i=await this.apiClient.post("/api/import",s);if(!i.success)throw new Error(i.error||"Import failed");return await this.trackOperationProgress(e,i.sessionId),{success:!0,sessionId:i.sessionId,message:"Import completed successfully"}}async executeExport(e){const{options:t}=e;this.logger.info("Executing export operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting export...");const s={populationId:t.populationId,populationName:t.populationName,includeDisabled:t.includeDisabled||!1,format:t.format||"csv"},i=await this.apiClient.post("/api/export",s);if(!i.success)throw new Error(i.error||"Export failed");return await this.trackOperationProgress(e,i.sessionId),{success:!0,sessionId:i.sessionId,downloadUrl:i.downloadUrl,message:"Export completed successfully"}}async executeDelete(e){const{options:t}=e;this.logger.info("Executing delete operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting delete...");const s={file:t.file,populationId:t.populationId,populationName:t.populationName,confirmDelete:!0},i=await this.apiClient.post("/api/delete",s);if(!i.success)throw new Error(i.error||"Delete failed");return await this.trackOperationProgress(e,i.sessionId),{success:!0,sessionId:i.sessionId,message:"Delete completed successfully"}}async executeModify(e){const{options:t}=e;this.logger.info("Executing modify operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting modify...");const s={file:t.file,populationId:t.populationId,populationName:t.populationName,updateFields:t.updateFields||[]},i=await this.apiClient.post("/api/modify",s);if(!i.success)throw new Error(i.error||"Modify failed");return await this.trackOperationProgress(e,i.sessionId),{success:!0,sessionId:i.sessionId,message:"Modify completed successfully"}}async trackOperationProgress(e,t){return new Promise((s,i)=>{"undefined"!=typeof EventSource?this.trackProgressViaSSE(e,t,s,i):this.trackProgressViaPolling(e,t,s,i)})}trackProgressViaSSE(e,t,s,i){const n=new EventSource(`/api/progress/${t}`);n.onmessage=t=>{try{const a=JSON.parse(t.data);this.handleProgressUpdate(e,a),"completed"===a.status?(n.close(),s(a)):"failed"===a.status&&(n.close(),i(new Error(a.error||"Operation failed")))}catch(e){this.logger.error("Error parsing SSE data",{error:e.message})}},n.onerror=a=>{this.logger.error("SSE connection error",{error:a}),n.close(),this.trackProgressViaPolling(e,t,s,i)}}async trackProgressViaPolling(e,t,s,i){const poll=async()=>{try{const n=await this.apiClient.get(`/api/progress/${t}`);n.success?(this.handleProgressUpdate(e,n.data),"completed"===n.data.status?s(n.data):"failed"===n.data.status?i(new Error(n.data.error||"Operation failed")):setTimeout(poll,1e3)):i(new Error(n.error||"Failed to get progress"))}catch(e){i(e)}};poll()}handleProgressUpdate(e,t){e.progress={current:t.current||0,total:t.total||0,percentage:t.percentage||0,message:t.message||"Processing..."},this.uiManager&&this.uiManager.updateProgress(e.progress.current,e.progress.total,e.progress.message),this.logger.debug("Progress updated",{type:e.type,progress:e.progress})}updateOperationProgress(e,t,s,i){const n=s>0?Math.round(t/s*100):0;e.progress={current:t,total:s,percentage:n,message:i},this.uiManager&&this.uiManager.updateProgress(t,s,i),this.logger.debug("Operation progress updated",{type:e.type,progress:e.progress})}async runPreChecks(e){const t=this.preChecks.get(e.type);t&&(this.logger.debug("Running pre-checks",{type:e.type}),await t(e))}async validateOperation(e){const t=this.validators.get(e.type);t&&(this.logger.debug("Validating operation",{type:e.type}),await t(e))}async runPostChecks(e){const t=this.postChecks.get(e.type);t&&(this.logger.debug("Running post-checks",{type:e.type}),await t(e))}finalizeOperation(){this.currentOperation&&(this.operationHistory.push({...this.currentOperation}),this.operationHistory.length>100&&(this.operationHistory=this.operationHistory.slice(-100)),this.currentOperation=null),this.isOperationRunning=!1,this.logger.debug("Operation finalized")}registerDefaultValidators(){this.validators.set(this.operationTypes.IMPORT,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for import");if(!t.populationId)throw new Error("No population selected for import")}),this.validators.set(this.operationTypes.EXPORT,async e=>{const{options:t}=e;if(!t.populationId)throw new Error("No population selected for export")}),this.validators.set(this.operationTypes.DELETE,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for delete");if(!t.populationId)throw new Error("No population selected for delete")}),this.validators.set(this.operationTypes.MODIFY,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for modify");if(!t.populationId)throw new Error("No population selected for modify")})}registerDefaultPreChecks(){const commonPreCheck=async e=>{if(window.app&&"function"==typeof window.app.checkTokenAndRedirect){if(!await window.app.checkTokenAndRedirect(e.type))throw new Error("Invalid or expired token")}};Object.values(this.operationTypes).forEach(e=>{this.preChecks.set(e,commonPreCheck)})}registerDefaultPostChecks(){const commonPostCheck=async e=>{this.logger.info("Operation completed",{type:e.type,duration:e.endTime-e.startTime,status:e.status})};Object.values(this.operationTypes).forEach(e=>{this.postChecks.set(e,commonPostCheck)})}generateOperationId(){return`op_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async cancelOperation(){if(this.currentOperation&&this.isOperationRunning){this.logger.info("Cancelling operation",{type:this.currentOperation.type});try{this.currentOperation.sessionId&&await this.apiClient.post(`/api/cancel/${this.currentOperation.sessionId}`),this.currentOperation.status="cancelled",this.currentOperation.endTime=Date.now(),this.logger.info("Operation cancelled successfully")}catch(e){this.logger.error("Failed to cancel operation",{error:e.message})}finally{this.finalizeOperation()}}}getCurrentOperation(){return this.currentOperation?{...this.currentOperation}:null}getOperationHistory(){return[...this.operationHistory]}isRunning(){return this.isOperationRunning}getOperationStats(){const e={total:this.operationHistory.length,byType:{},byStatus:{},averageDuration:0};let t=0;return this.operationHistory.forEach(s=>{e.byType[s.type]||(e.byType[s.type]=0),e.byType[s.type]++,e.byStatus[s.status]||(e.byStatus[s.status]=0),e.byStatus[s.status]++,s.endTime&&s.startTime&&(t+=s.endTime-s.startTime)}),this.operationHistory.length>0&&(e.averageDuration=Math.round(t/this.operationHistory.length)),e}}},{"../utils/browser-logging-service.js":99}],96:[function(e,t,s){"use strict";function _interopRequireWildcard(e,t){if("function"==typeof WeakMap)var s=new WeakMap,i=new WeakMap;return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var n,a,l={__proto__:null,default:e};if(null===e||"object"!=typeof e&&"function"!=typeof e)return l;if(n=t?i:s){if(n.has(e))return n.get(e);n.set(e,l)}for(const t in e)"default"!==t&&{}.hasOwnProperty.call(e,t)&&((a=(n=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,t))&&(a.get||a.set)?n(l,t,a):l[t]=e[t]);return l})(e,t)}Object.defineProperty(s,"__esModule",{value:!0}),s.RealtimeCommunicationSubsystem=void 0;s.RealtimeCommunicationSubsystem=class RealtimeCommunicationSubsystem{constructor(e,t){this.logger=e,this.uiManager=t,this.socket=null,this.eventSource=null,this.fallbackPolling=null,this.connectionType=null,this.isConnected=!1,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.eventHandlers=new Map,this.logger.info("Real-time Communication Subsystem initialized")}async init(){try{this.setupConnectionMonitoring(),this.logger.info("Real-time Communication Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Real-time Communication Subsystem",e),e}}async establishConnection(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{preferredTransport:s="socketio",enableFallback:i=!0,timeout:n=1e4}=t;this.logger.info("Establishing real-time connection",{sessionId:e,preferredTransport:s,enableFallback:i});try{"socketio"===s?await this.connectSocketIO(e,n):"sse"===s?await this.connectSSE(e,n):"websocket"===s&&await this.connectWebSocket(e,n)}catch(t){if(this.logger.warn("Primary transport failed",{error:t.message}),!i)throw t;await this.tryFallbackConnections(e)}}async connectSocketIO(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise(async(i,n)=>{try{const{io:a}=await Promise.resolve().then(()=>_interopRequireWildcard(e("socket.io-client")));this.socket=a({transports:["polling"],reconnectionAttempts:this.maxReconnectAttempts,reconnectionDelay:this.reconnectDelay,timeout:s,forceNew:!0,autoConnect:!0});const l=setTimeout(()=>{n(new Error("Socket.IO connection timeout"))},s);this.socket.on("connect",()=>{clearTimeout(l),this.connectionType="socketio",this.isConnected=!0,this.reconnectAttempts=0,this.setupSocketIOHandlers(),this.socket.emit("registerSession",t),this.logger.info("Socket.IO connected successfully"),this.uiManager.showSuccess("Real-time connection established (Socket.IO)"),i()}),this.socket.on("connect_error",e=>{clearTimeout(l),this.logger.error("Socket.IO connection error",e),n(e)}),this.setupSocketIOHandlers()}catch(e){this.logger.error("Failed to initialize Socket.IO",e),n(e)}})}async connectSSE(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((s,i)=>{try{const n=`/api/progress/stream/${e}`;this.eventSource=new EventSource(n);const a=setTimeout(()=>{i(new Error("SSE connection timeout"))},t);this.eventSource.onopen=()=>{clearTimeout(a),this.connectionType="sse",this.isConnected=!0,this.reconnectAttempts=0,this.logger.info("SSE connected successfully"),this.uiManager.showSuccess("Real-time connection established (SSE)"),s()},this.eventSource.onerror=e=>{clearTimeout(a),this.logger.error("SSE connection error",e),i(e)},this.setupSSEHandlers()}catch(e){this.logger.error("Failed to initialize SSE",e),i(e)}})}async connectWebSocket(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;return new Promise((s,i)=>{try{const n=`ws://${window.location.host}/ws/${e}`;this.websocket=new WebSocket(n);const a=setTimeout(()=>{i(new Error("WebSocket connection timeout"))},t);this.websocket.onopen=()=>{clearTimeout(a),this.connectionType="websocket",this.isConnected=!0,this.reconnectAttempts=0,this.logger.info("WebSocket connected successfully"),this.uiManager.showSuccess("Real-time connection established (WebSocket)"),s()},this.websocket.onerror=e=>{clearTimeout(a),this.logger.error("WebSocket connection error",e),i(e)},this.setupWebSocketHandlers()}catch(e){this.logger.error("Failed to initialize WebSocket",e),i(e)}})}async tryFallbackConnections(e){const t=["sse","websocket","polling"];for(const s of t)if(s!==this.connectionType)try{return this.logger.info(`Trying fallback transport: ${s}`),void("sse"===s?await this.connectSSE(e):"websocket"===s?await this.connectWebSocket(e):"polling"===s&&await this.setupFallbackPolling(e))}catch(e){this.logger.warn(`Fallback transport ${s} failed`,e)}throw new Error("All connection methods failed")}setupSocketIOHandlers(){this.socket.on("progress",e=>{this.handleProgressEvent(e)}),this.socket.on("completion",e=>{this.handleCompletionEvent(e)}),this.socket.on("error",e=>{this.handleErrorEvent(e)}),this.socket.on("disconnect",e=>{this.handleDisconnection(e)}),this.socket.on("reconnect",()=>{this.handleReconnection()})}setupSSEHandlers(){this.eventSource.addEventListener("progress",e=>{const t=JSON.parse(e.data);this.handleProgressEvent(t)}),this.eventSource.addEventListener("completion",e=>{const t=JSON.parse(e.data);this.handleCompletionEvent(t)}),this.eventSource.addEventListener("error",e=>{const t=JSON.parse(e.data);this.handleErrorEvent(t)})}setupWebSocketHandlers(){this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);switch(t.type){case"progress":this.handleProgressEvent(t.data);break;case"completion":this.handleCompletionEvent(t.data);break;case"error":this.handleErrorEvent(t.data)}}catch(e){this.logger.error("Failed to parse WebSocket message",e)}},this.websocket.onclose=()=>{this.handleDisconnection("WebSocket closed")}}async setupFallbackPolling(e){this.connectionType="polling",this.isConnected=!0,this.fallbackPolling=setInterval(async()=>{try{const t=await fetch(`/api/progress/poll/${e}`),s=await t.json();s.events&&s.events.length>0&&s.events.forEach(e=>{switch(e.type){case"progress":this.handleProgressEvent(e.data);break;case"completion":this.handleCompletionEvent(e.data);break;case"error":this.handleErrorEvent(e.data)}})}catch(e){this.logger.error("Polling request failed",e)}},2e3),this.logger.info("Fallback polling established"),this.uiManager.showInfo("Using polling for updates (limited real-time capability)")}handleProgressEvent(e){this.logger.info("Progress event received",e),this.triggerEvent("progress",e)}handleCompletionEvent(e){this.logger.info("Completion event received",e),this.triggerEvent("completion",e),this.disconnect()}handleErrorEvent(e){this.logger.error("Error event received",e),this.triggerEvent("error",e)}handleDisconnection(e){this.isConnected=!1,this.logger.warn("Connection lost",{reason:e,type:this.connectionType}),this.uiManager.showWarning("Real-time connection lost"),this.attemptReconnection()}handleReconnection(){this.isConnected=!0,this.reconnectAttempts=0,this.logger.info("Connection restored"),this.uiManager.showSuccess("Real-time connection restored")}async attemptReconnection(){if(this.reconnectAttempts>=this.maxReconnectAttempts)return this.logger.error("Max reconnection attempts reached"),void this.uiManager.showError("Connection Lost","Unable to restore real-time connection");this.reconnectAttempts++;const e=this.reconnectDelay*Math.pow(2,this.reconnectAttempts-1);this.logger.info("Attempting reconnection",{attempt:this.reconnectAttempts,delay:e}),setTimeout(async()=>{try{"socketio"===this.connectionType&&this.socket&&this.socket.connect()}catch(e){this.logger.error("Reconnection failed",e),this.attemptReconnection()}},e)}setupConnectionMonitoring(){setInterval(()=>{this.isConnected&&this.checkConnectionHealth()},3e4)}checkConnectionHealth(){"socketio"===this.connectionType&&this.socket?this.socket.connected||this.handleDisconnection("Health check failed"):"sse"===this.connectionType&&this.eventSource?this.eventSource.readyState===EventSource.CLOSED&&this.handleDisconnection("SSE connection closed"):"websocket"===this.connectionType&&this.websocket&&this.websocket.readyState===WebSocket.CLOSED&&this.handleDisconnection("WebSocket connection closed")}on(e,t){this.eventHandlers.has(e)||this.eventHandlers.set(e,[]),this.eventHandlers.get(e).push(t)}off(e,t){if(this.eventHandlers.has(e)){const s=this.eventHandlers.get(e),i=s.indexOf(t);i>-1&&s.splice(i,1)}}triggerEvent(e,t){this.eventHandlers.has(e)&&this.eventHandlers.get(e).forEach(s=>{try{s(t)}catch(t){this.logger.error("Event handler error",{event:e,error:t.message})}})}disconnect(){this.isConnected=!1,this.socket&&(this.socket.disconnect(),this.socket=null),this.eventSource&&(this.eventSource.close(),this.eventSource=null),this.websocket&&(this.websocket.close(),this.websocket=null),this.fallbackPolling&&(clearInterval(this.fallbackPolling),this.fallbackPolling=null),this.connectionType=null,this.logger.info("All real-time connections closed")}getConnectionStatus(){return{isConnected:this.isConnected,connectionType:this.connectionType,reconnectAttempts:this.reconnectAttempts}}}},{"socket.io-client":31}],97:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.TokenNotificationSubsystem=void 0,console.log("⚠️ Old token notification system disabled - using Single Token Banner System");class TokenNotificationSubsystem{constructor(){console.log("🚫 TokenNotificationSubsystem disabled - using Single Token Banner System")}init(){}checkTokenStatus(){}destroy(){}}s.TokenNotificationSubsystem=TokenNotificationSubsystem;s.default=TokenNotificationSubsystem},{}],98:[function(e,t,s){(function(e){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ViewManagementSubsystem=void 0;s.ViewManagementSubsystem=class ViewManagementSubsystem{constructor(e,t){this.logger=e,this.uiManager=t,this.currentView="home",this.previousView=null,this.viewHistory=[],this.viewInitializers=new Map,this.logger.info("View Management Subsystem initialized with default home view")}async init(){try{this.setupNavigationListeners(),this.registerViewInitializers(),await this.showInitialView(),this.logger.info("View Management Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize View Management Subsystem",e),e}}setupNavigationListeners(){document.querySelectorAll("[data-view]").forEach(e=>{e.addEventListener("click",async t=>{t.preventDefault();const s=e.getAttribute("data-view");await this.showView(s)})}),window.addEventListener("popstate",e=>{e.state&&e.state.view&&this.showView(e.state.view,!1)}),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&this.handleKeyboardNavigation(e)})}registerViewInitializers(){this.viewInitializers.set("import",async()=>{await this.initializeImportView()}),this.viewInitializers.set("export",async()=>{await this.initializeExportView()}),this.viewInitializers.set("modify",async()=>{await this.initializeModifyView()}),this.viewInitializers.set("delete-csv",async()=>{await this.initializeDeleteView()}),this.viewInitializers.set("settings",async()=>{await this.initializeSettingsView()}),this.viewInitializers.set("logs",async()=>{await this.initializeLogsView()}),this.viewInitializers.set("history",async()=>{await this.initializeHistoryView()}),this.viewInitializers.set("analytics",async()=>{await this.initializeAnalyticsView()})}async showView(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(e&&e!==this.currentView)try{if(this.logger.info("Switching to view",{from:this.currentView,to:e}),!this.isValidView(e))return void(this.uiManager&&"function"==typeof this.uiManager.showError&&this.uiManager.showError("Navigation Error",`Invalid view: ${e}`));this.previousView=this.currentView,this.hideCurrentView(),await this.displayView(e),this.updateNavigationState(e),t&&this.updateBrowserHistory(e),await this.initializeView(e),this.currentView=e,this.viewHistory.push(e),this.updatePageTitle(e),this.triggerViewChangeEvent(e,this.previousView)}catch(t){this.logger.error("Failed to switch view",{view:e,error:t.message}),this.uiManager&&"function"==typeof this.uiManager.showError&&this.uiManager.showError("Navigation Error",`Failed to switch to ${e} view: ${t.message}`)}}hideCurrentView(){const e=document.getElementById(`${this.currentView}-view`);e&&(e.style.display="none",e.classList.remove("active"))}async displayView(e){const t=document.getElementById(`${e}-view`);if(!t)throw new Error(`View element not found: ${e}-view`);t.style.display="block",t.classList.add("active"),t.style.opacity="0",t.style.transition="opacity 0.3s ease-in-out",requestAnimationFrame(()=>{t.style.opacity="1"})}updateNavigationState(e){document.querySelectorAll("[data-view]").forEach(t=>{t.getAttribute("data-view")===e?t.classList.add("active"):t.classList.remove("active")}),this.updatePageTitle(e)}updateBrowserHistory(e){const t={view:e,timestamp:Date.now()},s=this.getViewTitle(e),i=`#${e}`;history.pushState(t,s,i)}async initializeView(e){const t=this.viewInitializers.get(e);if(t)try{await t()}catch(t){this.logger.error("View initialization failed",{view:e,error:t.message})}}async initializeImportView(){window.app&&"function"==typeof window.app.loadPopulations&&await window.app.loadPopulations("import-population-select");const e=document.getElementById("csv-file");e&&(e.value=""),this.resetProgressDisplay()}async initializeExportView(){this.logger.debug("🔄 VIEW: Initializing export view..."),window.app&&window.app.subsystems&&window.app.subsystems.exportManager?(this.logger.debug("🔄 VIEW: Found export manager, loading populations..."),"function"==typeof window.app.subsystems.exportManager.loadPopulations?(await window.app.subsystems.exportManager.loadPopulations(),this.logger.info("🔄 VIEW: Export populations loaded successfully")):this.logger.error("🔄 VIEW: Export manager loadPopulations method not found")):this.logger.error("🔄 VIEW: Export manager not found in app subsystems",{hasApp:!!window.app,hasSubsystems:!(!window.app||!window.app.subsystems),availableSubsystems:window.app&&window.app.subsystems?Object.keys(window.app.subsystems):[]})}async initializeModifyView(){window.app&&"function"==typeof window.app.loadPopulations&&await window.app.loadPopulations("modify-population-select");const e=document.getElementById("modify-csv-file");e&&(e.value="")}async initializeDeleteView(){window.deleteManager&&"function"==typeof window.deleteManager.loadPopulations&&await window.deleteManager.loadPopulations()}async initializeSettingsView(){window.app&&"function"==typeof window.app.loadSettings&&await window.app.loadSettings()}async initializeLogsView(){window.logManager&&"function"==typeof window.logManager.loadLogs&&await window.logManager.loadLogs()}async initializeHistoryView(){try{if(this.app&&this.app.subsystems&&this.app.subsystems.history){this.logger.debug("Initializing history view with HistorySubsystem");document.getElementById("history-view")||this.logger.warn("History view container not found")}else this.logger.warn("HistorySubsystem not available for history view initialization")}catch(e){this.logger.error("Failed to initialize history view:",e)}}async initializeAnalyticsView(){const e="[AnalyticsView]";this.logger.debug(`${e} Starting initialization`);try{this.showLoadingState("Loading analytics dashboard...");const t=document.getElementById("analytics-view");if(!t)throw new Error("Analytics view container (#analytics-view) not found in the DOM");t.innerHTML="",t.style.display="block";const s=document.createElement("div");if(s.id="analytics-dashboard-container",t.appendChild(s),!window.app)throw new Error("App instance not available on window");if(!window.app.subsystems?.analyticsDashboard)throw new Error("Analytics dashboard subsystem not available");if(!window.app.analyticsDashboardUI)try{this.logger.debug(`${e} Initializing AnalyticsDashboardUI...`),window.app.analyticsDashboardUI=new AnalyticsDashboardUI(window.app.eventBus,window.app.subsystems.analyticsDashboard),await window.app.analyticsDashboardUI.init(),"function"==typeof window.app.analyticsDashboardUI.createDashboardHTML&&window.app.analyticsDashboardUI.createDashboardHTML(),this.logger.info(`${e} AnalyticsDashboardUI initialized successfully`)}catch(e){throw new Error(`Failed to initialize Analytics Dashboard UI: ${e.message}`)}setTimeout(async()=>{try{window.app.analyticsDashboardUI&&(await window.app.analyticsDashboardUI.show(),this.logger.info(`${e} Analytics dashboard shown successfully`),this.hideLoadingState())}catch(e){throw new Error(`Failed to show analytics dashboard: ${e.message}`)}},100)}catch(t){const s=`Failed to initialize analytics view: ${t.message}`;this.logger.error(`${e} ${s}`,{error:t});(document.getElementById("analytics-view")||document.body).innerHTML=`\n                <div class="alert alert-danger" style="margin: 20px;">\n                    <h4>Error Loading Analytics Dashboard</h4>\n                    <p>${s}</p>\n                    <p>Please check the browser console for more details.</p>\n                    <button id="retry-analytics" class="btn btn-primary mt-3">\n                        <i class="fas fa-sync-alt"></i> Retry\n                    </button>\n                </div>\n            `;const i=document.getElementById("retry-analytics");i&&i.addEventListener("click",()=>this.initializeAnalyticsView()),this.hideLoadingState()}}showLoadingState(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Loading...";const t=document.getElementById("analytics-view");t&&(t.innerHTML=`\n            <div class="loading-overlay" style="\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100%;\n                padding: 2rem;\n                text-align: center;\n                color: #666;\n            ">\n                <div class="spinner-border text-primary mb-3" role="status" style="width: 3rem; height: 3rem;">\n                    <span class="visually-hidden">Loading...</span>\n                </div>\n                <h4>${e}</h4>\n                <p class="mt-2">Please wait while we load the analytics dashboard</p>\n            </div>\n        `,t.style.display="block")}hideLoadingState(){}showErrorState(t){const s=document.getElementById("analytics-view");if(!s)return;const i="development"===e.env.NODE_ENV?`\n\n${(new Error).stack}`:"";s.innerHTML=`\n            <div class="alert alert-danger" style="margin: 20px;">\n                <h4><i class="fas fa-exclamation-triangle me-2"></i>Error Loading Analytics</h4>\n                <p>${t}</p>\n                <div class="mt-3">\n                    <button class="btn btn-primary" onclick="window.location.reload()">\n                        <i class="fas fa-sync-alt me-2"></i>Refresh Page\n                    </button>\n                </div>\n                ${"development"===e.env.NODE_ENV?`<pre class="mt-3" style="background: #f8f9fa; padding: 10px; border-radius: 4px; overflow: auto;">${t}${i}</pre>`:""}\n            </div>\n        `,s.style.display="block"}async showInitialView(){let e="home";const t=window.location.hash.substring(1);t&&this.isValidView(t)&&(e=t),await this.showView(e,!1)}isValidView(e){return["home","import","export","modify","delete-csv","settings","logs","history","analytics"].includes(e)}getViewTitle(e){return{import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History",analytics:"Analytics Dashboard"}[e]||"PingOne Import Tool"}updatePageTitle(e){const t=this.getViewTitle(e);document.title=`${t} - PingOne Import Tool`}handleKeyboardNavigation(e){const t={1:"import",2:"export",3:"modify",4:"delete-csv",5:"settings",6:"logs",7:"history"}[e.key];t&&(e.preventDefault(),this.showView(t))}resetProgressDisplay(){this.uiManager&&"function"==typeof this.uiManager.hideProgress&&this.uiManager.hideProgress(),this.uiManager&&"function"==typeof this.uiManager.updateProgress&&this.uiManager.updateProgress(0,1,"")}triggerViewChangeEvent(e,t){const s=new CustomEvent("viewChanged",{detail:{newView:e,oldView:t,timestamp:Date.now()}});document.dispatchEvent(s)}async goBack(){this.previousView&&await this.showView(this.previousView)}getCurrentView(){return this.currentView}getViewHistory(){return[...this.viewHistory]}clearViewHistory(){this.viewHistory=[]}}}).call(this)}).call(this,e("_process"))},{_process:29}],99:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BrowserLoggingService=void 0,s.createLogger=createLogger,s.logger=s.default=void 0;class BrowserLoggingService{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.serviceName=e.serviceName||"pingone-import-client",this.environment=e.environment||"development",this.logLevel=e.logLevel||this.getDefaultLogLevel(),this.enableConsole=!1!==e.enableConsole,this.enableServer=!1!==e.enableServer,this.levels={error:0,warn:1,info:2,debug:3},this.correlationId=this.generateCorrelationId(),this.performanceMarks=new Map,this.initializeTransports()}getDefaultLogLevel(){switch(this.environment){case"production":return"info";case"test":return"warn";default:return"debug"}}generateCorrelationId(){return`${this.serviceName}-${Date.now()}-${Math.random().toString(36).substr(2,8)}`}initializeTransports(){this.transports=[],this.enableConsole&&this.transports.push({name:"console",log:this.logToConsole.bind(this)}),this.enableServer&&this.transports.push({name:"server",log:this.logToServer.bind(this)})}shouldLog(e){return this.levels[e]<=this.levels[this.logLevel]}formatLogEntry(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{timestamp:(new Date).toISOString(),level:e.toUpperCase(),message:t,service:this.serviceName,environment:this.environment,correlationId:this.correlationId,source:"client",url:window.location.href,userAgent:navigator.userAgent,...s}}logToConsole(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.shouldLog(e))return;const i=this.formatLogEntry(e,t,s);let n=`[${i.timestamp}] [${i.correlationId.slice(-8)}] [${i.service}] ${e.toUpperCase()}: ${t}`;switch(Object.keys(s).length>0&&(n+=`\n${JSON.stringify(s,null,2)}`),e){case"error":console.error(n);break;case"warn":console.warn(n);break;case"info":console.info(n);break;case"debug":console.debug(n);break;default:console.log(n)}}async logToServer(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const i=this.formatLogEntry(e,t,s);await fetch("/api/logs/client",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)})}catch(e){this.enableConsole&&console.warn("Failed to send log to server:",e.message)}}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.shouldLog(e)&&this.transports.forEach(i=>{try{i.log(e,t,s)}catch(e){console.error(`Error in ${i.name} transport:`,e)}})}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}startTimer(e){this.performanceMarks.set(e,performance.now()),this.debug(`Timer started: ${e}`)}endTimer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=this.performanceMarks.get(e);if(!s)return this.warn(`Timer not found: ${e}`),0;const i=performance.now()-s;return this.performanceMarks.delete(e),this.info(`Timer completed: ${e}`,{duration:`${i.toFixed(2)}ms`,...t}),i}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=new BrowserLoggingService({serviceName:this.serviceName,environment:this.environment,logLevel:this.logLevel,enableConsole:this.enableConsole,enableServer:this.enableServer}),s=t.formatLogEntry.bind(t);return t.formatLogEntry=function(t,i){return s(t,i,{...e,...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}})},t}setCorrelationId(e){this.correlationId=e}getCorrelationId(){return this.correlationId}}function createLogger(){return new BrowserLoggingService(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})}s.BrowserLoggingService=BrowserLoggingService;s.logger=createLogger({serviceName:"pingone-import-client"});s.default=BrowserLoggingService},{}],100:[function(e,t,s){"use strict";var i=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.BulletproofAppIntegration=void 0;var n=i(e("./bulletproof-global-handler.js")),a=e("./bulletproof-subsystem-wrapper.js"),l=e("./bulletproof-network-client.js");class BulletproofAppIntegration{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.app=e,this.logger=t||console,this.isInitialized=!1,this.protectionLayers=new Map,this.healthCheckInterval=null,this.stats={startTime:Date.now(),protectionActivations:0,recoveryAttempts:0,criticalErrors:0},this.initialize()}async initialize(){try{this.logger.info("🛡️ BULLETPROOF: Starting bulletproof integration..."),this.protectionLayers.set("global",n.default),await this.initializeBulletproofDOM(),this.protectionLayers.set("network",l.bulletproofNetworkClient),await this.initializeBulletproofSubsystems(),await this.initializeBulletproofUI(),await this.initializeBulletproofState(),await this.initializeBulletproofBundle(),this.startHealthMonitoring(),this.setupEmergencyRecovery(),this.isInitialized=!0,this.logger.info("🛡️ BULLETPROOF: All protection layers initialized successfully")}catch(e){this.logger.error("🛡️ BULLETPROOF: Integration initialization failed",e),this.setupEmergencyFallbacks()}}async initializeBulletproofDOM(){try{if(window.SafeDOM){const e=window.SafeDOM;window.safeDOM=new e(this.logger),this.protectionLayers.set("dom",window.safeDOM),this.logger.debug("🛡️ BULLETPROOF: DOM protection initialized")}}catch(e){this.logger.error("🛡️ BULLETPROOF: DOM protection initialization failed",e)}}async initializeBulletproofSubsystems(){try{if(!this.app.subsystems)return void this.logger.warn("🛡️ BULLETPROOF: No subsystems found to protect");const e={};for(const[t,s]of Object.entries(this.app.subsystems))try{s&&"object"==typeof s&&(e[t]=(0,a.makeBulletproof)(s,t,this.logger),this.logger.debug(`🛡️ BULLETPROOF: Protected subsystem: ${t}`))}catch(i){this.logger.error(`🛡️ BULLETPROOF: Failed to protect subsystem ${t}`,i),e[t]=s}this.app.subsystems=e,this.protectionLayers.set("subsystems",e),this.logger.info(`🛡️ BULLETPROOF: Protected ${Object.keys(e).length} subsystems`)}catch(e){this.logger.error("🛡️ BULLETPROOF: Subsystem protection initialization failed",e)}}async initializeBulletproofUI(){try{this.app.uiManager&&(this.app.uiManager=(0,a.makeBulletproof)(this.app.uiManager,"UIManager",this.logger)),this.setupUIErrorHandlers(),this.protectionLayers.set("ui",!0),this.logger.debug("🛡️ BULLETPROOF: UI protection initialized")}catch(e){this.logger.error("🛡️ BULLETPROOF: UI protection initialization failed",e)}}setupUIErrorHandlers(){try{document.addEventListener("click",e=>{},!0)}catch(e){this.logger.error("🛡️ BULLETPROOF: Failed to set up UI error handlers",e)}}async initializeBulletproofState(){try{this.protectStorage(),this.protectionLayers.set("state",!0),this.logger.debug("🛡️ BULLETPROOF: State protection initialized")}catch(e){this.logger.error("🛡️ BULLETPROOF: State protection initialization failed",e)}}protectStorage(){try{const e=localStorage.setItem;localStorage.setItem=function(t,s){try{return e.call(this,t,s)}catch(e){console.warn("🛡️ BULLETPROOF: localStorage.setItem failed",e)}}}catch(e){this.logger.error("🛡️ BULLETPROOF: Storage protection failed",e)}}async initializeBulletproofBundle(){try{document.addEventListener("error",e=>{"SCRIPT"===e.target.tagName&&this.handleScriptError(e.target.src,e.error)},!0),this.protectionLayers.set("bundle",!0),this.logger.debug("🛡️ BULLETPROOF: Bundle protection initialized")}catch(e){this.logger.error("🛡️ BULLETPROOF: Bundle protection initialization failed",e)}}handleScriptError(e,t){try{this.logger.error("🛡️ BULLETPROOF: Script loading failed",{src:e,error:t}),e&&e.includes("bundle")&&this.showEmergencyUI()}catch(t){this.logger.error("🛡️ BULLETPROOF: Script error handling failed",t)}}startHealthMonitoring(){try{this.healthCheckInterval=setInterval(()=>{this.performHealthCheck()},6e4),this.logger.debug("🛡️ BULLETPROOF: Health monitoring started")}catch(e){this.logger.error("🛡️ BULLETPROOF: Health monitoring setup failed",e)}}performHealthCheck(){try{const e={timestamp:Date.now(),uptime:Date.now()-this.stats.startTime,protectionLayers:this.protectionLayers.size,errors:n.default.getStats()};this.logger.debug("🛡️ BULLETPROOF: Health check",e)}catch(e){this.logger.error("🛡️ BULLETPROOF: Health check failed",e)}}setupEmergencyRecovery(){try{document.addEventListener("keydown",e=>{e.ctrlKey&&e.shiftKey&&"R"===e.key&&(e.preventDefault(),this.showRecoveryUI("Manual trigger"))})}catch(e){this.logger.error("🛡️ BULLETPROOF: Emergency recovery setup failed",e)}}showRecoveryUI(e){try{const t=`\n                <div id="bulletproof-recovery" style="\n                    position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n                    background: rgba(0,0,0,0.8); display: flex; align-items: center; justify-content: center;\n                    font-family: Arial, sans-serif; z-index: 999999; color: white;\n                ">\n                    <div style="background: #2c3e50; padding: 30px; border-radius: 8px; text-align: center; max-width: 500px;">\n                        <h2 style="color: #3498db; margin-bottom: 20px;">🛡️ Recovery Mode</h2>\n                        <p>The application detected an issue and activated recovery mode.</p>\n                        <p><strong>Reason:</strong> ${e}</p>\n                        <div style="margin: 20px 0;">\n                            <button onclick="location.reload()" style="\n                                background: #3498db; color: white; border: none; padding: 10px 20px;\n                                border-radius: 4px; cursor: pointer; margin: 5px;\n                            ">Restart Application</button>\n                            <button onclick="document.getElementById('bulletproof-recovery').remove()" style="\n                                background: #95a5a6; color: white; border: none; padding: 10px 20px;\n                                border-radius: 4px; cursor: pointer; margin: 5px;\n                            ">Continue Anyway</button>\n                        </div>\n                        <small>Press Ctrl+Shift+R to trigger recovery mode manually</small>\n                    </div>\n                </div>\n            `;document.body.insertAdjacentHTML("beforeend",t)}catch(e){this.showEmergencyUI()}}showEmergencyUI(){try{document.body.innerHTML='\n                <div style="\n                    position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n                    background: #e74c3c; display: flex; align-items: center; justify-content: center;\n                    font-family: Arial, sans-serif; color: white;\n                ">\n                    <div style="text-align: center; padding: 20px;">\n                        <h1>🛡️ Emergency Protection</h1>\n                        <p>The application encountered a critical error and activated emergency protection.</p>\n                        <p>Please refresh the page to restart the application.</p>\n                        <button onclick="location.reload()" style="\n                            background: white; color: #e74c3c; border: none; padding: 15px 30px;\n                            border-radius: 4px; cursor: pointer; font-size: 16px; margin-top: 20px;\n                        ">Refresh Page</button>\n                    </div>\n                </div>\n            '}catch(e){setTimeout(()=>location.reload(),5e3)}}setupEmergencyFallbacks(){try{this.logger.warn("🛡️ BULLETPROOF: Setting up emergency fallbacks"),window.addEventListener("error",e=>{console.error("Emergency error handler:",e)}),window.addEventListener("unhandledrejection",e=>{console.error("Emergency promise rejection handler:",e.reason),e.preventDefault()})}catch(e){console.error("Emergency fallback setup failed:",e)}}getStats(){try{return{...this.stats,uptime:Date.now()-this.stats.startTime,isInitialized:this.isInitialized,protectionLayers:Array.from(this.protectionLayers.keys()),globalHandler:n.default.getStats(),networkClient:l.bulletproofNetworkClient.getStats()}}catch(e){return{error:"Stats unavailable"}}}}s.BulletproofAppIntegration=BulletproofAppIntegration;s.default=BulletproofAppIntegration},{"./bulletproof-global-handler.js":101,"./bulletproof-network-client.js":102,"./bulletproof-subsystem-wrapper.js":103,"@babel/runtime/helpers/interopRequireDefault":2}],101:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;const i=new class BulletproofGlobalHandler{constructor(){this.errorCount=0,this.maxErrors=100,this.recoveryAttempts=0,this.maxRecoveryAttempts=5,this.isRecovering=!1,this.criticalErrors=[],this.lastErrorTime=0,this.errorThrottleMs=1e3,this.initialize()}initialize(){try{window.addEventListener("error",e=>{this.handleError(e.error||e,"unhandled_error",{filename:e.filename,lineno:e.lineno,colno:e.colno,message:e.message})}),window.addEventListener("unhandledrejection",e=>{this.handleError(e.reason,"unhandled_promise_rejection",{promise:e.promise}),e.preventDefault()}),window.addEventListener("error",e=>{e.target!==window&&this.handleError(new Error(`Resource failed to load: ${e.target.src||e.target.href}`),"resource_error",{element:e.target.tagName,source:e.target.src||e.target.href})},!0),console.log("🛡️ BULLETPROOF: Global error handler initialized")}catch(e){this.emergencyLog("Failed to initialize global error handler",e)}}handleError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const i=Date.now();if(i-this.lastErrorTime<this.errorThrottleMs)return;if(this.lastErrorTime=i,this.errorCount++,this.errorCount>this.maxErrors)return void this.emergencyShutdown();const n=this.createSafeError(e);this.safeLog("error",`🛡️ BULLETPROOF: ${t}`,{error:n,context:s,errorCount:this.errorCount,timestamp:(new Date).toISOString()});const a=this.isCriticalError(n,t);a&&(this.criticalErrors.push({error:n,type:t,context:s,timestamp:(new Date).toISOString()}),this.attemptRecovery(n,t)),this.showUserNotification(n,t,a)}catch(e){this.emergencyLog("Error in error handler",e)}}createSafeError(e){try{return e?{message:String(e.message||e.toString()||"Unknown error"),stack:String(e.stack||"No stack available"),name:String(e.name||"Error"),type:typeof e}:{message:"Unknown error",stack:"No stack available"}}catch(e){return{message:"Error processing error",stack:"No stack available"}}}isCriticalError(e,t){try{const s=["network","fetch","xhr","websocket","bundle","module","import","script","syntax","reference","type"],i=(e.message+" "+e.stack+" "+t).toLowerCase();return s.some(e=>i.includes(e))}catch(e){return!1}}attemptRecovery(e,t){try{if(this.isRecovering||this.recoveryAttempts>=this.maxRecoveryAttempts)return;this.isRecovering=!0,this.recoveryAttempts++,this.safeLog("info","🛡️ BULLETPROOF: Attempting recovery",{attempt:this.recoveryAttempts,errorType:t}),setTimeout(()=>{try{(t.includes("resource")||t.includes("bundle"))&&this.reloadCriticalResources(),(t.includes("subsystem")||t.includes("init"))&&this.reinitializeSubsystems(),(t.includes("cache")||t.includes("storage"))&&this.clearCaches(),this.resetUIState(),this.isRecovering=!1}catch(e){this.emergencyLog("Recovery failed",e),this.isRecovering=!1}},1e3)}catch(e){this.emergencyLog("Recovery attempt failed",e),this.isRecovering=!1}}reloadCriticalResources(){try{document.querySelectorAll('script[src*="bundle"]').forEach(e=>{try{const t=document.createElement("script");t.src=e.src+"?reload="+Date.now(),t.onload=()=>this.safeLog("info","🛡️ BULLETPROOF: Bundle reloaded"),t.onerror=()=>this.safeLog("warn","🛡️ BULLETPROOF: Bundle reload failed"),document.head.appendChild(t)}catch(e){}})}catch(e){this.emergencyLog("Resource reload failed",e)}}reinitializeSubsystems(){try{window.app&&"function"==typeof window.app.initializeSubsystems&&window.app.initializeSubsystems().catch(e=>{this.safeLog("warn","🛡️ BULLETPROOF: Subsystem reinit failed",e)})}catch(e){this.emergencyLog("Subsystem reinit failed",e)}}clearCaches(){try{try{localStorage.clear()}catch(e){}try{sessionStorage.clear()}catch(e){}this.safeLog("info","🛡️ BULLETPROOF: Caches cleared")}catch(e){this.emergencyLog("Cache clear failed",e)}}resetUIState(){try{document.querySelectorAll(".error-modal, .modal").forEach(e=>{try{e.style.display="none"}catch(e){}});document.querySelectorAll(".loading, .spinner").forEach(e=>{try{e.style.display="none"}catch(e){}}),this.safeLog("info","🛡️ BULLETPROOF: UI state reset")}catch(e){this.emergencyLog("UI reset failed",e)}}showUserNotification(e,t,s){try{if(!s)return;const i=this.getUserFriendlyMessage(e,t);this.tryNotificationMethods(i)}catch(e){this.emergencyLog("Notification failed",e)}}getUserFriendlyMessage(e,t){try{const e={network:"Connection issue detected. The app will continue working.",resource_error:"A resource failed to load. The app will recover automatically.",unhandled_promise_rejection:"A background operation encountered an issue.",default:"A minor issue was detected and resolved automatically."};return e[t]||e.default}catch(e){return"The app is working normally."}}tryNotificationMethods(e){try{try{if(window.showToast)return void window.showToast(e,"info")}catch(e){}try{if(window.app&&window.app.uiManager&&window.app.uiManager.showStatusBar)return void window.app.uiManager.showStatusBar(e,"info")}catch(e){}this.safeLog("info","🛡️ BULLETPROOF: "+e)}catch(e){this.emergencyLog("All notification methods failed",e)}}safeLog(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;try{(new Date).toISOString();if(window.logger&&"function"==typeof window.logger[e])return void window.logger[e](t,s);if(console&&"function"==typeof console[e])return void console[e](t,s);console.log(`[${e.toUpperCase()}] ${t}`,s)}catch(e){this.emergencyLog(t,s)}}emergencyLog(e,t){try{const s=(new Date).toISOString(),i=`[${s}] EMERGENCY: ${e}`;console&&(console.error?console.error(i,t):console.log?console.log(i,t):console.warn&&console.warn(i,t)),window.emergencyLogs||(window.emergencyLogs=[]),window.emergencyLogs.push({timestamp:s,message:e,error:t})}catch(e){}}emergencyShutdown(){try{this.safeLog("error","🛡️ BULLETPROOF: Emergency shutdown activated",{errorCount:this.errorCount,maxErrors:this.maxErrors}),this.maxErrors=0;try{document.body.innerHTML='\n                    <div style="\n                        position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n                        background: #f8f9fa; display: flex; align-items: center; justify-content: center;\n                        font-family: Arial, sans-serif; z-index: 999999;\n                    ">\n                        <div style="text-align: center; padding: 20px;">\n                            <h2 style="color: #dc3545;">🛡️ Emergency Protection Activated</h2>\n                            <p>The application detected too many errors and activated emergency protection.</p>\n                            <p>Please refresh the page to restart the application.</p>\n                            <button onclick="location.reload()" style="\n                                background: #007bff; color: white; border: none; padding: 10px 20px;\n                                border-radius: 4px; cursor: pointer; font-size: 16px;\n                            ">Refresh Page</button>\n                        </div>\n                    </div>\n                '}catch(e){setTimeout(()=>location.reload(),5e3)}}catch(e){setTimeout(()=>location.reload(),1e3)}}getStats(){try{return{errorCount:this.errorCount,criticalErrors:this.criticalErrors.length,recoveryAttempts:this.recoveryAttempts,isRecovering:this.isRecovering,lastErrorTime:this.lastErrorTime}}catch(e){return{error:"Stats unavailable"}}}};window.bulletproofHandler=i;s.default=i},{}],102:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.bulletproofNetworkClient=s.BulletproofNetworkClient=void 0;class BulletproofNetworkClient{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=e||console,this.isOnline=navigator.onLine,this.retryAttempts=3,this.retryDelay=1e3,this.maxRetryDelay=1e4,this.requestQueue=[],this.activeRequests=new Map,this.cache=new Map,this.cacheExpiry=3e5,this.stats={requests:0,successes:0,failures:0,retries:0,cacheHits:0},this.initialize()}initialize(){try{window.addEventListener("online",()=>{this.isOnline=!0,this.logger.info("🛡️ BULLETPROOF NETWORK: Back online, processing queued requests"),this.processQueuedRequests()}),window.addEventListener("offline",()=>{this.isOnline=!1,this.logger.warn("🛡️ BULLETPROOF NETWORK: Gone offline, queueing requests")}),setInterval(()=>{this.cleanCache()},6e4),this.logger.debug("🛡️ BULLETPROOF NETWORK: Initialized successfully")}catch(e){this.logger.error("🛡️ BULLETPROOF NETWORK: Initialization failed",e)}}async request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=this.generateRequestId();try{if(this.stats.requests++,!this.validateRequest(e,t))throw new Error("Invalid request parameters");if(!t.method||"GET"===t.method.toUpperCase()){const t=this.getFromCache(e);if(t)return this.stats.cacheHits++,this.logger.debug(`🛡️ BULLETPROOF NETWORK: Cache hit for ${e}`),t}if(!this.isOnline)return this.queueRequest(e,t,s);const i=await this.makeRequestWithRetry(e,t,s);return t.method&&"GET"!==t.method.toUpperCase()||!i.success||this.cacheResponse(e,i),this.stats.successes++,i}catch(i){return this.stats.failures++,this.handleRequestError(e,t,i,s)}}async makeRequestWithRetry(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;try{this.activeRequests.set(s,{url:e,options:t,attempt:i,startTime:Date.now()});const n=t.timeout||3e4,a=new AbortController,l=setTimeout(()=>a.abort(),n),c={...t,signal:a.signal},d=await fetch(e,c);clearTimeout(l);const g=await this.processResponse(d,e,t);return this.activeRequests.delete(s),g}catch(n){if(this.activeRequests.delete(s),i<this.retryAttempts&&this.shouldRetry(n)){this.stats.retries++;const a=this.calculateRetryDelay(i);return this.logger.warn(`🛡️ BULLETPROOF NETWORK: Request failed, retrying in ${a}ms (attempt ${i+1}/${this.retryAttempts})`,{url:e,error:n.message,attempt:i}),await this.delay(a),this.makeRequestWithRetry(e,t,s,i+1)}throw n}}async processResponse(e,t,s){try{const s={success:e.ok,status:e.status,statusText:e.statusText,headers:this.extractHeaders(e.headers),url:t,timestamp:Date.now()};try{const t=e.headers.get("content-type")||"";t.includes("application/json")?s.data=await e.json():t.includes("text/")?s.data=await e.text():s.data=await e.blob()}catch(e){this.logger.warn("🛡️ BULLETPROOF NETWORK: Failed to parse response body",e),s.data=null,s.parseError=e.message}return s}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Failed to process response",e),{success:!1,status:0,statusText:"Processing Error",data:null,error:e.message,timestamp:Date.now()}}}extractHeaders(e){try{const t={};return e&&"function"==typeof e.forEach&&e.forEach((e,s)=>{t[s]=e}),t}catch(e){return{}}}validateRequest(e,t){try{return e&&"string"==typeof e?e.includes("<script")||e.includes("javascript:")?(this.logger.error("🛡️ BULLETPROOF NETWORK: Potentially dangerous URL blocked",{url:e}),!1):!t||"object"==typeof t||(this.logger.error("🛡️ BULLETPROOF NETWORK: Invalid options provided",{options:t}),!1):(this.logger.error("🛡️ BULLETPROOF NETWORK: Invalid URL provided",{url:e}),!1)}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Request validation failed",e),!1}}queueRequest(e,t,s){try{const i={id:s,url:e,options:t,timestamp:Date.now(),attempts:0};return this.requestQueue.push(i),this.logger.info("🛡️ BULLETPROOF NETWORK: Request queued for offline processing",{url:e,queueLength:this.requestQueue.length}),new Promise((e,t)=>{i.resolve=e,i.reject=t,setTimeout(()=>{i.resolve&&i.resolve({success:!1,status:0,statusText:"Request Timeout (Offline)",data:null,error:"Request timed out while offline",queued:!0,timestamp:Date.now()})},3e5)})}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Failed to queue request",e),Promise.resolve({success:!1,status:0,statusText:"Queue Error",data:null,error:e.message,timestamp:Date.now()})}}async processQueuedRequests(){try{const e=[...this.requestQueue];this.requestQueue=[],this.logger.info(`🛡️ BULLETPROOF NETWORK: Processing ${e.length} queued requests`);for(const t of e)try{const e=await this.makeRequestWithRetry(t.url,t.options,t.id);t.resolve&&t.resolve(e)}catch(e){t.reject&&t.reject(e)}}catch(e){this.logger.error("🛡️ BULLETPROOF NETWORK: Failed to process queued requests",e)}}handleRequestError(e,t,s,i){try{if(this.logger.error("🛡️ BULLETPROOF NETWORK: Request failed",{url:e,error:s.message,requestId:i}),!t.method||"GET"===t.method.toUpperCase()){const t=this.getFromCache(e,!0);if(t)return this.logger.info("🛡️ BULLETPROOF NETWORK: Using expired cache as fallback"),{...t,fromExpiredCache:!0,originalError:s.message}}return{success:!1,status:0,statusText:"Network Error",data:null,error:s.message,timestamp:Date.now(),requestId:i}}catch(e){return this.logger.error("🛡️ BULLETPROOF NETWORK: Error handler failed",e),{success:!1,status:0,statusText:"Handler Error",data:null,error:"Error handler failed",timestamp:Date.now()}}}shouldRetry(e){try{const t=["NetworkError","TimeoutError","AbortError","fetch","network","timeout","connection"],s=e.message.toLowerCase();return t.some(e=>s.includes(e))}catch(e){return!0}}calculateRetryDelay(e){try{const t=this.retryDelay*Math.pow(2,e-1);return Math.min(t,this.maxRetryDelay)}catch(e){return this.retryDelay}}cacheResponse(e,t){try{if(this.cache.set(e,{...t,cachedAt:Date.now()}),this.cache.size>100){const e=this.cache.keys().next().value;this.cache.delete(e)}}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Failed to cache response",e)}}getFromCache(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{const s=this.cache.get(e);if(!s)return null;const i=Date.now()-s.cachedAt;return!t&&i>this.cacheExpiry?(this.cache.delete(e),null):{...s,fromCache:!0,cacheAge:i}}catch(e){return null}}cleanCache(){try{const e=Date.now(),t=[];for(const[s,i]of this.cache.entries())e-i.cachedAt>this.cacheExpiry&&t.push(s);t.forEach(e=>this.cache.delete(e)),t.length>0&&this.logger.debug(`🛡️ BULLETPROOF NETWORK: Cleaned ${t.length} expired cache entries`)}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Cache cleaning failed",e)}}generateRequestId(){try{return`req_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}catch(e){return`req_${Date.now()}`}}delay(e){return new Promise(t=>{try{setTimeout(t,e)}catch(e){t()}})}getStats(){try{return{...this.stats,isOnline:this.isOnline,queueLength:this.requestQueue.length,activeRequests:this.activeRequests.size,cacheSize:this.cache.size,successRate:this.stats.requests>0?(this.stats.successes/this.stats.requests*100).toFixed(2)+"%":"0%"}}catch(e){return{error:"Stats unavailable"}}}clearCache(){try{this.cache.clear(),this.logger.info("🛡️ BULLETPROOF NETWORK: Cache cleared")}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Failed to clear cache",e)}}cancelAllRequests(){try{this.activeRequests.clear(),this.requestQueue=[],this.logger.info("🛡️ BULLETPROOF NETWORK: All requests cancelled")}catch(e){this.logger.debug("🛡️ BULLETPROOF NETWORK: Failed to cancel requests",e)}}}s.BulletproofNetworkClient=BulletproofNetworkClient;s.bulletproofNetworkClient=new BulletproofNetworkClient;s.default=BulletproofNetworkClient},{}],103:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BulletproofSubsystemWrapper=void 0,s.createBulletproofSubsystemWrapper=function createBulletproofSubsystemWrapper(e,t){try{return new BulletproofSubsystemWrapper(e,e?.name||e?.constructor?.name||"UnknownSubsystem",t)}catch(t){return console.error("🛡️ BULLETPROOF: Failed to create wrapper",t),e}},s.makeBulletproof=function makeBulletproof(e,t,s){try{return new BulletproofSubsystemWrapper(e,t,s)}catch(t){return console.error("Failed to create bulletproof wrapper",t),e}};class BulletproofSubsystemWrapper{constructor(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return this.originalSubsystem=e,this.name=t||"UnknownSubsystem",this.logger=s||console,this.isEnabled=!0,this.errorCount=0,this.maxErrors=10,this.methodStats=new Map,this.lastError=null,this.recoveryAttempts=0,this.maxRecoveryAttempts=3,this.createBulletproofProxy()}createBulletproofProxy(){try{const e=this;return new Proxy(this.originalSubsystem,{get(t,s,i){try{const n=Reflect.get(t,s,i);return"function"!=typeof n?e.safePropertyAccess(s,n):e.createBulletproofMethod(s,n,t)}catch(t){return e.handleProxyError("get",s,t),e.createFallbackMethod(s)}},set(t,s,i,n){try{return Reflect.set(t,s,i,n)}catch(t){return e.handleProxyError("set",s,t),!0}},has(t,s){try{return Reflect.has(t,s)}catch(t){return e.handleProxyError("has",s,t),!1}}})}catch(e){return this.logger.error(`🛡️ BULLETPROOF: Failed to create proxy for ${this.name}`,e),this.createFallbackSubsystem()}}safePropertyAccess(e,t){try{return t}catch(t){return this.logger.warn(`🛡️ BULLETPROOF: Property access failed for ${this.name}.${e}`,t),null}}createBulletproofMethod(e,t,s){const i=this;return function(){for(var n=arguments.length,a=new Array(n),l=0;l<n;l++)a[l]=arguments[l];return i.executeMethodSafely(e,t,s,a)}}executeMethodSafely(e,t,s,i){if(!this.isEnabled)return this.logger.debug(`🛡️ BULLETPROOF: ${this.name}.${e} skipped (subsystem disabled)`),this.getFallbackResult(e);try{this.trackMethodCall(e);const n=this.executeWithTimeout(t,s,i,3e4);return this.trackMethodSuccess(e),n}catch(t){return this.handleMethodError(e,t,i)}}executeWithTimeout(e,t,s,i){try{const n=e.apply(t,s);return n&&"function"==typeof n.then?Promise.race([n,new Promise((e,t)=>{setTimeout(()=>{t(new Error(`Method timeout after ${i}ms`))},i)})]):n}catch(e){throw e}}handleMethodError(e,t,s){try{return this.errorCount++,this.lastError={methodName:e,error:t,args:s,timestamp:Date.now()},this.trackMethodFailure(e,t),this.logger.error(`🛡️ BULLETPROOF: ${this.name}.${e} failed`,{error:t.message,args:s.length,errorCount:this.errorCount}),this.errorCount>=this.maxErrors&&this.disableSubsystem(),this.isCriticalMethod(e)?this.attemptMethodRecovery(e,s,t):this.getFallbackResult(e)}catch(t){return this.logger.error(`🛡️ BULLETPROOF: Error handler failed for ${this.name}.${e}`,t),this.getFallbackResult(e)}}getFallbackResult(e){try{return e.includes("get")||e.includes("fetch")||e.includes("load")?{data:[],success:!1,fallback:!0}:e.includes("save")||e.includes("update")||e.includes("delete")?{success:!1,fallback:!0}:!(e.includes("validate")||e.includes("check")||e.includes("test"))&&(!!(e.includes("init")||e.includes("start")||e.includes("connect"))||null)}catch(e){return null}}trackMethodCall(e){try{this.methodStats.has(e)||this.methodStats.set(e,{calls:0,successes:0,failures:0,lastCall:null,lastError:null});const t=this.methodStats.get(e);t.calls++,t.lastCall=Date.now()}catch(e){}}trackMethodSuccess(e){try{const t=this.methodStats.get(e);t&&t.successes++}catch(e){}}trackMethodFailure(e,t){try{const s=this.methodStats.get(e);s&&(s.failures++,s.lastError=t.message)}catch(e){}}isCriticalMethod(e){try{return["init","initialize","start","connect","authenticate","load","save","process"].some(t=>e.toLowerCase().includes(t.toLowerCase()))}catch(e){return!1}}attemptMethodRecovery(e,t,s){try{return this.recoveryAttempts>=this.maxRecoveryAttempts?(this.logger.warn(`🛡️ BULLETPROOF: Max recovery attempts reached for ${this.name}.${e}`),this.getFallbackResult(e)):(this.recoveryAttempts++,this.logger.info(`🛡️ BULLETPROOF: Attempting recovery for ${this.name}.${e} (attempt ${this.recoveryAttempts})`),e.includes("init")?this.recoverInitialization(e,t):e.includes("connect")?this.recoverConnection(e,t):e.includes("load")?this.recoverDataLoading(e,t):this.genericRecovery(e,t))}catch(t){return this.logger.error(`🛡️ BULLETPROOF: Recovery failed for ${this.name}.${e}`,t),this.getFallbackResult(e)}}recoverInitialization(e,t){try{return this.originalSubsystem.reset&&"function"==typeof this.originalSubsystem.reset&&this.originalSubsystem.reset(),setTimeout(()=>{try{this.originalSubsystem[e]()}catch(t){this.logger.debug(`🛡️ BULLETPROOF: Delayed recovery failed for ${e}`)}},1e3),!0}catch(e){return!1}}recoverConnection(e,t){try{return this.logger.info(`🛡️ BULLETPROOF: Attempting connection recovery for ${e}`),new Promise(t=>{setTimeout(()=>{t({recovered:!0,method:e})},2e3)})}catch(e){return{recovered:!1,error:e.message}}}recoverDataLoading(e,t){try{return{data:[],success:!0,recovered:!0,message:"Data recovered with empty result"}}catch(e){return{data:[],success:!1,error:e.message}}}genericRecovery(e,t){try{return this.logger.info(`🛡️ BULLETPROOF: Generic recovery for ${this.name}.${e}`),this.getFallbackResult(e)}catch(e){return null}}disableSubsystem(){try{this.isEnabled=!1,this.logger.warn(`🛡️ BULLETPROOF: Subsystem ${this.name} disabled due to excessive errors (${this.errorCount}/${this.maxErrors})`),setTimeout(()=>{this.enableSubsystem()},6e4)}catch(e){console.error("Failed to disable subsystem",e)}}enableSubsystem(){try{this.isEnabled=!0,this.errorCount=0,this.recoveryAttempts=0,this.logger.info(`🛡️ BULLETPROOF: Subsystem ${this.name} re-enabled`)}catch(e){console.error("Failed to enable subsystem",e)}}handleProxyError(e,t,s){try{this.logger.error(`🛡️ BULLETPROOF: Proxy ${e} failed for ${this.name}.${t}`,s)}catch(e){console.error("Proxy error handler failed",e)}}createFallbackMethod(e){var t=this;return function(){return t.logger.debug(`🛡️ BULLETPROOF: Using fallback method for ${t.name}.${e}`),t.getFallbackResult(e)}}createFallbackSubsystem(){try{const e={name:this.name+"_FALLBACK",isEnabled:!1,init:()=>Promise.resolve(!0),start:()=>Promise.resolve(!0),stop:()=>Promise.resolve(!0),reset:()=>Promise.resolve(!0)};return this.logger.warn(`🛡️ BULLETPROOF: Using fallback subsystem for ${this.name}`),e}catch(e){return{}}}getStats(){try{const e=Array.from(this.methodStats.entries()).map(e=>{let[t,s]=e;return{method:t,...s,successRate:s.calls>0?(s.successes/s.calls*100).toFixed(2)+"%":"0%"}});return{subsystemName:this.name,isEnabled:this.isEnabled,errorCount:this.errorCount,maxErrors:this.maxErrors,recoveryAttempts:this.recoveryAttempts,lastError:this.lastError,methodStats:e}}catch(e){return{error:"Stats unavailable",subsystemName:this.name}}}}s.BulletproofSubsystemWrapper=BulletproofSubsystemWrapper},{}],104:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BulletproofTokenManager=void 0,s.createBulletproofTokenManager=function createBulletproofTokenManager(e){try{return new BulletproofTokenManager(e)}catch(e){return console.error("Failed to create bulletproof token manager",e),null}},s.default=void 0;var i=e("./bulletproof-subsystem-wrapper.js");class BulletproofTokenManager{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logger=e||console,this.isInitialized=!1,this.originalTokenManager=null,this.bulletproofTokenManager=null,this.fallbackTimer=null,this.lastKnownTokenInfo=null,this.emergencyMode=!1,this.domCache={statusBox:null,icon:null,text:null,countdown:null,getTokenBtn:null},this.emergencyTokenData={hasToken:!1,timeLeft:0,isValid:!1,lastUpdate:Date.now()},this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Created")}async initialize(e){try{return this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Initializing..."),this.originalTokenManager=e,this.bulletproofTokenManager=(0,i.makeBulletproof)(e,"GlobalTokenManagerSubsystem",this.logger),this.setupBulletproofDOMMonitoring(),this.setupEmergencyFallbackTimer(),this.setupBulletproofTokenUpdates(),this.isInitialized=!0,this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Initialized successfully"),this.bulletproofTokenManager}catch(e){return this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Initialization failed",e),this.createEmergencyTokenManager()}}setupBulletproofDOMMonitoring(){try{this.cacheDOMElements(),this.setupDOMObserver(),setInterval(()=>{this.validateDOMElements()},5e3)}catch(e){this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: DOM monitoring setup failed",e)}}cacheDOMElements(){try{this.domCache.statusBox=this.safeGetElement("global-token-status"),this.domCache.icon=this.safeGetElement(".global-token-icon",this.domCache.statusBox),this.domCache.text=this.safeGetElement(".global-token-text",this.domCache.statusBox),this.domCache.countdown=this.safeGetElement(".global-token-countdown",this.domCache.statusBox),this.domCache.getTokenBtn=this.safeGetElement("global-get-token"),this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM elements cached",{statusBox:!!this.domCache.statusBox,icon:!!this.domCache.icon,text:!!this.domCache.text,countdown:!!this.domCache.countdown,getTokenBtn:!!this.domCache.getTokenBtn})}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM caching failed",e)}}safeGetElement(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;try{return e?(t||(t=document),e.startsWith("#")||e.startsWith(".")?t.querySelector(e):document.getElementById(e)):null}catch(e){return null}}setupDOMObserver(){try{if(!window.MutationObserver)return;this.domObserver=new MutationObserver(e=>{try{let t=!1;e.forEach(e=>{"childList"===e.type&&e.removedNodes.forEach(e=>{e.nodeType===Node.ELEMENT_NODE&&("global-token-status"===e.id||e.querySelector&&e.querySelector("#global-token-status"))&&(t=!0)})}),t&&(this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM changed, recaching elements"),setTimeout(()=>this.cacheDOMElements(),100))}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM observer error",e)}}),this.domObserver.observe(document.body,{childList:!0,subtree:!0})}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM observer setup failed",e)}}validateDOMElements(){try{let e=!1;this.domCache.statusBox&&!document.contains(this.domCache.statusBox)&&(e=!0),e&&(this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM elements invalid, recaching"),this.cacheDOMElements())}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: DOM validation failed",e)}}setupEmergencyFallbackTimer(){try{this.fallbackTimer=setInterval(()=>{this.emergencyTokenStatusUpdate()},1e3),this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency fallback timer started")}catch(e){this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Fallback timer setup failed",e)}}setupBulletproofTokenUpdates(){try{if(this.originalTokenManager&&this.originalTokenManager.updateGlobalTokenStatus){const e=this.originalTokenManager.updateGlobalTokenStatus.bind(this.originalTokenManager);this.originalTokenManager.updateGlobalTokenStatus=()=>{this.bulletproofUpdateTokenStatus(e)},this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Token update method wrapped")}}catch(e){this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Token update setup failed",e)}}bulletproofUpdateTokenStatus(e){try{if(e&&"function"==typeof e)return e(),void this.updateTokenInfoCache()}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Original update failed, using fallback",e)}this.emergencyTokenStatusUpdate()}emergencyTokenStatusUpdate(){try{const e=this.getBulletproofTokenInfo();this.safeUpdateTokenDisplay(e),this.lastKnownTokenInfo=e}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency update failed",e),this.displayEmergencyStatus()}}getBulletproofTokenInfo(){try{let e=null;if(this.originalTokenManager&&this.originalTokenManager.getTokenInfoSync)try{e=this.originalTokenManager.getTokenInfoSync()}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Original getTokenInfoSync failed")}if(!e&&window.app&&window.app.tokenManager)try{const t=window.app.tokenManager.getTokenInfo();t&&(e={hasToken:!!t.token,timeLeft:t.expiresIn||0,isValid:!!t.token&&t.expiresIn>0})}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: App token manager failed")}if(!e)try{const t=localStorage.getItem("pingone_token"),s=localStorage.getItem("pingone_token_expiry");if(t&&s){const t=parseInt(s),i=Date.now(),n=Math.max(0,Math.floor((t-i)/1e3));e={hasToken:!0,timeLeft:n,isValid:n>0}}}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Local storage access failed")}if(!e&&this.lastKnownTokenInfo){const t=Date.now()-(this.lastKnownTokenInfo.lastUpdate||0);t<6e4&&(e={...this.lastKnownTokenInfo},e.timeLeft=Math.max(0,e.timeLeft-Math.floor(t/1e3)))}return e||(e={hasToken:!1,timeLeft:0,isValid:!1,fallback:!0}),e.lastUpdate=Date.now(),e}catch(e){return this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: All token info sources failed",e),{hasToken:!1,timeLeft:0,isValid:!1,error:!0,lastUpdate:Date.now()}}}safeUpdateTokenDisplay(e){try{this.domCache.statusBox||this.cacheDOMElements();const t=this.domCache.statusBox,s=this.domCache.icon,i=this.domCache.text,n=this.domCache.countdown,a=this.domCache.getTokenBtn;if(!t)return this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Status box not found, creating emergency display"),void this.createEmergencyTokenDisplay(e);if(e.hasToken&&e.isValid){const l=this.formatTime(e.timeLeft),c="bundle-1754043969",d="6.5.2.4",g="Updated to latest version 6.5.2.4 with current build";this.safeSetAttribute(t,"className","global-token-status valid comprehensive"),this.safeSetTextContent(s,"✅");const u=`🟢 TOKEN OBTAINED | Time Left: ${l} | Build: ${c} | Version: ${d} | Last Change: ${g}`;this.safeSetTextContent(i,u),this.safeSetTextContent(n,l),this.safeSetStyle(a,"display","none")}else if(e.hasToken&&e.timeLeft<=300){const l=this.formatTime(e.timeLeft);this.safeSetAttribute(t,"className","global-token-status expiring"),this.safeSetTextContent(s,"⚠️"),this.safeSetTextContent(i,`Expires in ${l}`),this.safeSetTextContent(n,l),this.safeSetStyle(a,"display","none")}else e.hasToken&&e.timeLeft<=0?(this.safeSetAttribute(t,"className","global-token-status expired"),this.safeSetTextContent(s,"❌"),this.safeSetTextContent(i,"Token expired"),this.safeSetTextContent(n,"Expired"),this.safeSetStyle(a,"display","inline-block")):(this.safeSetAttribute(t,"className","global-token-status missing"),this.safeSetTextContent(s,"❌"),this.safeSetTextContent(i,"No valid token"),this.safeSetTextContent(n,"No Token"),this.safeSetStyle(a,"display","inline-block"))}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Safe update failed",e),this.displayEmergencyStatus()}}safeSetAttribute(e,t,s){try{e&&void 0!==e[t]&&(e[t]=s)}catch(e){}}safeSetTextContent(e,t){try{e&&(e.textContent=t)}catch(e){}}safeSetStyle(e,t,s){try{e&&e.style&&(e.style[t]=s)}catch(e){}}formatTime(e){try{if(!e||e<=0)return"0s";const t=Math.floor(e/3600),s=Math.floor(e%3600/60),i=e%60;return t>0?`${t}h ${s}m`:s>0?`${s}m ${i}s`:`${i}s`}catch(e){return"0s"}}createEmergencyTokenDisplay(e){try{const t=document.querySelector(".sidebar")||document.querySelector("nav")||document.body;if(!t)return;let s=document.getElementById("emergency-token-status");s||(s=document.createElement("div"),s.id="emergency-token-status",s.style.cssText="\n                    background: #f0f0f0;\n                    border: 1px solid #ccc;\n                    padding: 10px;\n                    margin: 10px;\n                    border-radius: 5px;\n                    font-size: 12px;\n                    color: #333;\n                ",t.appendChild(s));const i=e.isValid?`Token: ${this.formatTime(e.timeLeft)} left`:"Token: Not available";s.textContent=`🛡️ ${i}`}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency display creation failed",e)}}displayEmergencyStatus(){try{this.emergencyMode=!0;const e=document.getElementById("global-token-status");e&&(e.className="global-token-status error",e.innerHTML='<span class="global-token-icon">🛡️</span><span class="global-token-text">Token status protected</span>'),this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Emergency mode activated")}catch(e){console.log("🛡️ BULLETPROOF TOKEN MANAGER: Emergency status display")}}updateTokenInfoCache(){try{this.originalTokenManager&&this.originalTokenManager.getTokenInfoSync&&(this.lastKnownTokenInfo=this.originalTokenManager.getTokenInfoSync(),this.lastKnownTokenInfo.lastUpdate=Date.now())}catch(e){}}createEmergencyTokenManager(){try{const e={name:"EmergencyTokenManager",isInitialized:!0,updateGlobalTokenStatus:()=>this.emergencyTokenStatusUpdate(),getTokenInfoSync:()=>this.getBulletproofTokenInfo(),init:()=>Promise.resolve(!0),destroy:()=>Promise.resolve(!0)};return this.logger.warn("🛡️ BULLETPROOF TOKEN MANAGER: Using emergency token manager"),e}catch(e){return this.logger.error("🛡️ BULLETPROOF TOKEN MANAGER: Emergency manager creation failed",e),{}}}destroy(){try{this.fallbackTimer&&(clearInterval(this.fallbackTimer),this.fallbackTimer=null),this.domObserver&&(this.domObserver.disconnect(),this.domObserver=null),this.isInitialized=!1,this.logger.info("🛡️ BULLETPROOF TOKEN MANAGER: Destroyed")}catch(e){this.logger.debug("🛡️ BULLETPROOF TOKEN MANAGER: Destruction failed",e)}}getStatus(){try{return{name:"BulletproofTokenManager",initialized:this.isInitialized,emergencyMode:this.emergencyMode,hasOriginalManager:!!this.originalTokenManager,hasBulletproofManager:!!this.bulletproofTokenManager,lastKnownTokenInfo:this.lastKnownTokenInfo,domCacheStatus:{statusBox:!!this.domCache.statusBox,icon:!!this.domCache.icon,text:!!this.domCache.text,countdown:!!this.domCache.countdown,getTokenBtn:!!this.domCache.getTokenBtn}}}catch(e){return{error:"Status unavailable"}}}}s.BulletproofTokenManager=BulletproofTokenManager;s.default=BulletproofTokenManager},{"./bulletproof-subsystem-wrapper.js":103}],105:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.debugLog=void 0,s.getClientDebugLogger=getClientDebugLogger;class ClientDebugLogger{constructor(){this.sessionId=this.generateSessionId(),this.isClient=!0,this.log("SESSION_START","Client debug logging session started",{timestamp:(new Date).toISOString(),sessionId:this.sessionId,userAgent:navigator.userAgent,url:window.location.href})}generateSessionId(){return"client_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}formatLogEntry(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n=(new Date).toISOString();this.sessionId,e.toUpperCase(),t.toUpperCase(),window.location.href;return`[${n}] [${this.sessionId}] [CLIENT] [${e.toUpperCase()}] [${t.toUpperCase()}] ${s}`+(Object.keys(i).length>0?`\n  Data: ${JSON.stringify(i,null,2)}`:"")+"\n"+"-".repeat(80)+"\n"}async sendToServer(e){try{await fetch("/api/debug-log",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({entry:e})})}catch(e){console.error("Failed to send debug log to server:",e)}}log(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.formatLogEntry("info",e,t,s);this.sendToServer(i),console.log(`🐛 [${e.toUpperCase()}] ${t}`,s)}error(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const i={...arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},error:s?{message:s.message,stack:s.stack,name:s.name}:null},n=this.formatLogEntry("error",e,t,i);this.sendToServer(n),console.error(`🚨 [${e.toUpperCase()}] ${t}`,i)}warn(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.formatLogEntry("warn",e,t,s);this.sendToServer(i),console.warn(`⚠️ [${e.toUpperCase()}] ${t}`,s)}debug(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.formatLogEntry("debug",e,t,s);this.sendToServer(i),console.debug(`🔍 [${e.toUpperCase()}] ${t}`,s)}event(e,t){const s={eventName:t,...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}},i=this.formatLogEntry("event",e,`Event: ${t}`,s);this.sendToServer(i),console.log(`📊 [${e.toUpperCase()}] Event: ${t}`,s)}performance(e,t,s){const i={operation:t,duration:`${s}ms`,...arguments.length>3&&void 0!==arguments[3]?arguments[3]:{}},n=this.formatLogEntry("perf",e,`Performance: ${t}`,i);this.sendToServer(n),console.log(`⚡ [${e.toUpperCase()}] Performance: ${t} (${s}ms)`,i)}navigation(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.event("navigation","view_change",{from:e,to:t,...s})}api(e,t,s,i){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.event("api","request",{method:e,url:t,status:s,duration:`${i}ms`,...n})}userAction(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.event("user",e,{element:t,...s})}systemState(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.log("system",`${e} state: ${t}`,s)}featureFlag(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.log("feature",`Feature flag ${e}: ${t?"enabled":"disabled"}`,s)}subsystem(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.log("subsystem",`${e}: ${t}`,s)}}let i=null;function getClientDebugLogger(){return i||(i=new ClientDebugLogger),i}const n=s.debugLog={log:(e,t,s)=>getClientDebugLogger().log(e,t,s),error:(e,t,s,i)=>getClientDebugLogger().error(e,t,s,i),warn:(e,t,s)=>getClientDebugLogger().warn(e,t,s),debug:(e,t,s)=>getClientDebugLogger().debug(e,t,s),event:(e,t,s)=>getClientDebugLogger().event(e,t,s),performance:(e,t,s,i)=>getClientDebugLogger().performance(e,t,s,i),navigation:(e,t,s)=>getClientDebugLogger().navigation(e,t,s),api:(e,t,s,i,n)=>getClientDebugLogger().api(e,t,s,i,n),userAction:(e,t,s)=>getClientDebugLogger().userAction(e,t,s),systemState:(e,t,s)=>getClientDebugLogger().systemState(e,t,s),featureFlag:(e,t,s)=>getClientDebugLogger().featureFlag(e,t,s),subsystem:(e,t,s)=>getClientDebugLogger().subsystem(e,t,s)};s.default=n},{}],106:[function(e,t,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.LOG_LEVELS=void 0,s.createSafeLogger=createSafeLogger,s.safeConsoleLogger=void 0;const i=s.LOG_LEVELS={ERROR:0,WARN:1,INFO:2,DEBUG:3,TRACE:4},n=(()=>{if("undefined"!=typeof window){if("localhost"===window.location?.hostname||"127.0.0.1"===window.location?.hostname)return"development";if(window.location?.search?.includes("test=true")||window.location?.pathname?.includes("/test"))return"test"}return"production"})(),a="production"===n?"INFO":"DEBUG",l="production"===n,c="test"===n;function createSafeLogger(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{level:s=a,defaultMeta:n={},disableInTest:l=!0}=t,d="string"==typeof s?i[s.toUpperCase()]??i.INFO:s;if(c&&l)return createNoopLogger();const g={error:function(t,s){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(d<i.ERROR)return;const l=createLogData("ERROR",t,s,{...n,...a});try{e?.error?e.error(l.message,l):console.error(formatConsoleLog("ERROR",l))}catch(e){console.error(`[SAFE-LOGGER] [ERROR] ${t}`,s||"")}},warn:function(t,s){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(d<i.WARN)return;const l=createLogData("WARN",t,s,{...n,...a});try{e?.warn?e.warn(l.message,l):console.warn(formatConsoleLog("WARN",l))}catch(e){console.warn(`[SAFE-LOGGER] [WARN] ${t}`,s||"")}},info:function(t,s){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(d<i.INFO)return;const l=createLogData("INFO",t,s,{...n,...a});try{e?.info?e.info(l.message,l):console.info(formatConsoleLog("INFO",l))}catch(e){console.log(`[SAFE-LOGGER] [INFO] ${t}`,s||"")}},debug:function(t,s){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(d<i.DEBUG)return;const l=createLogData("DEBUG",t,s,{...n,...a});try{e?.debug?e.debug(l.message,l):console.debug(formatConsoleLog("DEBUG",l))}catch(e){console.debug(`[SAFE-LOGGER] [DEBUG] ${t}`,s||"")}},trace:function(t,s){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(d<i.TRACE)return;const l=createLogData("TRACE",t,s,{...n,...a});try{e?.trace?e.trace(l.message,l):e?.debug?e.debug(`[TRACE] ${l.message}`,l):console.debug(formatConsoleLog("TRACE",l))}catch(e){console.debug(`[SAFE-LOGGER] [TRACE] ${t}`,s||"")}},child:t=>{try{return createSafeLogger(e?.child?e.child(t):e,{level:d,defaultMeta:{...n,...t}})}catch(e){return console.warn("[SAFE-LOGGER] Failed to create child logger",e),g}},...e||{}};return g}function createNoopLogger(){const noop=()=>{};return{error:noop,warn:noop,info:noop,debug:noop,trace:noop,child:()=>createNoopLogger()}}function createLogData(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n=(new Date).toISOString(),a=s instanceof Error;return{...i,level:e,message:"string"==typeof t?t:JSON.stringify(t),timestamp:n,...a?{error:{name:s.name,message:s.message,stack:s.stack,...s.code&&{code:s.code},...s.statusCode&&{statusCode:s.statusCode}}}:{data:s}}}function formatConsoleLog(e,t){const{message:s,timestamp:i,...n}=t;let a=`[${new Date(i).toISOString().replace("T"," ").replace(/\..+/,"")}] [${e}] ${s}`;if(Object.keys(n).length>0)try{a+="\n"+JSON.stringify(n,null,l?0:2)}catch(e){a+=" [Additional data could not be stringified]"}return a}const d=s.safeConsoleLogger=createSafeLogger(console);if("undefined"!=typeof window)try{const e=window.logger||console;window.safeLogger=createSafeLogger(e,{level:a,defaultMeta:{env:n,app:"pingone-import-tool"}})}catch(e){console.warn("Failed to create safe global logger",e),window.safeLogger=d}},{}],107:[function(e,t,s){(function(e){(function(){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.FEATURE_FLAGS=void 0,s.getEnabledFeatures=getEnabledFeatures,s.getFeatureFlagStatus=function getFeatureFlagStatus(){return{total:Object.keys(t).length,enabled:getEnabledFeatures().length,flags:t,environment:e.env.NODE_ENV||"development"}},s.isFeatureEnabled=function isFeatureEnabled(e){return!0===t[e]},s.setFeatureFlag=function setFeatureFlag(s,i){"development"===e.env.NODE_ENV?(t[s]=i,console.log(`Feature flag ${s} set to ${i}`)):console.warn("Feature flags can only be modified in development mode")};const t=s.FEATURE_FLAGS={USE_CENTRALIZED_LOGGING:!0,ENABLE_PERFORMANCE_MONITORING:!0,ENABLE_ERROR_TRACKING:!0,USE_NAVIGATION_SUBSYSTEM:!0,USE_CONNECTION_MANAGER:!0,USE_AUTH_MANAGEMENT:!0,USE_VIEW_MANAGEMENT:!0,USE_OPERATION_MANAGER:!0,USE_IMPORT_SUBSYSTEM:!0,USE_EXPORT_SUBSYSTEM:!0,USE_REALTIME_SUBSYSTEM:!0,USE_ADVANCED_REALTIME:!0,USE_ANALYTICS_DASHBOARD:!0,ENABLE_ADVANCED_PROGRESS_UI:!0,ENABLE_DRAG_DROP_IMPROVEMENTS:!0,ENABLE_KEYBOARD_SHORTCUTS:!1,ENABLE_REQUEST_BATCHING:!1,ENABLE_RESPONSE_CACHING:!1,ENABLE_RETRY_LOGIC:!0,ENABLE_DEBUG_MODE:"development"===e.env.NODE_ENV,ENABLE_VERBOSE_LOGGING:"development"===e.env.NODE_ENV,SHOW_PERFORMANCE_METRICS:"development"===e.env.NODE_ENV};function getEnabledFeatures(){return Object.entries(t).filter(e=>{let[t,s]=e;return s}).map(e=>{let[t,s]=e;return t})}s.default=t}).call(this)}).call(this,e("_process"))},{_process:29}]},{},[77]);