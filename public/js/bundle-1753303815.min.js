!function r(e,t,i){function o(n,a){if(!t[n]){if(!e[n]){var l="function"==typeof require&&require;if(!a&&l)return l(n,!0);if(s)return s(n,!0);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}var g=t[n]={exports:{}};e[n][0].call(g.exports,function(t){return o(e[n][1][t]||t)},g,g.exports,r,e,t,i)}return t[n].exports}for(var s="function"==typeof require&&require,n=0;n<i.length;n++)o(i[n]);return o}({1:[function(e,t,i){t.exports=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}},t.exports.__esModule=!0,t.exports.default=t.exports},{}],2:[function(e,t,i){t.exports=e("./lib/axios")},{"./lib/axios":4}],3:[function(e,t,i){"use strict";var s=e("./../utils"),n=e("./../core/settle"),a=e("./../helpers/cookies"),l=e("./../helpers/buildURL"),c=e("../core/buildFullPath"),g=e("./../helpers/parseHeaders"),u=e("./../helpers/isURLSameOrigin"),d=e("../defaults/transitional"),h=e("../core/AxiosError"),p=e("../cancel/CanceledError"),f=e("../helpers/parseProtocol");t.exports=function xhrAdapter(e){return new Promise(function dispatchXhrRequest(t,i){var m,y=e.data,v=e.headers,w=e.responseType;function done(){e.cancelToken&&e.cancelToken.unsubscribe(m),e.signal&&e.signal.removeEventListener("abort",m)}s.isFormData(y)&&s.isStandardBrowserEnv()&&delete v["Content-Type"];var b=new XMLHttpRequest;if(e.auth){var S=e.auth.username||"",E=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";v.Authorization="Basic "+btoa(S+":"+E)}var I=c(e.baseURL,e.url);function onloadend(){if(b){var s="getAllResponseHeaders"in b?g(b.getAllResponseHeaders()):null,a={data:w&&"text"!==w&&"json"!==w?b.response:b.responseText,status:b.status,statusText:b.statusText,headers:s,config:e,request:b};n(function _resolve(e){t(e),done()},function _reject(e){i(e),done()},a),b=null}}if(b.open(e.method.toUpperCase(),l(I,e.params,e.paramsSerializer),!0),b.timeout=e.timeout,"onloadend"in b?b.onloadend=onloadend:b.onreadystatechange=function handleLoad(){b&&4===b.readyState&&(0!==b.status||b.responseURL&&0===b.responseURL.indexOf("file:"))&&setTimeout(onloadend)},b.onabort=function handleAbort(){b&&(i(new h("Request aborted",h.ECONNABORTED,e,b)),b=null)},b.onerror=function handleError(){i(new h("Network Error",h.ERR_NETWORK,e,b,b)),b=null},b.ontimeout=function handleTimeout(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",s=e.transitional||d;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),i(new h(t,s.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,e,b)),b=null},s.isStandardBrowserEnv()){var C=(e.withCredentials||u(I))&&e.xsrfCookieName?a.read(e.xsrfCookieName):void 0;C&&(v[e.xsrfHeaderName]=C)}"setRequestHeader"in b&&s.forEach(v,function setRequestHeader(e,t){void 0===y&&"content-type"===t.toLowerCase()?delete v[t]:b.setRequestHeader(t,e)}),s.isUndefined(e.withCredentials)||(b.withCredentials=!!e.withCredentials),w&&"json"!==w&&(b.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&b.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&b.upload&&b.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(m=function(e){b&&(i(!e||e&&e.type?new p:e),b.abort(),b=null)},e.cancelToken&&e.cancelToken.subscribe(m),e.signal&&(e.signal.aborted?m():e.signal.addEventListener("abort",m))),y||(y=null);var k=f(I);k&&-1===["http","https","file"].indexOf(k)?i(new h("Unsupported protocol "+k+":",h.ERR_BAD_REQUEST,e)):b.send(y)})}},{"../cancel/CanceledError":6,"../core/AxiosError":9,"../core/buildFullPath":11,"../defaults/transitional":17,"../helpers/parseProtocol":29,"./../core/settle":14,"./../helpers/buildURL":20,"./../helpers/cookies":22,"./../helpers/isURLSameOrigin":25,"./../helpers/parseHeaders":28,"./../utils":33}],4:[function(e,t,i){"use strict";var s=e("./utils"),n=e("./helpers/bind"),a=e("./core/Axios"),l=e("./core/mergeConfig");var c=function createInstance(e){var t=new a(e),i=n(a.prototype.request,t);return s.extend(i,a.prototype,t),s.extend(i,t),i.create=function create(t){return createInstance(l(e,t))},i}(e("./defaults"));c.Axios=a,c.CanceledError=e("./cancel/CanceledError"),c.CancelToken=e("./cancel/CancelToken"),c.isCancel=e("./cancel/isCancel"),c.VERSION=e("./env/data").version,c.toFormData=e("./helpers/toFormData"),c.AxiosError=e("../lib/core/AxiosError"),c.Cancel=c.CanceledError,c.all=function all(e){return Promise.all(e)},c.spread=e("./helpers/spread"),c.isAxiosError=e("./helpers/isAxiosError"),t.exports=c,t.exports.default=c},{"../lib/core/AxiosError":9,"./cancel/CancelToken":5,"./cancel/CanceledError":6,"./cancel/isCancel":7,"./core/Axios":8,"./core/mergeConfig":13,"./defaults":16,"./env/data":18,"./helpers/bind":19,"./helpers/isAxiosError":24,"./helpers/spread":30,"./helpers/toFormData":31,"./utils":33}],5:[function(e,t,i){"use strict";var s=e("./CanceledError");function CancelToken(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function promiseExecutor(e){t=e});var i=this;this.promise.then(function(e){if(i._listeners){var t,s=i._listeners.length;for(t=0;t<s;t++)i._listeners[t](e);i._listeners=null}}),this.promise.then=function(e){var t,s=new Promise(function(e){i.subscribe(e),t=e}).then(e);return s.cancel=function reject(){i.unsubscribe(t)},s},e(function cancel(e){i.reason||(i.reason=new s(e),t(i.reason))})}CancelToken.prototype.throwIfRequested=function throwIfRequested(){if(this.reason)throw this.reason},CancelToken.prototype.subscribe=function subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},CancelToken.prototype.unsubscribe=function unsubscribe(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},CancelToken.source=function source(){var e;return{token:new CancelToken(function executor(t){e=t}),cancel:e}},t.exports=CancelToken},{"./CanceledError":6}],6:[function(e,t,i){"use strict";var s=e("../core/AxiosError");function CanceledError(e){s.call(this,null==e?"canceled":e,s.ERR_CANCELED),this.name="CanceledError"}e("../utils").inherits(CanceledError,s,{__CANCEL__:!0}),t.exports=CanceledError},{"../core/AxiosError":9,"../utils":33}],7:[function(e,t,i){"use strict";t.exports=function isCancel(e){return!(!e||!e.__CANCEL__)}},{}],8:[function(e,t,i){"use strict";var s=e("./../utils"),n=e("../helpers/buildURL"),a=e("./InterceptorManager"),l=e("./dispatchRequest"),c=e("./mergeConfig"),g=e("./buildFullPath"),u=e("../helpers/validator"),d=u.validators;function Axios(e){this.defaults=e,this.interceptors={request:new a,response:new a}}Axios.prototype.request=function request(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=c(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var i=t.transitional;void 0!==i&&u.assertOptions(i,{silentJSONParsing:d.transitional(d.boolean),forcedJSONParsing:d.transitional(d.boolean),clarifyTimeoutError:d.transitional(d.boolean)},!1);var s=[],n=!0;this.interceptors.request.forEach(function unshiftRequestInterceptors(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,s.unshift(e.fulfilled,e.rejected))});var a,g=[];if(this.interceptors.response.forEach(function pushResponseInterceptors(e){g.push(e.fulfilled,e.rejected)}),!n){var h=[l,void 0];for(Array.prototype.unshift.apply(h,s),h=h.concat(g),a=Promise.resolve(t);h.length;)a=a.then(h.shift(),h.shift());return a}for(var p=t;s.length;){var f=s.shift(),m=s.shift();try{p=f(p)}catch(e){m(e);break}}try{a=l(p)}catch(e){return Promise.reject(e)}for(;g.length;)a=a.then(g.shift(),g.shift());return a},Axios.prototype.getUri=function getUri(e){e=c(this.defaults,e);var t=g(e.baseURL,e.url);return n(t,e.params,e.paramsSerializer)},s.forEach(["delete","get","head","options"],function forEachMethodNoData(e){Axios.prototype[e]=function(t,i){return this.request(c(i||{},{method:e,url:t,data:(i||{}).data}))}}),s.forEach(["post","put","patch"],function forEachMethodWithData(e){function generateHTTPMethod(t){return function httpMethod(i,s,n){return this.request(c(n||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:i,data:s}))}}Axios.prototype[e]=generateHTTPMethod(),Axios.prototype[e+"Form"]=generateHTTPMethod(!0)}),t.exports=Axios},{"../helpers/buildURL":20,"../helpers/validator":32,"./../utils":33,"./InterceptorManager":10,"./buildFullPath":11,"./dispatchRequest":12,"./mergeConfig":13}],9:[function(e,t,i){"use strict";var s=e("../utils");function AxiosError(e,t,i,s,n){Error.call(this),this.message=e,this.name="AxiosError",t&&(this.code=t),i&&(this.config=i),s&&(this.request=s),n&&(this.response=n)}s.inherits(AxiosError,Error,{toJSON:function toJSON(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var n=AxiosError.prototype,a={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach(function(e){a[e]={value:e}}),Object.defineProperties(AxiosError,a),Object.defineProperty(n,"isAxiosError",{value:!0}),AxiosError.from=function(e,t,i,a,l,c){var g=Object.create(n);return s.toFlatObject(e,g,function filter(e){return e!==Error.prototype}),AxiosError.call(g,e.message,t,i,a,l),g.name=e.name,c&&Object.assign(g,c),g},t.exports=AxiosError},{"../utils":33}],10:[function(e,t,i){"use strict";var s=e("./../utils");function InterceptorManager(){this.handlers=[]}InterceptorManager.prototype.use=function use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!i&&i.synchronous,runWhen:i?i.runWhen:null}),this.handlers.length-1},InterceptorManager.prototype.eject=function eject(e){this.handlers[e]&&(this.handlers[e]=null)},InterceptorManager.prototype.forEach=function forEach(e){s.forEach(this.handlers,function forEachHandler(t){null!==t&&e(t)})},t.exports=InterceptorManager},{"./../utils":33}],11:[function(e,t,i){"use strict";var s=e("../helpers/isAbsoluteURL"),n=e("../helpers/combineURLs");t.exports=function buildFullPath(e,t){return e&&!s(t)?n(e,t):t}},{"../helpers/combineURLs":21,"../helpers/isAbsoluteURL":23}],12:[function(e,t,i){"use strict";var s=e("./../utils"),n=e("./transformData"),a=e("../cancel/isCancel"),l=e("../defaults"),c=e("../cancel/CanceledError");function throwIfCancellationRequested(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new c}t.exports=function dispatchRequest(e){return throwIfCancellationRequested(e),e.headers=e.headers||{},e.data=n.call(e,e.data,e.headers,e.transformRequest),e.headers=s.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),s.forEach(["delete","get","head","post","put","patch","common"],function cleanHeaderConfig(t){delete e.headers[t]}),(e.adapter||l.adapter)(e).then(function onAdapterResolution(t){return throwIfCancellationRequested(e),t.data=n.call(e,t.data,t.headers,e.transformResponse),t},function onAdapterRejection(t){return a(t)||(throwIfCancellationRequested(e),t&&t.response&&(t.response.data=n.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},{"../cancel/CanceledError":6,"../cancel/isCancel":7,"../defaults":16,"./../utils":33,"./transformData":15}],13:[function(e,t,i){"use strict";var s=e("../utils");t.exports=function mergeConfig(e,t){t=t||{};var i={};function getMergedValue(e,t){return s.isPlainObject(e)&&s.isPlainObject(t)?s.merge(e,t):s.isPlainObject(t)?s.merge({},t):s.isArray(t)?t.slice():t}function mergeDeepProperties(i){return s.isUndefined(t[i])?s.isUndefined(e[i])?void 0:getMergedValue(void 0,e[i]):getMergedValue(e[i],t[i])}function valueFromConfig2(e){if(!s.isUndefined(t[e]))return getMergedValue(void 0,t[e])}function defaultToConfig2(i){return s.isUndefined(t[i])?s.isUndefined(e[i])?void 0:getMergedValue(void 0,e[i]):getMergedValue(void 0,t[i])}function mergeDirectKeys(i){return i in t?getMergedValue(e[i],t[i]):i in e?getMergedValue(void 0,e[i]):void 0}var n={url:valueFromConfig2,method:valueFromConfig2,data:valueFromConfig2,baseURL:defaultToConfig2,transformRequest:defaultToConfig2,transformResponse:defaultToConfig2,paramsSerializer:defaultToConfig2,timeout:defaultToConfig2,timeoutMessage:defaultToConfig2,withCredentials:defaultToConfig2,adapter:defaultToConfig2,responseType:defaultToConfig2,xsrfCookieName:defaultToConfig2,xsrfHeaderName:defaultToConfig2,onUploadProgress:defaultToConfig2,onDownloadProgress:defaultToConfig2,decompress:defaultToConfig2,maxContentLength:defaultToConfig2,maxBodyLength:defaultToConfig2,beforeRedirect:defaultToConfig2,transport:defaultToConfig2,httpAgent:defaultToConfig2,httpsAgent:defaultToConfig2,cancelToken:defaultToConfig2,socketPath:defaultToConfig2,responseEncoding:defaultToConfig2,validateStatus:mergeDirectKeys};return s.forEach(Object.keys(e).concat(Object.keys(t)),function computeConfigValue(e){var t=n[e]||mergeDeepProperties,a=t(e);s.isUndefined(a)&&t!==mergeDirectKeys||(i[e]=a)}),i}},{"../utils":33}],14:[function(e,t,i){"use strict";var s=e("./AxiosError");t.exports=function settle(e,t,i){var n=i.config.validateStatus;i.status&&n&&!n(i.status)?t(new s("Request failed with status code "+i.status,[s.ERR_BAD_REQUEST,s.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i)):e(i)}},{"./AxiosError":9}],15:[function(e,t,i){"use strict";var s=e("./../utils"),n=e("../defaults");t.exports=function transformData(e,t,i){var a=this||n;return s.forEach(i,function transform(i){e=i.call(a,e,t)}),e}},{"../defaults":16,"./../utils":33}],16:[function(e,t,i){(function(i){(function(){"use strict";var s=e("../utils"),n=e("../helpers/normalizeHeaderName"),a=e("../core/AxiosError"),l=e("./transitional"),c=e("../helpers/toFormData"),g={"Content-Type":"application/x-www-form-urlencoded"};function setContentTypeIfUnset(e,t){!s.isUndefined(e)&&s.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var u={transitional:l,adapter:function getDefaultAdapter(){var t;return"undefined"!=typeof XMLHttpRequest?t=e("../adapters/xhr"):void 0!==i&&"[object process]"===Object.prototype.toString.call(i)&&(t=e("../adapters/http")),t}(),transformRequest:[function transformRequest(e,t){if(n(t,"Accept"),n(t,"Content-Type"),s.isFormData(e)||s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return setContentTypeIfUnset(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString();var i,a=s.isObject(e),l=t&&t["Content-Type"];if((i=s.isFileList(e))||a&&"multipart/form-data"===l){var g=this.env&&this.env.FormData;return c(i?{"files[]":e}:e,g&&new g)}return a||"application/json"===l?(setContentTypeIfUnset(t,"application/json"),function stringifySafely(e,t,i){if(s.isString(e))try{return(t||JSON.parse)(e),s.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(i||JSON.stringify)(e)}(e)):e}],transformResponse:[function transformResponse(e){var t=this.transitional||u.transitional,i=t&&t.silentJSONParsing,n=t&&t.forcedJSONParsing,l=!i&&"json"===this.responseType;if(l||n&&s.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(l){if("SyntaxError"===e.name)throw a.from(e,a.ERR_BAD_RESPONSE,this,null,this.response);throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:e("./env/FormData")},validateStatus:function validateStatus(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};s.forEach(["delete","get","head"],function forEachMethodNoData(e){u.headers[e]={}}),s.forEach(["post","put","patch"],function forEachMethodWithData(e){u.headers[e]=s.merge(g)}),t.exports=u}).call(this)}).call(this,e("_process"))},{"../adapters/http":3,"../adapters/xhr":3,"../core/AxiosError":9,"../helpers/normalizeHeaderName":26,"../helpers/toFormData":31,"../utils":33,"./env/FormData":27,"./transitional":17,_process:37}],17:[function(e,t,i){"use strict";t.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},{}],18:[function(e,t,i){t.exports={version:"0.27.2"}},{}],19:[function(e,t,i){"use strict";t.exports=function bind(e,t){return function wrap(){for(var i=new Array(arguments.length),s=0;s<i.length;s++)i[s]=arguments[s];return e.apply(t,i)}}},{}],20:[function(e,t,i){"use strict";var s=e("./../utils");function encode(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}t.exports=function buildURL(e,t,i){if(!t)return e;var n;if(i)n=i(t);else if(s.isURLSearchParams(t))n=t.toString();else{var a=[];s.forEach(t,function serialize(e,t){null!=e&&(s.isArray(e)?t+="[]":e=[e],s.forEach(e,function parseValue(e){s.isDate(e)?e=e.toISOString():s.isObject(e)&&(e=JSON.stringify(e)),a.push(encode(t)+"="+encode(e))}))}),n=a.join("&")}if(n){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+n}return e}},{"./../utils":33}],21:[function(e,t,i){"use strict";t.exports=function combineURLs(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},{}],22:[function(e,t,i){"use strict";var s=e("./../utils");t.exports=s.isStandardBrowserEnv()?function standardBrowserEnv(){return{write:function write(e,t,i,n,a,l){var c=[];c.push(e+"="+encodeURIComponent(t)),s.isNumber(i)&&c.push("expires="+new Date(i).toGMTString()),s.isString(n)&&c.push("path="+n),s.isString(a)&&c.push("domain="+a),!0===l&&c.push("secure"),document.cookie=c.join("; ")},read:function read(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function remove(e){this.write(e,"",Date.now()-864e5)}}}():{write:function write(){},read:function read(){return null},remove:function remove(){}}},{"./../utils":33}],23:[function(e,t,i){"use strict";t.exports=function isAbsoluteURL(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},{}],24:[function(e,t,i){"use strict";var s=e("./../utils");t.exports=function isAxiosError(e){return s.isObject(e)&&!0===e.isAxiosError}},{"./../utils":33}],25:[function(e,t,i){"use strict";var s=e("./../utils");t.exports=s.isStandardBrowserEnv()?function standardBrowserEnv(){var e,t=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");function resolveURL(e){var s=e;return t&&(i.setAttribute("href",s),s=i.href),i.setAttribute("href",s),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}return e=resolveURL(window.location.href),function isURLSameOrigin(t){var i=s.isString(t)?resolveURL(t):t;return i.protocol===e.protocol&&i.host===e.host}}():function isURLSameOrigin(){return!0}},{"./../utils":33}],26:[function(e,t,i){"use strict";var s=e("../utils");t.exports=function normalizeHeaderName(e,t){s.forEach(e,function processHeader(i,s){s!==t&&s.toUpperCase()===t.toUpperCase()&&(e[t]=i,delete e[s])})}},{"../utils":33}],27:[function(e,t,i){t.exports=null},{}],28:[function(e,t,i){"use strict";var s=e("./../utils"),n=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function parseHeaders(e){var t,i,a,l={};return e?(s.forEach(e.split("\n"),function parser(e){if(a=e.indexOf(":"),t=s.trim(e.substr(0,a)).toLowerCase(),i=s.trim(e.substr(a+1)),t){if(l[t]&&n.indexOf(t)>=0)return;l[t]="set-cookie"===t?(l[t]?l[t]:[]).concat([i]):l[t]?l[t]+", "+i:i}}),l):l}},{"./../utils":33}],29:[function(e,t,i){"use strict";t.exports=function parseProtocol(e){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}},{}],30:[function(e,t,i){"use strict";t.exports=function spread(e){return function wrap(t){return e.apply(null,t)}}},{}],31:[function(e,t,i){(function(i){(function(){"use strict";var s=e("../utils");t.exports=function toFormData(e,t){t=t||new FormData;var n=[];function convertValue(e){return null===e?"":s.isDate(e)?e.toISOString():s.isArrayBuffer(e)||s.isTypedArray(e)?"function"==typeof Blob?new Blob([e]):i.from(e):e}return function build(e,i){if(s.isPlainObject(e)||s.isArray(e)){if(-1!==n.indexOf(e))throw Error("Circular reference detected in "+i);n.push(e),s.forEach(e,function each(e,n){if(!s.isUndefined(e)){var a,l=i?i+"."+n:n;if(e&&!i&&"object"==typeof e)if(s.endsWith(n,"{}"))e=JSON.stringify(e);else if(s.endsWith(n,"[]")&&(a=s.toArray(e)))return void a.forEach(function(e){!s.isUndefined(e)&&t.append(l,convertValue(e))});build(e,l)}}),n.pop()}else t.append(i,convertValue(e))}(e),t}}).call(this)}).call(this,e("buffer").Buffer)},{"../utils":33,buffer:35}],32:[function(e,t,i){"use strict";var s=e("../env/data").version,n=e("../core/AxiosError"),a={};["object","boolean","number","function","string","symbol"].forEach(function(e,t){a[e]=function validator(i){return typeof i===e||"a"+(t<1?"n ":" ")+e}});var l={};a.transitional=function transitional(e,t,i){function formatMessage(e,t){return"[Axios v"+s+"] Transitional option '"+e+"'"+t+(i?". "+i:"")}return function(i,s,a){if(!1===e)throw new n(formatMessage(s," has been removed"+(t?" in "+t:"")),n.ERR_DEPRECATED);return t&&!l[s]&&(l[s]=!0,console.warn(formatMessage(s," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(i,s,a)}},t.exports={assertOptions:function assertOptions(e,t,i){if("object"!=typeof e)throw new n("options must be an object",n.ERR_BAD_OPTION_VALUE);for(var s=Object.keys(e),a=s.length;a-- >0;){var l=s[a],c=t[l];if(c){var g=e[l],u=void 0===g||c(g,l,e);if(!0!==u)throw new n("option "+l+" must be "+u,n.ERR_BAD_OPTION_VALUE)}else if(!0!==i)throw new n("Unknown option "+l,n.ERR_BAD_OPTION)}},validators:a}},{"../core/AxiosError":9,"../env/data":18}],33:[function(e,t,i){"use strict";var s,n=e("./helpers/bind"),a=Object.prototype.toString,l=(s=Object.create(null),function(e){var t=a.call(e);return s[t]||(s[t]=t.slice(8,-1).toLowerCase())});function kindOfTest(e){return e=e.toLowerCase(),function isKindOf(t){return l(t)===e}}function isArray(e){return Array.isArray(e)}function isUndefined(e){return void 0===e}var c=kindOfTest("ArrayBuffer");function isObject(e){return null!==e&&"object"==typeof e}function isPlainObject(e){if("object"!==l(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}var g=kindOfTest("Date"),u=kindOfTest("File"),d=kindOfTest("Blob"),h=kindOfTest("FileList");function isFunction(e){return"[object Function]"===a.call(e)}var p=kindOfTest("URLSearchParams");function forEach(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),isArray(e))for(var i=0,s=e.length;i<s;i++)t.call(null,e[i],i,e);else for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.call(null,e[n],n,e)}var f,m=(f="undefined"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array),function(e){return f&&e instanceof f});t.exports={isArray:isArray,isArrayBuffer:c,isBuffer:function isBuffer(e){return null!==e&&!isUndefined(e)&&null!==e.constructor&&!isUndefined(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function isFormData(e){var t="[object FormData]";return e&&("function"==typeof FormData&&e instanceof FormData||a.call(e)===t||isFunction(e.toString)&&e.toString()===t)},isArrayBufferView:function isArrayBufferView(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&c(e.buffer)},isString:function isString(e){return"string"==typeof e},isNumber:function isNumber(e){return"number"==typeof e},isObject:isObject,isPlainObject:isPlainObject,isUndefined:isUndefined,isDate:g,isFile:u,isBlob:d,isFunction:isFunction,isStream:function isStream(e){return isObject(e)&&isFunction(e.pipe)},isURLSearchParams:p,isStandardBrowserEnv:function isStandardBrowserEnv(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:forEach,merge:function merge(){var e={};function assignValue(t,i){isPlainObject(e[i])&&isPlainObject(t)?e[i]=merge(e[i],t):isPlainObject(t)?e[i]=merge({},t):isArray(t)?e[i]=t.slice():e[i]=t}for(var t=0,i=arguments.length;t<i;t++)forEach(arguments[t],assignValue);return e},extend:function extend(e,t,i){return forEach(t,function assignValue(t,s){e[s]=i&&"function"==typeof t?n(t,i):t}),e},trim:function trim(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function stripBOM(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function inherits(e,t,i,s){e.prototype=Object.create(t.prototype,s),e.prototype.constructor=e,i&&Object.assign(e.prototype,i)},toFlatObject:function toFlatObject(e,t,i){var s,n,a,l={};t=t||{};do{for(n=(s=Object.getOwnPropertyNames(e)).length;n-- >0;)l[a=s[n]]||(t[a]=e[a],l[a]=!0);e=Object.getPrototypeOf(e)}while(e&&(!i||i(e,t))&&e!==Object.prototype);return t},kindOf:l,kindOfTest:kindOfTest,endsWith:function endsWith(e,t,i){e=String(e),(void 0===i||i>e.length)&&(i=e.length),i-=t.length;var s=e.indexOf(t,i);return-1!==s&&s===i},toArray:function toArray(e){if(!e)return null;var t=e.length;if(isUndefined(t))return null;for(var i=new Array(t);t-- >0;)i[t]=e[t];return i},isTypedArray:m,isFileList:h}},{"./helpers/bind":19}],34:[function(e,t,i){"use strict";i.byteLength=function byteLength(e){var t=getLens(e),i=t[0],s=t[1];return 3*(i+s)/4-s},i.toByteArray=function toByteArray(e){var t,i,s=getLens(e),l=s[0],c=s[1],g=new a(function _byteLength(e,t,i){return 3*(t+i)/4-i}(0,l,c)),u=0,d=c>0?l-4:l;for(i=0;i<d;i+=4)t=n[e.charCodeAt(i)]<<18|n[e.charCodeAt(i+1)]<<12|n[e.charCodeAt(i+2)]<<6|n[e.charCodeAt(i+3)],g[u++]=t>>16&255,g[u++]=t>>8&255,g[u++]=255&t;2===c&&(t=n[e.charCodeAt(i)]<<2|n[e.charCodeAt(i+1)]>>4,g[u++]=255&t);1===c&&(t=n[e.charCodeAt(i)]<<10|n[e.charCodeAt(i+1)]<<4|n[e.charCodeAt(i+2)]>>2,g[u++]=t>>8&255,g[u++]=255&t);return g},i.fromByteArray=function fromByteArray(e){for(var t,i=e.length,n=i%3,a=[],l=16383,c=0,g=i-n;c<g;c+=l)a.push(encodeChunk(e,c,c+l>g?g:c+l));1===n?(t=e[i-1],a.push(s[t>>2]+s[t<<4&63]+"==")):2===n&&(t=(e[i-2]<<8)+e[i-1],a.push(s[t>>10]+s[t>>4&63]+s[t<<2&63]+"="));return a.join("")};for(var s=[],n=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=0;c<64;++c)s[c]=l[c],n[l.charCodeAt(c)]=c;function getLens(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=e.indexOf("=");return-1===i&&(i=t),[i,i===t?0:4-i%4]}function tripletToBase64(e){return s[e>>18&63]+s[e>>12&63]+s[e>>6&63]+s[63&e]}function encodeChunk(e,t,i){for(var s,n=[],a=t;a<i;a+=3)s=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),n.push(tripletToBase64(s));return n.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},{}],35:[function(e,t,i){(function(t){(function(){"use strict";var t=e("base64-js"),s=e("ieee754");i.Buffer=Buffer,i.SlowBuffer=function SlowBuffer(e){+e!=e&&(e=0);return Buffer.alloc(+e)},i.INSPECT_MAX_BYTES=50;var n=2147483647;function createBuffer(e){if(e>n)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return t.__proto__=Buffer.prototype,t}function Buffer(e,t,i){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return allocUnsafe(e)}return from(e,t,i)}function from(e,t,i){if("string"==typeof e)return function fromString(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!Buffer.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var i=0|byteLength(e,t),s=createBuffer(i),n=s.write(e,t);n!==i&&(s=s.slice(0,n));return s}(e,t);if(ArrayBuffer.isView(e))return fromArrayLike(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer))return function fromArrayBuffer(e,t,i){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(i||0))throw new RangeError('"length" is outside of buffer bounds');var s;s=void 0===t&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,t):new Uint8Array(e,t,i);return s.__proto__=Buffer.prototype,s}(e,t,i);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var s=e.valueOf&&e.valueOf();if(null!=s&&s!==e)return Buffer.from(s,t,i);var n=function fromObject(e){if(Buffer.isBuffer(e)){var t=0|checked(e.length),i=createBuffer(t);return 0===i.length||e.copy(i,0,0,t),i}if(void 0!==e.length)return"number"!=typeof e.length||numberIsNaN(e.length)?createBuffer(0):fromArrayLike(e);if("Buffer"===e.type&&Array.isArray(e.data))return fromArrayLike(e.data)}(e);if(n)return n;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return Buffer.from(e[Symbol.toPrimitive]("string"),t,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function assertSize(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function allocUnsafe(e){return assertSize(e),createBuffer(e<0?0:0|checked(e))}function fromArrayLike(e){for(var t=e.length<0?0:0|checked(e.length),i=createBuffer(t),s=0;s<t;s+=1)i[s]=255&e[s];return i}function checked(e){if(e>=n)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+n.toString(16)+" bytes");return 0|e}function byteLength(e,t){if(Buffer.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var i=e.length,s=arguments.length>2&&!0===arguments[2];if(!s&&0===i)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return utf8ToBytes(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return base64ToBytes(e).length;default:if(n)return s?-1:utf8ToBytes(e).length;t=(""+t).toLowerCase(),n=!0}}function slowToString(e,t,i){var s=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===i||i>this.length)&&(i=this.length),i<=0)return"";if((i>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return hexSlice(this,t,i);case"utf8":case"utf-8":return utf8Slice(this,t,i);case"ascii":return asciiSlice(this,t,i);case"latin1":case"binary":return latin1Slice(this,t,i);case"base64":return base64Slice(this,t,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,t,i);default:if(s)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),s=!0}}function swap(e,t,i){var s=e[t];e[t]=e[i],e[i]=s}function bidirectionalIndexOf(e,t,i,s,n){if(0===e.length)return-1;if("string"==typeof i?(s=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),numberIsNaN(i=+i)&&(i=n?0:e.length-1),i<0&&(i=e.length+i),i>=e.length){if(n)return-1;i=e.length-1}else if(i<0){if(!n)return-1;i=0}if("string"==typeof t&&(t=Buffer.from(t,s)),Buffer.isBuffer(t))return 0===t.length?-1:arrayIndexOf(e,t,i,s,n);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,i):Uint8Array.prototype.lastIndexOf.call(e,t,i):arrayIndexOf(e,[t],i,s,n);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(e,t,i,s,n){var a,l=1,c=e.length,g=t.length;if(void 0!==s&&("ucs2"===(s=String(s).toLowerCase())||"ucs-2"===s||"utf16le"===s||"utf-16le"===s)){if(e.length<2||t.length<2)return-1;l=2,c/=2,g/=2,i/=2}function read(e,t){return 1===l?e[t]:e.readUInt16BE(t*l)}if(n){var u=-1;for(a=i;a<c;a++)if(read(e,a)===read(t,-1===u?0:a-u)){if(-1===u&&(u=a),a-u+1===g)return u*l}else-1!==u&&(a-=a-u),u=-1}else for(i+g>c&&(i=c-g),a=i;a>=0;a--){for(var d=!0,h=0;h<g;h++)if(read(e,a+h)!==read(t,h)){d=!1;break}if(d)return a}return-1}function hexWrite(e,t,i,s){i=Number(i)||0;var n=e.length-i;s?(s=Number(s))>n&&(s=n):s=n;var a=t.length;s>a/2&&(s=a/2);for(var l=0;l<s;++l){var c=parseInt(t.substr(2*l,2),16);if(numberIsNaN(c))return l;e[i+l]=c}return l}function utf8Write(e,t,i,s){return blitBuffer(utf8ToBytes(t,e.length-i),e,i,s)}function asciiWrite(e,t,i,s){return blitBuffer(function asciiToBytes(e){for(var t=[],i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,i,s)}function latin1Write(e,t,i,s){return asciiWrite(e,t,i,s)}function base64Write(e,t,i,s){return blitBuffer(base64ToBytes(t),e,i,s)}function ucs2Write(e,t,i,s){return blitBuffer(function utf16leToBytes(e,t){for(var i,s,n,a=[],l=0;l<e.length&&!((t-=2)<0);++l)s=(i=e.charCodeAt(l))>>8,n=i%256,a.push(n),a.push(s);return a}(t,e.length-i),e,i,s)}function base64Slice(e,i,s){return 0===i&&s===e.length?t.fromByteArray(e):t.fromByteArray(e.slice(i,s))}function utf8Slice(e,t,i){i=Math.min(e.length,i);for(var s=[],n=t;n<i;){var l,c,g,u,d=e[n],h=null,p=d>239?4:d>223?3:d>191?2:1;if(n+p<=i)switch(p){case 1:d<128&&(h=d);break;case 2:128==(192&(l=e[n+1]))&&(u=(31&d)<<6|63&l)>127&&(h=u);break;case 3:l=e[n+1],c=e[n+2],128==(192&l)&&128==(192&c)&&(u=(15&d)<<12|(63&l)<<6|63&c)>2047&&(u<55296||u>57343)&&(h=u);break;case 4:l=e[n+1],c=e[n+2],g=e[n+3],128==(192&l)&&128==(192&c)&&128==(192&g)&&(u=(15&d)<<18|(63&l)<<12|(63&c)<<6|63&g)>65535&&u<1114112&&(h=u)}null===h?(h=65533,p=1):h>65535&&(h-=65536,s.push(h>>>10&1023|55296),h=56320|1023&h),s.push(h),n+=p}return function decodeCodePointsArray(e){var t=e.length;if(t<=a)return String.fromCharCode.apply(String,e);var i="",s=0;for(;s<t;)i+=String.fromCharCode.apply(String,e.slice(s,s+=a));return i}(s)}i.kMaxLength=n,Buffer.TYPED_ARRAY_SUPPORT=function typedArraySupport(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(e){return!1}}(),Buffer.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Buffer.prototype,"parent",{enumerable:!0,get:function(){if(Buffer.isBuffer(this))return this.buffer}}),Object.defineProperty(Buffer.prototype,"offset",{enumerable:!0,get:function(){if(Buffer.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),Buffer.poolSize=8192,Buffer.from=function(e,t,i){return from(e,t,i)},Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,Buffer.alloc=function(e,t,i){return function alloc(e,t,i){return assertSize(e),e<=0?createBuffer(e):void 0!==t?"string"==typeof i?createBuffer(e).fill(t,i):createBuffer(e).fill(t):createBuffer(e)}(e,t,i)},Buffer.allocUnsafe=function(e){return allocUnsafe(e)},Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)},Buffer.isBuffer=function isBuffer(e){return null!=e&&!0===e._isBuffer&&e!==Buffer.prototype},Buffer.compare=function compare(e,t){if(isInstance(e,Uint8Array)&&(e=Buffer.from(e,e.offset,e.byteLength)),isInstance(t,Uint8Array)&&(t=Buffer.from(t,t.offset,t.byteLength)),!Buffer.isBuffer(e)||!Buffer.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var i=e.length,s=t.length,n=0,a=Math.min(i,s);n<a;++n)if(e[n]!==t[n]){i=e[n],s=t[n];break}return i<s?-1:s<i?1:0},Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function concat(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Buffer.alloc(0);var i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;var s=Buffer.allocUnsafe(t),n=0;for(i=0;i<e.length;++i){var a=e[i];if(isInstance(a,Uint8Array)&&(a=Buffer.from(a)),!Buffer.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(s,n),n+=a.length}return s},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)swap(this,t,t+1);return this},Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)swap(this,t,t+3),swap(this,t+1,t+2);return this},Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)swap(this,t,t+7),swap(this,t+1,t+6),swap(this,t+2,t+5),swap(this,t+3,t+4);return this},Buffer.prototype.toString=function toString(){var e=this.length;return 0===e?"":0===arguments.length?utf8Slice(this,0,e):slowToString.apply(this,arguments)},Buffer.prototype.toLocaleString=Buffer.prototype.toString,Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Buffer.compare(this,e)},Buffer.prototype.inspect=function inspect(){var e="",t=i.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},Buffer.prototype.compare=function compare(e,t,i,s,n){if(isInstance(e,Uint8Array)&&(e=Buffer.from(e,e.offset,e.byteLength)),!Buffer.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===i&&(i=e?e.length:0),void 0===s&&(s=0),void 0===n&&(n=this.length),t<0||i>e.length||s<0||n>this.length)throw new RangeError("out of range index");if(s>=n&&t>=i)return 0;if(s>=n)return-1;if(t>=i)return 1;if(this===e)return 0;for(var a=(n>>>=0)-(s>>>=0),l=(i>>>=0)-(t>>>=0),c=Math.min(a,l),g=this.slice(s,n),u=e.slice(t,i),d=0;d<c;++d)if(g[d]!==u[d]){a=g[d],l=u[d];break}return a<l?-1:l<a?1:0},Buffer.prototype.includes=function includes(e,t,i){return-1!==this.indexOf(e,t,i)},Buffer.prototype.indexOf=function indexOf(e,t,i){return bidirectionalIndexOf(this,e,t,i,!0)},Buffer.prototype.lastIndexOf=function lastIndexOf(e,t,i){return bidirectionalIndexOf(this,e,t,i,!1)},Buffer.prototype.write=function write(e,t,i,s){if(void 0===t)s="utf8",i=this.length,t=0;else if(void 0===i&&"string"==typeof t)s=t,i=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(i)?(i>>>=0,void 0===s&&(s="utf8")):(s=i,i=void 0)}var n=this.length-t;if((void 0===i||i>n)&&(i=n),e.length>0&&(i<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");s||(s="utf8");for(var a=!1;;)switch(s){case"hex":return hexWrite(this,e,t,i);case"utf8":case"utf-8":return utf8Write(this,e,t,i);case"ascii":return asciiWrite(this,e,t,i);case"latin1":case"binary":return latin1Write(this,e,t,i);case"base64":return base64Write(this,e,t,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,e,t,i);default:if(a)throw new TypeError("Unknown encoding: "+s);s=(""+s).toLowerCase(),a=!0}},Buffer.prototype.toJSON=function toJSON(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var a=4096;function asciiSlice(e,t,i){var s="";i=Math.min(e.length,i);for(var n=t;n<i;++n)s+=String.fromCharCode(127&e[n]);return s}function latin1Slice(e,t,i){var s="";i=Math.min(e.length,i);for(var n=t;n<i;++n)s+=String.fromCharCode(e[n]);return s}function hexSlice(e,t,i){var s=e.length;(!t||t<0)&&(t=0),(!i||i<0||i>s)&&(i=s);for(var n="",a=t;a<i;++a)n+=toHex(e[a]);return n}function utf16leSlice(e,t,i){for(var s=e.slice(t,i),n="",a=0;a<s.length;a+=2)n+=String.fromCharCode(s[a]+256*s[a+1]);return n}function checkOffset(e,t,i){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>i)throw new RangeError("Trying to access beyond buffer length")}function checkInt(e,t,i,s,n,a){if(!Buffer.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<a)throw new RangeError('"value" argument is out of bounds');if(i+s>e.length)throw new RangeError("Index out of range")}function checkIEEE754(e,t,i,s,n,a){if(i+s>e.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("Index out of range")}function writeFloat(e,t,i,n,a){return t=+t,i>>>=0,a||checkIEEE754(e,0,i,4),s.write(e,t,i,n,23,4),i+4}function writeDouble(e,t,i,n,a){return t=+t,i>>>=0,a||checkIEEE754(e,0,i,8),s.write(e,t,i,n,52,8),i+8}Buffer.prototype.slice=function slice(e,t){var i=this.length;(e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e);var s=this.subarray(e,t);return s.__proto__=Buffer.prototype,s},Buffer.prototype.readUIntLE=function readUIntLE(e,t,i){e>>>=0,t>>>=0,i||checkOffset(e,t,this.length);for(var s=this[e],n=1,a=0;++a<t&&(n*=256);)s+=this[e+a]*n;return s},Buffer.prototype.readUIntBE=function readUIntBE(e,t,i){e>>>=0,t>>>=0,i||checkOffset(e,t,this.length);for(var s=this[e+--t],n=1;t>0&&(n*=256);)s+=this[e+--t]*n;return s},Buffer.prototype.readUInt8=function readUInt8(e,t){return e>>>=0,t||checkOffset(e,1,this.length),this[e]},Buffer.prototype.readUInt16LE=function readUInt16LE(e,t){return e>>>=0,t||checkOffset(e,2,this.length),this[e]|this[e+1]<<8},Buffer.prototype.readUInt16BE=function readUInt16BE(e,t){return e>>>=0,t||checkOffset(e,2,this.length),this[e]<<8|this[e+1]},Buffer.prototype.readUInt32LE=function readUInt32LE(e,t){return e>>>=0,t||checkOffset(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Buffer.prototype.readUInt32BE=function readUInt32BE(e,t){return e>>>=0,t||checkOffset(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Buffer.prototype.readIntLE=function readIntLE(e,t,i){e>>>=0,t>>>=0,i||checkOffset(e,t,this.length);for(var s=this[e],n=1,a=0;++a<t&&(n*=256);)s+=this[e+a]*n;return s>=(n*=128)&&(s-=Math.pow(2,8*t)),s},Buffer.prototype.readIntBE=function readIntBE(e,t,i){e>>>=0,t>>>=0,i||checkOffset(e,t,this.length);for(var s=t,n=1,a=this[e+--s];s>0&&(n*=256);)a+=this[e+--s]*n;return a>=(n*=128)&&(a-=Math.pow(2,8*t)),a},Buffer.prototype.readInt8=function readInt8(e,t){return e>>>=0,t||checkOffset(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Buffer.prototype.readInt16LE=function readInt16LE(e,t){e>>>=0,t||checkOffset(e,2,this.length);var i=this[e]|this[e+1]<<8;return 32768&i?4294901760|i:i},Buffer.prototype.readInt16BE=function readInt16BE(e,t){e>>>=0,t||checkOffset(e,2,this.length);var i=this[e+1]|this[e]<<8;return 32768&i?4294901760|i:i},Buffer.prototype.readInt32LE=function readInt32LE(e,t){return e>>>=0,t||checkOffset(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Buffer.prototype.readInt32BE=function readInt32BE(e,t){return e>>>=0,t||checkOffset(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Buffer.prototype.readFloatLE=function readFloatLE(e,t){return e>>>=0,t||checkOffset(e,4,this.length),s.read(this,e,!0,23,4)},Buffer.prototype.readFloatBE=function readFloatBE(e,t){return e>>>=0,t||checkOffset(e,4,this.length),s.read(this,e,!1,23,4)},Buffer.prototype.readDoubleLE=function readDoubleLE(e,t){return e>>>=0,t||checkOffset(e,8,this.length),s.read(this,e,!0,52,8)},Buffer.prototype.readDoubleBE=function readDoubleBE(e,t){return e>>>=0,t||checkOffset(e,8,this.length),s.read(this,e,!1,52,8)},Buffer.prototype.writeUIntLE=function writeUIntLE(e,t,i,s){(e=+e,t>>>=0,i>>>=0,s)||checkInt(this,e,t,i,Math.pow(2,8*i)-1,0);var n=1,a=0;for(this[t]=255&e;++a<i&&(n*=256);)this[t+a]=e/n&255;return t+i},Buffer.prototype.writeUIntBE=function writeUIntBE(e,t,i,s){(e=+e,t>>>=0,i>>>=0,s)||checkInt(this,e,t,i,Math.pow(2,8*i)-1,0);var n=i-1,a=1;for(this[t+n]=255&e;--n>=0&&(a*=256);)this[t+n]=e/a&255;return t+i},Buffer.prototype.writeUInt8=function writeUInt8(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,1,255,0),this[t]=255&e,t+1},Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Buffer.prototype.writeIntLE=function writeIntLE(e,t,i,s){if(e=+e,t>>>=0,!s){var n=Math.pow(2,8*i-1);checkInt(this,e,t,i,n-1,-n)}var a=0,l=1,c=0;for(this[t]=255&e;++a<i&&(l*=256);)e<0&&0===c&&0!==this[t+a-1]&&(c=1),this[t+a]=(e/l|0)-c&255;return t+i},Buffer.prototype.writeIntBE=function writeIntBE(e,t,i,s){if(e=+e,t>>>=0,!s){var n=Math.pow(2,8*i-1);checkInt(this,e,t,i,n-1,-n)}var a=i-1,l=1,c=0;for(this[t+a]=255&e;--a>=0&&(l*=256);)e<0&&0===c&&0!==this[t+a+1]&&(c=1),this[t+a]=(e/l|0)-c&255;return t+i},Buffer.prototype.writeInt8=function writeInt8(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},Buffer.prototype.writeInt16LE=function writeInt16LE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},Buffer.prototype.writeInt16BE=function writeInt16BE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},Buffer.prototype.writeInt32LE=function writeInt32LE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},Buffer.prototype.writeInt32BE=function writeInt32BE(e,t,i){return e=+e,t>>>=0,i||checkInt(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Buffer.prototype.writeFloatLE=function writeFloatLE(e,t,i){return writeFloat(this,e,t,!0,i)},Buffer.prototype.writeFloatBE=function writeFloatBE(e,t,i){return writeFloat(this,e,t,!1,i)},Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,t,i){return writeDouble(this,e,t,!0,i)},Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,t,i){return writeDouble(this,e,t,!1,i)},Buffer.prototype.copy=function copy(e,t,i,s){if(!Buffer.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),s||0===s||(s=this.length),t>=e.length&&(t=e.length),t||(t=0),s>0&&s<i&&(s=i),s===i)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(s<0)throw new RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),e.length-t<s-i&&(s=e.length-t+i);var n=s-i;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,i,s);else if(this===e&&i<t&&t<s)for(var a=n-1;a>=0;--a)e[a+t]=this[a+i];else Uint8Array.prototype.set.call(e,this.subarray(i,s),t);return n},Buffer.prototype.fill=function fill(e,t,i,s){if("string"==typeof e){if("string"==typeof t?(s=t,t=0,i=this.length):"string"==typeof i&&(s=i,i=this.length),void 0!==s&&"string"!=typeof s)throw new TypeError("encoding must be a string");if("string"==typeof s&&!Buffer.isEncoding(s))throw new TypeError("Unknown encoding: "+s);if(1===e.length){var n=e.charCodeAt(0);("utf8"===s&&n<128||"latin1"===s)&&(e=n)}}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<i)throw new RangeError("Out of range index");if(i<=t)return this;var a;if(t>>>=0,i=void 0===i?this.length:i>>>0,e||(e=0),"number"==typeof e)for(a=t;a<i;++a)this[a]=e;else{var l=Buffer.isBuffer(e)?e:Buffer.from(e,s),c=l.length;if(0===c)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<i-t;++a)this[a+t]=l[a%c]}return this};var l=/[^+/0-9A-Za-z-_]/g;function toHex(e){return e<16?"0"+e.toString(16):e.toString(16)}function utf8ToBytes(e,t){var i;t=t||1/0;for(var s=e.length,n=null,a=[],l=0;l<s;++l){if((i=e.charCodeAt(l))>55295&&i<57344){if(!n){if(i>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(l+1===s){(t-=3)>-1&&a.push(239,191,189);continue}n=i;continue}if(i<56320){(t-=3)>-1&&a.push(239,191,189),n=i;continue}i=65536+(n-55296<<10|i-56320)}else n&&(t-=3)>-1&&a.push(239,191,189);if(n=null,i<128){if((t-=1)<0)break;a.push(i)}else if(i<2048){if((t-=2)<0)break;a.push(i>>6|192,63&i|128)}else if(i<65536){if((t-=3)<0)break;a.push(i>>12|224,i>>6&63|128,63&i|128)}else{if(!(i<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}}return a}function base64ToBytes(e){return t.toByteArray(function base64clean(e){if((e=(e=e.split("=")[0]).trim().replace(l,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function blitBuffer(e,t,i,s){for(var n=0;n<s&&!(n+i>=t.length||n>=e.length);++n)t[n+i]=e[n];return n}function isInstance(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function numberIsNaN(e){return e!=e}}).call(this)}).call(this,e("buffer").Buffer)},{"base64-js":34,buffer:35,ieee754:36}],36:[function(e,t,i){i.read=function(e,t,i,s,n){var a,l,c=8*n-s-1,g=(1<<c)-1,u=g>>1,d=-7,h=i?n-1:0,p=i?-1:1,f=e[t+h];for(h+=p,a=f&(1<<-d)-1,f>>=-d,d+=c;d>0;a=256*a+e[t+h],h+=p,d-=8);for(l=a&(1<<-d)-1,a>>=-d,d+=s;d>0;l=256*l+e[t+h],h+=p,d-=8);if(0===a)a=1-u;else{if(a===g)return l?NaN:1/0*(f?-1:1);l+=Math.pow(2,s),a-=u}return(f?-1:1)*l*Math.pow(2,a-s)},i.write=function(e,t,i,s,n,a){var l,c,g,u=8*a-n-1,d=(1<<u)-1,h=d>>1,p=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,f=s?0:a-1,m=s?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(c=isNaN(t)?1:0,l=d):(l=Math.floor(Math.log(t)/Math.LN2),t*(g=Math.pow(2,-l))<1&&(l--,g*=2),(t+=l+h>=1?p/g:p*Math.pow(2,1-h))*g>=2&&(l++,g/=2),l+h>=d?(c=0,l=d):l+h>=1?(c=(t*g-1)*Math.pow(2,n),l+=h):(c=t*Math.pow(2,h-1)*Math.pow(2,n),l=0));n>=8;e[i+f]=255&c,f+=m,c/=256,n-=8);for(l=l<<n|c,u+=n;u>0;e[i+f]=255&l,f+=m,l/=256,u-=8);e[i+f-m]|=128*y}},{}],37:[function(e,t,i){var s,n,a=t.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(e){if(s===setTimeout)return setTimeout(e,0);if((s===defaultSetTimout||!s)&&setTimeout)return s=setTimeout,setTimeout(e,0);try{return s(e,0)}catch(t){try{return s.call(null,e,0)}catch(t){return s.call(this,e,0)}}}!function(){try{s="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){s=defaultSetTimout}try{n="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){n=defaultClearTimeout}}();var l,c=[],g=!1,u=-1;function cleanUpNextTick(){g&&l&&(g=!1,l.length?c=l.concat(c):u=-1,c.length&&drainQueue())}function drainQueue(){if(!g){var e=runTimeout(cleanUpNextTick);g=!0;for(var t=c.length;t;){for(l=c,c=[];++u<t;)l&&l[u].run();u=-1,t=c.length}l=null,g=!1,function runClearTimeout(e){if(n===clearTimeout)return clearTimeout(e);if((n===defaultClearTimeout||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];c.push(new Item(e,t)),1!==c.length||g||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=noop,a.addListener=noop,a.once=noop,a.off=noop,a.removeListener=noop,a.removeAllListeners=noop,a.emit=noop,a.prependListener=noop,a.prependOnceListener=noop,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],38:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.createCircularProgress=function createCircularProgress(){let{value:e=0,label:t="",state:i="",id:s=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=80,a=2*Math.PI*36,l=Math.max(0,Math.min(100,e)),c=a-l/100*a,g=s||`circular-progress-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,u=document.createElement("div");return u.className="circular-progress"+(i?" "+i:""),u.id=g,u.setAttribute("role","progressbar"),u.setAttribute("aria-valuenow",l),u.setAttribute("aria-valuemin",0),u.setAttribute("aria-valuemax",100),u.setAttribute("aria-label",t?`${t} ${l}%`:`${l}%`),u.setAttribute("data-percent",l),u.setAttribute("data-state",i),u.setAttribute("data-created",(new Date).toISOString()),u.innerHTML=`\n    <svg width="80" height="80" viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg">\n      \x3c!-- Background circle --\x3e\n      <circle \n        class="circular-bg" \n        cx="40" \n        cy="40" \n        r="36" \n        fill="none"\n        stroke="#e0e0e0"\n        stroke-width="8"\n      />\n      \x3c!-- Foreground progress circle --\x3e\n      <circle \n        class="circular-fg" \n        cx="40" \n        cy="40" \n        r="36" \n        fill="none"\n        stroke="var(--brand-color, #7c3aed)"\n        stroke-width="8"\n        stroke-linecap="round"\n        stroke-dasharray="${a}"\n        stroke-dashoffset="${c}"\n        transform="rotate(-90 40 40)"\n      />\n    </svg>\n    \x3c!-- Percentage label --\x3e\n    <span class="circular-label">${Math.round(l)}%</span>\n    ${t?`<span class="circular-status">${t}</span>`:""}\n  `,console.debug("Circular Progress Created:",{id:g,percent:l,state:i,size:n,stroke:8,radius:36,circumference:a,dashOffset:c,label:t}),u}},{}],39:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ElementRegistry=void 0;const s={};function getElement(e,t){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e||"string"!=typeof e)return console.error(`[ElementRegistry] Invalid selector provided: ${e}`),null;if(e.includes("<")||e.includes(">")||e.includes('"')&&!e.includes("[")&&!e.includes("]")||e.includes("'")&&!e.includes("[")&&!e.includes("]"))return console.error(`[ElementRegistry] Potentially unsafe selector detected: ${e}`),null;if(s[e])return s[e];try{const n=document.querySelector(e);if(!n&&i)console.warn(`[ElementRegistry] Missing required element: ${t} (${e})`);else if(n){if(!document.contains(n))return console.warn(`[ElementRegistry] Element found but not in DOM: ${t} (${e})`),s[e]=null,null}else console.info(`[ElementRegistry] Optional element not found: ${t} (${e})`);return s[e]=n,n}catch(i){return console.error(`[ElementRegistry] Error finding element: ${t} (${e})`,i),s[e]=null,null}}const n=i.ElementRegistry={importButton:()=>getElement("#import-btn","Import Button"),fileInput:()=>getElement("#csv-file","File Input"),dashboardTab:()=>getElement("#dashboard-tab","Dashboard Tab"),dragDropArea:()=>getElement("#drag-drop-area","Drag-and-Drop Area",!1),notificationContainer:()=>getElement("#notification-area","Notification Container"),progressContainer:()=>getElement("#import-progress-container","Import Progress Container",!1)||getElement("#delete-progress-container","Delete Progress Container",!1)||getElement("#modify-progress-container","Modify Progress Container",!1)||getElement("#export-progress-container","Export Progress Container",!1)||getElement("#progress-container","Progress Container",!1)||getElement(".progress-container","Progress Container (class)",!1),tokenStatus:()=>getElement("#token-status-indicator","Token Status"),connectionStatus:()=>getElement("#connection-status","Connection Status"),currentTokenStatus:()=>getElement("#current-token-status","Current Token Status"),homeTokenStatus:()=>getElement("#home-token-status","Home Token Status"),fileInfo:()=>getElement("#file-info","File Info"),previewContainer:()=>getElement("#dashboard-preview","Preview Container"),fileInputLabel:()=>getElement('label[for="csv-file"]',"File Input Label"),deleteFileInput:()=>getElement("#delete-csv-file","Delete File Input"),deleteFileInputLabel:()=>getElement('label[for="delete-csv-file"]',"Delete File Input Label"),modifyFileInput:()=>getElement("#modify-csv-file","Modify File Input"),modifyFileInputLabel:()=>getElement('label[for="modify-csv-file"]',"Modify File Input Label"),importPopulationSelect:()=>getElement("#import-population-select","Import Population Select"),deletePopulationSelect:()=>getElement("#delete-population-select","Delete Population Select"),modifyPopulationSelect:()=>getElement("#modify-population-select","Modify Population Select"),dashboardPopulationSelect:()=>getElement("#dashboard-population-select","Dashboard Population Select"),startImportBtn:()=>getElement("#start-import","Start Import Button"),startImportBtnBottom:()=>getElement("#bottom-start-import","Bottom Start Import Button"),settingsSaveStatus:()=>getElement("#settings-save-status","Settings Save Status"),importStatus:()=>getElement("#import-status","Import Status"),useDefaultPopulationCheckbox:()=>getElement("#use-default-population","Use Default Population Checkbox"),useCsvPopulationIdCheckbox:()=>getElement("#use-csv-population-id","Use CSV Population ID Checkbox"),getTokenBtn:()=>getElement("#get-token-quick","Get Token Button"),populationIdField:()=>getElement("#population-id","Population ID Field")};"undefined"!=typeof window&&(window.getElement=getElement,window.elementCache=s,window.ElementRegistry=n,console.log("✅ Element registry global exports initialized"))},{}],40:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ErrorTypes=i.ErrorSeverity=i.ErrorMetadata=i.ErrorMessages=i.ErrorCodes=void 0,i.createError=function createError(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=new Error(t||l[e]||"An unknown error occurred");s.type=e,s.code=i.code||a[e]||0,s.details=i,s.timestamp=(new Date).toISOString();const n=c[e];n&&(s.severity=n.severity,s.isRecoverable=n.isRecoverable,s.userMessage=n.userMessage);return s},i.getDefaultMessage=function getDefaultMessage(e){return l[e]||"An unknown error occurred"},i.getDefaultSeverity=function getDefaultSeverity(e){const t=c[e];return t?t.severity:n.ERROR},i.isErrorType=function isErrorType(e,t){return e&&e.type===t};const s=i.ErrorTypes=Object.freeze({VALIDATION:"VALIDATION",AUTHENTICATION:"AUTHENTICATION",AUTHORIZATION:"AUTHORIZATION",NETWORK:"NETWORK",TIMEOUT:"TIMEOUT",SERVER:"SERVER",SERVICE_UNAVAILABLE:"SERVICE_UNAVAILABLE",NOT_FOUND:"NOT_FOUND",CONFLICT:"CONFLICT",CONFIGURATION:"CONFIGURATION",INTEGRATION:"INTEGRATION",UNKNOWN:"UNKNOWN"}),n=i.ErrorSeverity=Object.freeze({FATAL:"FATAL",ERROR:"ERROR",WARNING:"WARNING",INFO:"INFO",DEBUG:"DEBUG"}),a=i.ErrorCodes=Object.freeze({INVALID_CREDENTIALS:1001,SESSION_EXPIRED:1002,INVALID_TOKEN:1003,INVALID_INPUT:2001,MISSING_REQUIRED_FIELD:2002,INVALID_FORMAT:2003,PERMISSION_DENIED:3001,INSUFFICIENT_PERMISSIONS:3002,NETWORK_ERROR:4001,REQUEST_TIMEOUT:4002,INTERNAL_SERVER_ERROR:5001,SERVICE_UNAVAILABLE:5002,DUPLICATE_ENTRY:6001,RESOURCE_NOT_FOUND:6002,EXTERNAL_SERVICE_ERROR:7001,API_RATE_LIMIT_EXCEEDED:7002}),l=i.ErrorMessages=Object.freeze({[s.VALIDATION]:"Validation failed",[s.AUTHENTICATION]:"Authentication required",[s.AUTHORIZATION]:"Permission denied",[s.NETWORK]:"Network error occurred",[s.TIMEOUT]:"Request timed out",[s.SERVER]:"Internal server error",[s.SERVICE_UNAVAILABLE]:"Service unavailable",[s.NOT_FOUND]:"Resource not found",[s.CONFLICT]:"Resource conflict",[s.CONFIGURATION]:"Configuration error",[s.INTEGRATION]:"Integration error",[s.UNKNOWN]:"An unexpected error occurred"}),c=i.ErrorMetadata=Object.freeze({[s.VALIDATION]:{severity:n.WARNING,isRecoverable:!0,userMessage:"Please check your input and try again."},[s.AUTHENTICATION]:{severity:n.ERROR,isRecoverable:!0,userMessage:"Your session has expired. Please log in again."},[s.AUTHORIZATION]:{severity:n.ERROR,isRecoverable:!1,userMessage:"You do not have permission to perform this action."},[s.NETWORK]:{severity:n.WARNING,isRecoverable:!0,userMessage:"Unable to connect to the server. Please check your internet connection."},[s.SERVER]:{severity:n.ERROR,isRecoverable:!1,userMessage:"An unexpected server error occurred. Please try again later."},[s.UNKNOWN]:{severity:n.ERROR,isRecoverable:!1,userMessage:"An unexpected error occurred. Please try again."}})},{}],41:[function(e,t,i){(function(t){(function(){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=i.MessageFormatter=void 0;var s=e("./winston-logger.js");class MessageFormatter{constructor(){this.logger=(0,s.createWinstonLogger)({service:"pingone-message-formatter",environment:t.env.NODE_ENV||"development"}),this.formattingOptions={showTimestamps:!0,showEventMarkers:!0,showSeparators:!0,maxMessageLength:200,separatorChar:"*",separatorLength:50},this.eventTypes={import:{start:"IMPORT STARTED",end:"IMPORT COMPLETED",error:"IMPORT ERROR",color:"#3498db"},export:{start:"EXPORT STARTED",end:"EXPORT COMPLETED",error:"EXPORT ERROR",color:"#27ae60"},modify:{start:"MODIFY STARTED",end:"MODIFY COMPLETED",error:"MODIFY ERROR",color:"#f39c12"},delete:{start:"DELETE STARTED",end:"DELETE COMPLETED",error:"DELETE ERROR",color:"#e74c3c"},validation:{start:"VALIDATION STARTED",end:"VALIDATION COMPLETED",error:"VALIDATION ERROR",color:"#9b59b6"},connection:{start:"CONNECTION ESTABLISHED",end:"CONNECTION CLOSED",error:"CONNECTION ERROR",color:"#1abc9c"}}}formatMessageBlock(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{const n=this.eventTypes[e]||this.eventTypes.import,a=this.formatTimestamp(new Date),l=this.createSeparator();let c="";if(this.formattingOptions.showSeparators&&(c+=l+"\n"),this.formattingOptions.showEventMarkers){c+=`${this.getEventMarker(n,t)}\n`}return this.formattingOptions.showTimestamps&&(c+=`[${a}] `),c+=i+"\n",s&&Object.keys(s).length>0&&(c+=this.formatDetails(s)),this.formattingOptions.showSeparators&&(c+=l+"\n"),this.logger.debug("Message block formatted",{eventType:e,eventStage:t,messageLength:i.length}),c}catch(e){return this.logger.error("Error formatting message block",{error:e.message}),i}}formatProgressMessage(e,t,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};try{const e=this.formatTimestamp(new Date),a=i>0?Math.round(t/i*100):0;let l="";return this.formattingOptions.showTimestamps&&(l+=`[${e}] `),l+=`PROGRESS: ${t}/${i} (${a}%)`,s&&(l+=` - ${s}`),n&&Object.keys(n).length>0&&(l+="\n"+this.formatProgressStats(n)),l}catch(e){return this.logger.error("Error formatting progress message",{error:e.message}),s||`Progress: ${t}/${i}`}}formatErrorMessage(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const s=this.eventTypes[e]||this.eventTypes.import,n=this.formatTimestamp(new Date),a=this.createSeparator();let l="";return this.formattingOptions.showSeparators&&(l+=a+"\n"),l+=`${s.error}\n`,this.formattingOptions.showTimestamps&&(l+=`[${n}] `),l+=`ERROR: ${t}\n`,i&&Object.keys(i).length>0&&(l+=this.formatErrorDetails(i)),this.formattingOptions.showSeparators&&(l+=a+"\n"),l}catch(e){return this.logger.error("Error formatting error message",{error:e.message}),`ERROR: ${t}`}}formatCompletionMessage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const i=this.eventTypes[e]||this.eventTypes.import,s=this.formatTimestamp(new Date),n=this.createSeparator();let a="";return this.formattingOptions.showSeparators&&(a+=n+"\n"),a+=`${i.end}\n`,this.formattingOptions.showTimestamps&&(a+=`[${s}] `),a+="Operation completed successfully\n",t&&Object.keys(t).length>0&&(a+=this.formatResults(t)),this.formattingOptions.showSeparators&&(a+=n+"\n"),a}catch(e){return this.logger.error("Error formatting completion message",{error:e.message}),"Operation completed successfully"}}formatSSEEvent(e){try{const{type:t,message:i,current:s,total:n,counts:a,error:l}=e,c=this.formatTimestamp(new Date);let g="";switch(this.formattingOptions.showTimestamps&&(g+=`[${c}] `),t){case"progress":g+=this.formatProgressMessage("import",s,n,i,a);break;case"completion":g+=this.formatCompletionMessage("import",e);break;case"error":g+=this.formatErrorMessage("import",i,e);break;default:g+=`SSE EVENT [${t.toUpperCase()}]: ${i||"No message"}`}return g}catch(t){return this.logger.error("Error formatting SSE event",{error:t.message}),e.message||"SSE event received"}}createSeparator(){const e=this.formattingOptions.separatorChar,t=this.formattingOptions.separatorLength;return e.repeat(t)}getEventMarker(e,t){switch(t){case"start":default:return e.start;case"end":return e.end;case"error":return e.error}}formatTimestamp(e){return e.toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"})}formatDetails(e){try{let t="";for(const[i,s]of Object.entries(e))null!=s&&(t+=`  ${i}: ${s}\n`);return t}catch(e){return this.logger.error("Error formatting details",{error:e.message}),""}}formatProgressStats(e){try{let t="  Statistics:\n";const i={processed:"Processed",success:"Success",failed:"Failed",skipped:"Skipped",duplicates:"Duplicates"};for(const[s,n]of Object.entries(e))null!=n&&i[s]&&(t+=`    ${i[s]}: ${n}\n`);return t}catch(e){return this.logger.error("Error formatting progress stats",{error:e.message}),""}}formatErrorDetails(e){try{let t="  Error Details:\n";for(const[i,s]of Object.entries(e))null!=s&&(t+=`    ${i}: ${s}\n`);return t}catch(e){return this.logger.error("Error formatting error details",{error:e.message}),""}}formatResults(e){try{let t="  Results:\n";const i={total:"Total Records",success:"Successful",failed:"Failed",skipped:"Skipped",duplicates:"Duplicates",duration:"Duration"};for(const[s,n]of Object.entries(e))if(null!=n&&i[s]){let e=n;"duration"===s&&"number"==typeof n&&(e=this.formatDuration(n)),t+=`    ${i[s]}: ${e}\n`}return t}catch(e){return this.logger.error("Error formatting results",{error:e.message}),""}}formatDuration(e){try{const t=Math.floor(e/1e3),i=Math.floor(t/60),s=Math.floor(i/60);return s>0?`${s}h ${i%60}m ${t%60}s`:i>0?`${i}m ${t%60}s`:`${t}s`}catch(t){return this.logger.error("Error formatting duration",{error:t.message}),`${e}ms`}}updateFormattingOptions(e){try{this.formattingOptions={...this.formattingOptions,...e},this.logger.debug("Formatting options updated",{options:e})}catch(e){this.logger.error("Error updating formatting options",{error:e.message})}}getFormattingOptions(){return{...this.formattingOptions}}}i.MessageFormatter=MessageFormatter;i.default=new MessageFormatter}).call(this)}).call(this,e("_process"))},{"./winston-logger.js":45,_process:37}],42:[function(e,t,i){(function(t){(function(){"use strict";var s=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(i,"__esModule",{value:!0}),i.default=i.ProgressManager=void 0;var n=e("./winston-logger.js");e("./element-registry.js"),e("./session-manager.js"),s(e("./message-formatter.js"));const a="production"!==t.env.NODE_ENV;class ProgressManager{constructor(){this.logger=(0,n.createWinstonLogger)("pingone-progress"),this.isEnabled=!0,this.currentOperation=null,this.currentSessionId=null,this.isActive=!1,this.startTime=null,this.timingInterval=null,this.progressCallback=null,this.completeCallback=null,this.cancelCallback=null,this.duplicateHandlingMode="skip",this.socket=null,this.websocket=null,this.connectionType=null,this.connectionRetries=0,this.maxRetries=3,this.stats={processed:0,success:0,failed:0,skipped:0,total:0},this.logger.debug("ProgressManager initialized")}initialize(){try{this.setupElements(),this.setupEventListeners(),this.logger.info("Enhanced progress manager initialized successfully")}catch(e){this.logger.error("Failed to initialize progress manager",{error:e.message})}}setupElements(){try{this.progressContainer=document.getElementById("progress-container"),this.progressContainer||(this.logger.info("Main progress container not found - will use operation-specific containers"),this.isEnabled=!0),this.logger.info("Progress container found",{id:this.progressContainer.id,className:this.progressContainer.className,display:this.progressContainer.style.display,visibility:this.progressContainer.style.visibility,offsetParent:null!==this.progressContainer.offsetParent}),this.progressContainer.innerHTML='\n                <div class="progress-overlay">\n                    <div class="progress-modal">\n                        <div class="progress-header">\n                            <div class="operation-info">\n                                <h3 class="operation-title">\n                                    <i class="fas fa-cog fa-spin"></i>\n                                    <span class="title-text">Operation in Progress</span>\n                                </h3>\n                                <div class="operation-subtitle">Processing your request...</div>\n                            </div>\n                            <button class="cancel-operation" type="button" aria-label="Cancel operation">\n                                <i class="fas fa-times"></i>\n                                <span>Cancel</span>\n                            </button>\n                        </div>\n                        \n                        <div class="progress-content">\n                            <div class="progress-steps">\n                                <div class="step active" data-step="init">\n                                    <div class="step-icon">\n                                        <i class="fas fa-play"></i>\n                                    </div>\n                                    <div class="step-label">Initializing</div>\n                                </div>\n                                <div class="step" data-step="validate">\n                                    <div class="step-icon">\n                                        <i class="fas fa-check"></i>\n                                    </div>\n                                    <div class="step-label">Validating</div>\n                                </div>\n                                <div class="step" data-step="process">\n                                    <div class="step-icon">\n                                        <i class="fas fa-cogs"></i>\n                                    </div>\n                                    <div class="step-label">Processing</div>\n                                </div>\n                                <div class="step" data-step="complete">\n                                    <div class="step-icon">\n                                        <i class="fas fa-check-circle"></i>\n                                    </div>\n                                    <div class="step-label">Complete</div>\n                                </div>\n                            </div>\n                            \n                            <div class="progress-main">\n                                <div class="progress-bar-container">\n                                    <div class="progress-bar">\n                                        <div class="progress-bar-fill"></div>\n                                        <div class="progress-bar-glow"></div>\n                                    </div>\n                                    <div class="progress-percentage">0%</div>\n                                </div>\n                                \n                                <div class="progress-text">Preparing operation...</div>\n                                \n                                <div class="progress-stats">\n                                    <div class="stat-item">\n                                        <span class="stat-label">Processed:</span>\n                                        <span class="stat-value processed">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Success:</span>\n                                        <span class="stat-value success">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Failed:</span>\n                                        <span class="stat-value failed">0</span>\n                                    </div>\n                                    <div class="stat-item">\n                                        <span class="stat-label">Skipped:</span>\n                                        <span class="stat-value skipped">0</span>\n                                    </div>\n                                </div>\n                                \n                                <div class="progress-timing">\n                                    <div class="time-elapsed">\n                                        <i class="fas fa-clock"></i>\n                                        <span>Time: <span class="elapsed-value">00:00</span></span>\n                                    </div>\n                                    <div class="time-remaining">\n                                        <i class="fas fa-hourglass-half"></i>\n                                        <span>ETA: <span class="eta-value">Calculating...</span></span>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div class="progress-details">\n                                <div class="details-header">\n                                    <h4><i class="fas fa-info-circle"></i> Operation Details</h4>\n                                </div>\n                                <div class="details-content">\n                                    <div class="detail-item">\n                                        <span class="detail-label">Operation Type:</span>\n                                        <span class="detail-value operation-type">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Session ID:</span>\n                                        <span class="detail-value session-id">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Population:</span>\n                                        <span class="detail-value population-info">-</span>\n                                    </div>\n                                    <div class="detail-item">\n                                        <span class="detail-label">Connection:</span>\n                                        <span class="detail-value connection-type">-</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ',this.logger.debug("Progress elements setup completed")}catch(e){this.logger.error("Error setting up progress elements",{error:e.message}),this.isEnabled=!1}}setupEventListeners(){if(this.isEnabled)try{const e=this.progressContainer.querySelector(".cancel-operation");e&&e.addEventListener("click",()=>this.cancelOperation());const t=this.progressContainer.querySelector(".close-progress-btn");t&&t.addEventListener("click",()=>this.hideProgress()),this.logger.debug("Progress event listeners setup completed")}catch(e){this.logger.error("Error setting up progress event listeners",{error:e.message})}else this.logger.warn("Progress manager not enabled - skipping event listener setup")}startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.isEnabled?(this.currentOperation=e,this.isActive=!0,this.startTime=Date.now(),this.resetOperationStats(),this.selectProgressContainer(e),this.progressContainer||this.createFallbackProgressContainer(e),this.progressContainer?(this.initializeProgressContainer(),this.updateOperationTitle(e),this.updateOperationDetails(t),this.showProgress(),this.startTimingUpdates(),this.logger.info("Operation started",{operationType:e,options:t})):this.logger.error("No progress container available for operation",{operationType:e})):this.logger.warn("Progress manager not enabled - cannot start operation")}selectProgressContainer(e){if(this.progressContainer&&this.progressContainer.parentNode)return;const t={import:"progress-container",delete:"progress-container-delete",modify:"progress-container-modify",export:"progress-container-export"}[e]||"progress-container";this.progressContainer=document.getElementById(t),this.progressContainer||(this.progressContainer=document.getElementById("progress-container")),this.progressContainer?this.logger.info("Selected progress container",{id:this.progressContainer.id,operationType:e}):this.logger.warn("No progress container found for operation",{operationType:e})}createFallbackProgressContainer(e){try{const t=document.createElement("div");t.id="progress-container-fallback",t.className="progress-container visible",t.style.cssText="\n                display: block !important;\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0,0,0,0.7);\n                z-index: 10000;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            ",document.body.appendChild(t),this.progressContainer=t,this.logger.info("Created fallback progress container",{operationType:e})}catch(e){this.logger.error("Failed to create fallback progress container",{error:e.message})}}initializeProgressContainer(){this.progressContainer&&!this.progressContainer.querySelector(".progress-overlay")&&(this.setupElements(),this.setupEventListeners())}initializeRealTimeConnection(e){e?(this.currentSessionId=e,this.connectionRetries=0,this.trySocketIOConnection(e)):this.logger.warn("No session ID provided for real-time connection")}trySocketIOConnection(e){try{if("undefined"!=typeof io)this.logger.info("Using global Socket.IO client"),this.connectWithSocketIO(io,e);else{this.logger.info("Loading Socket.IO client dynamically");const t=document.createElement("script");t.src="/socket.io/socket.io.js",t.async=!0,t.onload=()=>{this.logger.info("Socket.IO client loaded successfully"),"undefined"!=typeof io?this.connectWithSocketIO(io,e):(this.logger.warn("Socket.IO loaded but io is undefined, trying WebSocket"),this.tryWebSocketConnection(e))},t.onerror=t=>{this.logger.warn("Failed to load Socket.IO client script",{error:t.message}),this.tryWebSocketConnection(e)},document.head.appendChild(t)}}catch(t){this.logger.warn("Socket.IO connection setup failed, trying WebSocket",{error:t.message}),this.tryWebSocketConnection(e)}}reconnectSocketIO(e){this.isReconnecting||(this.isReconnecting=!0,this.logger.info("Attempting to reconnect Socket.IO",{sessionId:e}),console.log("🔄 [PROGRESS] Attempting to reconnect Socket.IO"),this.socket&&(this.socket.close(),this.socket=null),setTimeout(()=>{this.trySocketIOConnection(e),this.isReconnecting=!1},1e3))}connectWithSocketIO(e,t){try{this.socket=e("/",{transports:["websocket","polling"],timeout:5e3,forceNew:!0}),this.socket.on("connect",()=>{this.connectionType="socketio",this.updateConnectionType("Socket.IO"),this.logger.info("Socket.IO connected",{sessionId:t,socketId:this.socket.id}),console.log(`🔌 [PROGRESS] Socket.IO connected (ID: ${this.socket.id})`),this.socket.emit("registerSession",t),this.socket.emit("join-session",{sessionId:t})}),this.socket.on("progress",e=>{console.log("🔄 [PROGRESS] Received progress event:",e),this.handleProgressEvent(e)}),this.socket.on("completion",e=>{console.log("✅ [PROGRESS] Received completion event:",e),this.handleCompletionEvent(e)}),this.socket.on("complete",e=>{console.log("✅ [PROGRESS] Received complete event:",e),this.handleCompletionEvent(e)}),this.socket.on("error",e=>{console.log("❌ [PROGRESS] Received error event:",e),this.handleErrorEvent(e)}),this.socket.on("disconnect",()=>{console.log("🔌 [PROGRESS] Socket.IO disconnected"),this.logger.warn("Socket.IO disconnected"),this.handleConnectionFailure()}),this.socket.on("connect_error",e=>{console.log("❌ [PROGRESS] Socket.IO connection error:",e.message),this.logger.warn("Socket.IO connection error",{error:e.message}),this.handleConnectionFailure()})}catch(e){this.logger.warn("Socket.IO connection failed, trying WebSocket",{error:e.message}),this.tryWebSocketConnection(t)}}tryWebSocketConnection(e){try{const t=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.host}/ws`;this.websocket=new WebSocket(t),this.websocket.onopen=()=>{this.connectionType="websocket",this.updateConnectionType("WebSocket"),this.logger.info("WebSocket connected",{sessionId:e}),this.websocket.send(JSON.stringify({type:"join-session",sessionId:e}))},this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);switch(t.type){case"progress":this.handleProgressEvent(t);break;case"complete":this.handleCompletionEvent(t);break;case"error":this.handleErrorEvent(t)}}catch(e){this.logger.error("Error parsing WebSocket message",{error:e.message})}},this.websocket.onclose=e=>{this.logger.warn("WebSocket closed",{code:e.code,reason:e.reason}),this.handleConnectionFailure()},this.websocket.onerror=e=>{this.logger.error("WebSocket error",{error:e.message}),this.handleConnectionFailure()}}catch(e){this.logger.error("WebSocket connection failed",{error:e.message}),this.handleConnectionFailure()}}handleConnectionFailure(){this.connectionRetries++,this.connectionRetries<=this.maxRetries?(this.logger.info("Retrying connection",{attempt:this.connectionRetries,maxRetries:this.maxRetries}),setTimeout(()=>{this.currentSessionId&&this.initializeRealTimeConnection(this.currentSessionId)},1e3*this.connectionRetries)):(this.logger.warn("Max connection retries reached, falling back to polling"),this.updateConnectionType("Polling (Fallback)"))}closeConnections(){this.socket&&(this.socket.disconnect(),this.socket=null),this.websocket&&(this.websocket.close(1e3,"Operation completed"),this.websocket=null),this.connectionType=null,this.logger.debug("Real-time connections closed")}updateSessionId(e){if(!e)return void this.logger.warn("No session ID provided for update");this.currentSessionId=e;const t=this.progressContainer.querySelector(".detail-value.session-id");t&&(t.textContent=e),this.logger.info("Session ID updated",{sessionId:e})}handleProgressEvent(e){if(!e)return void this.logger.warn("No progress data received");const{current:t,total:i,message:s,counts:n}=e;this.updateProgress(t,i,s,n),this.logger.debug("Progress event handled",{current:t,total:i,message:s})}handleCompletionEvent(e){this.completeOperation(e),this.logger.info("Completion event handled",{data:e})}handleErrorEvent(e){const{message:t,details:i}=e;this.handleOperationError(t,i),this.logger.error("Error event handled",{message:t,details:i})}updateProgress(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this.isEnabled||!this.progressContainer)return void this.logger.warn("Progress manager not enabled or container not found");const n=this.progressContainer.querySelector(".progress-bar-fill");if(n){const i=t>0?Math.min(100,Math.round(e/t*100)):0;n.style.width=`${i}%`}const a=this.progressContainer.querySelector(".progress-percentage");if(a){const i=t>0?Math.min(100,Math.round(e/t*100)):0;a.textContent=`${i}%`}const l=this.progressContainer.querySelector(".progress-text");if(l&&i&&(l.textContent=i),t>0){const i=e/t*100;this.updateStepIndicatorBasedOnProgress(i)}s&&"object"==typeof s&&(this.stats={...this.stats,...s},this.updateStatsDisplay()),this.logger.debug("Progress updated",{current:e,total:t,message:i,details:s})}updateStatsDisplay(){this.progressContainer&&(Object.entries(this.stats).forEach(e=>{let[t,i]=e;const s=this.progressContainer.querySelector(`.stat-value.${t}`);s&&(s.textContent=i||0)}),this.logger.debug("Statistics display updated",{stats:this.stats}))}updateStepIndicatorBasedOnProgress(e){let t="init";e>=100?t="complete":e>=75?t="process":e>=25&&(t="validate"),this.updateStepIndicator(t)}updateStepIndicator(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelectorAll(".step");t.forEach(e=>{e.classList.remove("active","completed")});const i=this.progressContainer.querySelector(`[data-step="${e}"]`);i&&i.classList.add("active");const s=this.getStepOrder(e);t.forEach(e=>{const t=e.getAttribute("data-step");this.getStepOrder(t)<s&&e.classList.add("completed")}),this.logger.debug("Step indicator updated",{step:e})}getStepOrder(e){return{init:0,validate:1,process:2,complete:3}[e]||0}startTimingUpdates(){this.timingInterval&&clearInterval(this.timingInterval),this.timingInterval=setInterval(()=>{this.updateTiming()},1e3),this.logger.debug("Timing updates started")}updateTiming(){if(!this.startTime||!this.progressContainer)return;const e=Date.now()-this.startTime,t=this.progressContainer.querySelector(".elapsed-value");if(t&&(t.textContent=this.formatDuration(e)),this.stats.total>0&&this.stats.processed>0){const t=this.stats.processed/this.stats.total;if(t>0){const i=e/t-e,s=this.progressContainer.querySelector(".eta-value");s&&(s.textContent=this.formatDuration(i))}}this.logger.debug("Timing updated",{elapsed:e})}completeOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.isEnabled)return void this.logger.warn("Progress manager not enabled - cannot complete operation");this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections();const{processed:t,success:i,failed:s,skipped:n}=e;this.updateProgress(t||0,t||0,"Operation completed"),this.stats={...this.stats,...e},this.updateStatsDisplay(),this.updateStepIndicator("complete"),this.completeCallback&&"function"==typeof this.completeCallback&&this.completeCallback(e),this.isActive=!1,this.logger.info("Operation completed",{results:e})}handleOperationError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isEnabled)return void this.logger.warn("Progress manager not enabled - cannot handle error");this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections();const i=this.progressContainer.querySelector(".progress-text");i&&(i.textContent=`Error: ${e}`,i.classList.add("error")),this.isActive=!1,this.logger.error("Operation error",{message:e,details:t})}cancelOperation(){this.isEnabled&&this.isActive?(this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections(),this.cancelCallback&&"function"==typeof this.cancelCallback&&this.cancelCallback(),this.isActive=!1,this.hideProgress(),this.logger.info("Operation cancelled")):this.logger.warn("No active operation to cancel")}showProgress(){if(!this.isEnabled||!this.progressContainer)return void this.logger.warn("Progress manager not enabled or container not found");this.progressContainer.style.display="block",this.progressContainer.classList.add("visible"),this.progressContainer.setAttribute("style","display: block !important; visibility: visible !important;");const e=this.progressContainer.querySelector(".cancel-operation");e&&e.focus(),this.logger.debug("Progress display shown",{containerId:this.progressContainer.id}),console.log(`🔍 [PROGRESS] Showing progress container: ${this.progressContainer.id}`)}hideProgress(){this.progressContainer&&(this.logger.debug("Hiding progress display",{containerId:this.progressContainer.id}),console.log(`🔍 [PROGRESS] Hiding progress container: ${this.progressContainer.id}`),this.progressContainer.classList.remove("visible"),this.progressContainer.style.display="none",this.logger.debug("Progress display hidden"))}updateOperationTitle(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelector(".title-text");if(t){const i={import:"Import Users",export:"Export Users",delete:"Delete Users",modify:"Modify Users"};t.textContent=i[e]||"Operation in Progress"}this.logger.debug("Operation title updated",{operationType:e})}updateOperationDetails(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.progressContainer)return;const{populationName:t,populationId:i,totalUsers:s}=e,n=this.progressContainer.querySelector(".detail-value.operation-type");n&&(n.textContent=this.currentOperation||"Unknown");const a=this.progressContainer.querySelector(".detail-value.population-info");a&&(a.textContent=t||i||"Unknown"),s&&(this.stats.total=s,this.updateStatsDisplay()),this.logger.debug("Operation details updated",{options:e})}updateOperationStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(!this.progressContainer)return;const i=this.progressContainer.querySelector(".operation-subtitle");i&&(i.textContent=t||e),this.logger.debug("Operation status updated",{status:e,message:t})}updateConnectionType(e){if(!this.progressContainer)return;const t=this.progressContainer.querySelector(".detail-value.connection-type");t&&(t.textContent=e),this.logger.debug("Connection type updated",{type:e})}resetOperationStats(){this.stats={processed:0,success:0,failed:0,skipped:0,total:0},this.updateStatsDisplay(),this.logger.debug("Operation statistics reset")}formatDuration(e){const t=Math.floor(e/1e3),i=Math.floor(t/60),s=Math.floor(i/60);return s>0?`${s}:${String(i%60).padStart(2,"0")}:${String(t%60).padStart(2,"0")}`:i>0?`${i}:${String(t%60).padStart(2,"0")}`:`${t}s`}setProgressCallback(e){this.progressCallback=e,this.logger.debug("Progress callback set")}setCompleteCallback(e){this.completeCallback=e,this.logger.debug("Completion callback set")}setCancelCallback(e){this.cancelCallback=e,this.logger.debug("Cancel callback set")}debugLog(e,t){a&&this.logger.debug(`[${e}] ${t}`)}destroy(){this.timingInterval&&(clearInterval(this.timingInterval),this.timingInterval=null),this.closeConnections(),this.progressCallback=null,this.completeCallback=null,this.cancelCallback=null,this.isActive=!1,this.currentOperation=null,this.currentSessionId=null,this.logger.info("Progress manager destroyed")}}i.ProgressManager=ProgressManager;const l=new ProgressManager;i.default=l}).call(this)}).call(this,e("_process"))},{"./element-registry.js":39,"./message-formatter.js":41,"./session-manager.js":43,"./winston-logger.js":45,"@babel/runtime/helpers/interopRequireDefault":1,_process:37}],43:[function(e,t,i){(function(t){(function(){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sessionManager=i.default=void 0;var s=e("./winston-logger.js");const n=i.sessionManager=new class SessionManager{constructor(){this.logger=(0,s.createWinstonLogger)({service:"pingone-import-session",environment:t.env.NODE_ENV||"development"}),this.activeSessions=new Map,this.sessionCounter=0}generateSessionId(){try{const e=Date.now(),t=Math.random().toString(36).substring(2,15),i=`session_${e}_${t}_${++this.sessionCounter}`;return this.logger.debug("Session ID generated",{sessionId:i}),i}catch(e){return this.logger.error("Error generating session ID",{error:e.message}),`session_${Date.now()}_${Math.random().toString(36).substring(2,8)}`}}validateSessionId(e){try{if(!e||"string"!=typeof e)return this.logger.warn("Session ID validation failed: null/undefined/non-string",{sessionId:e,type:typeof e}),!1;if(""===e.trim())return this.logger.warn("Session ID validation failed: empty string"),!1;if(e.length<8)return this.logger.warn("Session ID validation failed: too short",{length:e.length}),!1;return/^[a-zA-Z0-9_-]+$/.test(e)?(this.logger.debug("Session ID validation passed",{sessionId:e}),!0):(this.logger.warn("Session ID validation failed: invalid characters",{sessionId:e}),!1)}catch(t){return this.logger.error("Error validating session ID",{error:t.message,sessionId:e}),!1}}registerSession(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{if(!this.validateSessionId(e))return this.logger.error("Cannot register invalid session ID",{sessionId:e,operationType:t}),!1;const s={sessionId:e,operationType:t,createdAt:Date.now(),lastActivity:Date.now(),metadata:i};return this.activeSessions.set(e,s),this.logger.info("Session registered",{sessionId:e,operationType:t,metadata:i}),!0}catch(i){return this.logger.error("Error registering session",{error:i.message,sessionId:e,operationType:t}),!1}}updateSessionActivity(e){try{const t=this.activeSessions.get(e);t?(t.lastActivity=Date.now(),this.logger.debug("Session activity updated",{sessionId:e})):this.logger.warn("Session not found for activity update",{sessionId:e})}catch(t){this.logger.error("Error updating session activity",{error:t.message,sessionId:e})}}unregisterSession(e){try{const t=this.activeSessions.get(e);t?(this.activeSessions.delete(e),this.logger.info("Session unregistered",{sessionId:e,operationType:t.operationType})):this.logger.warn("Session not found for unregistration",{sessionId:e})}catch(t){this.logger.error("Error unregistering session",{error:t.message,sessionId:e})}}getSession(e){try{return this.activeSessions.get(e)||null}catch(t){return this.logger.error("Error getting session",{error:t.message,sessionId:e}),null}}getActiveSessions(){try{return Array.from(this.activeSessions.values())}catch(e){return this.logger.error("Error getting active sessions",{error:e.message}),[]}}cleanupExpiredSessions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:36e5;try{const t=Date.now(),i=[];for(const[s,n]of this.activeSessions.entries())t-n.lastActivity>e&&i.push(s);i.forEach(e=>{this.unregisterSession(e)}),i.length>0&&this.logger.info("Cleaned up expired sessions",{count:i.length})}catch(e){this.logger.error("Error cleaning up expired sessions",{error:e.message})}}getSessionStats(){try{const e=this.getActiveSessions(),t={total:e.length,byOperation:{},oldest:null,newest:null};return e.forEach(e=>{t.byOperation[e.operationType]=(t.byOperation[e.operationType]||0)+1,(!t.oldest||e.createdAt<t.oldest.createdAt)&&(t.oldest=e),(!t.newest||e.createdAt>t.newest.createdAt)&&(t.newest=e)}),t}catch(e){return this.logger.error("Error getting session stats",{error:e.message}),{total:0,byOperation:{},oldest:null,newest:null}}}};i.default=n}).call(this)}).call(this,e("_process"))},{"./winston-logger.js":45,_process:37}],44:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;class SafeDOM{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:console;this.logger=e}getElementById(e){try{return document.getElementById(e)}catch(t){return this.logger.error("Error getting element by ID:",{id:e,error:t.message}),null}}querySelector(e){try{return document.querySelector(e)}catch(t){return this.logger.error("Error with querySelector:",{selector:e,error:t.message}),null}}querySelectorAll(e){try{return document.querySelectorAll(e)}catch(t){return this.logger.error("Error with querySelectorAll:",{selector:e,error:t.message}),[]}}setText(e,t){try{e&&void 0!==e.textContent&&(e.textContent=t)}catch(e){this.logger.error("Error setting text content:",{text:t,error:e.message})}}setHTML(e,t){try{e&&void 0!==e.innerHTML&&(e.innerHTML=t)}catch(e){this.logger.error("Error setting HTML content:",{html:t,error:e.message})}}show(e){try{e&&e.style&&(e.style.display="block")}catch(e){this.logger.error("Error showing element:",{error:e.message})}}hide(e){try{e&&e.style&&(e.style.display="none")}catch(e){this.logger.error("Error hiding element:",{error:e.message})}}addClass(e,t){try{e&&e.classList&&e.classList.add(t)}catch(e){this.logger.error("Error adding class:",{className:t,error:e.message})}}removeClass(e,t){try{e&&e.classList&&e.classList.remove(t)}catch(e){this.logger.error("Error removing class:",{className:t,error:e.message})}}setAttribute(e,t,i){try{e&&"function"==typeof e.setAttribute&&e.setAttribute(t,i)}catch(e){this.logger.error("Error setting attribute:",{name:t,value:i,error:e.message})}}getAttribute(e,t){try{return e&&"function"==typeof e.getAttribute?e.getAttribute(t):null}catch(e){return this.logger.error("Error getting attribute:",{name:t,error:e.message}),null}}addEventListener(e,t,i){try{e&&"function"==typeof e.addEventListener&&e.addEventListener(t,i)}catch(e){this.logger.error("Error adding event listener:",{event:t,error:e.message})}}removeEventListener(e,t,i){try{e&&"function"==typeof e.removeEventListener&&e.removeEventListener(t,i)}catch(e){this.logger.error("Error removing event listener:",{event:t,error:e.message})}}}"undefined"!=typeof window&&(window.SafeDOM=SafeDOM,window.safeDOM=new SafeDOM(window.logger||console)),void 0!==t&&t.exports&&(t.exports=SafeDOM);i.default=SafeDOM},{}],45:[function(e,t,i){(function(e){(function(){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.apiLogger=i.WinstonLogger=void 0,i.createComponentLogger=createComponentLogger,i.createWinstonLogger=createWinstonLogger,i.uiLogger=i.tokenLogger=i.settingsLogger=i.fileLogger=i.defaultLogger=void 0;class WinstonLogger{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.level=t.level||this.getDefaultLevel(),this.service=t.service||"pingone-import-frontend",this.environment=t.environment||e.env.NODE_ENV||"development",this.enableServerLogging=!1!==t.enableServerLogging,this.enableConsoleLogging=!1!==t.enableConsoleLogging,this.levels={error:0,warn:1,info:2,debug:3},this.transports=[],this.initializeTransports()}getDefaultLevel(){return"production"===this.environment?"info":"test"===this.environment?"warn":"debug"}initializeTransports(){this.enableConsoleLogging&&this.transports.push({name:"console",log:(e,t,i)=>this.logToConsole(e,t,i)}),this.enableServerLogging&&this.transports.push({name:"server",log:(e,t,i)=>this.logToServer(e,t,i)})}shouldLog(e){return this.levels[e]<=this.levels[this.level]}formatTimestamp(){return(new Date).toISOString()}formatLogEntry(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{timestamp:this.formatTimestamp(),level:e,message:t,service:this.service,environment:this.environment,...i}}logToConsole(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.shouldLog(e))return;const s=this.formatLogEntry(e,t,i).timestamp,n=e.toUpperCase();let a=`[${s}] [${this.service}] ${n}: ${t}`;switch(Object.keys(i).length>0&&(a+=`\n${JSON.stringify(i,null,2)}`),e){case"error":console.error(a);break;case"warn":console.warn(a);break;case"info":console.info(a);break;case"debug":console.debug(a);break;default:console.log(a)}}async logToServer(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.shouldLog(e))try{const s={message:t,level:e,data:i,source:"frontend"};await fetch("/api/logs/ui",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})}catch(s){if(s.message.includes("Failed to fetch")||s.message.includes("ERR_CONNECTION_REFUSED"))return;console.warn("Server logging failed, falling back to console:",s.message),this.logToConsole(e,t,i)}}log(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.shouldLog(e)&&this.transports.forEach(s=>{try{s.log(e,t,i)}catch(e){console.error(`Error in ${s.name} transport:`,e)}})}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}errorWithStack(e,t){const i={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},error:{message:t.message,stack:t.stack,code:t.code,name:t.name}};this.error(e,i)}child(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const i=new WinstonLogger({level:this.level,service:this.service,environment:this.environment,enableServerLogging:this.enableServerLogging,enableConsoleLogging:this.enableConsoleLogging});return i.formatLogEntry=function(i,s){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{...e.formatLogEntry(i,s,n),...t}},i}setLevel(e){this.levels.hasOwnProperty(e)?this.level=e:this.warn(`Invalid log level: ${e}`)}setServerLogging(e){this.enableServerLogging=e,this.transports=this.transports.filter(e=>"server"!==e.name),e&&this.transports.push({name:"server",log:(e,t,i)=>this.logToServer(e,t,i)})}setConsoleLogging(e){this.enableConsoleLogging=e,this.transports=this.transports.filter(e=>"console"!==e.name),e&&this.transports.push({name:"console",log:(e,t,i)=>this.logToConsole(e,t,i)})}}function createWinstonLogger(){return new WinstonLogger(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})}function createComponentLogger(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return createWinstonLogger({...t,service:`${t.service||"pingone-import"}-${e}`})}i.WinstonLogger=WinstonLogger;i.defaultLogger=createWinstonLogger(),i.apiLogger=createComponentLogger("api"),i.uiLogger=createComponentLogger("ui"),i.fileLogger=createComponentLogger("file"),i.settingsLogger=createComponentLogger("settings"),i.tokenLogger=createComponentLogger("token")}).call(this)}).call(this,e("_process"))},{_process:37}],46:[function(e,t,i){"use strict";var s=e("@babel/runtime/helpers/interopRequireDefault"),n=e("./utils/logger.js"),a=e("./components/ui-manager.js"),l=s(e("./utils/local-api-client.js")),c=s(e("./subsystems/settings-subsystem.js")),g=e("./utils/event-bus.js"),u=(s(e("./components/credentials-manager.js")),s(e("./components/settings-manager.js"))),d=s(e("./utils/pingone-client.js")),h=e("./subsystems/connection-manager-subsystem.js"),p=e("./subsystems/auth-management-subsystem.js"),f=e("./subsystems/advanced-realtime-subsystem.js"),m=e("./subsystems/view-management-subsystem.js"),y=e("./subsystems/operation-manager-subsystem.js"),v=e("./subsystems/population-subsystem.js"),w=e("./subsystems/history-subsystem.js"),b=e("./subsystems/import-subsystem.js"),S=e("./subsystems/navigation-subsystem.js");class App{constructor(){this.version="loading...",this.logger=new n.Logger("pingone-import-app","dezh8e30"),this.eventBus=new g.EventBus(this.logger.child({component:"event-bus"})),this.uiManager=new a.UIManager(this.logger.child({component:"ui-manager"})),this.localClient=new l.default("/api/v1",this.logger.child({component:"local-api-client"})),this.subsystems={},window.app=this}async init(){this.logger.info("Initializing application..."),this.uiManager.showStartupWaitScreen("Initializing application...");try{await this.loadVersion(),await this.initializeCoreComponents(),await this.initializeSubsystems(),this.logger.info("Application initialized successfully."),this.uiManager.hideStartupWaitScreen()}catch(e){this.logger.error("Application initialization failed:",{error:e.message,stack:e.stack}),this.uiManager.showError("Application failed to start. Please check the console for details.")}}async loadVersion(){try{this.uiManager.updateStartupMessage("Loading version information...");const e=await fetch("/api/version");if(!e.ok)throw new Error(`Failed to load version: ${e.status}`);{const t=await e.json();this.version=t.version,this.logger.info("Version loaded from server:",{version:this.version}),this.updateVersionDisplay()}}catch(e){this.logger.warn("Failed to load version from server, using fallback:",{error:e.message}),this.version="6.5.1.3",this.updateVersionDisplay()}}updateVersionDisplay(){try{const e=document.getElementById("version-display");e&&(e.textContent=`v${this.version}`),document.title=`PingOne User Import v${this.version}`,this.logger.debug("Version display updated:",{version:this.version})}catch(e){this.logger.error("Failed to update version display:",{error:e.message})}}async initializeCoreComponents(){this.logger.debug("Initializing core components"),this.uiManager.setupUI(),this.settingsManager=new u.default(this.logger.child({component:"settings-manager"})),await this.settingsManager.init(),this.logger.debug("Settings manager initialized"),this.settingsSubsystem=new c.default(this.logger.child({subsystem:"settings"}),this.uiManager,this.localClient,this.settingsManager,this.eventBus),await this.settingsSubsystem.init(),this.logger.debug("Settings subsystem initialized as a core component"),this.pingoneClient=new d.default(this.localClient,this.logger.child({component:"pingone-client"})),this.logger.debug("PingOne client created successfully"),this.logger.debug("Core components initialized")}async initializeSubsystems(){this.logger.info("Initializing subsystems..."),this.uiManager.updateStartupMessage("Initializing subsystems...");const e=[{name:"navigationSubsystem",constructor:S.NavigationSubsystem,deps:[this.logger.child({subsystem:"navigation"}),this.uiManager,this.settingsManager,this]},{name:"connectionManager",constructor:h.ConnectionManagerSubsystem,deps:[this.logger.child({subsystem:"connection"}),this.eventBus,this.uiManager,this.localClient]},{name:"realtimeManager",constructor:f.AdvancedRealtimeSubsystem,deps:[this.logger.child({subsystem:"realtime"}),this.eventBus]},{name:"authManager",constructor:p.AuthManagementSubsystem,deps:[this.logger.child({subsystem:"auth"}),this.pingoneClient,this.eventBus,this.uiManager,this.localClient]},{name:"viewManager",constructor:m.ViewManagementSubsystem,deps:[this.logger.child({subsystem:"view"}),this.uiManager,this.eventBus]},{name:"operationManager",constructor:y.OperationManagerSubsystem,deps:[this.logger.child({subsystem:"operation"}),this.eventBus,this.uiManager]},{name:"populationSubsystem",constructor:v.PopulationSubsystem,deps:[this.logger.child({subsystem:"population"}),this.localClient,this.eventBus]},{name:"historySubsystem",constructor:w.HistorySubsystem,deps:[this.logger.child({subsystem:"history"}),this.localClient,this.uiManager,this.eventBus]},{name:"importSubsystem",constructor:b.ImportSubsystem,deps:[this.logger.child({subsystem:"import"}),this.uiManager,this.localClient,this.eventBus,()=>this.subsystems.authManager]}];for(const t of e)try{this.logger.debug(`Initializing ${t.name} subsystem...`);const e=t.deps.map(e=>"function"==typeof e?e():e);this.subsystems[t.name]=new t.constructor(...e),"function"==typeof this.subsystems[t.name].init&&await this.subsystems[t.name].init()}catch(e){throw this.logger.error(`Failed to initialize subsystem: ${t.name}`,{error:e.message,stack:e.stack}),new Error(`Subsystem initialization failed for ${t.name}`)}this.logger.info("All subsystems initialized successfully.")}setupEventListeners(){this.logger.debug("Setting up global event listeners"),window.addEventListener("error",e=>{this.logger.error("Unhandled global error:",{message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno,error:e.error?e.error.stack:"N/A"})}),window.addEventListener("unhandledrejection",e=>{this.logger.warn("Unhandled promise rejection:",{reason:e.reason?e.reason.stack:"N/A"})}),this.logger.debug("Global event listeners set up")}}document.addEventListener("DOMContentLoaded",()=>{const e=new App;e.init().catch(t=>{console.error("FATAL: Application failed to initialize.",t),e.uiManager&&e.uiManager.showError("A fatal error occurred during startup. The application cannot continue.")})})},{"./components/credentials-manager.js":47,"./components/settings-manager.js":48,"./components/ui-manager.js":49,"./subsystems/advanced-realtime-subsystem.js":50,"./subsystems/auth-management-subsystem.js":51,"./subsystems/connection-manager-subsystem.js":52,"./subsystems/history-subsystem.js":53,"./subsystems/import-subsystem.js":54,"./subsystems/navigation-subsystem.js":55,"./subsystems/operation-manager-subsystem.js":56,"./subsystems/population-subsystem.js":57,"./subsystems/settings-subsystem.js":58,"./subsystems/view-management-subsystem.js":59,"./utils/event-bus.js":62,"./utils/local-api-client.js":64,"./utils/logger.js":65,"./utils/pingone-client.js":67,"@babel/runtime/helpers/interopRequireDefault":1}],47:[function(e,t,i){"use strict";window.CredentialsManager=class CredentialsManager{constructor(){this.storageKey="pingone-credentials",this.defaultCredentials=this.getDefaultCredentials(),this.credentials=null,this.init()}init(){this.loadCredentials(),(window.logger?.info||console.log)("Credentials Manager initialized")}getDefaultCredentials(){return{environmentId:"",apiClientId:"",apiSecret:"",region:"NorthAmerica",populationId:""}}loadCredentials(){try{const e=localStorage.getItem(this.storageKey);e?(this.credentials=JSON.parse(e),(window.logger?.debug||console.log)("Credentials loaded from localStorage")):(this.credentials=this.getDefaultCredentials(),(window.logger?.debug||console.log)("No stored credentials found, using defaults"))}catch(e){(window.logger?.warn||console.warn)("Failed to load credentials from localStorage:",e),this.credentials=this.getDefaultCredentials()}}saveCredentials(e){try{this.credentials={...this.credentials,...e},localStorage.setItem(this.storageKey,JSON.stringify(this.credentials)),(window.logger?.debug||console.log)("Credentials saved to localStorage")}catch(e){(window.logger?.error||console.error)("Failed to save credentials to localStorage:",e)}}getCredentials(){return{...this.credentials}}updateCredentials(e){this.credentials={...this.credentials,...e},this.saveCredentials(this.credentials)}clearCredentials(){try{localStorage.removeItem(this.storageKey),this.credentials=this.getDefaultCredentials(),(window.logger?.debug||console.log)("Credentials cleared")}catch(e){(window.logger?.error||console.error)("Failed to clear credentials:",e)}}hasCompleteCredentials(){return!!(this.credentials.environmentId&&this.credentials.apiClientId&&this.credentials.apiSecret)}getValidCredentials(){return this.hasCompleteCredentials()?this.getCredentials():null}validateCredentials(e){const t=[];return e.environmentId?this.isValidUUID(e.environmentId)||t.push("Environment ID must be a valid UUID"):t.push("Environment ID is required"),e.apiClientId||t.push("API Client ID is required"),e.apiSecret||t.push("API Secret is required"),e.region||t.push("Region is required"),{isValid:0===t.length,errors:t}}isValidUUID(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}exportCredentials(){return JSON.stringify(this.credentials,null,2)}importCredentials(e){try{const t=JSON.parse(e),i=this.validateCredentials(t);return i.isValid?(this.saveCredentials(t),{success:!0,message:"Credentials imported successfully"}):{success:!1,errors:i.errors}}catch(e){return{success:!1,errors:["Invalid JSON format"]}}}}},{}],48:[function(e,t,i){(function(t){(function(){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;var s=e("../utils/winston-logger.js"),n=e("../utils/crypto-utils.js");i.default=class SettingsManager{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.settings=this.getDefaultSettings(),this.storageKey="pingone-import-settings",this.encryptionKey=null,this.initializeLogger(e),this.encryptionInitialized=!1}async init(){try{await this.initializeEncryption(),this.encryptionInitialized=!0,this.logger.info("Settings manager initialized successfully")}catch(e){throw this.logger.error("Failed to initialize settings manager",{error:e.message}),e}}initializeLogger(e){e&&"function"==typeof e.child?this.logger=e.child({component:"settings-manager"}):this.logger=(0,s.createWinstonLogger)({service:"pingone-import-settings",environment:t.env.NODE_ENV||"development"})}createDefaultLogger(){var e=this;return{log:function(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";return e.logger.log(i,`[Settings] ${t}`)},info:e=>this.logger.info(`[Settings] ${e}`),warn:e=>this.logger.warn(`[Settings] ${e}`),error:e=>this.logger.error(`[Settings] ${e}`),debug:e=>this.logger.debug(`[Settings] ${e}`)}}static getRegionInfo(e){if(!e)return{code:"NA",tld:"com",label:"North America (excluding Canada)"};const t={NA:{code:"NA",tld:"com",label:"North America (excluding Canada)"},CA:{code:"CA",tld:"ca",label:"Canada"},EU:{code:"EU",tld:"eu",label:"European Union"},AU:{code:"AU",tld:"com.au",label:"Australia"},SG:{code:"SG",tld:"sg",label:"Singapore"},AP:{code:"AP",tld:"asia",label:"Asia-Pacific"}};return t[e]||t.NA}getDefaultSettings(){return{environmentId:"",region:"NA",apiClientId:"",populationId:"",rateLimit:50,connectionStatus:"disconnected",connectionMessage:"Not connected",lastConnectionTest:null,autoSave:!0,lastUsedDirectory:"",theme:"light",pageSize:50,showNotifications:!0}}async loadSettings(){try{const e=localStorage.getItem(this.storageKey);if(!e)return this.logger.info("No stored settings found, using defaults"),this.settings;try{const t=JSON.parse(e);return this.settings={...this.getDefaultSettings(),...t},this.logger.info("Settings loaded successfully (unencrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),this.settings}catch(t){if(!this.encryptionInitialized)return this.logger.warn("Encryption not initialized and JSON parsing failed, using defaults"),this.settings;try{const t=await n.CryptoUtils.decrypt(e,this.encryptionKey),i=JSON.parse(t);return this.settings={...this.getDefaultSettings(),...i},this.logger.info("Settings loaded successfully (encrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region}),this.settings}catch(e){return this.logger.error("Failed to decrypt settings",{error:e.message}),this.settings}}}catch(e){return this.logger.error("Failed to load settings",{error:e.message}),this.settings}}async saveSettings(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{e&&(this.settings={...this.settings,...e});const t=JSON.stringify(this.settings);if(!this.encryptionInitialized)return this.logger.warn("Encryption not initialized, saving settings without encryption"),localStorage.setItem(this.storageKey,t),void this.logger.info("Settings saved successfully (unencrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region});try{const e=await n.CryptoUtils.encrypt(t,this.encryptionKey);localStorage.setItem(this.storageKey,e),this.logger.info("Settings saved successfully (encrypted)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region})}catch(e){this.logger.warn("Encryption failed, saving settings without encryption",{error:e.message}),localStorage.setItem(this.storageKey,t),this.logger.info("Settings saved successfully (unencrypted fallback)",{hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId,region:this.settings.region})}}catch(e){throw this.logger.error("Failed to save settings",{error:e.message}),e}}getSetting(e){if(!e)throw new Error("Setting key is required");return this.settings[e]}async setSetting(e,t){if(!e)throw new Error("Setting key is required");try{this.settings[e]=t,await this.saveSettings(),this.logger.debug("Setting updated",{key:e,value:"string"==typeof t?t:"[object]"})}catch(t){throw this.logger.error("Failed to update setting",{key:e,error:t.message}),t}}getAllSettings(){return{...this.settings}}getSettings(){return this.getAllSettings()}async updateSettings(e){if(!e||"object"!=typeof e)throw new Error("New settings object is required");try{this.settings={...this.settings,...e},await this.saveSettings(),this.logger.info("Multiple settings updated",{updatedKeys:Object.keys(e),hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId})}catch(e){throw this.logger.error("Failed to update settings",{error:e.message}),e}}async resetSettings(){try{this.settings=this.getDefaultSettings(),await this.saveSettings(),this.logger.info("Settings reset to defaults")}catch(e){throw this.logger.error("Failed to reset settings",{error:e.message}),e}}async clearSettings(){try{localStorage.removeItem(this.storageKey),this.settings=this.getDefaultSettings(),this.logger.info("Settings cleared")}catch(e){throw this.logger.error("Failed to clear settings",{error:e.message}),e}}async initializeEncryption(){try{let e=await this.getDeviceId();"string"!=typeof e&&(e=String(e||"")),e||(e="fallback-device-id"),this.encryptionKey=await n.CryptoUtils.generateKey(e),this.logger.debug("Encryption initialized successfully")}catch(e){this.logger.error("Failed to initialize encryption",{error:e.message}),this.encryptionKey=await n.CryptoUtils.generateKey("fallback-encryption-key"),this.logger.warn("Using fallback encryption key")}}async getDeviceId(){try{if(this.isLocalStorageAvailable()){const e=localStorage.getItem("pingone-device-id");if(e&&"string"==typeof e)return e}const e={userAgent:navigator.userAgent,platform:navigator.platform,hardwareConcurrency:navigator.hardwareConcurrency,deviceMemory:navigator.deviceMemory,maxTouchPoints:navigator.maxTouchPoints},t=(new TextEncoder).encode(JSON.stringify(e)),i=await crypto.subtle.digest("SHA-256",t),s=Array.from(new Uint8Array(i)).map(e=>e.toString(16).padStart(2,"0")).join("");return"string"==typeof s&&s?s:"fallback-device-id"}catch(e){return this.logger.error("Failed to generate device ID:",e),"fallback-"+Math.random().toString(36).substring(2,15)}}isLocalStorageAvailable(){try{const e="test";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return this.logger.warn("localStorage not available",{error:e.message}),!1}}async exportSettings(){try{const e={settings:this.settings,exportDate:(new Date).toISOString(),version:"1.0"};return this.logger.info("Settings exported",{exportDate:e.exportDate}),e}catch(e){throw this.logger.error("Failed to export settings",{error:e.message}),e}}async importSettings(e){if(!e)throw new Error("Import data is required");if(!e.settings)throw new Error("Invalid import data: missing settings");try{this.settings={...this.getDefaultSettings(),...e.settings},await this.saveSettings(),this.logger.info("Settings imported successfully",{importDate:e.exportDate,hasEnvironmentId:!!this.settings.environmentId,hasApiClientId:!!this.settings.apiClientId})}catch(e){throw this.logger.error("Failed to import settings",{error:e.message}),e}}debugLocalStorage(){try{const e=localStorage.getItem(this.storageKey);if(!e)return this.logger.info("No data found in localStorage",{key:this.storageKey}),null;this.logger.info("localStorage contents found",{key:this.storageKey,length:e.length,preview:e.substring(0,100)+(e.length>100?"...":"")});try{const t=JSON.parse(e);return this.logger.info("Data is valid JSON",{keys:Object.keys(t),hasEnvironmentId:!!t.environmentId,hasApiClientId:!!t.apiClientId}),t}catch(e){return this.logger.info("Data is not valid JSON, likely encrypted",{error:e.message}),"encrypted"}}catch(e){return this.logger.error("Failed to debug localStorage",{error:e.message}),null}}}}).call(this)}).call(this,e("_process"))},{"../utils/crypto-utils.js":61,"../utils/winston-logger.js":68,_process:37}],49:[function(e,t,i){(function(t){(function(){"use strict";var s=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(i,"__esModule",{value:!0}),i.UIManager=void 0;e("../../../public/js/modules/circular-progress.js");var n=e("../../../public/js/modules/element-registry.js"),a=(s(e("../../../public/js/modules/progress-manager.js")),e("../../../public/js/modules/error/error-types.js"),e("../../../public/js/modules/utils/safe-dom.js"));const l="development"===t.env.NODE_ENV;i.UIManager=class UIManager{constructor(){let{errorManager:e,logger:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=t?t.child({component:"UIManager"}):console,this.errorManager=e||{handleError:(e,t)=>{(window.logger?.error||console.error)("Unhandled error (no error manager):",e,t)}},this.notificationContainer=null,this.progressContainer=null,this.tokenStatusElement=null,this.connectionStatusElement=null,this.initialize()}initialize(){try{this.setupElements(),this.logger.info("UI Manager initialized successfully")}catch(e){this.errorManager.handleError(e,{component:"UIManager",operation:"initialize",severity:"error",context:{message:"Failed to initialize UI Manager",error:e.message}})}}setupUI(){try{this.logger.debug("Setting up UI components..."),this.setupElements(),this.setupEventListeners(),this.initializeStatusIndicators(),this.initializeProgressTracking(),this.logger.info("UI setup completed successfully")}catch(e){this.logger.error("Error during UI setup:",e),this.errorManager.handleError(e,{component:"UIManager",operation:"setupUI",severity:"error",context:{message:"Failed to setup UI components",error:e.message}})}}setupEventListeners(){try{window.addEventListener("error",e=>{this.handleGlobalError(e.error,{type:"global_error",filename:e.filename,lineno:e.lineno,colno:e.colno})}),window.addEventListener("unhandledrejection",e=>{this.handleGlobalError(e.reason,{type:"unhandled_promise_rejection"})}),this.logger.debug("Event listeners setup completed")}catch(e){this.logger.error("Error setting up event listeners:",e)}}initializeStatusIndicators(){try{this.tokenStatusElement&&this.updateTokenStatus("checking","Checking token status..."),this.connectionStatusElement&&this.updateConnectionStatus("connecting","Connecting..."),this.logger.debug("Status indicators initialized")}catch(e){this.logger.error("Error initializing status indicators:",e)}}initializeProgressTracking(){try{this.progressContainer&&this.hideProgress(),this.logger.debug("Progress tracking initialized")}catch(e){this.logger.error("Error initializing progress tracking:",e)}}handleGlobalError(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{this.logger.error("Global error caught:",{error:e.message,context:t}),this.errorManager&&"function"==typeof this.errorManager.handleError&&this.errorManager.handleError(e,{component:"UIManager",operation:"global_error_handler",severity:"error",context:t})}catch(e){console.error("Error in global error handler:",e)}}async init(){return this.initialize(),Promise.resolve()}setupElements(){try{this.notificationContainer=n.ElementRegistry.notificationContainer?n.ElementRegistry.notificationContainer():null,this.progressContainer=n.ElementRegistry.progressContainer?n.ElementRegistry.progressContainer():null,this.tokenStatusElement=n.ElementRegistry.tokenStatus?n.ElementRegistry.tokenStatus():null,this.connectionStatusElement=n.ElementRegistry.connectionStatus?n.ElementRegistry.connectionStatus():null,this.navItems=document.querySelectorAll("[data-view]"),this.notificationContainer||this.logger.warn("Notification container not found"),this.progressContainer||this.logger.warn("Progress container not found"),this.logger.debug("UI elements setup completed",{hasNotificationContainer:!!this.notificationContainer,hasProgressContainer:!!this.progressContainer,hasTokenStatusElement:!!this.tokenStatusElement,hasConnectionStatusElement:!!this.connectionStatusElement,navItemsCount:this.navItems?this.navItems.length:0})}catch(e){this.logger.error("Error setting up UI elements",{error:e.message})}}showStatusBar(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{duration:n=5e3,autoDismiss:l=!0,errorId:c,context:g={}}=s;try{const s={info:"info",success:"info",warning:"warn",error:"error"}[i]||"log",u={messageType:i,...c&&{errorId:c},...g};if(this.logger[s](`Status: ${e}`,u),!this.statusBarElement)return void this.logger.debug("Status bar element not available in current view",u);this.statusBarTimer&&(clearTimeout(this.statusBarTimer),this.statusBarTimer=null);const d=window.safeDOM||new a.SafeDOM(this.logger),h=window.errorHandler||new ErrorHandler(this.logger),p=window.UI_CONFIG||{CLASSES:{ERROR:"error",SUCCESS:"success"}};d.setHTML(this.statusBarElement,"");const f=document.createElement("span");d.addClass(f,"status-message");let m=e;if(i===p.CLASSES.ERROR&&c&&(m+=` (Error ID: ${c})`,"development"===t.env.NODE_ENV&&Object.keys(g).length>0&&(m+=`\n${JSON.stringify(g,null,2)}`)),d.setText(f,m),this.statusBarElement.appendChild(f),i===p.CLASSES.ERROR||"warning"===i){const e=document.createElement("button");d.addClass(e,"status-dismiss"),d.setHTML(e,"&times;"),e.setAttribute("aria-label","Dismiss message"),e.onclick=h.wrapEventHandler(()=>this.clearStatusBar(),"Status bar dismiss button click"),this.statusBarElement.appendChild(e)}this.statusBarElement.className=`status-bar status-bar-${i} visible`;l&&("success"===i||"info"===i)&&(this.statusBarTimer=setTimeout(()=>{this.clearStatusBar()},n))}catch(t){this.errorManager.handleError(t,{component:"UIManager",operation:"showStatusBar",severity:"warning",context:{originalMessage:e,type:i,options:s,errorMessage:t.message}}),(window.logger?.error||console.error)("Failed to show status bar:",t),(window.logger?.debug||console.log)("Original message:",e);try{this.statusBarElement&&(this.statusBarElement.textContent=`Error: ${e.substring(0,100)}`,this.statusBarElement.className="status-bar status-bar-error visible")}catch(e){(window.logger?.error||console.error)("Completely failed to show status bar:",e)}}}clearStatusBar(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{if(this.statusBarTimer&&(clearTimeout(this.statusBarTimer),this.statusBarTimer=null),!this.statusBarElement)return void this.logger.debug("Status bar element not found during clear");const{force:t=!1}=e,i=window.safeDOM||new a.SafeDOM(this.logger),s=window.UI_CONFIG||{TIMEOUTS:{ANIMATION:300}};t?(i.setHTML(this.statusBarElement,""),this.statusBarElement.className="status-bar",this.logger.debug("Status bar cleared immediately")):(i.removeClass(this.statusBarElement,"visible"),setTimeout(()=>{this.statusBarElement&&(i.setHTML(this.statusBarElement,""),this.statusBarElement.className="status-bar")},s.TIMEOUTS?.ANIMATION||300),this.logger.debug("Status bar cleared with animation"))}catch(t){this.errorManager.handleError(t,{component:"UIManager",operation:"clearStatusBar",severity:"warning",context:{options:e,errorMessage:t.message}});try{this.statusBarElement&&(this.statusBarElement.innerHTML="",this.statusBarElement.className="status-bar")}catch(e){(window.logger?.error||console.error)("Failed to clear status bar:",e)}}}showSuccess(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.showStatusBar(e,"success"),this.logger.info("Success message shown",{message:e,...t})}showWarning(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.showStatusBar(e,"warning"),this.logger.warn("Warning message shown",{message:e,...t})}showInfo(e){this.showStatusBar(e,"info")}showError(e){let t,i,s,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e instanceof Error)i=e,t=e.message,s="object"==typeof n&&null!==n?n:{};else if("string"==typeof e&&n instanceof Error)i=n,t=`${e}: ${n.message}`,s={};else if("string"==typeof e&&"string"==typeof n)t=`${e}: ${n}`,i=new Error(t),i.name=e,s={};else{if("string"!=typeof e){const t=new Error("Invalid parameters passed to showError");return void this.errorManager.handleError(t,{component:"UIManager",operation:"showError",severity:"error",context:{error:e,details:n,options:a}})}t=e,i=new Error(t),s="object"==typeof n&&null!==n?n:{}}const l={...s,...a.context};!1!==a.reportToServer&&this.errorManager.handleError(i,{component:a.component||"UIManager",operation:a.operation||"showError",severity:"error",context:l}),this.showStatusBar(t,"error",{autoDismiss:!1,errorId:a.errorId,context:l,...a}),this.logger.error("Error message shown",{error:t,name:i.name,stack:i.stack,...l})}catch(e){(window.logger?.error||console.error)("Error in showError:",e);try{const t="An error occurred";this.showStatusBar(t,"error",{autoDismiss:!1,context:{originalError:e instanceof Error?e.message:String(e),timestamp:(new Date).toISOString()}})}catch(e){(window.logger?.error||console.error)("Completely failed to show error:",e)}}hideLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.clearStatusBar(),e&&this.showSuccess(e),this.logger.debug("Loading indicator hidden")}updateProgress(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() called with:",{current:e,total:t,message:i}),!this.progressContainer)return(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Progress container not found in updateProgress"),void this.logger.warn("Progress container not found");(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container found, calculating percentage...");const s=t>0?Math.round(e/t*100):0;(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Calculated percentage:",s);const n=window.safeDOM||new a.SafeDOM(this.logger),l=window.UI_CONFIG||{SELECTORS:{PROGRESS_BAR_FILL:".progress-bar-fill",PROGRESS_PERCENTAGE:".progress-percentage",PROGRESS_TEXT:".progress-text"}},c=n.select(l.SELECTORS.PROGRESS_BAR_FILL,this.progressContainer);(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar element:",c),c?(c.style.width=`${s}%`,(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress bar updated to:",`${s}%`)):(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Progress bar element not found");const g=n.select(l.SELECTORS.PROGRESS_PERCENTAGE,this.progressContainer);(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage element:",g),g?(n.setText(g,`${s}%`),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Percentage text updated to:",`${s}%`)):(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Percentage element not found");const u=n.select(l.SELECTORS.PROGRESS_TEXT,this.progressContainer);(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text element:",u),u&&i?(n.setText(u,i),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress text updated to:",i)):(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Progress text element not found or no message"),this.logger.debug("Progress updated",{current:e,total:t,percentage:s,message:i}),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() completed")}updateTokenStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.tokenStatusElement?(this.tokenStatusElement.className=`token-status ${e}`,this.tokenStatusElement.textContent=t||e,this.logger.debug("Token status updated",{status:e,message:t})):this.logger.warn("Token status element not found")}updateConnectionStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.connectionStatusElement?(this.connectionStatusElement.className=`connection-status ${e}`,this.connectionStatusElement.textContent=t||e,this.logger.debug("Connection status updated",{status:e,message:t})):this.logger.warn("Connection status element not found")}showCurrentTokenStatus(e){if(!e)return void this.logger.warn("No token info provided");const{isValid:t,expiresAt:i,timeRemaining:s}=e;if(!t)return void this.updateTokenStatus("expired","");const n=s?` (${s})`:"";this.updateTokenStatus("valid",`Token valid${n}`),this.logger.info("Current token status displayed",{isValid:t,expiresAt:i,timeRemaining:s})}updateUniversalTokenStatus(e){const t=document.getElementById("token-status-indicator");if(!t)return void this.logger.warn("Token status indicator not found");if(!e)return void(t.style.display="none");const{isValid:i,expiresAt:s,timeRemaining:n}=e,a=t.querySelector(".token-status-content");if(a){const e=a.querySelector(".token-status-icon"),t=a.querySelector(".token-status-text"),s=a.querySelector(".token-status-time");i?(e.textContent="✅",t.textContent="Token valid",s.textContent=n||""):(e.textContent="❌",t.textContent="",t.style.visibility="hidden",s.textContent="")}t.style.display="block",this.logger.debug("Token status indicator updated",{isValid:i,timeRemaining:n})}updateHomeTokenStatus(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const i=document.getElementById("home-token-status");if(!i)return void(window.logger?.error||console.log)("❌ home-token-status element not found!");(window.logger?.debug||console.log)("✅ Found home-token-status element:",i);let s=!1,n="btn-danger",a="Get New Token";try{if(s=this.checkForStashedToken(),!s&&window.app&&window.app.pingOneClient){const e=window.app.pingOneClient.getCurrentTokenTimeRemaining();e&&e.token&&!e.isExpired&&(s=!0)}s&&(n="btn-success",a="Token Valid")}catch(e){(window.logger?.error||console.log)("Error checking token status:",e)}const l=document.querySelector(".sidebar");if(l&&i.parentNode!==l&&(l.appendChild(i),(window.logger?.debug||console.log)("✅ Moved home-token-status to bottom of sidebar")),!document.getElementById("debug-home-token-status-label")){const e=document.createElement("div");e.id="debug-home-token-status-label",e.style.cssText="\n                position: absolute !important;\n                top: -30px !important;\n                left: 0 !important;\n                background: #ff0000 !important;\n                color: #ffffff !important;\n                padding: 4px 8px !important;\n                font-size: 12px !important;\n                font-weight: bold !important;\n                border: 2px solid #000 !important;\n                z-index: 9999 !important;\n                white-space: nowrap !important;\n                pointer-events: none !important;\n            ",e.textContent="DEBUG: home-token-status CONTAINER",i.style.cssText="\n                position: relative !important;\n                background: #ffffcc !important;\n                border: 1px solid #dee2e6 !important;\n                border-radius: 6px !important;\n                padding: 2px !important;\n                width: fit-content !important;\n                height: auto !important;\n                display: block !important;\n                overflow: visible !important;\n                margin-top: auto !important;\n            ",i.appendChild(e),(window.logger?.debug||console.log)("✅ Added debug label to home-token-status container")}if(e)i.innerHTML="";else{i.innerHTML=`\n                <div id="token-status-indicator" class="token-status-indicator valid" role="status" aria-live="polite" style="display: block !important; padding: 0 !important; margin: 0 !important; background: none !important; border: none !important;">\n                    <button id="get-token-btn" class="btn ${n}" style="font-size: 14px !important; padding: 8px 16px !important; margin: 0 !important; font-weight: 500 !important; border-radius: 6px !important; box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important; transition: all 0.2s ease !important;">\n                        <i class="fas fa-key"></i> ${a}\n                    </button>\n                </div>\n            `;const e=document.getElementById("get-token-btn");e&&e.addEventListener("click",()=>{window.tokenStatusIndicator&&"function"==typeof window.tokenStatusIndicator.getNewToken?window.tokenStatusIndicator.getNewToken():"function"==typeof this.getNewToken&&this.getNewToken()})}i.style.display="block",this.logger.debug("Home token status updated",{isLoading:e,message:t,hasValidToken:s,buttonClass:n})}checkForStashedToken(){try{if("undefined"==typeof localStorage)return!1;const e=localStorage.getItem("pingone_worker_token"),t=localStorage.getItem("pingone_token_expiry");if(!e||!t)return!1;const i=parseInt(t,10),s=Date.now();return!(isNaN(i)||s>=i-3e5)}catch(e){return(window.logger?.error||console.error)("Error checking for stashed token:",e),!1}}updateSettingsSaveStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";const i=document.querySelector(".settings-save-status");if(!i)return void this.logger.warn("Settings save status element not found");i.className=`settings-save-status ${t} show`;const s=this.getStatusIcon(t);i.innerHTML=`\n            <span>${e}</span>\n            <i class="fas ${s}"></i>\n        `,"success"===t&&setTimeout(()=>{i.classList.remove("show")},3e3),this.logger.info("Settings save status updated",{message:e,type:t})}showSettingsActionStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";const i=document.getElementById("settings-action-status");if(!i)return void this.logger.warn("Settings action status element not found");i.innerHTML="",i.className=`settings-action-status ${t}`;const s=document.createElement("div");s.className="status-content";const n=document.createElement("span");n.textContent=e,s.appendChild(n);const a=document.createElement("i");a.className=`fas ${this.getStatusIcon(t)}`,s.appendChild(a),i.appendChild(s),i.style.display="block",this.logger.info("Settings action status shown",{message:e,type:t,autoDismiss:!1})}getStatusIcon(e){const t={success:"fa-check-circle",error:"fa-times-circle",warning:"fa-exclamation-triangle",info:"fa-info-circle"};return t[e]||t.info}hideSettingsActionStatus(){const e=document.getElementById("settings-action-status");e&&(e.style.display="none",this.logger.debug("Settings action status hidden"))}showImportStatus(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=document.getElementById("import-status");if(!s)return void this.logger.warn("Import status element not found");s.style.display="block",s.className=`import-status ${e}`;const n=s.querySelector(".status-text");n&&(n.textContent=t||e),this.logger.info("Import status shown",{status:e,message:t,details:i})}clearNotifications(){this.notificationContainer&&(this.notificationContainer.innerHTML="",this.logger.debug("All notifications cleared")),this.clearStatusBar()}hideProgress(){if(this.progressContainer){(window.safeDOM||new a.SafeDOM(this.logger)).hide(this.progressContainer),this.logger.debug("Progress display hidden")}}showProgress(){(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] showProgress() called"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] this.progressContainer:",this.progressContainer);let e=this.progressContainer;if(e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found in UI manager, trying direct access..."),e=document.getElementById("progress-container")),e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found by ID, trying ElementRegistry..."),void 0!==n.ElementRegistry&&n.ElementRegistry.progressContainer&&(e=n.ElementRegistry.progressContainer())),e||((window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container not found by ElementRegistry, trying class selector..."),e=document.querySelector(".progress-container")),!e)return(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Progress container not found by any method"),(window.logger?.error||console.error)('🔍 [UI MANAGER DEBUG] Available containers with "progress" in ID:',Array.from(document.querySelectorAll('[id*="progress"]')).map(e=>e.id)),void(window.logger?.error||console.error)('🔍 [UI MANAGER DEBUG] Available containers with "progress" in class:',Array.from(document.querySelectorAll('[class*="progress"]')).map(e=>({id:e.id,className:e.className})));(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Progress container found, showing..."),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Current display style:",e.style.display),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Current visibility:",null!==e.offsetParent?"visible":"hidden"),e.style.display="block",e.style.visibility="visible",e.style.opacity="1",e.classList.remove("hidden","d-none"),e.classList.add("visible"),e.offsetHeight,(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Display style after setting to block:",e.style.display),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Container visibility:",null!==e.offsetParent?"visible":"hidden"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Container dimensions:",{offsetWidth:e.offsetWidth,offsetHeight:e.offsetHeight,clientWidth:e.clientWidth,clientHeight:e.clientHeight}),null!==e.offsetParent&&e.scrollIntoView({behavior:"smooth",block:"center"}),this.progressContainer=e,this.logger.debug("Progress display shown"),setTimeout(()=>{const t=null!==e.offsetParent,i=e.getBoundingClientRect();(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Final verification:",{isVisible:t,dimensions:{width:i.width,height:i.height},display:e.style.display,computedDisplay:window.getComputedStyle(e).display})},100)}setButtonLoading(e,t){const i=document.getElementById(e);i?(t?(i.disabled=!0,i.innerHTML='<i class="fas fa-spinner fa-spin"></i> Loading...',i.classList.add("loading")):(i.disabled=!1,i.innerHTML=i.getAttribute("data-original-text")||"Submit",i.classList.remove("loading")),this.logger.debug("Button loading state updated",{buttonId:e,isLoading:t})):"get-token-quick"===e?this.logger.debug(`Button with ID '${e}' not found (may be hidden)`):this.logger.warn(`Button with ID '${e}' not found`)}updatePopulationFields(e){if(!e||!Array.isArray(e))return void this.logger.warn("Invalid populations data provided");const t=document.querySelectorAll('select[id*="population"]');t.forEach(t=>{const i=t.value;t.innerHTML="";const s=document.createElement("option");s.value="",s.textContent="Select a population...",t.appendChild(s),e.forEach(e=>{const i=document.createElement("option");i.value=e.id,i.textContent=e.name,t.appendChild(i)}),i&&t.querySelector(`option[value="${i}"]`)&&(t.value=i)}),this.logger.info("Population fields updated",{populationCount:e.length,selectCount:t.length})}showNotification(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"info",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this.notificationContainer)return void this.logger.warn("Notification container not found");this.notificationContainer.innerHTML="";const n=document.createElement("div");n.className="status-content";const a=document.createElement("i");a.className=`fas ${this.getStatusIcon(i)}`,n.appendChild(a);const l=document.createElement("span");l.textContent=e&&t?`${e}: ${t}`:e||t,n.appendChild(l),this.notificationContainer.appendChild(n);const c=!1!==s.autoDismiss&&"error"!==i&&"success"!==i;if(c){const e=s.duration||5e3;setTimeout(()=>{this.notificationContainer&&this.notificationContainer.contains(n)&&(this.notificationContainer.innerHTML="")},e)}this.logger.info("Status header updated",{title:e,message:t,type:i,autoDismiss:c})}updateImportProgress(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";if(this.updateProgress(e,t,i),s&&"object"==typeof s&&Object.entries(s).forEach(e=>{let[t,i]=e;const s=document.querySelector(`.stat-value.${t}`);s&&(s.textContent=i||0)}),n||a){const e=document.querySelector(".detail-value.population-info");e&&(e.textContent=n||a||"Unknown")}this.logger.debug("Import progress updated",{current:e,total:t,message:i,counts:s,populationName:n,populationId:a})}startImportOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] startImportOperation() called with options:",e);const{operationType:t,totalUsers:i,populationName:s,populationId:n}=e;(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] About to call showProgress()..."),this.showProgress(),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] showProgress() completed"),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] About to call updateProgress()..."),this.updateProgress(0,i||0,"Starting import operation..."),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] updateProgress() completed");const a=document.querySelector(".detail-value.operation-type");(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Operation type element:",a),a?(a.textContent=t||"Import",(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] Operation type updated to:",t||"Import")):(window.logger?.error||console.error)("🔍 [UI MANAGER DEBUG] Operation type element not found"),this.logger.info("Import operation started",{operationType:t,totalUsers:i,populationName:s,populationId:n}),(window.logger?.debug||console.log)("🔍 [UI MANAGER DEBUG] startImportOperation() completed")}updateImportOperationWithSessionId(e){if(!e)return void this.logger.warn("No session ID provided for import operation");const t=document.querySelector(".detail-value.session-id");t&&(t.textContent=e),this.logger.info("Import operation session ID updated",{sessionId:e})}startExportOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:i}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting export operation...");const s=document.querySelector(".detail-value.operation-type");s&&(s.textContent="Export"),this.logger.info("Export operation started",{totalUsers:t,populationName:i})}startDeleteOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:i}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting delete operation...");const s=document.querySelector(".detail-value.operation-type");s&&(s.textContent="Delete"),this.logger.info("Delete operation started",{totalUsers:t,populationName:i})}startModifyOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{totalUsers:t,populationName:i}=e;this.showProgress(),this.updateProgress(0,t||0,"Starting modify operation...");const s=document.querySelector(".detail-value.operation-type");s&&(s.textContent="Modify"),this.logger.info("Modify operation started",{totalUsers:t,populationName:i})}completeOperation(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{processed:t,success:i,failed:s,skipped:n}=e;this.updateProgress(t||0,t||0,"Operation completed");const a=`Operation completed: ${i||0} successful, ${s||0} failed, ${n||0} skipped`;this.showSuccess(a),setTimeout(()=>{this.hideProgress()},2e3),this.logger.info("Operation completed",{processed:t,success:i,failed:s,skipped:n})}handleDuplicateUsers(e,t){if(!e||0===e.length)return void this.logger.warn("No duplicates provided for handling");const i=`Found ${e.length} duplicate users. How would you like to proceed?`;this.showWarning(i),this.logger.info("Duplicate users found",{count:e.length}),t&&"function"==typeof t&&t("skip")}debugLog(e,t){l&&this.logger.debug(`[${e}] ${t}`)}showStatusMessage(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const s=i?`${t}: ${i}`:t;this.showNotification("Status Update",s,e)}showExportStatus(){this.showProgress(),this.updateProgress(0,100,"Preparing export..."),this.logger.info("Export status shown")}showStartupWaitScreen(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Initializing application...";try{let t=document.getElementById("startup-wait-screen");if(t){const i=t.querySelector(".startup-message");i&&(i.textContent=e)}else t=document.createElement("div"),t.id="startup-wait-screen",t.className="startup-wait-screen",t.innerHTML=`\n                    <div class="startup-content">\n                        <div class="startup-spinner"></div>\n                        <div class="startup-message">${e}</div>\n                    </div>\n                `,document.body.appendChild(t);t.style.display="flex",this.logger.debug("Startup wait screen shown",{message:e})}catch(e){this.logger.error("Error showing startup wait screen:",e)}}hideStartupWaitScreen(){try{const e=document.getElementById("startup-wait-screen");e&&(e.style.display="none",this.logger.debug("Startup wait screen hidden"))}catch(e){this.logger.error("Error hiding startup wait screen:",e)}}updateStartupMessage(e){try{const t=document.getElementById("startup-wait-screen");if(t){const i=t.querySelector(".startup-message");i?(i.textContent=e,this.logger.debug("Startup message updated",{message:e})):this.logger.warn("Startup message element not found")}else this.showStartupWaitScreen(e)}catch(e){this.logger.error("Error updating startup message:",e)}}updateExportProgress(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.updateProgress(e,t,i),s&&"object"==typeof s&&Object.entries(s).forEach(e=>{let[t,i]=e;const s=document.querySelector(`.stat-value.${t}`);s&&(s.textContent=i||0)}),this.logger.debug("Export progress updated",{current:e,total:t,message:i,counts:s})}showDeleteStatus(e,t,i){this.showProgress(),this.updateProgress(0,e||0,"Preparing delete operation...");const s=document.querySelector(".detail-value.operation-type");s&&(s.textContent="Delete"),this.logger.info("Delete status shown",{totalUsers:e,populationName:t,populationId:i})}updateDeleteProgress(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"";this.updateProgress(e,t,i),s&&"object"==typeof s&&Object.entries(s).forEach(e=>{let[t,i]=e;const s=document.querySelector(`.stat-value.${t}`);s&&(s.textContent=i||0)}),this.logger.debug("Delete progress updated",{current:e,total:t,message:i,counts:s,populationName:n,populationId:a})}showModifyStatus(e){this.showProgress(),this.updateProgress(0,e||0,"Preparing modify operation...");const t=document.querySelector(".detail-value.operation-type");t&&(t.textContent="Modify"),this.logger.info("Modify status shown",{totalUsers:e})}updateModifyProgress(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.updateProgress(e,t,i),s&&"object"==typeof s&&Object.entries(s).forEach(e=>{let[t,i]=e;const s=document.querySelector(`.stat-value.${t}`);s&&(s.textContent=i||0)}),this.logger.debug("Modify progress updated",{current:e,total:t,message:i,counts:s})}}}).call(this)}).call(this,e("_process"))},{"../../../public/js/modules/circular-progress.js":38,"../../../public/js/modules/element-registry.js":39,"../../../public/js/modules/error/error-types.js":40,"../../../public/js/modules/progress-manager.js":42,"../../../public/js/modules/utils/safe-dom.js":44,"@babel/runtime/helpers/interopRequireDefault":1,_process:37}],50:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.AdvancedRealtimeSubsystem=void 0;i.AdvancedRealtimeSubsystem=class AdvancedRealtimeSubsystem{constructor(e,t,i,s,n){this.logger=e,this.eventBus=t,this.realtimeCommunication=i,this.sessionSubsystem=s,this.progressSubsystem=n,this.activeUsers=new Map,this.collaborationRooms=new Map,this.sharedOperations=new Map,this.liveProgressStreams=new Map,this.notificationQueues=new Map,this.analyticsStreams=new Map,this.config={maxUsersPerRoom:10,progressUpdateInterval:1e3,presenceUpdateInterval:5e3,notificationRetention:100,analyticsBufferSize:1e3},this.logger.info("Advanced Real-time Features Subsystem initialized")}async init(){try{this.setupEventBusListeners(),await this.initializePresenceSystem(),await this.initializeLiveProgressSharing(),await this.initializeNotificationSystem(),await this.initializeCollaborativeOperations(),await this.initializeLiveAnalytics(),this.logger.info("Advanced Real-time Features Subsystem initialized successfully"),this.eventBus.emit("subsystem:ready",{subsystem:"advanced-realtime"})}catch(e){throw this.logger.error("Failed to initialize Advanced Real-time Features Subsystem",e),this.eventBus.emit("subsystem:error",{subsystem:"advanced-realtime",error:e}),e}}setupEventBusListeners(){this.logger.debug("Setting up EventBus listeners for advanced real-time features"),this.eventBus.on("session:user-joined",e=>this.handleUserJoined(e)),this.eventBus.on("session:user-left",e=>this.handleUserLeft(e)),this.eventBus.on("session:activity-update",e=>this.handleActivityUpdate(e)),this.eventBus.on("operation:started",e=>this.handleOperationStarted(e)),this.eventBus.on("operation:progress",e=>this.handleOperationProgress(e)),this.eventBus.on("operation:completed",e=>this.handleOperationCompleted(e)),this.eventBus.on("operation:failed",e=>this.handleOperationFailed(e)),this.eventBus.on("progress:updated",e=>this.handleProgressUpdate(e)),this.eventBus.on("progress:milestone",e=>this.handleProgressMilestone(e)),this.eventBus.on("analytics:metric-update",e=>this.handleAnalyticsUpdate(e)),this.eventBus.on("analytics:performance-data",e=>this.handlePerformanceData(e)),this.logger.debug("EventBus listeners set up for advanced real-time features")}async initializePresenceSystem(){this.logger.debug("Initializing multi-user presence system"),this.presenceInterval=setInterval(()=>{this.broadcastPresence()},this.config.presenceUpdateInterval),this.realtimeCommunication.on("user-presence",e=>{this.handlePresenceUpdate(e)}),this.realtimeCommunication.on("user-connected",e=>{this.handleUserConnected(e)}),this.realtimeCommunication.on("user-disconnected",e=>{this.handleUserDisconnected(e)}),this.logger.debug("Multi-user presence system initialized")}async initializeLiveProgressSharing(){this.logger.debug("Initializing live progress sharing"),this.progressInterval=setInterval(()=>{this.streamProgressUpdates()},this.config.progressUpdateInterval),this.realtimeCommunication.on("progress-update",e=>{this.handleSharedProgressUpdate(e)}),this.realtimeCommunication.on("progress-sync-request",e=>{this.handleProgressSyncRequest(e)}),this.logger.debug("Live progress sharing initialized")}broadcastPresence(){try{if(!this.currentRoom||!this.currentUser)return;const e={roomId:this.currentRoom,userId:this.currentUser.id||"anonymous",userName:this.currentUser.name||"Anonymous User",status:"active",lastActivity:(new Date).toISOString(),timestamp:(new Date).toISOString()};this.realtimeCommunication.emit("user-presence",e),this.activeUsers.set(e.userId,{...e,joinedAt:this.activeUsers.get(e.userId)?.joinedAt||new Date}),this.eventBus.emit("realtime:presence-broadcasted",e),this.logger.debug("Presence broadcasted",{roomId:this.currentRoom,userId:e.userId})}catch(e){this.logger.error("Failed to broadcast presence",e)}}streamProgressUpdates(){try{if(!this.currentRoom||!this.progressSubsystem)return;const e=this.progressSubsystem.getCurrentProgress();if(e&&e.isActive){const t={roomId:this.currentRoom,userId:this.currentUser?.id||"anonymous",userName:this.currentUser?.name||"Anonymous User",progress:{operationType:e.operationType,percentage:e.percentage,currentStep:e.currentStep,totalSteps:e.totalSteps,message:e.message,timestamp:(new Date).toISOString()}};this.realtimeCommunication.emit("progress-update",t),this.sharedProgress.set(t.userId,t.progress),this.eventBus.emit("realtime:progress-streamed",t),this.logger.debug("Progress update streamed",{roomId:this.currentRoom,userId:t.userId,percentage:e.percentage})}}catch(e){this.logger.error("Failed to stream progress updates",e)}}async initializeNotificationSystem(){this.logger.debug("Initializing real-time notification system"),this.realtimeCommunication.on("notification",e=>{this.handleIncomingNotification(e)}),this.eventBus.on("notification:send",e=>{this.broadcastNotification(e)}),this.logger.debug("Real-time notification system initialized")}async initializeCollaborativeOperations(){this.logger.debug("Initializing collaborative operation management"),this.realtimeCommunication.on("operation-request",e=>{this.handleOperationRequest(e)}),this.realtimeCommunication.on("operation-lock",e=>{this.handleOperationLock(e)}),this.realtimeCommunication.on("operation-unlock",e=>{this.handleOperationUnlock(e)}),this.logger.debug("Collaborative operation management initialized")}async initializeLiveAnalytics(){this.logger.debug("Initializing live analytics streaming"),this.analyticsInterval=setInterval(()=>{this.streamAnalyticsData()},5e3),this.realtimeCommunication.on("analytics-update",e=>{this.handleAnalyticsStreamUpdate(e)}),this.logger.debug("Live analytics streaming initialized")}streamAnalyticsData(){try{if(!this.currentRoom||!this.analyticsDashboard)return;const e=this.analyticsDashboard.getAnalyticsDashboardData("5m");if(e){const t={roomId:this.currentRoom,userId:this.currentUser?.id||"anonymous",analytics:{systemMetrics:e.systemMetrics,operationSummary:e.operationSummary,recentActivity:e.recentActivity?.slice(0,5),timestamp:(new Date).toISOString()}};this.realtimeCommunication.emit("analytics-update",t),this.eventBus.emit("realtime:analytics-streamed",t),this.logger.debug("Analytics data streamed",{roomId:this.currentRoom,userId:t.userId,metricsCount:Object.keys(t.analytics.systemMetrics||{}).length})}}catch(e){this.logger.error("Failed to stream analytics data",e)}}async joinCollaborationRoom(e,t){this.logger.info("Joining collaboration room",{roomId:e,userId:t.id});try{if(this.collaborationRooms.has(e)){if(this.collaborationRooms.get(e).users.size>=this.config.maxUsersPerRoom)throw new Error("Collaboration room is at capacity")}else this.collaborationRooms.set(e,{id:e,users:new Map,operations:new Map,createdAt:new Date,lastActivity:new Date});const i=this.collaborationRooms.get(e);return i.users.set(t.id,{...t,joinedAt:new Date,lastSeen:new Date,isActive:!0}),this.broadcastToRoom(e,"user-joined",{roomId:e,user:t,totalUsers:i.users.size}),this.sendToUser(t.id,"room-state",{roomId:e,users:Array.from(i.users.values()),operations:Array.from(i.operations.values())}),this.eventBus.emit("collaboration:user-joined",{roomId:e,user:t}),{success:!0,roomId:e,userCount:i.users.size,users:Array.from(i.users.values())}}catch(t){throw this.logger.error("Failed to join collaboration room",{roomId:e,error:t.message}),t}}async leaveCollaborationRoom(e,t){this.logger.info("Leaving collaboration room",{roomId:e,userId:t});try{if(!this.collaborationRooms.has(e))return{success:!0,message:"Room does not exist"};const i=this.collaborationRooms.get(e),s=i.users.get(t);return s&&(i.users.delete(t),this.broadcastToRoom(e,"user-left",{roomId:e,userId:t,user:s,totalUsers:i.users.size}),0===i.users.size&&(this.collaborationRooms.delete(e),this.logger.debug("Removed empty collaboration room",{roomId:e})),this.eventBus.emit("collaboration:user-left",{roomId:e,userId:t,user:s})),{success:!0,roomId:e,userCount:i.users.size}}catch(i){throw this.logger.error("Failed to leave collaboration room",{roomId:e,userId:t,error:i.message}),i}}async startLiveProgressSharing(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.info("Starting live progress sharing",{operationId:e});try{const i={operationId:e,startTime:new Date,lastUpdate:new Date,subscribers:new Set,config:{updateInterval:t.updateInterval||this.config.progressUpdateInterval,includeMetrics:t.includeMetrics||!0,includeErrors:t.includeErrors||!0,maxHistory:t.maxHistory||100},history:[],currentProgress:{percentage:0,stage:"initializing",message:"Starting operation...",metrics:{}}};return this.liveProgressStreams.set(e,i),this.broadcastProgressEvent("progress-sharing-started",{operationId:e,config:i.config}),this.eventBus.emit("progress-sharing:started",{operationId:e,config:i.config}),{success:!0,operationId:e,streamId:e}}catch(t){throw this.logger.error("Failed to start live progress sharing",{operationId:e,error:t.message}),t}}async subscribeLiveProgress(e,t){if(this.logger.debug("Subscribing to live progress",{operationId:e,subscriberId:t}),!this.liveProgressStreams.has(e))throw new Error(`Progress stream not found for operation: ${e}`);const i=this.liveProgressStreams.get(e);return i.subscribers.add(t),this.sendProgressUpdate(t,{operationId:e,progress:i.currentProgress,history:i.history.slice(-10)}),this.logger.debug("Subscribed to live progress",{operationId:e,subscriberId:t,totalSubscribers:i.subscribers.size}),{success:!0,operationId:e,subscriberId:t}}async sendRealtimeNotification(e){this.logger.debug("Sending real-time notification",{type:e.type,recipients:e.recipients?.length});try{const t={id:this.generateId(),timestamp:new Date,...e};return e.recipients&&e.recipients.forEach(e=>{this.notificationQueues.has(e)||this.notificationQueues.set(e,[]);const i=this.notificationQueues.get(e);i.push(t),i.length>this.config.notificationRetention&&i.shift()}),this.broadcastNotification(t),this.eventBus.emit("notification:sent",t),{success:!0,notificationId:t.id}}catch(e){throw this.logger.error("Failed to send real-time notification",{error:e.message}),e}}async getLiveAnalyticsDashboard(){this.logger.debug("Getting live analytics dashboard data");try{return{timestamp:new Date,activeUsers:this.activeUsers.size,collaborationRooms:this.collaborationRooms.size,liveProgressStreams:this.liveProgressStreams.size,totalNotifications:Array.from(this.notificationQueues.values()).reduce((e,t)=>e+t.length,0),connectionStatus:this.realtimeCommunication.getConnectionStatus(),systemMetrics:await this.getSystemMetrics(),operationMetrics:await this.getOperationMetrics(),userActivity:await this.getUserActivityMetrics()}}catch(e){throw this.logger.error("Failed to get live analytics dashboard data",{error:e.message}),e}}handleUserJoined(e){this.logger.debug("Handling user joined event",e),this.activeUsers.set(e.userId,{...e,joinedAt:new Date,lastActivity:new Date}),this.broadcastPresenceUpdate()}handleUserLeft(e){this.logger.debug("Handling user left event",e),this.activeUsers.delete(e.userId),this.broadcastPresenceUpdate()}handleOperationStarted(e){this.logger.debug("Handling operation started event",e),e.shareProgress&&this.startLiveProgressSharing(e.operationId,e.progressConfig)}handleOperationProgress(e){this.logger.debug("Handling operation progress event",e),this.liveProgressStreams.has(e.operationId)&&this.updateLiveProgress(e.operationId,e.progress)}handleProgressUpdate(e){this.logger.debug("Handling progress update event",e),this.streamProgressUpdate(e)}broadcastToRoom(e,t,i){if(this.collaborationRooms.has(e)){this.collaborationRooms.get(e).users.forEach((e,s)=>{this.sendToUser(s,t,i)})}}sendToUser(e,t,i){this.realtimeCommunication.isConnected&&this.realtimeCommunication.socket?.emit("user-message",{targetUserId:e,event:t,data:i})}broadcastPresenceUpdate(){const e={activeUsers:Array.from(this.activeUsers.values()),timestamp:new Date};this.realtimeCommunication.socket?.emit("presence-update",e),this.eventBus.emit("presence:updated",e)}streamProgressUpdate(e){this.realtimeCommunication.socket?.emit("progress-stream",e),this.eventBus.emit("progress-stream:update",e)}broadcastNotification(e){this.realtimeCommunication.socket?.emit("notification-broadcast",e)}generateId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}async getSystemMetrics(){return{memoryUsage:performance.memory?{used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit}:null,connectionLatency:await this.measureConnectionLatency(),timestamp:new Date}}async getOperationMetrics(){return{activeOperations:this.liveProgressStreams.size,completedOperations:0,failedOperations:0,averageOperationTime:0,timestamp:new Date}}async getUserActivityMetrics(){return{activeUsers:this.activeUsers.size,totalSessions:this.sessionSubsystem?await this.sessionSubsystem.getActiveSessionCount():0,averageSessionDuration:0,timestamp:new Date}}async measureConnectionLatency(){if(!this.realtimeCommunication.isConnected)return null;const e=performance.now();return new Promise(t=>{this.realtimeCommunication.socket?.emit("ping",e,i=>{const s=performance.now()-e;t(s)}),setTimeout(()=>t(null),5e3)})}async disconnect(){this.logger.info("Disconnecting Advanced Real-time Features Subsystem"),this.presenceInterval&&clearInterval(this.presenceInterval),this.progressInterval&&clearInterval(this.progressInterval),this.analyticsInterval&&clearInterval(this.analyticsInterval),this.activeUsers.clear(),this.collaborationRooms.clear(),this.sharedOperations.clear(),this.liveProgressStreams.clear(),this.notificationQueues.clear(),this.analyticsStreams.clear(),this.logger.info("Advanced Real-time Features Subsystem disconnected")}getStatus(){return{isInitialized:!0,activeUsers:this.activeUsers.size,collaborationRooms:this.collaborationRooms.size,liveProgressStreams:this.liveProgressStreams.size,connectionStatus:this.realtimeCommunication.getConnectionStatus(),timestamp:new Date}}}},{}],51:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.AuthManagementSubsystem=void 0;i.AuthManagementSubsystem=class AuthManagementSubsystem{constructor(e,t,i,s){this.logger=e,this.uiManager=t,this.localClient=i,this.settingsSubsystem=s,this.isAuthenticated=!1,this.tokenStatus=null,this.tokenExpiry=null,this.refreshTimer=null,this.logger.info("Authentication Management Subsystem initialized")}async init(){try{this.setupEventListeners(),await this.checkInitialTokenStatus(),this.setupTokenRefreshTimer(),this.logger.info("Authentication Management Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize Authentication Management Subsystem",e),e}}setupEventListeners(){const e=document.getElementById("get-token-btn");e&&e.addEventListener("click",async e=>{e.preventDefault(),await this.getToken()});const t=document.getElementById("test-connection-btn");t&&t.addEventListener("click",async e=>{e.preventDefault(),await this.testConnection()});const i=document.getElementById("global-refresh-token");i&&i.addEventListener("click",async e=>{e.preventDefault(),await this.refreshToken()});const s=document.getElementById("settings-form");s&&s.addEventListener("submit",async e=>{e.preventDefault(),await this.handleSettingsSubmit(e)})}async getToken(){try{this.logger.info("Getting new authentication token"),this.showTokenProgress("Getting token..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))throw new Error("Invalid settings - please check your configuration");const t=await this.localClient.post("/api/v1/auth/token",{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region});if(!t.success)throw new Error(t.error||"Failed to get token");this.tokenStatus=t.token,this.tokenExpiry=t.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token obtained successfully"),this.uiManager.showSuccess("Authentication successful"),this.setupTokenRefreshTimer(),this.logger.info("Token obtained successfully")}catch(e){this.logger.error("Failed to get token",e),this.updateTokenStatusUI(!1,e.message),this.uiManager.showError("Authentication Failed",e.message)}finally{this.hideTokenProgress()}}async testConnection(){try{this.logger.info("Testing connection"),this.showConnectionProgress("Testing connection..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))throw new Error("Invalid settings - please check your configuration");const t=await this.localClient.get("/api/pingone/test-connection");if(!t.success)throw new Error(t.error||"Connection test failed");this.updateConnectionStatusUI(!0,"Connection successful"),this.uiManager.showSuccess("Connection test successful"),this.logger.info("Connection test successful")}catch(e){this.logger.error("Connection test failed",e),this.updateConnectionStatusUI(!1,e.message),this.uiManager.showError("Connection Test Failed",e.message)}finally{this.hideConnectionProgress()}}async refreshToken(){try{this.logger.info("Refreshing authentication token"),this.showTokenProgress("Refreshing token...");const e=await this.localClient.post("/api/v1/auth/refresh");if(!e.success)throw new Error(e.error||"Failed to refresh token");this.tokenStatus=e.token,this.tokenExpiry=e.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token refreshed successfully"),this.uiManager.showSuccess("Token refreshed successfully"),this.setupTokenRefreshTimer(),this.logger.info("Token refreshed successfully")}catch(e){this.logger.error("Failed to refresh token",e),this.updateTokenStatusUI(!1,e.message),this.uiManager.showError("Token Refresh Failed",e.message),this.clearAuthenticationState()}finally{this.hideTokenProgress()}}async handleSettingsSubmit(e){try{const t=new FormData(e.target),i=Object.fromEntries(t.entries());if(this.logger.info("Saving settings"),!this.validateSettings(i))throw new Error("Invalid settings - please check all required fields");await this.settingsManager.saveSettings(i),this.clearAuthenticationState(),this.uiManager.updateSettingsSaveStatus("Settings saved successfully","success"),this.logger.info("Settings saved successfully")}catch(e){this.logger.error("Failed to save settings",e),this.uiManager.updateSettingsSaveStatus(`Settings Save Failed: ${e.message}`,"error")}}async checkInitialTokenStatus(){try{this.logger.debug("🔍 [STARTUP] Checking initial token status...");const e=await this.localClient.get("/api/v1/auth/status");if(e.success&&e.isValid)this.tokenStatus=e.status,this.tokenExpiry=e.expiresIn,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,`Token is ${e.status}`),this.logger.info("✅ [STARTUP] Valid token found, authentication ready");else if(e.success&&e.hasToken){this.logger.warn("⚠️ [STARTUP] Token expired, attempting automatic refresh..."),this.tokenStatus=e.status,this.tokenExpiry=e.expiresIn;await this.attemptAutomaticTokenRefresh()?this.logger.info("✅ [STARTUP] Token automatically refreshed, authentication ready"):(this.logger.warn("❌ [STARTUP] Automatic token refresh failed, user intervention required"),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,"Token expired - refresh required"))}else{this.logger.warn("⚠️ [STARTUP] No token found, attempting automatic acquisition...");await this.attemptAutomaticTokenRefresh()?this.logger.info("✅ [STARTUP] Token automatically acquired, authentication ready"):(this.logger.warn("❌ [STARTUP] No token available and automatic acquisition failed"),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,e.status||"No valid token"))}}catch(e){this.logger.error("❌ [STARTUP] Failed to check token status",e),this.isAuthenticated=!1,this.updateTokenStatusUI(!1,"Token status unknown")}}async attemptAutomaticTokenRefresh(){try{this.logger.debug("🔄 [STARTUP] Attempting automatic token acquisition..."),await this.settingsSubsystem.loadCurrentSettings();const e=this.settingsSubsystem.currentSettings;if(!this.validateSettings(e))return this.logger.debug("❌ [STARTUP] No valid credentials available for automatic token acquisition"),!1;this.logger.debug("✅ [STARTUP] Valid credentials found, attempting token acquisition...");const t=await this.localClient.post("/api/v1/auth/token",{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region});return t.success&&t.token?(this.tokenStatus=t.token,this.tokenExpiry=t.expiry,this.isAuthenticated=!0,this.updateTokenStatusUI(!0,"Token obtained automatically"),this.setupTokenRefreshTimer(),this.logger.info("✅ [STARTUP] Automatic token acquisition successful"),!0):(this.logger.warn("❌ [STARTUP] Token acquisition failed:",t.error||"Unknown error"),!1)}catch(e){return this.logger.error("❌ [STARTUP] Error during automatic token acquisition:",e),!1}}setupTokenRefreshTimer(){if(this.refreshTimer&&clearTimeout(this.refreshTimer),!this.tokenExpiry)return;const e=new Date(this.tokenExpiry).getTime()-3e5,t=Date.now();if(e>t){const i=e-t;this.refreshTimer=setTimeout(()=>{this.refreshToken()},i),this.logger.info("Token refresh timer set",{refreshIn:Math.round(i/1e3/60),unit:"minutes"})}}validateSettings(e){const t=["clientId","clientSecret","environmentId","region"];for(const i of t)if(!e[i]||""===e[i].trim())return this.logger.error("Missing required setting",{field:i}),!1;return!0}clearAuthenticationState(){this.isAuthenticated=!1,this.tokenStatus=null,this.tokenExpiry=null,this.refreshTimer&&(clearTimeout(this.refreshTimer),this.refreshTimer=null),this.updateTokenStatusUI(!1,"Authentication cleared")}updateTokenStatusUI(e,t){const i=document.getElementById("global-token-status");i&&(i.className="token-status "+(e?"valid":"invalid"),i.textContent=t);const s=document.getElementById("token-status-indicator");s&&(s.className="token-indicator "+(e?"valid":"invalid"));const n=document.getElementById("get-token-btn");n&&(n.style.display=e?"none":"inline-block");const a=document.getElementById("global-refresh-token");a&&(a.style.display=e?"inline-block":"none")}updateConnectionStatusUI(e,t){const i=document.getElementById("connection-status");i&&(i.className="connection-status "+(e?"connected":"disconnected"),i.textContent=t)}showTokenProgress(e){const t=document.getElementById("get-token-btn");t&&(t.disabled=!0,t.textContent=e)}hideTokenProgress(){const e=document.getElementById("get-token-btn");e&&(e.disabled=!1,e.textContent="Get Token")}showConnectionProgress(e){const t=document.getElementById("test-connection-btn");t&&(t.disabled=!0,t.textContent=e)}hideConnectionProgress(){const e=document.getElementById("test-connection-btn");e&&(e.disabled=!1,e.textContent="Test Connection")}getAuthenticationStatus(){return{isAuthenticated:this.isAuthenticated,tokenStatus:this.tokenStatus,tokenExpiry:this.tokenExpiry,timeUntilExpiry:this.tokenExpiry?Math.max(0,new Date(this.tokenExpiry).getTime()-Date.now()):0}}isTokenValid(){if(!this.isAuthenticated||!this.tokenExpiry)return!1;const e=Date.now();return new Date(this.tokenExpiry).getTime()>e}}},{}],52:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ConnectionManagerSubsystem=void 0;var s=e("../utils/browser-logging-service.js");i.ConnectionManagerSubsystem=class ConnectionManagerSubsystem{constructor(e,t,i,n){this.logger=e||(0,s.createLogger)({serviceName:"connection-manager-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=i,this.apiClient=n,this.connectionStatus="disconnected",this.lastConnectionTest=null,this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.healthCheckInterval=null,this.tokenRefreshInterval=null,this.connectionRetryCount=0,this.maxRetryAttempts=3,this.eventListeners=new Map,this.logger.info("Connection Manager subsystem initialized")}async init(){try{this.logger.info("Initializing connection manager subsystem..."),await this.loadExistingToken(),this.startConnectionMonitoring(),this.setupTokenRefresh(),this.logger.info("Connection Manager subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize connection manager subsystem",{error:e.message}),e}}async testConnection(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{this.logger.info("Testing PingOne connection..."),this.uiManager&&this.uiManager.updateConnectionStatus("testing","Testing connection...");const t=e||await this.getCredentials();if(!t)throw new Error("No credentials available for connection test");this.validateCredentials(t);const i=await this.acquireToken(t);if(i.success)return this.connectionStatus="connected",this.lastConnectionTest={timestamp:Date.now(),success:!0,credentials:{clientId:t.clientId,environmentId:t.environmentId,region:t.region}},this.uiManager&&this.uiManager.updateConnectionStatus("success","Connection successful"),this.logger.info("Connection test successful"),this.emit("connectionSuccess",this.lastConnectionTest),{success:!0,message:"Connection successful",token:i.token,expiresIn:i.expiresIn};throw new Error(i.error||"Failed to acquire token")}catch(e){return this.logger.error("Connection test failed",{error:e.message}),this.connectionStatus="disconnected",this.lastConnectionTest={timestamp:Date.now(),success:!1,error:e.message},this.uiManager&&this.uiManager.updateConnectionStatus("error",`Connection failed: ${e.message}`),this.emit("connectionFailure",{error:e.message}),{success:!1,error:e.message}}}async acquireToken(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{this.logger.info("Acquiring PingOne token...");const t=e||await this.getCredentials();if(!t)throw new Error("No credentials available for token acquisition");this.validateCredentials(t);const i=await this.apiClient.post("/api/auth/token",{clientId:t.clientId,clientSecret:t.clientSecret,environmentId:t.environmentId,region:t.region});if(i.success&&i.token)return this.tokenInfo={token:i.token,expiresAt:Date.now()+1e3*i.expiresIn,isValid:!0,acquiredAt:Date.now()},this.connectionStatus="connected",this.uiManager&&this.uiManager.updateTokenStatus(!0,"Token acquired successfully"),this.logger.info("Token acquired successfully",{expiresIn:i.expiresIn}),this.emit("tokenAcquired",{token:i.token,expiresIn:i.expiresIn}),{success:!0,token:i.token,expiresIn:i.expiresIn};throw new Error(i.error||"Failed to acquire token")}catch(e){return this.logger.error("Token acquisition failed",{error:e.message}),this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.connectionStatus="disconnected",this.uiManager&&this.uiManager.updateTokenStatus(!1,`Token acquisition failed: ${e.message}`),this.emit("tokenAcquisitionFailure",{error:e.message}),{success:!1,error:e.message}}}async validateToken(){try{if(!this.tokenInfo.token)return this.logger.debug("No token to validate"),!1;if(this.tokenInfo.expiresAt&&Date.now()>=this.tokenInfo.expiresAt)return this.logger.info("Token has expired"),this.tokenInfo.isValid=!1,!1;const e=(await this.apiClient.get("/api/auth/validate",{headers:{Authorization:`Bearer ${this.tokenInfo.token}`}})).success;return this.tokenInfo.isValid=e,e?(this.logger.debug("Token validation successful"),this.connectionStatus="connected"):(this.logger.info("Token validation failed"),this.connectionStatus="disconnected"),e}catch(e){return this.logger.error("Token validation error",{error:e.message}),this.tokenInfo.isValid=!1,this.connectionStatus="disconnected",!1}}async refreshToken(){try{this.logger.info("Refreshing token...");const e=await this.getCredentials();if(!e)throw new Error("No credentials available for token refresh");const t=await this.acquireToken(e);return t.success&&(this.logger.info("Token refreshed successfully"),this.emit("tokenRefreshed",{token:t.token,expiresIn:t.expiresIn})),t}catch(e){return this.logger.error("Token refresh failed",{error:e.message}),this.emit("tokenRefreshFailure",{error:e.message}),{success:!1,error:e.message}}}async getCredentials(){try{if(window.credentialsManager){const e=window.credentialsManager.getCredentials();if(e&&this.isValidCredentialSet(e))return e}if(this.settingsManager){await this.settingsManager.loadCurrentSettings();const e=this.settingsManager.currentSettings;if(e&&this.isValidCredentialSet(e))return{clientId:e.clientId,clientSecret:e.clientSecret,environmentId:e.environmentId,region:e.region}}return null}catch(e){return this.logger.error("Failed to get credentials",{error:e.message}),null}}validateCredentials(e){const t=["clientId","clientSecret","environmentId"].filter(t=>!e[t]);if(t.length>0)throw new Error(`Missing required credentials: ${t.join(", ")}`);if(!/^[a-f0-9-]{36}$/.test(e.clientId))throw new Error("Invalid client ID format");if(!/^[a-f0-9-]{36}$/.test(e.environmentId))throw new Error("Invalid environment ID format");if(e.clientSecret.length<10)throw new Error("Client secret appears to be invalid")}isValidCredentialSet(e){try{return this.validateCredentials(e),!0}catch(e){return!1}}async loadExistingToken(){try{if(window.globalTokenManager&&"function"==typeof window.globalTokenManager.getCachedToken){const e=window.globalTokenManager.getCachedToken();if(e){this.tokenInfo={token:e.token,expiresAt:e.expiresAt,isValid:e.isValid,acquiredAt:e.acquiredAt};await this.validateToken()?(this.connectionStatus="connected",this.logger.info("Existing token loaded and validated")):this.logger.info("Existing token loaded but invalid")}}}catch(e){this.logger.error("Failed to load existing token",{error:e.message})}}startConnectionMonitoring(){this.healthCheckInterval=setInterval(async()=>{if("connected"===this.connectionStatus){await this.validateToken()||(this.logger.info("Connection lost during health check"),this.emit("connectionLost"))}},3e5),this.logger.debug("Connection monitoring started")}setupTokenRefresh(){this.tokenRefreshInterval=setInterval(async()=>{if(this.tokenInfo.token&&this.tokenInfo.expiresAt){const e=this.tokenInfo.expiresAt-Date.now();e<=3e5&&e>0&&(this.logger.info("Token expiring soon, attempting refresh..."),await this.refreshToken())}},6e4),this.logger.debug("Automatic token refresh setup")}getConnectionStatus(){return this.connectionStatus}getTokenInfo(){return{hasToken:!!this.tokenInfo.token,isValid:this.tokenInfo.isValid,expiresAt:this.tokenInfo.expiresAt,timeUntilExpiry:this.tokenInfo.expiresAt?this.tokenInfo.expiresAt-Date.now():null}}getLastConnectionTest(){return this.lastConnectionTest}isConnected(){return"connected"===this.connectionStatus&&this.tokenInfo.isValid}hasValidToken(){return this.tokenInfo.isValid&&this.tokenInfo.token&&this.tokenInfo.expiresAt&&Date.now()<this.tokenInfo.expiresAt}disconnect(){this.logger.info("Disconnecting..."),this.tokenInfo={token:null,expiresAt:null,isValid:!1},this.connectionStatus="disconnected",this.uiManager&&(this.uiManager.updateConnectionStatus("disconnected","Disconnected"),this.uiManager.updateTokenStatus(!1,"No token")),this.emit("disconnected"),this.logger.info("Disconnected successfully")}on(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e).push(t)}off(e,t){if(this.eventListeners.has(e)){const i=this.eventListeners.get(e),s=i.indexOf(t);s>-1&&i.splice(s,1)}}emit(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.eventListeners.has(e)&&this.eventListeners.get(e).forEach(i=>{try{i(t)}catch(t){this.logger.error("Event listener error",{event:e,error:t.message})}})}getConnectionStats(){return{status:this.connectionStatus,hasToken:!!this.tokenInfo.token,tokenValid:this.tokenInfo.isValid,tokenExpiresAt:this.tokenInfo.expiresAt,lastConnectionTest:this.lastConnectionTest,retryCount:this.connectionRetryCount}}cleanup(){this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),this.tokenRefreshInterval&&(clearInterval(this.tokenRefreshInterval),this.tokenRefreshInterval=null),this.eventListeners.clear(),this.disconnect(),this.logger.info("Connection Manager subsystem cleaned up")}}},{"../utils/browser-logging-service.js":60}],53:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;i.default=class HistorySubsystem{constructor(e,t,i,s){if(!(e&&t&&i&&s))throw new Error("HistorySubsystem: logger, localClient, uiManager, and eventBus are required.");this.logger=e.child({subsystem:"HistorySubsystem"}),this.localClient=t,this.uiManager=i,this.eventBus=s,this.history=[],this.logger.info("HistorySubsystem initialized.")}async init(){this.logger.info("Initializing..."),this.eventBus.on("operation-completed",()=>this.fetchHistory(!0)),await this.fetchHistory(),this.logger.info("Successfully initialized.")}async fetchHistory(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.history.length>0&&!e)return this.history;this.logger.info("Fetching operation history...");try{const e=await this.localClient.get("/history");return this.history=e.history||[],this.logger.info(`Successfully fetched ${this.history.length} history records.`),this.renderHistory(),this.history}catch(e){return this.logger.error("Failed to fetch history:",e),this.uiManager.showError("Could not load operation history."),[]}}renderHistory(){this.logger.debug("Rendering history view...");const e=document.getElementById("history-view");e?(e.innerHTML=`<pre>${JSON.stringify(this.history,null,2)}</pre>`,this.logger.debug("History view rendered.")):this.logger.warn("History view element not found.")}}},{}],54:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ImportSubsystem=void 0;i.ImportSubsystem=class ImportSubsystem{constructor(e,t,i,s,n,a){let l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;this.logger=e,this.uiManager=t,this.localClient=i,this.settingsManager=s,this.eventBus=n,this.populationService=a,this.authManagementSubsystem=l,this.isImporting=!1,this.socket=null,this.selectedPopulationId=null,this.selectedPopulationName=null,this.fallbackPolling=null,this.selectedFile=null,this.messageFormatter=window.messageFormatter||{formatMessage:(e,t)=>`[${e.toUpperCase()}] ${t}`},this.logger.info("Import Subsystem initialized"),this.setupCrossSubsystemEvents()}async init(){(this.logger?.debug||window.logger?.debug||console.log)("🚀 [DEBUG] ImportSubsystem: init() method called");try{(this.logger?.debug||window.logger?.debug||console.log)("🔧 [DEBUG] ImportSubsystem: Setting up event listeners"),this.setupEventListeners(),(this.logger?.debug||window.logger?.debug||console.log)("📋 [DEBUG] ImportSubsystem: About to refresh population dropdown"),this.refreshPopulationDropdown(),(this.logger?.debug||window.logger?.debug||console.log)("🔘 [DEBUG] ImportSubsystem: Setting initial button state"),this.validateAndUpdateButtonState(),(this.logger?.debug||window.logger?.debug||console.log)("✅ [DEBUG] ImportSubsystem: Init completed successfully"),(this.logger?.info||window.logger?.info||console.log)("Import Subsystem initialized successfully")}catch(e){throw(this.logger?.error||window.logger?.error||console.error)("❌ [DEBUG] ImportSubsystem: Init failed with error:",e),(this.logger?.error||window.logger?.error||console.error)("Failed to initialize Import Subsystem",e),e}}setupEventListeners(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),i=window.UI_CONFIG||{SELECTORS:{START_IMPORT_BTN:"start-import",CSV_FILE_INPUT:"csv-file",IMPORT_POPULATION_SELECT:"import-population-select"}},s=e.selectById(i.SELECTORS.START_IMPORT_BTN);s&&e.addEventListener(s,"click",t.wrapAsyncEventHandler(async e=>{e.preventDefault(),await this.startImport()},"Import button click handler"));const n=e.selectById(i.SELECTORS.CSV_FILE_INPUT);n&&e.addEventListener(n,"change",t.wrapAsyncEventHandler(async e=>{const t=e.target.files[0];t&&(this.selectedFile=t,await this.handleFileSelect(t),this.validateAndUpdateButtonState())},"CSV file input change handler"));const a=e.selectById(i.SELECTORS.IMPORT_POPULATION_SELECT);a&&e.addEventListener(a,"change",t.wrapEventHandler(e=>{this.handlePopulationChange(e.target.value,e.target.selectedOptions[0]?.text),this.validateAndUpdateButtonState()},"Population dropdown change handler")),this.setupDragAndDropListeners()}setupDragAndDropListeners(){const e=document.getElementById("import-drop-zone"),t=document.getElementById("csv-file");e?(["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,e=>{e.preventDefault(),e.stopPropagation()},!1)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,()=>{e.classList.add("drag-over")},!1)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,()=>{e.classList.remove("drag-over")},!1)}),e.addEventListener("drop",async e=>{const i=e.dataTransfer.files;if(i.length>0){const e=i[0];if(this.selectedFile=e,t){const i=new DataTransfer;i.items.add(e),t.files=i.files}await this.handleFileSelect(e),this.validateAndUpdateButtonState()}},!1),e.addEventListener("click",()=>{t&&t.click()}),this.logger.info("Drag and drop listeners set up successfully")):this.logger.warn("Import drop zone not found in DOM")}async startImport(){if(this.logger.info("🚀 [DEBUG] ImportSubsystem: Start import button clicked"),this.isImporting)return this.logger.warn("🚀 [DEBUG] ImportSubsystem: Import already in progress"),void this.uiManager.showNotification("An import is already in progress. Please wait for it to complete.",{type:"warning",duration:5e3,title:"Import In Progress"});try{if(this.isImporting=!0,this.logger.info("🚀 [DEBUG] ImportSubsystem: Starting import process"),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Validating prerequisites..."),!await this.validateImportPrerequisites())return void this.logger.warn("🚀 [DEBUG] ImportSubsystem: Prerequisites validation failed, aborting import");this.logger.info("🚀 [DEBUG] ImportSubsystem: Prerequisites validated, proceeding with import"),this.getPopulationSelection(),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Showing progress UI"),this.uiManager.showProgress();const e=this.generateSessionId();this.logger.debug("🚀 [DEBUG] ImportSubsystem: Establishing real-time connection with session:",e),await this.establishRealTimeConnection(e),this.logger.debug("🚀 [DEBUG] ImportSubsystem: Executing import with session:",e),await this.executeImport(e)}catch(e){this.logger.error("🚀 [DEBUG] ImportSubsystem: Import process failed",e),this.uiManager.showError("Import Failed",e.message||"An unexpected error occurred during the import process.")}finally{this.isImporting=!1,this.logger.debug("🚀 [DEBUG] ImportSubsystem: Import process completed, resetting isImporting flag")}}async validateImportPrerequisites(){this.logger.debug("🔍 [DEBUG] ImportSubsystem: Validating import prerequisites");if(!await this.checkTokenStatus())return this.logger.warn("🔍 [DEBUG] ImportSubsystem: Token validation failed"),this.showAuthenticationModal("Import"),!1;if(!this.selectedFile)return this.logger.warn("🔍 [DEBUG] ImportSubsystem: No file selected (selectedFile is null)"),this.uiManager.showError("No File Selected","Please select a CSV file to import."),!1;const e=document.getElementById("import-population-select");return e&&e.value&&""!==e.value?(this.logger.info("✅ [DEBUG] ImportSubsystem: All prerequisites validated successfully",{hasFile:!!this.selectedFile,fileName:this.selectedFile?.name,hasPopulation:!!e?.value,populationId:e?.value}),!0):(this.logger.warn("🔍 [DEBUG] ImportSubsystem: No population selected"),this.uiManager.showError("No Population Selected","Please select a population for the import."),!1)}getPopulationSelection(){const e=document.getElementById("import-population-select");if(this.selectedPopulationId=e?.value||"",e){const t=e.options[e.selectedIndex];this.selectedPopulationName=t?.text||""}this.logger.info("Population selection",{id:this.selectedPopulationId,name:this.selectedPopulationName})}handleProgressUpdate(e){if(!e||void 0===e.current||void 0===e.total)return void this.logger.error("Invalid progress data",e);const t=Math.round(e.current/e.total*100);this.uiManager.updateProgress(t,e.message||`Processing ${e.current} of ${e.total} users...`),this.logger.info("Progress update",{current:e.current,total:e.total,percentage:t})}handleImportCompletion(e){this.logger.info("Import completed",e),this.cleanupConnections()}handleImportError(e){this.logger.error("Import error",e),this.cleanupConnections()}async executeImport(e){const t=document.getElementById("csv-file").files[0],i=new FormData;i.append("file",t),i.append("populationId",this.selectedPopulationId),i.append("sessionId",e);try{const e=await this.localClient.post("/api/import",i);if(!e.success)throw new Error(e.error||"Import failed");this.logger.info("Import request sent successfully")}catch(e){throw this.logger.error("Import request failed",e),e}}generateSessionId(){return`import_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async checkTokenStatus(){try{if((this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: checkTokenStatus called"),(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: this.authManagementSubsystem =",this.authManagementSubsystem),(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: typeof this.authManagementSubsystem =",typeof this.authManagementSubsystem),!this.authManagementSubsystem)return this.logger.warn("AuthManagementSubsystem not available for token check"),(this.logger?.debug||window.logger?.debug||console.log)("❌ [DEBUG] ImportSubsystem: AuthManagementSubsystem is null/undefined"),!1;(this.logger?.debug||window.logger?.debug||console.log)("✅ [DEBUG] ImportSubsystem: AuthManagementSubsystem is available, calling isTokenValid()");const e=this.authManagementSubsystem.isTokenValid();(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: isValid =",e);const t=this.authManagementSubsystem.getAuthenticationStatus();return(this.logger?.debug||window.logger?.debug||console.log)("🔍 [DEBUG] ImportSubsystem: authStatus =",t),e}catch(e){return this.logger.error("Error checking token status:",e),(this.logger?.debug||window.logger?.debug||console.log)("❌ [DEBUG] ImportSubsystem: Error in checkTokenStatus:",e),!1}}showAuthenticationModal(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Import";try{this.createAuthenticationModal(e)}catch(t){this.logger.error("Error showing authentication modal:",t),this.uiManager.showError("Authentication Required",`You must have a valid token to start an ${e.toLowerCase()}. Please go to Settings to configure your credentials.`)}}createAuthenticationModal(e){const t=window.safeDOM||new SafeDOM(this.logger),i=window.errorHandler||new ErrorHandler(this.logger),s=window.UI_CONFIG||{SELECTORS:{TOKEN_ALERT_OVERLAY:".token-alert-overlay",SETTINGS_NAV_ITEM:'[data-view="settings"]'},CLASSES:{TOKEN_ALERT_OVERLAY:"token-alert-overlay"}},n=t.select(s.SELECTORS.TOKEN_ALERT_OVERLAY);n&&n.remove();const a=document.createElement("div");t.addClass(a,s.CLASSES.TOKEN_ALERT_OVERLAY),a.setAttribute("role","dialog"),a.setAttribute("aria-modal","true"),a.setAttribute("aria-labelledby","token-alert-title"),a.setAttribute("aria-describedby","token-alert-content"),a.innerHTML=`\n            <div class="token-alert-modal" tabindex="-1">\n                <div class="token-alert-header">\n                    <h2 id="token-alert-title">\n                        <span class="warning-icon" aria-hidden="true">⚠️</span>\n                        <span>Authentication Required</span>\n                    </h2>\n                    <button type="button" class="token-alert-close" id="token-alert-close" aria-label="Close">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n                </div>\n                <div class="token-alert-body">\n                    <div id="token-alert-content" class="token-alert-content">\n                        <div class="token-alert-icon">\n                            <span aria-hidden="true">🔐</span>\n                        </div>\n                        <h3>No Valid Token Available</h3>\n                        <p class="token-alert-message">\n                            <strong>Authentication is required to continue.</strong>\n                            You need valid credentials to perform the "${e}" operation.\n                        </p>\n                        <div class="token-status-info">\n                            <p><strong>Current Status:</strong> No token available</p>\n                        </div>\n                        <div class="token-alert-actions">\n                            <button type="button" class="btn btn-primary btn-lg" id="token-alert-settings-btn">\n                                <span class="btn-icon">⚙️</span>\n                                Go to Settings\n                            </button>\n                            <p class="token-alert-help">\n                                Add your PingOne credentials in the Settings page to generate a new token.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(a);const l=t.select("#token-alert-settings-btn",a),c=t.select("#token-alert-close",a);l&&t.addEventListener(l,"click",i.wrapEventHandler(()=>{if(a.remove(),window.app&&window.app.showView)window.app.showView("settings");else{const e=t.select(s.SELECTORS.SETTINGS_NAV_ITEM);e?e.click():window.location.href="/"}},"Authentication modal settings button click")),c.addEventListener("click",()=>{a.remove()}),a.addEventListener("keydown",e=>{"Escape"===e.key&&a.remove()}),a.style.display="flex",setTimeout(()=>{a.classList.add("show")},10)}async handleFileSelect(e){try{if(this.logger.info("File selected for import",{name:e.name,size:e.size,type:e.type}),!this.validateFile(e))return;this.displayFileInfo(e)}catch(e){this.logger.error("File selection failed",e),this.uiManager.showError("File Selection Error",e.message)}}validateAndUpdateButtonState(){const e=window.safeDOM||new SafeDOM(this.logger),t=window.errorHandler||new ErrorHandler(this.logger),i=window.UI_CONFIG||{SELECTORS:{START_IMPORT_BTN:"start-import",IMPORT_POPULATION_SELECT:"import-population-select"},CLASSES:{BTN_DISABLED:"btn-disabled",BTN_PRIMARY:"btn-primary"}};t.wrapSync(()=>{const t=e.selectById(i.SELECTORS.START_IMPORT_BTN);if(!t)return void this.logger.warn("Import button not found for state validation");const s=!!this.selectedFile,n=e.selectById(i.SELECTORS.IMPORT_POPULATION_SELECT),a=n&&n.value&&""!==n.value,l=s&&a;t.disabled=!l,this.logger.debug("Import button state updated",{hasFile:s,hasPopulation:a,shouldEnable:l,buttonDisabled:t.disabled}),l?(e.removeClass(t,i.CLASSES.BTN_DISABLED),e.addClass(t,i.CLASSES.BTN_PRIMARY)):(e.addClass(t,i.CLASSES.BTN_DISABLED),e.removeClass(t,i.CLASSES.BTN_PRIMARY))},"Import button state validation")()}validateFile(e){return e.name.toLowerCase().endsWith(".csv")?!(e.size>10485760)||(this.uiManager.showError("File Too Large","File size must be less than 10MB"),!1):(this.uiManager.showError("Invalid File Type","Please select a CSV file"),!1)}async displayFileInfo(e){try{this.logger.info("Displaying comprehensive file information",{fileName:e.name});let t=null,i=null;try{const s=await this.readFileAsText(e);i=this.parseCSVContent(s),t=i?i.length:0,this.logger.debug("CSV parsing completed",{recordCount:t,hasData:!!i})}catch(e){this.logger.warn("Failed to parse CSV for record count",{error:e.message}),t="Unable to determine"}this.updateFileInfoDisplay(e,t,i)}catch(t){this.logger.error("Failed to display file information",{error:t.message});const i=window.safeDOM||new SafeDOM(this.logger),s=window.UI_CONFIG||{SELECTORS:{FILE_INFO:"file-info"},CLASSES:{FILE_INFO_ERROR:"file-info-error"},STYLES:{ERROR_BACKGROUND:"#f8d7da",ERROR_BORDER:"1px solid #f5c6cb",ERROR_COLOR:"#721c24"}},n=i.selectById(s.SELECTORS.FILE_INFO);if(n){const a=`\n                    <div class="${s.CLASSES.FILE_INFO_ERROR}" style="background: ${s.STYLES.ERROR_BACKGROUND}; border: ${s.STYLES.ERROR_BORDER}; border-radius: 4px; padding: 12px; color: ${s.STYLES.ERROR_COLOR};">\n                        <strong>⚠️ File Information Error</strong><br>\n                        Selected: ${e.name}<br>\n                        Size: ${(e.size/1024).toFixed(2)} KB<br>\n                        <em>Unable to display detailed information: ${t.message}</em>\n                    </div>\n                `;i.setHTML(n,a)}}}readFileAsText(e){return new Promise((t,i)=>{const s=new FileReader;s.onload=e=>t(e.target.result),s.onerror=()=>i(new Error("Failed to read file")),s.readAsText(e)})}parseCSVContent(e){if(!e||"string"!=typeof e)return[];try{const t=e.split("\n").filter(e=>e.trim().length>0);return t.length<=1?[]:t.slice(1).map(e=>{const t=[];let i="",s=!1;for(let n=0;n<e.length;n++){const a=e[n];'"'===a?s=!s:","!==a||s?i+=a:(t.push(i.trim()),i="")}return t.push(i.trim()),t}).filter(e=>e.some(e=>e.length>0))}catch(e){return this.logger.error("CSV parsing error",{error:e.message}),[]}}updateFileInfoDisplay(e,t,i){const s=document.getElementById("file-info");if(!s)return void this.logger.warn("File info element not found in DOM");const n=this.formatFileSize(e.size),a=new Date(e.lastModified).toLocaleString(),l=e.type||this.getFileExtension(e.name),c=this.getFileExtension(e.name),g="csv"===c||"txt"===c||"text/csv"===l||"text/plain"===l;let u="";g&&null!==t&&(u="number"==typeof t?t>0?`\n                        <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                            <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                            <span style="color: #0073C8; font-size: 0.8rem; font-weight: bold;">${t}</span>\n                        </div>\n                    `:'\n                        <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                            <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                            <span style="color: #dc3545; font-size: 0.8rem; font-weight: bold;">No user records found</span>\n                        </div>\n                    ':`\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">🧾 Records</strong>\n                        <span style="color: #ffc107; font-size: 0.8rem; font-weight: bold;">${t}</span>\n                    </div>\n                `);const d=`\n            <div class="file-info-details" style="background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 6px; padding: 12px; margin: 8px 0; box-shadow: 0 1px 4px rgba(0,0,0,0.08);">\n                \n                \x3c!-- File Name Section --\x3e\n                <div class="file-name-section" style="text-align: center; margin-bottom: 12px; padding: 8px; background: #e6f4ff; border-radius: 4px; color: #1a237e; font-weight: bold; font-size: 1.1rem;">\n                    <div style="font-size: 1.3rem; font-weight: 600; margin-bottom: 3px; color: #1a237e; word-break: break-word; overflow-wrap: break-word;">\n                        <i class="fas fa-file-csv" style="margin-right: 6px; font-size: 1.2rem; color: #1976d2;"></i>\n                        ${e.name}\n                    </div>\n                    <div style="font-size: 0.85rem; opacity: 0.9; font-weight: 500; color: #1976d2;">\n                        File Selected Successfully\n                    </div>\n                </div>\n                \n                \x3c!-- File Information Grid --\x3e\n                <div class="file-info-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 8px; font-size: 0.8em; margin-bottom: 10px;">\n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📊 File Size</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${n}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📅 Modified</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${a}</span>\n                    </div>\n                    \n                    <div class="file-info-item" style="background: white; padding: 8px; border-radius: 4px; border: 1px solid #e9ecef;">\n                        <strong style="color: #495057; display: block; margin-bottom: 3px; font-size: 0.85rem;">📄 Type</strong>\n                        <span style="color: #6c757d; font-size: 0.8rem;">${l||"CSV"}</span>\n                    </div>\n                    \n                    ${u}\n                </div>\n                \n                \x3c!-- File Status --\x3e\n                <div class="file-info-status" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: ${g?"#d4edda":"#f8d7da"}; border: 1px solid ${g?"#c3e6cb":"#f5c6cb"}; display: flex; align-items: center; gap: 6px;">\n                    <i class="fas ${g?"fa-check-circle":"fa-exclamation-triangle"}" style="color: ${g?"#155724":"#721c24"};"></i>\n                    <span style="color: ${g?"#155724":"#721c24"}; font-size: 0.85rem; font-weight: 500;">\n                        ${g?"Valid CSV file format":"Warning: File type may not be compatible"}\n                    </span>\n                </div>\n                \n                ${i&&i.length>0?`\n                <div class="file-info-preview" style="margin-top: 8px; padding: 8px; border-radius: 4px; background: #fff3cd; border: 1px solid #ffeaa7;">\n                    <strong style="color: #856404; font-size: 0.85rem;">📋 Ready for Import</strong>\n                    <div style="color: #856404; font-size: 0.8rem; margin-top: 2px;">\n                        File contains ${t} user record${1===t?"":"s"} ready for processing\n                    </div>\n                </div>\n                `:""}\n            </div>\n        `;s.innerHTML=d,this.logger.info("File information display updated successfully",{recordCount:t,isValidType:g})}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}getFileExtension(e){return e.slice((e.lastIndexOf(".")-1>>>0)+2).toLowerCase()}async establishRealTimeConnection(e){try{return this.logger.debug("🔗 [DEBUG] ImportSubsystem: Establishing real-time connection for session:",e),"undefined"!=typeof io&&this.subsystems?.realtimeManager?(this.logger.debug("🔗 [DEBUG] ImportSubsystem: Socket.IO available, setting up real-time connection"),this.socket=this.subsystems.realtimeManager.getConnection(),this.socket?(this.socket.on(`import-progress-${e}`,e=>{this.handleProgressUpdate(e)}),this.socket.on(`import-complete-${e}`,e=>{this.handleImportCompletion(e)}),this.socket.on(`import-error-${e}`,e=>{this.handleImportError(e)}),this.logger.info("✅ [DEBUG] ImportSubsystem: Real-time connection established successfully")):(this.logger.warn("⚠️ [DEBUG] ImportSubsystem: Socket.IO connection not available, using fallback polling"),this.setupFallbackPolling(e))):(this.logger.warn("⚠️ [DEBUG] ImportSubsystem: Socket.IO not available, using fallback polling"),this.setupFallbackPolling(e)),Promise.resolve()}catch(t){return this.logger.error("❌ [DEBUG] ImportSubsystem: Failed to establish real-time connection:",t),this.setupFallbackPolling(e),Promise.resolve()}}cleanupConnections(){this.socket&&(this.socket.disconnect(),this.socket=null),this.fallbackPolling&&(clearInterval(this.fallbackPolling),this.fallbackPolling=null),this.isImporting=!1}setupFallbackPolling(e){this.fallbackPolling=setInterval(async()=>{try{const t=await this.localClient.get(`/api/import/status/${e}`);t.data&&this.handleProgressUpdate(t.data)}catch(e){this.logger.error("Fallback polling failed",e)}},2e3)}setupCrossSubsystemEvents(){this.eventBus?(this.eventBus.on("tokenExpired",e=>{this.logger.warn("Token expired during import operation"),this.isImporting&&(this.cleanupConnections(),this.uiManager.showError("Session Expired","Your authentication token expired during the import. Please re-authenticate and try again."))}),this.eventBus.on("tokenError",e=>{this.logger.error("Token error detected",e),this.isImporting&&(this.cleanupConnections(),this.uiManager.showError("Authentication Error",`Authentication failed: ${e.error}`))}),this.eventBus.on("tokenRefreshed",e=>{this.logger.info("Token refreshed successfully")}),this.eventBus.on("populationsChanged",e=>{this.logger.info("Populations changed, refreshing import dropdown",{count:e.count}),this.refreshPopulationDropdown()}),this.logger.debug("Cross-subsystem event listeners set up for ImportSubsystem")):this.logger.warn("EventBus not available for cross-subsystem events")}handlePopulationChange(e,t){this.logger.info("🔄 [DEBUG] ImportSubsystem: Population changed",{populationId:e,populationName:t});const i=document.querySelector(".population-name-text");i&&(e&&t?(i.innerHTML=`<span class="population-label">Population:</span> <span class="population-value">${t}</span>`,this.logger.debug("Updated population name display",{populationName:t})):i.innerHTML='<span class="population-label">Population:</span> <span class="population-placeholder">Select a population</span>');const s=document.querySelector(".api-url-text");if(s)if(e){const t=`/api/populations/${e}/users`;s.textContent=t,this.logger.debug("Updated API URL display",{apiUrl:t})}else s.textContent="Select a population to see the API URL";this.selectedPopulationId=e,this.selectedPopulationName=t,this.eventBus&&this.eventBus.emit("importPopulationChanged",{populationId:e,populationName:t})}refreshPopulationDropdown(){this.logger.info("🔍 [DEBUG] ImportSubsystem: refreshPopulationDropdown called"),this.populationService?(this.logger.info("🔍 [DEBUG] ImportSubsystem: PopulationService available, calling populateDropdown"),this.populationService.populateDropdown("import-population-select",{includeEmpty:!0,emptyText:"Select a population"}).then(()=>{this.logger.info("✅ [DEBUG] ImportSubsystem: Import population dropdown refreshed successfully")}).catch(e=>{this.logger.error("❌ [DEBUG] ImportSubsystem: Failed to refresh import population dropdown",e),this.uiManager.showError("Population Refresh Failed","Failed to refresh population dropdown.")})):this.logger.error("❌ [DEBUG] ImportSubsystem: PopulationService not available for dropdown refresh",{populationServiceType:typeof this.populationService,populationServiceExists:!!this.populationService})}}},{}],55:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.NavigationSubsystem=void 0;var s=e("../utils/browser-logging-service.js");i.NavigationSubsystem=class NavigationSubsystem{constructor(e,t,i,n){this.logger=e||(0,s.createLogger)({serviceName:"navigation-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=i,this.app=n,this.currentView="home",this.previousView=null,this.navigationHistory=[],this.viewInitializers=new Map,this.viewCleanupHandlers=new Map,this.navItems=null,this.viewContainers=null,this.logger.info("Navigation subsystem initialized")}async init(){try{this.logger.info("Initializing navigation subsystem..."),this.navItems=document.querySelectorAll("[data-view]"),this.viewContainers=document.querySelectorAll('.view-container, [id$="-view"]'),this.logger.info("Navigation elements found",{navItems:this.navItems.length,viewContainers:this.viewContainers.length}),this.setupNavigationListeners(),this.registerDefaultViewInitializers(),await this.showView(this.currentView),this.logger.info("Navigation subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize navigation subsystem",{error:e.message}),e}}setupNavigationListeners(){this.navItems.forEach(e=>{e.addEventListener("click",async t=>{t.preventDefault();const i=e.getAttribute("data-view");this.logger.debug("Navigation item clicked",{view:i}),i&&i!==this.currentView&&await this.navigateToView(i)})}),window.addEventListener("popstate",e=>{e.state&&e.state.view&&this.showView(e.state.view,!1)}),this.logger.debug("Navigation listeners set up")}async navigateToView(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(this.logger.info("Navigating to view",{from:this.currentView,to:e}),!this.isValidView(e))return this.logger.warn("Invalid view requested",{view:e}),!1;if(!0!==t.force&&!await this.canNavigateFrom(this.currentView))return this.logger.info("Navigation blocked by current view",{currentView:this.currentView}),!1;const i=await this.showView(e,!1!==t.pushToHistory);return i&&this.logger.info("Navigation completed successfully",{view:e}),i}catch(t){return this.logger.error("Navigation failed",{view:e,error:t.message}),!1}}async showView(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];try{if(this.logger.debug("Showing view",{view:e,pushToHistory:t}),this.previousView=this.currentView,this.previousView&&this.viewCleanupHandlers.has(this.previousView))try{await this.viewCleanupHandlers.get(this.previousView)(),this.logger.debug("View cleanup completed",{view:this.previousView})}catch(e){this.logger.warn("View cleanup failed",{view:this.previousView,error:e.message})}this.hideAllViews();const i=document.getElementById(`${e}-view`);if(!i)return this.logger.warn("View element not found",{view:e}),!1;if(i.style.display="block",i.classList.add("active"),this.updateNavigationState(e),this.viewInitializers.has(e))try{await this.viewInitializers.get(e)(),this.logger.debug("View initializer completed",{view:e})}catch(t){this.logger.warn("View initializer failed",{view:e,error:t.message})}if(t&&window.history){const t=new URL(window.location);t.searchParams.set("view",e),window.history.pushState({view:e},"",t)}return this.currentView=e,this.navigationHistory.push({view:e,timestamp:Date.now(),from:this.previousView}),this.navigationHistory.length>50&&(this.navigationHistory=this.navigationHistory.slice(-50)),this.logger.info("View shown successfully",{view:e}),!0}catch(t){return this.logger.error("Failed to show view",{view:e,error:t.message}),!1}}hideAllViews(){this.viewContainers.forEach(e=>{e.style.display="none",e.classList.remove("active")}),this.logger.debug("All views hidden")}updateNavigationState(e){this.navItems.forEach(t=>{t.classList.remove("active"),t.getAttribute("data-view")===e&&t.classList.add("active")}),this.updatePageTitle(e),this.logger.debug("Navigation state updated",{view:e})}updatePageTitle(e){const t=`PingOne User Import v${this.app.version}`,i={import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History"}[e];document.title=i?`${i} - ${t}`:t}registerViewInitializer(e,t){this.viewInitializers.set(e,t),this.logger.debug("View initializer registered",{view:e})}registerViewCleanup(e,t){this.viewCleanupHandlers.set(e,t),this.logger.debug("View cleanup handler registered",{view:e})}registerDefaultViewInitializers(){this.registerViewInitializer("import",async()=>{"function"==typeof window.app?.loadPopulations&&await window.app.loadPopulations("import-population-select")}),this.registerViewInitializer("export",async()=>{window.exportManager&&"function"==typeof window.exportManager.loadPopulations&&await window.exportManager.loadPopulations()}),this.registerViewInitializer("delete-csv",async()=>{window.deleteManager&&"function"==typeof window.deleteManager.loadPopulations&&await window.deleteManager.loadPopulations()}),this.registerViewInitializer("modify",async()=>{"function"==typeof window.app?.loadPopulations&&await window.app.loadPopulations("modify-population-select")}),this.registerViewInitializer("logs",async()=>{window.logManager&&"function"==typeof window.logManager.loadLogs&&window.logManager.loadLogs()}),this.registerViewInitializer("history",async()=>{window.logManager&&"function"==typeof window.logManager.loadLogs&&window.logManager.loadLogs()}),this.logger.debug("Default view initializers registered")}isValidView(e){return["home","import","export","modify","delete-csv","settings","logs","history","analytics"].includes(e)}async canNavigateFrom(e){if("import"===e&&window.app?.isImportRunning){return confirm("Import is currently running. Are you sure you want to leave this page?")}if("export"===e&&window.exportManager?.isExportRunning){return confirm("Export is currently running. Are you sure you want to leave this page?")}if("delete-csv"===e&&window.deleteManager?.isDeleteRunning){return confirm("Delete operation is currently running. Are you sure you want to leave this page?")}if("settings"===e&&this.settingsManager?.hasUnsavedChanges?.()){return confirm("You have unsaved settings. Are you sure you want to leave without saving?")}return!0}getCurrentView(){return this.currentView}getPreviousView(){return this.previousView}getNavigationHistory(){return[...this.navigationHistory]}async goBack(){if(this.previousView)await this.navigateToView(this.previousView);else if(this.navigationHistory.length>1){const e=this.navigationHistory[this.navigationHistory.length-2];await this.navigateToView(e.view)}}async refreshCurrentView(){await this.showView(this.currentView,!1)}getViewStats(){const e={};return this.navigationHistory.forEach(t=>{e[t.view]||(e[t.view]={count:0,lastVisited:null}),e[t.view].count++,e[t.view].lastVisited=t.timestamp}),e}cleanup(){this.navItems.forEach(e=>{e.removeEventListener("click",this.handleNavClick)}),window.removeEventListener("popstate",this.handlePopState),this.viewInitializers.clear(),this.viewCleanupHandlers.clear(),this.navigationHistory=[],this.logger.info("Navigation subsystem cleaned up")}}},{"../utils/browser-logging-service.js":60}],56:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.OperationManagerSubsystem=void 0;var s=e("../utils/browser-logging-service.js");i.OperationManagerSubsystem=class OperationManagerSubsystem{constructor(e,t,i,n){this.logger=e||(0,s.createLogger)({serviceName:"operation-manager-subsystem",environment:"development"}),this.uiManager=t,this.settingsManager=i,this.apiClient=n,this.currentOperation=null,this.operationQueue=[],this.operationHistory=[],this.isOperationRunning=!1,this.operationTypes={IMPORT:"import",EXPORT:"export",DELETE:"delete",MODIFY:"modify"},this.validators=new Map,this.preChecks=new Map,this.postChecks=new Map,this.logger.info("Operation Manager subsystem initialized")}async init(){try{this.logger.info("Initializing operation manager subsystem..."),this.registerDefaultValidators(),this.registerDefaultPreChecks(),this.registerDefaultPostChecks(),this.logger.info("Operation Manager subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize operation manager subsystem",{error:e.message}),e}}async startOperation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(this.logger.info("Starting operation",{type:e,options:t}),this.isOperationRunning)throw new Error("Another operation is already running");if(!Object.values(this.operationTypes).includes(e))throw new Error(`Invalid operation type: ${e}`);const i={id:this.generateOperationId(),type:e,options:t,status:"initializing",startTime:Date.now(),endTime:null,progress:{current:0,total:0,percentage:0,message:"Initializing..."},result:null,error:null};this.currentOperation=i,this.isOperationRunning=!0,await this.runPreChecks(i),await this.validateOperation(i);const s=await this.executeOperation(i);return await this.runPostChecks(i),i.status="completed",i.endTime=Date.now(),i.result=s,this.logger.info("Operation completed successfully",{type:e,duration:i.endTime-i.startTime}),s}catch(t){throw this.logger.error("Operation failed",{type:e,error:t.message}),this.currentOperation&&(this.currentOperation.status="failed",this.currentOperation.endTime=Date.now(),this.currentOperation.error=t.message),t}finally{this.finalizeOperation()}}async executeOperation(e){const{type:t,options:i}=e;switch(this.logger.debug("Executing operation",{type:t}),t){case this.operationTypes.IMPORT:return await this.executeImport(e);case this.operationTypes.EXPORT:return await this.executeExport(e);case this.operationTypes.DELETE:return await this.executeDelete(e);case this.operationTypes.MODIFY:return await this.executeModify(e);default:throw new Error(`Unknown operation type: ${t}`)}}async executeImport(e){const{options:t}=e;this.logger.info("Executing import operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting import...");const i={file:t.file,populationId:t.populationId,populationName:t.populationName,skipDuplicates:t.skipDuplicates||!1,updateExisting:t.updateExisting||!1},s=await this.apiClient.post("/api/import",i);if(!s.success)throw new Error(s.error||"Import failed");return await this.trackOperationProgress(e,s.sessionId),{success:!0,sessionId:s.sessionId,message:"Import completed successfully"}}async executeExport(e){const{options:t}=e;this.logger.info("Executing export operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting export...");const i={populationId:t.populationId,populationName:t.populationName,includeDisabled:t.includeDisabled||!1,format:t.format||"csv"},s=await this.apiClient.post("/api/export",i);if(!s.success)throw new Error(s.error||"Export failed");return await this.trackOperationProgress(e,s.sessionId),{success:!0,sessionId:s.sessionId,downloadUrl:s.downloadUrl,message:"Export completed successfully"}}async executeDelete(e){const{options:t}=e;this.logger.info("Executing delete operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting delete...");const i={file:t.file,populationId:t.populationId,populationName:t.populationName,confirmDelete:!0},s=await this.apiClient.post("/api/delete",i);if(!s.success)throw new Error(s.error||"Delete failed");return await this.trackOperationProgress(e,s.sessionId),{success:!0,sessionId:s.sessionId,message:"Delete completed successfully"}}async executeModify(e){const{options:t}=e;this.logger.info("Executing modify operation",{options:t}),this.updateOperationProgress(e,0,100,"Starting modify...");const i={file:t.file,populationId:t.populationId,populationName:t.populationName,updateFields:t.updateFields||[]},s=await this.apiClient.post("/api/modify",i);if(!s.success)throw new Error(s.error||"Modify failed");return await this.trackOperationProgress(e,s.sessionId),{success:!0,sessionId:s.sessionId,message:"Modify completed successfully"}}async trackOperationProgress(e,t){return new Promise((i,s)=>{"undefined"!=typeof EventSource?this.trackProgressViaSSE(e,t,i,s):this.trackProgressViaPolling(e,t,i,s)})}trackProgressViaSSE(e,t,i,s){const n=new EventSource(`/api/progress/${t}`);n.onmessage=t=>{try{const a=JSON.parse(t.data);this.handleProgressUpdate(e,a),"completed"===a.status?(n.close(),i(a)):"failed"===a.status&&(n.close(),s(new Error(a.error||"Operation failed")))}catch(e){this.logger.error("Error parsing SSE data",{error:e.message})}},n.onerror=a=>{this.logger.error("SSE connection error",{error:a}),n.close(),this.trackProgressViaPolling(e,t,i,s)}}async trackProgressViaPolling(e,t,i,s){const poll=async()=>{try{const n=await this.apiClient.get(`/api/progress/${t}`);n.success?(this.handleProgressUpdate(e,n.data),"completed"===n.data.status?i(n.data):"failed"===n.data.status?s(new Error(n.data.error||"Operation failed")):setTimeout(poll,1e3)):s(new Error(n.error||"Failed to get progress"))}catch(e){s(e)}};poll()}handleProgressUpdate(e,t){e.progress={current:t.current||0,total:t.total||0,percentage:t.percentage||0,message:t.message||"Processing..."},this.uiManager&&this.uiManager.updateProgress(e.progress.current,e.progress.total,e.progress.message),this.logger.debug("Progress updated",{type:e.type,progress:e.progress})}updateOperationProgress(e,t,i,s){const n=i>0?Math.round(t/i*100):0;e.progress={current:t,total:i,percentage:n,message:s},this.uiManager&&this.uiManager.updateProgress(t,i,s),this.logger.debug("Operation progress updated",{type:e.type,progress:e.progress})}async runPreChecks(e){const t=this.preChecks.get(e.type);t&&(this.logger.debug("Running pre-checks",{type:e.type}),await t(e))}async validateOperation(e){const t=this.validators.get(e.type);t&&(this.logger.debug("Validating operation",{type:e.type}),await t(e))}async runPostChecks(e){const t=this.postChecks.get(e.type);t&&(this.logger.debug("Running post-checks",{type:e.type}),await t(e))}finalizeOperation(){this.currentOperation&&(this.operationHistory.push({...this.currentOperation}),this.operationHistory.length>100&&(this.operationHistory=this.operationHistory.slice(-100)),this.currentOperation=null),this.isOperationRunning=!1,this.logger.debug("Operation finalized")}registerDefaultValidators(){this.validators.set(this.operationTypes.IMPORT,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for import");if(!t.populationId)throw new Error("No population selected for import")}),this.validators.set(this.operationTypes.EXPORT,async e=>{const{options:t}=e;if(!t.populationId)throw new Error("No population selected for export")}),this.validators.set(this.operationTypes.DELETE,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for delete");if(!t.populationId)throw new Error("No population selected for delete")}),this.validators.set(this.operationTypes.MODIFY,async e=>{const{options:t}=e;if(!t.file)throw new Error("No file selected for modify");if(!t.populationId)throw new Error("No population selected for modify")})}registerDefaultPreChecks(){const commonPreCheck=async e=>{if(window.app&&"function"==typeof window.app.checkTokenAndRedirect){if(!await window.app.checkTokenAndRedirect(e.type))throw new Error("Invalid or expired token")}};Object.values(this.operationTypes).forEach(e=>{this.preChecks.set(e,commonPreCheck)})}registerDefaultPostChecks(){const commonPostCheck=async e=>{this.logger.info("Operation completed",{type:e.type,duration:e.endTime-e.startTime,status:e.status})};Object.values(this.operationTypes).forEach(e=>{this.postChecks.set(e,commonPostCheck)})}generateOperationId(){return`op_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async cancelOperation(){if(this.currentOperation&&this.isOperationRunning){this.logger.info("Cancelling operation",{type:this.currentOperation.type});try{this.currentOperation.sessionId&&await this.apiClient.post(`/api/cancel/${this.currentOperation.sessionId}`),this.currentOperation.status="cancelled",this.currentOperation.endTime=Date.now(),this.logger.info("Operation cancelled successfully")}catch(e){this.logger.error("Failed to cancel operation",{error:e.message})}finally{this.finalizeOperation()}}}getCurrentOperation(){return this.currentOperation?{...this.currentOperation}:null}getOperationHistory(){return[...this.operationHistory]}isRunning(){return this.isOperationRunning}getOperationStats(){const e={total:this.operationHistory.length,byType:{},byStatus:{},averageDuration:0};let t=0;return this.operationHistory.forEach(i=>{e.byType[i.type]||(e.byType[i.type]=0),e.byType[i.type]++,e.byStatus[i.status]||(e.byStatus[i.status]=0),e.byStatus[i.status]++,i.endTime&&i.startTime&&(t+=i.endTime-i.startTime)}),this.operationHistory.length>0&&(e.averageDuration=Math.round(t/this.operationHistory.length)),e}}},{"../utils/browser-logging-service.js":60}],57:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;i.default=class PopulationSubsystem{constructor(e,t,i){if(!e||!t||!i)throw new Error("PopulationSubsystem: logger, localClient, and eventBus are required.");this.logger=e.child({subsystem:"PopulationSubsystem"}),this.localClient=t,this.eventBus=i,this.populations=[],this.isInitialized=!1,this.logger.info("PopulationSubsystem initialized.")}async init(){this.logger.info("Initializing..."),this.eventBus.on("credentials-updated",()=>this.fetchPopulations(!0)),await this.fetchPopulations(),this.isInitialized=!0,this.logger.info("Successfully initialized.")}async fetchPopulations(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.populations.length>0&&!e)return this.logger.debug("Returning cached populations."),this.populations;this.logger.info("Fetching populations from the server...");try{const e=await this.localClient.get("/pingone/populations");return this.populations=e.populations||[],this.logger.info(`Successfully fetched ${this.populations.length} populations.`),this.eventBus.emit("populations-updated",this.populations),this.populations}catch(e){return this.logger.error("Failed to fetch populations:",e),this.populations=[],this.eventBus.emit("populations-updated:error",e),[]}}getPopulations(){return this.populations}getPopulationById(e){return this.populations.find(t=>t.id===e)}}},{}],58:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;i.default=class SettingsSubsystem{constructor(e,t,i,s,n,a){this.logger=e,this.uiManager=t,this.localClient=i,this.settingsManager=s,this.eventBus=n,this.credentialsManager=a,this.isSaving=!1,this.currentSettings=null,this.logger.info("Settings Subsystem initialized"),this.setupCrossSubsystemEvents()}async init(){try{this.setupEventListeners(),await this.loadCurrentSettings(),this.logger.info("Settings Subsystem initialized successfully")}catch(e){this.logger.error("Failed to initialize Settings Subsystem",e),this.uiManager.showSettingsActionStatus("Failed to initialize Settings Subsystem: "+e.message,"error")}}setupEventListeners(){this.logger.info("Setting up Settings Subsystem event listeners");const e=document.getElementById("save-settings");e?(this.logger.info("Found save settings button, attaching event listener"),e.addEventListener("click",async e=>{e.preventDefault(),this.logger.info("Save settings button clicked"),await this.saveSettings()})):this.logger.warn("Save settings button not found in DOM");const t=document.getElementById("test-connection-btn");t&&t.addEventListener("click",async e=>{e.preventDefault(),await this.testConnection()});const i=document.getElementById("get-token-btn");i&&i.addEventListener("click",async e=>{e.preventDefault(),await this.getToken()});const s=document.getElementById("toggle-api-secret-visibility");s&&s.addEventListener("click",e=>{e.preventDefault(),this.toggleSecretVisibility()}),this.logger.info("Settings Subsystem event listeners setup complete")}async loadCurrentSettings(){try{this.currentSettings=this.settingsManager.getSettings(),this.populateSettingsForm(this.currentSettings),this.logger.info("Current settings loaded successfully")}catch(e){throw this.logger.error("Failed to load current settings",e),e}}async saveSettings(){if(this.isSaving)this.logger.warn("Settings save already in progress");else try{let e;this.isSaving=!0,this.logger.info("Starting settings save process"),this.logger.debug("Checking saveSettings dependencies:",{hasUIManager:!!this.uiManager,hasLocalClient:!!this.localClient,hasSettingsManager:!!this.settingsManager,hasCredentialsManager:!!this.credentialsManager,hasEventBus:!!this.eventBus}),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus?(this.uiManager.showSettingsActionStatus("Saving settings...","info"),this.logger.debug("UI feedback shown successfully")):this.logger.warn("UIManager or showSettingsActionStatus method not available");try{e=this.getFormData(),this.logger.info("Form data extracted successfully:",e)}catch(e){throw this.logger.error("Failed to get form data:",e),new Error(`Form data extraction failed: ${e.message}`)}try{if(!this.validateSettings(e))return void this.logger.error("Settings validation failed");this.logger.debug("Settings validation passed")}catch(e){throw this.logger.error("Settings validation error:",e),new Error(`Settings validation error: ${e.message}`)}if(this.credentialsManager)try{const t={environmentId:e.environmentId||"",apiClientId:e.apiClientId||"",apiSecret:e.apiSecret||"",populationId:e.populationId||"",region:e.region||"NorthAmerica"},i=this.credentialsManager.validateCredentials(t);if(!i.isValid)throw new Error(`Invalid credentials: ${i.errors.join(", ")}`);this.credentialsManager.saveCredentials(t),this.logger.info("Credentials saved to localStorage successfully")}catch(e){throw this.logger.error("Credentials manager error:",e),new Error(`Credentials save failed: ${e.message}`)}else this.logger.debug("No credentials manager available, skipping credentials save");if(!this.localClient||"function"!=typeof this.localClient.post)throw this.logger.error("LocalClient not available or post method missing"),new Error("LocalClient not available for server communication");try{this.logger.debug("Attempting server save with localClient.post");const t=await this.localClient.post("/api/settings",e);this.logger.info("Server save successful:",t)}catch(e){this.logger.error("Failed to save to server:",e);const t=e.message||"Unknown server error";throw this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Failed to save settings: "+t,"error",{autoHide:!1}),new Error(`Server save failed: ${t}`)}if(this.settingsManager&&"function"==typeof this.settingsManager.updateSettings)try{this.settingsManager.updateSettings(e),this.currentSettings=e,this.logger.debug("Settings manager updated successfully")}catch(e){throw this.logger.error("Settings manager update error:",e),new Error(`Settings manager update failed: ${e.message}`)}else this.logger.warn("Settings manager not available or updateSettings method missing");this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Settings saved successfully","success",{autoHideDelay:3e3});try{"function"==typeof this.updateConnectionStatus&&this.updateConnectionStatus("✅ Settings saved! Please - Get token","success")}catch(e){this.logger.warn("Connection status update failed:",e)}if(this.eventBus&&"function"==typeof this.eventBus.emit)try{this.eventBus.emit("settingsSaved",{settings:e}),this.logger.debug("Settings saved event emitted successfully")}catch(e){this.logger.warn("Event emission failed:",e)}this.logger.info("Settings save process completed successfully")}catch(e){throw this.logger.error("Failed to save settings - detailed error:",{message:e.message,stack:e.stack,name:e.name}),this.uiManager&&"function"==typeof this.uiManager.showSettingsActionStatus&&this.uiManager.showSettingsActionStatus("Failed to save settings: "+e.message,"error",{autoHide:!1}),e}finally{this.isSaving=!1,this.logger.debug("Settings save process finished, isSaving flag reset")}}getFormData(){const e=document.getElementById("settings-form");if(!e)throw new Error("Settings form not found");const t=new FormData(e);return{environmentId:t.get("environment-id")||"",apiClientId:t.get("api-client-id")||"",apiSecret:t.get("api-secret")||"",region:t.get("region")||"NorthAmerica",rateLimit:parseInt(t.get("rate-limit"))||50,populationId:t.get("population-id")||""}}validateSettings(e){const t=[];if(e.environmentId?.trim()||t.push("Environment ID is required"),e.apiClientId?.trim()||t.push("API Client ID is required"),e.apiSecret?.trim()||t.push("API Secret is required"),e.region?.trim()||t.push("Region is required"),e.rateLimit&&(e.rateLimit<1||e.rateLimit>1e3)&&t.push("Rate limit must be between 1 and 1000"),t.length>0){const e="Validation failed: "+t.join(", ");return this.logger.error("Settings validation failed",{errors:t}),this.uiManager.showSettingsActionStatus(e,"error",{autoHide:!1}),!1}return!0}populateSettingsForm(e){if(!e)return;const t={"environment-id":e.environmentId,"api-client-id":e.apiClientId,"api-secret":e.apiSecret,region:e.region,"rate-limit":e.rateLimit,"population-id":e.populationId};Object.entries(t).forEach(e=>{let[t,i]=e;const s=document.getElementById(t);s&&null!=i&&(s.value=i)}),this.logger.info("Settings form populated with current values")}async testConnection(){try{this.logger.info("Testing connection..."),this.uiManager.showSettingsActionStatus("Testing connection...","info");const e=this.getFormData();if(!(e.environmentId&&e.apiClientId&&e.apiSecret&&e.region))return this.uiManager.showSettingsActionStatus("Please fill in all required fields","error"),void this.updateConnectionStatus("❌ Missing credentials","error");const t=await this.localClient.post("/api/pingone/test-connection",{environmentId:e.environmentId,clientId:e.apiClientId,clientSecret:e.apiSecret,region:e.region});t.success?(this.uiManager.showSettingsActionStatus("Connection test successful","success",{autoHideDelay:3e3}),this.updateConnectionStatus("✅ Connection successful","success")):(this.uiManager.showSettingsActionStatus("Connection test failed: "+(t.error||t.message),"error"),this.updateConnectionStatus("❌ Connection failed","error"))}catch(e){this.logger.error("Connection test failed",e),this.uiManager.showSettingsActionStatus("Connection test failed: "+e.message,"error"),this.updateConnectionStatus("❌ Connection failed","error")}}async getToken(){try{this.logger.info("Getting token..."),this.uiManager.showSettingsActionStatus("Getting token...","info");const e=this.getFormData(),t=await this.localClient.post("/api/v1/auth/token",e);if(t.success){this.uiManager.showSettingsActionStatus("Token obtained successfully","success",{autoHideDelay:3e3}),this.updateConnectionStatus("✅ Token obtained","success"),(this.logger?.debug||window.logger?.debug||console.log)("🚀 [DEBUG] SettingsSubsystem: About to call updateGlobalTokenStatusDirect");try{if(window.app&&"function"==typeof window.app.updateGlobalTokenStatusDirect){const e=t.timeLeft||t.timeRemaining||"";window.app.updateGlobalTokenStatusDirect(e),(this.logger?.debug||window.logger?.debug||console.log)("✅ [DEBUG] SettingsSubsystem: updateGlobalTokenStatusDirect called successfully with timeLeft:",e)}else(this.logger?.warn||window.logger?.warn||console.warn)("⚠️ [DEBUG] SettingsSubsystem: window.app.updateGlobalTokenStatusDirect not available")}catch(e){(this.logger?.error||window.logger?.error||console.error)("❌ [DEBUG] SettingsSubsystem: Error calling updateGlobalTokenStatusDirect:",e)}this.eventBus&&this.eventBus.emit("tokenObtained",{token:t.token})}else this.uiManager.showSettingsActionStatus("Failed to get token: "+t.message,"error"),this.updateConnectionStatus("❌ Token failed","error")}catch(e){this.logger.error("Failed to get token",e),this.uiManager.showSettingsActionStatus("Failed to get token: "+e.message,"error"),this.updateConnectionStatus("❌ Token failed","error")}}toggleSecretVisibility(){const e=document.getElementById("api-secret"),t=document.getElementById("toggle-api-secret-visibility"),i=t?.querySelector("i");e&&t&&i&&("password"===e.type?(e.type="text",i.className="fas fa-eye-slash",t.setAttribute("aria-label","Hide password")):(e.type="password",i.className="fas fa-eye",t.setAttribute("aria-label","Show password")))}updateConnectionStatus(e,t){const i=document.getElementById("settings-connection-status");i&&(i.textContent=e,i.className=`connection-status status-${t}`)}setupCrossSubsystemEvents(){this.eventBus?(this.eventBus.on("tokenExpired",e=>{this.logger.warn("Token expired"),this.updateConnectionStatus("⚠️ Token expired","warning")}),this.eventBus.on("tokenError",e=>{this.logger.error("Token error detected",e),this.updateConnectionStatus("❌ Token error","error")}),this.eventBus.on("tokenRefreshed",e=>{this.logger.info("Token refreshed successfully"),this.updateConnectionStatus("✅ Token refreshed","success")}),this.logger.debug("Cross-subsystem event listeners set up for SettingsSubsystem")):this.logger.warn("EventBus not available for cross-subsystem events")}getAllSettings(){return this.settingsManager&&this.settingsManager.getAllSettings?this.settingsManager.getAllSettings():this.settingsManager&&this.settingsManager.getSettings?this.settingsManager.getSettings():this.currentSettings?this.currentSettings:(this.logger.warn("No settings available, returning empty object"),{})}}},{}],59:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ViewManagementSubsystem=void 0;i.ViewManagementSubsystem=class ViewManagementSubsystem{constructor(e,t){this.logger=e,this.uiManager=t,this.currentView="home",this.previousView=null,this.viewHistory=[],this.viewInitializers=new Map,this.logger.info("View Management Subsystem initialized with default home view")}async init(){try{this.setupNavigationListeners(),this.registerViewInitializers(),await this.showInitialView(),this.logger.info("View Management Subsystem initialized successfully")}catch(e){throw this.logger.error("Failed to initialize View Management Subsystem",e),e}}setupNavigationListeners(){document.querySelectorAll("[data-view]").forEach(e=>{e.addEventListener("click",async t=>{t.preventDefault();const i=e.getAttribute("data-view");await this.showView(i)})}),window.addEventListener("popstate",e=>{e.state&&e.state.view&&this.showView(e.state.view,!1)}),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&this.handleKeyboardNavigation(e)})}registerViewInitializers(){this.viewInitializers.set("import",async()=>{await this.initializeImportView()}),this.viewInitializers.set("export",async()=>{await this.initializeExportView()}),this.viewInitializers.set("modify",async()=>{await this.initializeModifyView()}),this.viewInitializers.set("delete-csv",async()=>{await this.initializeDeleteView()}),this.viewInitializers.set("settings",async()=>{await this.initializeSettingsView()}),this.viewInitializers.set("logs",async()=>{await this.initializeLogsView()}),this.viewInitializers.set("history",async()=>{await this.initializeHistoryView()}),this.viewInitializers.set("analytics",async()=>{await this.initializeAnalyticsView()})}async showView(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(e&&e!==this.currentView)try{if(this.logger.info("Switching to view",{from:this.currentView,to:e}),!this.isValidView(e))return void(this.uiManager&&"function"==typeof this.uiManager.showError&&this.uiManager.showError("Navigation Error",`Invalid view: ${e}`));this.previousView=this.currentView,this.hideCurrentView(),await this.displayView(e),this.updateNavigationState(e),t&&this.updateBrowserHistory(e),await this.initializeView(e),this.currentView=e,this.viewHistory.push(e),this.updatePageTitle(e),this.triggerViewChangeEvent(e,this.previousView)}catch(t){this.logger.error("Failed to switch view",{view:e,error:t.message}),this.uiManager&&"function"==typeof this.uiManager.showError&&this.uiManager.showError("Navigation Error",`Failed to switch to ${e} view: ${t.message}`)}}hideCurrentView(){const e=document.getElementById(`${this.currentView}-view`);e&&(e.style.display="none",e.classList.remove("active"))}async displayView(e){const t=document.getElementById(`${e}-view`);if(!t)throw new Error(`View element not found: ${e}-view`);t.style.display="block",t.classList.add("active"),t.style.opacity="0",t.style.transition="opacity 0.3s ease-in-out",requestAnimationFrame(()=>{t.style.opacity="1"})}updateNavigationState(e){document.querySelectorAll("[data-view]").forEach(t=>{t.getAttribute("data-view")===e?t.classList.add("active"):t.classList.remove("active")}),this.updatePageTitle(e)}updateBrowserHistory(e){const t={view:e,timestamp:Date.now()},i=this.getViewTitle(e),s=`#${e}`;history.pushState(t,i,s)}async initializeView(e){const t=this.viewInitializers.get(e);if(t)try{await t()}catch(t){this.logger.error("View initialization failed",{view:e,error:t.message})}}async initializeImportView(){window.app&&"function"==typeof window.app.loadPopulations&&await window.app.loadPopulations("import-population-select");const e=document.getElementById("csv-file");e&&(e.value=""),this.resetProgressDisplay()}async initializeExportView(){this.logger.debug("🔄 VIEW: Initializing export view..."),window.app&&window.app.subsystems&&window.app.subsystems.exportManager?(this.logger.debug("🔄 VIEW: Found export manager, loading populations..."),"function"==typeof window.app.subsystems.exportManager.loadPopulations?(await window.app.subsystems.exportManager.loadPopulations(),this.logger.info("🔄 VIEW: Export populations loaded successfully")):this.logger.error("🔄 VIEW: Export manager loadPopulations method not found")):this.logger.error("🔄 VIEW: Export manager not found in app subsystems",{hasApp:!!window.app,hasSubsystems:!(!window.app||!window.app.subsystems),availableSubsystems:window.app&&window.app.subsystems?Object.keys(window.app.subsystems):[]})}async initializeModifyView(){window.app&&"function"==typeof window.app.loadPopulations&&await window.app.loadPopulations("modify-population-select");const e=document.getElementById("modify-csv-file");e&&(e.value="")}async initializeDeleteView(){window.deleteManager&&"function"==typeof window.deleteManager.loadPopulations&&await window.deleteManager.loadPopulations()}async initializeSettingsView(){window.app&&"function"==typeof window.app.loadSettings&&await window.app.loadSettings()}async initializeLogsView(){window.logManager&&"function"==typeof window.logManager.loadLogs&&await window.logManager.loadLogs()}async initializeHistoryView(){try{if(this.app&&this.app.subsystems&&this.app.subsystems.history){this.logger.debug("Initializing history view with HistorySubsystem");document.getElementById("history-view")||this.logger.warn("History view container not found")}else this.logger.warn("HistorySubsystem not available for history view initialization")}catch(e){this.logger.error("Failed to initialize history view:",e)}}async initializeAnalyticsView(){try{if(this.logger.debug("Initializing analytics view"),window.app&&window.app.analyticsDashboardUI){this.logger.debug("Analytics dashboard UI available, ensuring visibility");const e=document.getElementById("analytics-dashboard");e?(e.style.display="block",this.logger.debug("Analytics dashboard container made visible")):this.logger.warn("Analytics dashboard container not found")}else this.logger.warn("Analytics dashboard UI not available for analytics view initialization")}catch(e){this.logger.error("Failed to initialize analytics view:",e)}}async showInitialView(){let e="home";const t=window.location.hash.substring(1);t&&this.isValidView(t)&&(e=t),await this.showView(e,!1)}isValidView(e){return["home","import","export","modify","delete-csv","settings","logs","history","analytics"].includes(e)}getViewTitle(e){return{import:"Import Users",export:"Export Users",modify:"Modify Users","delete-csv":"Delete Users",settings:"Settings",logs:"Logs",history:"History",analytics:"Analytics Dashboard"}[e]||"PingOne Import Tool"}updatePageTitle(e){const t=this.getViewTitle(e);document.title=`${t} - PingOne Import Tool`}handleKeyboardNavigation(e){const t={1:"import",2:"export",3:"modify",4:"delete-csv",5:"settings",6:"logs",7:"history"}[e.key];t&&(e.preventDefault(),this.showView(t))}resetProgressDisplay(){this.uiManager&&"function"==typeof this.uiManager.hideProgress&&this.uiManager.hideProgress(),this.uiManager&&"function"==typeof this.uiManager.updateProgress&&this.uiManager.updateProgress(0,1,"")}triggerViewChangeEvent(e,t){const i=new CustomEvent("viewChanged",{detail:{newView:e,oldView:t,timestamp:Date.now()}});document.dispatchEvent(i)}async goBack(){this.previousView&&await this.showView(this.previousView)}getCurrentView(){return this.currentView}getViewHistory(){return[...this.viewHistory]}clearViewHistory(){this.viewHistory=[]}}},{}],60:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.BrowserLoggingService=void 0,i.createLogger=createLogger,i.logger=i.default=void 0;class BrowserLoggingService{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.serviceName=e.serviceName||"pingone-import-client",this.environment=e.environment||"development",this.logLevel=e.logLevel||this.getDefaultLogLevel(),this.enableConsole=!1!==e.enableConsole,this.enableServer=!1!==e.enableServer,this.levels={error:0,warn:1,info:2,debug:3},this.correlationId=this.generateCorrelationId(),this.performanceMarks=new Map,this.initializeTransports()}getDefaultLogLevel(){switch(this.environment){case"production":return"info";case"test":return"warn";default:return"debug"}}generateCorrelationId(){return`${this.serviceName}-${Date.now()}-${Math.random().toString(36).substr(2,8)}`}initializeTransports(){this.transports=[],this.enableConsole&&this.transports.push({name:"console",log:this.logToConsole.bind(this)}),this.enableServer&&this.transports.push({name:"server",log:this.logToServer.bind(this)})}shouldLog(e){return this.levels[e]<=this.levels[this.logLevel]}formatLogEntry(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{timestamp:(new Date).toISOString(),level:e.toUpperCase(),message:t,service:this.serviceName,environment:this.environment,correlationId:this.correlationId,source:"client",url:window.location.href,userAgent:navigator.userAgent,...i}}logToConsole(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.shouldLog(e))return;const s=this.formatLogEntry(e,t,i);let n=`[${s.timestamp}] [${s.correlationId.slice(-8)}] [${s.service}] ${e.toUpperCase()}: ${t}`;switch(Object.keys(i).length>0&&(n+=`\n${JSON.stringify(i,null,2)}`),e){case"error":console.error(n);break;case"warn":console.warn(n);break;case"info":console.info(n);break;case"debug":console.debug(n);break;default:console.log(n)}}async logToServer(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{const s=this.formatLogEntry(e,t,i);await fetch("/api/logs/client",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})}catch(e){this.enableConsole&&console.warn("Failed to send log to server:",e.message)}}log(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.shouldLog(e)&&this.transports.forEach(s=>{try{s.log(e,t,i)}catch(e){console.error(`Error in ${s.name} transport:`,e)}})}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}startTimer(e){this.performanceMarks.set(e,performance.now()),this.debug(`Timer started: ${e}`)}endTimer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=this.performanceMarks.get(e);if(!i)return this.warn(`Timer not found: ${e}`),0;const s=performance.now()-i;return this.performanceMarks.delete(e),this.info(`Timer completed: ${e}`,{duration:`${s.toFixed(2)}ms`,...t}),s}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=new BrowserLoggingService({serviceName:this.serviceName,environment:this.environment,logLevel:this.logLevel,enableConsole:this.enableConsole,enableServer:this.enableServer}),i=t.formatLogEntry.bind(t);return t.formatLogEntry=function(t,s){return i(t,s,{...e,...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}})},t}setCorrelationId(e){this.correlationId=e}getCorrelationId(){return this.correlationId}}function createLogger(){return new BrowserLoggingService(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})}i.BrowserLoggingService=BrowserLoggingService;i.logger=createLogger({serviceName:"pingone-import-client"});i.default=BrowserLoggingService},{}],61:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.CryptoUtils=void 0;i.CryptoUtils=class CryptoUtils{static encrypt(e,t){if(!e||!t)return console.warn("CryptoUtils: Encryption requires text and a secret."),e;try{return btoa(`${t}:${e}`)}catch(t){return console.error("Failed to encode data:",t),e}}static generateKey(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let i="";for(let s=0;s<e;s++)i+=t.charAt(Math.floor(62*Math.random()));return i}static decrypt(e,t){if(!e||!t)return console.warn("CryptoUtils: Decryption requires text and a secret."),e;try{const i=atob(e),[s,...n]=i.split(":");return s===t?n.join(":"):null}catch(t){return console.error("Failed to decode data:",t),e}}}},{}],62:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.eventBus=i.default=i.EventBus=void 0;class EventBus{constructor(){this.events={}}on(e,t){(this.events[e]=this.events[e]||[]).push(t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(e=>e!==t))}emit(e,t){(this.events[e]||[]).forEach(e=>e(t))}}i.EventBus=EventBus;const s=i.eventBus=new EventBus;i.default=s;"undefined"!=typeof window&&(window.EventBus=EventBus,window.eventBus=s)},{}],63:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.FileLogger=void 0;i.FileLogger=class FileLogger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"client.log";this.filename=e,this.fileHandle=null,this.writableStream=null,this.initialized=!1,this.logQueue=[],this.initializationPromise=null}async _initialize(){return!!this.initialized||(this.initializationPromise||(this.initializationPromise=(async()=>{try{if(!window.isSecureContext||!window.showSaveFilePicker)throw new Error("File System Access API not available in this context");if(!window.__fileLoggerUserGesture){window.addEventListener("online",()=>this.handleOnline()),window.addEventListener("offline",()=>this.handleOffline());const handleUserGesture=()=>{window.__fileLoggerUserGesture=!0,window.removeEventListener("click",handleUserGesture),window.removeEventListener("keydown",handleUserGesture),this.fileLogger&&!this.fileLogger._initialized&&null===this.fileLogger._logger&&this.fileLogger._ensureInitialized().catch(console.warn)};throw window.addEventListener("click",handleUserGesture,{once:!0,passive:!0}),window.addEventListener("keydown",handleUserGesture,{once:!0,passive:!0}),new Error("Waiting for user gesture to initialize file logger")}try{return this.fileHandle=await window.showSaveFilePicker({suggestedName:this.filename,types:[{description:"Log File",accept:{"text/plain":[".log"]}}],excludeAcceptAllOption:!0}),this.writableStream=await this.fileHandle.createWritable({keepExistingData:!0}),this.initialized=!0,await this._processQueue(),!0}catch(e){return console.warn("File System Access API not available:",e),this.initialized=!1,!1}}catch(e){return console.warn("File logger initialization deferred:",e.message),this.initialized=!1,!1}})()),this.initializationPromise)}async _processQueue(){if(0===this.logQueue.length)return;const e=[...this.logQueue];this.logQueue=[];for(const{level:t,message:i,timestamp:s}of e)await this._writeLog(t,i,s)}async _writeLog(e,t,i){this.initialized||await this._initialize();const s=`[${i}] [${e.toUpperCase()}] ${t}\n`;if(this.writableStream)try{await this.writableStream.write(s)}catch(e){console.error("Error writing to log file:",e),this.initialized=!1,await this._initialize(),await this.writableStream.write(s)}else console[e](`[FileLogger] ${s}`)}async log(e,t){const i=(new Date).toISOString();this.initialized?await this._writeLog(e,t,i):(this.logQueue.push({level:e,message:t,timestamp:i}),await this._initialize())}info(e){return this.log("info",e)}warn(e){return this.log("warn",e)}error(e){return this.log("error",e)}debug(e){return this.log("debug",e)}async close(){if(this.writableStream)try{await this.writableStream.close()}catch(e){console.error("Error closing log file:",e)}finally{this.initialized=!1,this.writableStream=null,this.fileHandle=null}}}},{}],64:[function(e,t,i){"use strict";var s=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;var n=s(e("axios"));i.default=class LocalApiClient{constructor(e,t){if(!e)throw new Error("LocalApiClient: baseURL is required.");if(!t)throw new Error("LocalApiClient: logger is required.");this.client=n.default.create({baseURL:e,headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}),this.logger=t,this.logger.info(`Local API Client initialized for base URL: ${e}`),this.client.interceptors.response.use(e=>e,e=>(this.logger.error("API request failed:",{message:e.message,url:e.config.url,method:e.config.method,response:e.response?{status:e.response.status,data:e.response.data}:"No response received"}),Promise.reject(e)))}async get(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.debug(`Making GET request to: ${e}`);try{return(await this.client.get(e,t)).data}catch(t){throw this.logger.error(`GET request to ${e} failed.`),t}}async post(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.logger.debug(`Making POST request to: ${e}`);try{return(await this.client.post(e,t,i)).data}catch(t){throw this.logger.error(`POST request to ${e} failed.`),t}}async put(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.logger.debug(`Making PUT request to: ${e}`);try{return(await this.client.put(e,t,i)).data}catch(t){throw this.logger.error(`PUT request to ${e} failed.`),t}}async delete(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.logger.debug(`Making DELETE request to: ${e}`);try{return(await this.client.delete(e,t)).data}catch(t){throw this.logger.error(`DELETE request to ${e} failed.`),t}}}},{"@babel/runtime/helpers/interopRequireDefault":1,axios:2}],65:[function(e,t,i){(function(t){(function(){"use strict";var s=e("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(i,"__esModule",{value:!0}),i.Logger=void 0;var n=e("./winston-logger.js"),a=s(e("./message-formatter.js"));function _interopRequireWildcard(e,t){if("function"==typeof WeakMap)var i=new WeakMap,s=new WeakMap;return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var n,a,l={__proto__:null,default:e};if(null===e||"object"!=typeof e&&"function"!=typeof e)return l;if(n=t?s:i){if(n.has(e))return n.get(e);n.set(e,l)}for(const t in e)"default"!==t&&{}.hasOwnProperty.call(e,t)&&((a=(n=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,t))&&(a.get||a.set)?n(l,t,a):l[t]=e[t]);return l})(e,t)}const l=window.app&&window.app.uiManager;class Logger{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.logElement=e,this.logs=[],this.validCount=0,this.errorCount=0,this.initialized=!1,this.serverLoggingEnabled=!0,this.isLoadingLogs=!1,this.offlineLogs=[],this.childMetadata={},this.winstonLogger=(0,n.createWinstonLogger)({service:"pingone-import-frontend",environment:t.env.NODE_ENV||"development",enableServerLogging:!0,enableConsoleLogging:!0}),this.initialize()}initialize(){try{this.winstonLogger.info("Logger initialized successfully"),this.initialized=!0}catch(e){console.error("Failed to initialize logger:",e)}}disableServerLogging(){this.serverLoggingEnabled=!1,this.winstonLogger.setServerLogging(!1),this.winstonLogger.debug("Server logging disabled")}enableServerLogging(){this.serverLoggingEnabled=!0,this.winstonLogger.setServerLogging(!0),this.winstonLogger.debug("Server logging enabled")}setLoadingLogs(e){this.isLoadingLogs=e,this.winstonLogger.debug(`Loading logs flag set to: ${e}`)}_createSafeFileLogger(){return{_initialized:!1,_logger:null,_queue:[],_initializing:!1,async init(){if(!this._initialized&&!this._initializing){this._initializing=!0;try{const{FileLogger:t}=await Promise.resolve().then(()=>_interopRequireWildcard(e("./file-logger.js")));this._logger=new t("client.log"),this._initialized=!0,this._processQueue()}catch(e){console.warn("Failed to initialize file logger, falling back to console:",e.message),this._logger={log:(e,t,i)=>{console[e]||console.log(`[${e.toUpperCase()}] ${t}`,i)}},this._initialized=!0,this._processQueue()}finally{this._initializing=!1}}},_processQueue(){for(;this._queue.length>0;){const{level:e,message:t,data:i}=this._queue.shift();this._logger&&"function"==typeof this._logger.log&&this._logger.log(e,t,i)}},log(e,t,i){this._initialized&&this._logger?this._logger.log(e,t,i):(this._queue.push({level:e,message:t,data:i}),this._initializing||this.init())}}}_parseLogArgs(e){let t="Log message",i=null,s=null;return e.length>0&&("string"==typeof e[0]?(t=e[0],e.length>1&&"object"==typeof e[1]&&(i=e[1],e.length>2&&"object"==typeof e[2]&&(s=e[2]))):"object"==typeof e[0]&&(i=e[0],t="Log data",e.length>1&&"object"==typeof e[1]&&(s=e[1]))),[t,i,s]}log(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{if("string"==typeof e&&"string"==typeof t)this._logToWinston(e,t,i);else{const[t,i,s]=this._parseLogArgs(arguments);this._logToWinston(e||"info",t,{...i,...s})}this._updateLogUI({level:e,message:t,data:i,timestamp:new Date})}catch(e){console.error("Error in logger.log:",e)}}_logToWinston(e,t){const i={...arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},component:"frontend-logger",timestamp:(new Date).toISOString()};this.winstonLogger.log(e,t,i)}info(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,t)}warn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("warn",e,t)}error(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("error",e,t),l&&l.showStatusBar(e,"error",{autoDismiss:!1}),this.errorCount++,this.updateSummary()}debug(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("debug",e,t)}success(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.log("info",e,{...t,type:"success"}),this.validCount++,this.updateSummary()}errorWithStack(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.winstonLogger.errorWithStack(e,t,i),this.errorCount++,this.updateSummary()}_updateLogUI(e){if(this.logElement&&this.logElement.appendChild&&"function"==typeof this.logElement.appendChild)try{const t=document.createElement("div");t.className=`log-entry ${e.level}`;const i=document.createElement("span");i.className="log-timestamp",i.textContent=new Date(e.timestamp).toLocaleTimeString(),t.appendChild(i);const s=document.createElement("span");s.className="log-level",s.textContent=e.level.toUpperCase(),t.appendChild(s);const n=document.createElement("span");n.className="log-message";let l=e.message;if(e.data&&e.data.type)switch(e.data.type){case"progress":l=a.default.formatProgressMessage(e.data.operation||"import",e.data.current||0,e.data.total||0,e.message,e.data.counts||{});break;case"error":l=a.default.formatErrorMessage(e.data.operation||"import",e.message,e.data);break;case"completion":l=a.default.formatCompletionMessage(e.data.operation||"import",e.data);break;default:l=e.message}if(n.textContent=l,t.appendChild(n),e.data&&Object.keys(e.data).length>0){const i=document.createElement("div");i.className="log-details";const s=document.createElement("h4");s.textContent="Details",i.appendChild(s);const n=document.createElement("pre");n.className="log-detail-json",n.textContent=JSON.stringify(e.data,null,2),i.appendChild(n),t.appendChild(i)}this.logElement.firstChild?this.logElement.insertBefore(t,this.logElement.firstChild):this.logElement.appendChild(t),this.logElement.scrollTop=0;const c=100;for(;this.logElement.children.length>c;)this.logElement.removeChild(this.logElement.lastChild)}catch(e){console.error("Error updating log UI:",e)}}async _sendToServer(e){if(this.serverLoggingEnabled&&!this.isLoadingLogs)try{await fetch("/api/logs/ui",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e.level,message:e.message,data:e.data})})}catch(t){this.winstonLogger.warn("Failed to send log to server",{error:t.message}),this.offlineLogs.push(e)}}renderLogs(){this.logElement&&(this.logElement.innerHTML="",this.logs.forEach(e=>this._updateLogUI(e)),this.logElement.scrollTop=this.logElement.scrollHeight)}clearLogs(){this.logs=[],this.logElement&&(this.logElement.innerHTML=""),this.winstonLogger.info("Logs cleared")}getLogs(){return[...this.logs]}updateSummary(){this.winstonLogger.debug("Summary updated",{validCount:this.validCount,errorCount:this.errorCount})}clearSummary(){this.validCount=0,this.errorCount=0,this.winstonLogger.debug("Summary cleared")}startTimer(e){this.timers||(this.timers=new Map),this.timers.set(e,Date.now()),this.debug(`Timer started: ${e}`)}endTimer(e){if(!this.timers||!this.timers.has(e))return this.warn(`Timer '${e}' not found`),0;const t=this.timers.get(e),i=Date.now()-t;return this.timers.delete(e),this.info(`Timer completed: ${e}`,{duration:`${i}ms`}),i}child(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=new Logger(this.logElement);t.serverLoggingEnabled=this.serverLoggingEnabled,t.isLoadingLogs=this.isLoadingLogs,t.winstonLogger=this.winstonLogger,t.childMetadata={...this.childMetadata,...e};const i=t.log.bind(t);return t.log=function(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n={...this.childMetadata,...s};return i(e,t,n)},t}}i.Logger=Logger}).call(this)}).call(this,e("_process"))},{"./file-logger.js":63,"./message-formatter.js":66,"./winston-logger.js":68,"@babel/runtime/helpers/interopRequireDefault":1,_process:37}],66:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;i.default=class MessageFormatter{format(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};let s=`[${(new Date).toISOString()}] [${e}] ${t}`;if(i&&Object.keys(i).length>0)try{s+=`\n${JSON.stringify(i,null,2)}`}catch(e){s+="\n[Could not stringify metadata]"}return s}}},{}],67:[function(e,t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;i.default=class PingOneClient{constructor(e,t){if(!e||!t)throw new Error("PingOneClient: localClient and logger are required.");this.localClient=e,this.logger=t.child({client:"PingOneClient"}),this.logger.info("PingOneClient initialized.")}async getAccessToken(){this.logger.debug("Requesting new access token...");try{const e=await this.localClient.get("/pingone/get-token");return this.logger.info("Successfully retrieved access token."),e}catch(e){throw this.logger.error("Failed to get access token.",e),e}}async testConnection(){this.logger.debug("Testing PingOne API connection...");try{const e=await this.localClient.get("/pingone/test-connection");return this.logger.info("Connection test completed."),e}catch(e){throw this.logger.error("Connection test failed.",e),e}}}},{}],68:[function(e,t,i){arguments[4][45][0].apply(i,arguments)},{_process:37,dup:45}]},{},[46]);